(function () {
    const t = document.createElement("link").relList;
    if (t && t.supports && t.supports("modulepreload")) return;
    for (const a of document.querySelectorAll('link[rel="modulepreload"]')) r(a);
    new MutationObserver(a => {
        for (const i of a) if (i.type === "childList") for (const o of i.addedNodes) o.tagName === "LINK" && o.rel === "modulepreload" && r(o);
    }).observe(document, { childList: !0, subtree: !0 });
    function n(a) {
        const i = {};
        return (
            a.integrity && (i.integrity = a.integrity),
            a.referrerPolicy && (i.referrerPolicy = a.referrerPolicy),
            a.crossOrigin === "use-credentials"
                ? (i.credentials = "include")
                : a.crossOrigin === "anonymous"
                  ? (i.credentials = "omit")
                  : (i.credentials = "same-origin"),
            i
        );
    }
    function r(a) {
        if (a.ep) return;
        a.ep = !0;
        const i = n(a);
        fetch(a.href, i);
    }
})();
var Pa = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function hh(e) {
    return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Kw = { exports: {} },
    Zl = {},
    Xw = { exports: {} },
    ve = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var oo = Symbol.for("react.element"),
    d6 = Symbol.for("react.portal"),
    p6 = Symbol.for("react.fragment"),
    f6 = Symbol.for("react.strict_mode"),
    m6 = Symbol.for("react.profiler"),
    h6 = Symbol.for("react.provider"),
    g6 = Symbol.for("react.context"),
    b6 = Symbol.for("react.forward_ref"),
    y6 = Symbol.for("react.suspense"),
    v6 = Symbol.for("react.memo"),
    E6 = Symbol.for("react.lazy"),
    v1 = Symbol.iterator;
function S6(e) {
    return e === null || typeof e != "object" ? null : ((e = (v1 && e[v1]) || e["@@iterator"]), typeof e == "function" ? e : null);
}
var Zw = {
        isMounted: function () {
            return !1;
        },
        enqueueForceUpdate: function () {},
        enqueueReplaceState: function () {},
        enqueueSetState: function () {},
    },
    Qw = Object.assign,
    Jw = {};
function Wa(e, t, n) {
    (this.props = e), (this.context = t), (this.refs = Jw), (this.updater = n || Zw);
}
Wa.prototype.isReactComponent = {};
Wa.prototype.setState = function (e, t) {
    if (typeof e != "object" && typeof e != "function" && e != null)
        throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, e, t, "setState");
};
Wa.prototype.forceUpdate = function (e) {
    this.updater.enqueueForceUpdate(this, e, "forceUpdate");
};
function ek() {}
ek.prototype = Wa.prototype;
function gh(e, t, n) {
    (this.props = e), (this.context = t), (this.refs = Jw), (this.updater = n || Zw);
}
var bh = (gh.prototype = new ek());
bh.constructor = gh;
Qw(bh, Wa.prototype);
bh.isPureReactComponent = !0;
var E1 = Array.isArray,
    tk = Object.prototype.hasOwnProperty,
    yh = { current: null },
    nk = { key: !0, ref: !0, __self: !0, __source: !0 };
function rk(e, t, n) {
    var r,
        a = {},
        i = null,
        o = null;
    if (t != null)
        for (r in (t.ref !== void 0 && (o = t.ref), t.key !== void 0 && (i = "" + t.key), t)) tk.call(t, r) && !nk.hasOwnProperty(r) && (a[r] = t[r]);
    var l = arguments.length - 2;
    if (l === 1) a.children = n;
    else if (1 < l) {
        for (var s = Array(l), u = 0; u < l; u++) s[u] = arguments[u + 2];
        a.children = s;
    }
    if (e && e.defaultProps) for (r in ((l = e.defaultProps), l)) a[r] === void 0 && (a[r] = l[r]);
    return { $$typeof: oo, type: e, key: i, ref: o, props: a, _owner: yh.current };
}
function w6(e, t) {
    return { $$typeof: oo, type: e.type, key: t, ref: e.ref, props: e.props, _owner: e._owner };
}
function vh(e) {
    return typeof e == "object" && e !== null && e.$$typeof === oo;
}
function k6(e) {
    var t = { "=": "=0", ":": "=2" };
    return (
        "$" +
        e.replace(/[=:]/g, function (n) {
            return t[n];
        })
    );
}
var S1 = /\/+/g;
function Ms(e, t) {
    return typeof e == "object" && e !== null && e.key != null ? k6("" + e.key) : t.toString(36);
}
function el(e, t, n, r, a) {
    var i = typeof e;
    (i === "undefined" || i === "boolean") && (e = null);
    var o = !1;
    if (e === null) o = !0;
    else
        switch (i) {
            case "string":
            case "number":
                o = !0;
                break;
            case "object":
                switch (e.$$typeof) {
                    case oo:
                    case d6:
                        o = !0;
                }
        }
    if (o)
        return (
            (o = e),
            (a = a(o)),
            (e = r === "" ? "." + Ms(o, 0) : r),
            E1(a)
                ? ((n = ""),
                  e != null && (n = e.replace(S1, "$&/") + "/"),
                  el(a, t, n, "", function (u) {
                      return u;
                  }))
                : a != null && (vh(a) && (a = w6(a, n + (!a.key || (o && o.key === a.key) ? "" : ("" + a.key).replace(S1, "$&/") + "/") + e)), t.push(a)),
            1
        );
    if (((o = 0), (r = r === "" ? "." : r + ":"), E1(e)))
        for (var l = 0; l < e.length; l++) {
            i = e[l];
            var s = r + Ms(i, l);
            o += el(i, t, n, s, a);
        }
    else if (((s = S6(e)), typeof s == "function"))
        for (e = s.call(e), l = 0; !(i = e.next()).done; ) (i = i.value), (s = r + Ms(i, l++)), (o += el(i, t, n, s, a));
    else if (i === "object")
        throw (
            ((t = String(e)),
            Error(
                "Objects are not valid as a React child (found: " +
                    (t === "[object Object]" ? "object with keys {" + Object.keys(e).join(", ") + "}" : t) +
                    "). If you meant to render a collection of children, use an array instead.",
            ))
        );
    return o;
}
function wo(e, t, n) {
    if (e == null) return e;
    var r = [],
        a = 0;
    return (
        el(e, r, "", "", function (i) {
            return t.call(n, i, a++);
        }),
        r
    );
}
function T6(e) {
    if (e._status === -1) {
        var t = e._result;
        (t = t()),
            t.then(
                function (n) {
                    (e._status === 0 || e._status === -1) && ((e._status = 1), (e._result = n));
                },
                function (n) {
                    (e._status === 0 || e._status === -1) && ((e._status = 2), (e._result = n));
                },
            ),
            e._status === -1 && ((e._status = 0), (e._result = t));
    }
    if (e._status === 1) return e._result.default;
    throw e._result;
}
var vt = { current: null },
    tl = { transition: null },
    A6 = { ReactCurrentDispatcher: vt, ReactCurrentBatchConfig: tl, ReactCurrentOwner: yh };
function ak() {
    throw Error("act(...) is not supported in production builds of React.");
}
ve.Children = {
    map: wo,
    forEach: function (e, t, n) {
        wo(
            e,
            function () {
                t.apply(this, arguments);
            },
            n,
        );
    },
    count: function (e) {
        var t = 0;
        return (
            wo(e, function () {
                t++;
            }),
            t
        );
    },
    toArray: function (e) {
        return (
            wo(e, function (t) {
                return t;
            }) || []
        );
    },
    only: function (e) {
        if (!vh(e)) throw Error("React.Children.only expected to receive a single React element child.");
        return e;
    },
};
ve.Component = Wa;
ve.Fragment = p6;
ve.Profiler = m6;
ve.PureComponent = gh;
ve.StrictMode = f6;
ve.Suspense = y6;
ve.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = A6;
ve.act = ak;
ve.cloneElement = function (e, t, n) {
    if (e == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e + ".");
    var r = Qw({}, e.props),
        a = e.key,
        i = e.ref,
        o = e._owner;
    if (t != null) {
        if ((t.ref !== void 0 && ((i = t.ref), (o = yh.current)), t.key !== void 0 && (a = "" + t.key), e.type && e.type.defaultProps))
            var l = e.type.defaultProps;
        for (s in t) tk.call(t, s) && !nk.hasOwnProperty(s) && (r[s] = t[s] === void 0 && l !== void 0 ? l[s] : t[s]);
    }
    var s = arguments.length - 2;
    if (s === 1) r.children = n;
    else if (1 < s) {
        l = Array(s);
        for (var u = 0; u < s; u++) l[u] = arguments[u + 2];
        r.children = l;
    }
    return { $$typeof: oo, type: e.type, key: a, ref: i, props: r, _owner: o };
};
ve.createContext = function (e) {
    return (
        (e = { $$typeof: g6, _currentValue: e, _currentValue2: e, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }),
        (e.Provider = { $$typeof: h6, _context: e }),
        (e.Consumer = e)
    );
};
ve.createElement = rk;
ve.createFactory = function (e) {
    var t = rk.bind(null, e);
    return (t.type = e), t;
};
ve.createRef = function () {
    return { current: null };
};
ve.forwardRef = function (e) {
    return { $$typeof: b6, render: e };
};
ve.isValidElement = vh;
ve.lazy = function (e) {
    return { $$typeof: E6, _payload: { _status: -1, _result: e }, _init: T6 };
};
ve.memo = function (e, t) {
    return { $$typeof: v6, type: e, compare: t === void 0 ? null : t };
};
ve.startTransition = function (e) {
    var t = tl.transition;
    tl.transition = {};
    try {
        e();
    } finally {
        tl.transition = t;
    }
};
ve.unstable_act = ak;
ve.useCallback = function (e, t) {
    return vt.current.useCallback(e, t);
};
ve.useContext = function (e) {
    return vt.current.useContext(e);
};
ve.useDebugValue = function () {};
ve.useDeferredValue = function (e) {
    return vt.current.useDeferredValue(e);
};
ve.useEffect = function (e, t) {
    return vt.current.useEffect(e, t);
};
ve.useId = function () {
    return vt.current.useId();
};
ve.useImperativeHandle = function (e, t, n) {
    return vt.current.useImperativeHandle(e, t, n);
};
ve.useInsertionEffect = function (e, t) {
    return vt.current.useInsertionEffect(e, t);
};
ve.useLayoutEffect = function (e, t) {
    return vt.current.useLayoutEffect(e, t);
};
ve.useMemo = function (e, t) {
    return vt.current.useMemo(e, t);
};
ve.useReducer = function (e, t, n) {
    return vt.current.useReducer(e, t, n);
};
ve.useRef = function (e) {
    return vt.current.useRef(e);
};
ve.useState = function (e) {
    return vt.current.useState(e);
};
ve.useSyncExternalStore = function (e, t, n) {
    return vt.current.useSyncExternalStore(e, t, n);
};
ve.useTransition = function () {
    return vt.current.useTransition();
};
ve.version = "18.3.1";
Xw.exports = ve;
var lo = Xw.exports;
const zn = hh(lo);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var x6 = lo,
    R6 = Symbol.for("react.element"),
    I6 = Symbol.for("react.fragment"),
    N6 = Object.prototype.hasOwnProperty,
    _6 = x6.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
    C6 = { key: !0, ref: !0, __self: !0, __source: !0 };
function ik(e, t, n) {
    var r,
        a = {},
        i = null,
        o = null;
    n !== void 0 && (i = "" + n), t.key !== void 0 && (i = "" + t.key), t.ref !== void 0 && (o = t.ref);
    for (r in t) N6.call(t, r) && !C6.hasOwnProperty(r) && (a[r] = t[r]);
    if (e && e.defaultProps) for (r in ((t = e.defaultProps), t)) a[r] === void 0 && (a[r] = t[r]);
    return { $$typeof: R6, type: e, key: i, ref: o, props: a, _owner: _6.current };
}
Zl.Fragment = I6;
Zl.jsx = ik;
Zl.jsxs = ik;
Kw.exports = Zl;
var ut = Kw.exports,
    Vf = {},
    ok = { exports: {} },
    Ht = {},
    lk = { exports: {} },
    sk = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (e) {
    function t(U, W) {
        var A = U.length;
        U.push(W);
        e: for (; 0 < A; ) {
            var Y = (A - 1) >>> 1,
                Q = U[Y];
            if (0 < a(Q, W)) (U[Y] = W), (U[A] = Q), (A = Y);
            else break e;
        }
    }
    function n(U) {
        return U.length === 0 ? null : U[0];
    }
    function r(U) {
        if (U.length === 0) return null;
        var W = U[0],
            A = U.pop();
        if (A !== W) {
            U[0] = A;
            e: for (var Y = 0, Q = U.length, C = Q >>> 1; Y < C; ) {
                var he = 2 * (Y + 1) - 1,
                    ke = U[he],
                    de = he + 1,
                    Te = U[de];
                if (0 > a(ke, A)) de < Q && 0 > a(Te, ke) ? ((U[Y] = Te), (U[de] = A), (Y = de)) : ((U[Y] = ke), (U[he] = A), (Y = he));
                else if (de < Q && 0 > a(Te, A)) (U[Y] = Te), (U[de] = A), (Y = de);
                else break e;
            }
        }
        return W;
    }
    function a(U, W) {
        var A = U.sortIndex - W.sortIndex;
        return A !== 0 ? A : U.id - W.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
        var i = performance;
        e.unstable_now = function () {
            return i.now();
        };
    } else {
        var o = Date,
            l = o.now();
        e.unstable_now = function () {
            return o.now() - l;
        };
    }
    var s = [],
        u = [],
        c = 1,
        d = null,
        m = 3,
        f = !1,
        b = !1,
        E = !1,
        I = typeof setTimeout == "function" ? setTimeout : null,
        y = typeof clearTimeout == "function" ? clearTimeout : null,
        g = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" &&
        navigator.scheduling !== void 0 &&
        navigator.scheduling.isInputPending !== void 0 &&
        navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function v(U) {
        for (var W = n(u); W !== null; ) {
            if (W.callback === null) r(u);
            else if (W.startTime <= U) r(u), (W.sortIndex = W.expirationTime), t(s, W);
            else break;
            W = n(u);
        }
    }
    function T(U) {
        if (((E = !1), v(U), !b))
            if (n(s) !== null) (b = !0), se(R);
            else {
                var W = n(u);
                W !== null && ce(T, W.startTime - U);
            }
    }
    function R(U, W) {
        (b = !1), E && ((E = !1), y(F), (F = -1)), (f = !0);
        var A = m;
        try {
            for (v(W), d = n(s); d !== null && (!(d.expirationTime > W) || (U && !B())); ) {
                var Y = d.callback;
                if (typeof Y == "function") {
                    (d.callback = null), (m = d.priorityLevel);
                    var Q = Y(d.expirationTime <= W);
                    (W = e.unstable_now()), typeof Q == "function" ? (d.callback = Q) : d === n(s) && r(s), v(W);
                } else r(s);
                d = n(s);
            }
            if (d !== null) var C = !0;
            else {
                var he = n(u);
                he !== null && ce(T, he.startTime - W), (C = !1);
            }
            return C;
        } finally {
            (d = null), (m = A), (f = !1);
        }
    }
    var k = !1,
        L = null,
        F = -1,
        M = 5,
        O = -1;
    function B() {
        return !(e.unstable_now() - O < M);
    }
    function $() {
        if (L !== null) {
            var U = e.unstable_now();
            O = U;
            var W = !0;
            try {
                W = L(!0, U);
            } finally {
                W ? ne() : ((k = !1), (L = null));
            }
        } else k = !1;
    }
    var ne;
    if (typeof g == "function")
        ne = function () {
            g($);
        };
    else if (typeof MessageChannel < "u") {
        var re = new MessageChannel(),
            J = re.port2;
        (re.port1.onmessage = $),
            (ne = function () {
                J.postMessage(null);
            });
    } else
        ne = function () {
            I($, 0);
        };
    function se(U) {
        (L = U), k || ((k = !0), ne());
    }
    function ce(U, W) {
        F = I(function () {
            U(e.unstable_now());
        }, W);
    }
    (e.unstable_IdlePriority = 5),
        (e.unstable_ImmediatePriority = 1),
        (e.unstable_LowPriority = 4),
        (e.unstable_NormalPriority = 3),
        (e.unstable_Profiling = null),
        (e.unstable_UserBlockingPriority = 2),
        (e.unstable_cancelCallback = function (U) {
            U.callback = null;
        }),
        (e.unstable_continueExecution = function () {
            b || f || ((b = !0), se(R));
        }),
        (e.unstable_forceFrameRate = function (U) {
            0 > U || 125 < U
                ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported")
                : (M = 0 < U ? Math.floor(1e3 / U) : 5);
        }),
        (e.unstable_getCurrentPriorityLevel = function () {
            return m;
        }),
        (e.unstable_getFirstCallbackNode = function () {
            return n(s);
        }),
        (e.unstable_next = function (U) {
            switch (m) {
                case 1:
                case 2:
                case 3:
                    var W = 3;
                    break;
                default:
                    W = m;
            }
            var A = m;
            m = W;
            try {
                return U();
            } finally {
                m = A;
            }
        }),
        (e.unstable_pauseExecution = function () {}),
        (e.unstable_requestPaint = function () {}),
        (e.unstable_runWithPriority = function (U, W) {
            switch (U) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                default:
                    U = 3;
            }
            var A = m;
            m = U;
            try {
                return W();
            } finally {
                m = A;
            }
        }),
        (e.unstable_scheduleCallback = function (U, W, A) {
            var Y = e.unstable_now();
            switch ((typeof A == "object" && A !== null ? ((A = A.delay), (A = typeof A == "number" && 0 < A ? Y + A : Y)) : (A = Y), U)) {
                case 1:
                    var Q = -1;
                    break;
                case 2:
                    Q = 250;
                    break;
                case 5:
                    Q = 1073741823;
                    break;
                case 4:
                    Q = 1e4;
                    break;
                default:
                    Q = 5e3;
            }
            return (
                (Q = A + Q),
                (U = { id: c++, callback: W, priorityLevel: U, startTime: A, expirationTime: Q, sortIndex: -1 }),
                A > Y
                    ? ((U.sortIndex = A), t(u, U), n(s) === null && U === n(u) && (E ? (y(F), (F = -1)) : (E = !0), ce(T, A - Y)))
                    : ((U.sortIndex = Q), t(s, U), b || f || ((b = !0), se(R))),
                U
            );
        }),
        (e.unstable_shouldYield = B),
        (e.unstable_wrapCallback = function (U) {
            var W = m;
            return function () {
                var A = m;
                m = W;
                try {
                    return U.apply(this, arguments);
                } finally {
                    m = A;
                }
            };
        });
})(sk);
lk.exports = sk;
var O6 = lk.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var L6 = lo,
    Gt = O6;
function j(e) {
    for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++)
        t += "&args[]=" + encodeURIComponent(arguments[n]);
    return (
        "Minified React error #" +
        e +
        "; visit " +
        t +
        " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    );
}
var uk = new Set(),
    Pi = {};
function ea(e, t) {
    Ba(e, t), Ba(e + "Capture", t);
}
function Ba(e, t) {
    for (Pi[e] = t, e = 0; e < t.length; e++) uk.add(t[e]);
}
var Vn = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"),
    Wf = Object.prototype.hasOwnProperty,
    D6 =
        /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
    w1 = {},
    k1 = {};
function M6(e) {
    return Wf.call(k1, e) ? !0 : Wf.call(w1, e) ? !1 : D6.test(e) ? (k1[e] = !0) : ((w1[e] = !0), !1);
}
function F6(e, t, n, r) {
    if (n !== null && n.type === 0) return !1;
    switch (typeof t) {
        case "function":
        case "symbol":
            return !0;
        case "boolean":
            return r ? !1 : n !== null ? !n.acceptsBooleans : ((e = e.toLowerCase().slice(0, 5)), e !== "data-" && e !== "aria-");
        default:
            return !1;
    }
}
function P6(e, t, n, r) {
    if (t === null || typeof t > "u" || F6(e, t, n, r)) return !0;
    if (r) return !1;
    if (n !== null)
        switch (n.type) {
            case 3:
                return !t;
            case 4:
                return t === !1;
            case 5:
                return isNaN(t);
            case 6:
                return isNaN(t) || 1 > t;
        }
    return !1;
}
function Et(e, t, n, r, a, i, o) {
    (this.acceptsBooleans = t === 2 || t === 3 || t === 4),
        (this.attributeName = r),
        (this.attributeNamespace = a),
        (this.mustUseProperty = n),
        (this.propertyName = e),
        (this.type = t),
        (this.sanitizeURL = i),
        (this.removeEmptyString = o);
}
var at = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
    .split(" ")
    .forEach(function (e) {
        at[e] = new Et(e, 0, !1, e, null, !1, !1);
    });
[
    ["acceptCharset", "accept-charset"],
    ["className", "class"],
    ["htmlFor", "for"],
    ["httpEquiv", "http-equiv"],
].forEach(function (e) {
    var t = e[0];
    at[t] = new Et(t, 1, !1, e[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (e) {
    at[e] = new Et(e, 2, !1, e.toLowerCase(), null, !1, !1);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (e) {
    at[e] = new Et(e, 2, !1, e, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
    .split(" ")
    .forEach(function (e) {
        at[e] = new Et(e, 3, !1, e.toLowerCase(), null, !1, !1);
    });
["checked", "multiple", "muted", "selected"].forEach(function (e) {
    at[e] = new Et(e, 3, !0, e, null, !1, !1);
});
["capture", "download"].forEach(function (e) {
    at[e] = new Et(e, 4, !1, e, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (e) {
    at[e] = new Et(e, 6, !1, e, null, !1, !1);
});
["rowSpan", "start"].forEach(function (e) {
    at[e] = new Et(e, 5, !1, e.toLowerCase(), null, !1, !1);
});
var Eh = /[\-:]([a-z])/g;
function Sh(e) {
    return e[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
    .split(" ")
    .forEach(function (e) {
        var t = e.replace(Eh, Sh);
        at[t] = new Et(t, 1, !1, e, null, !1, !1);
    });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (e) {
    var t = e.replace(Eh, Sh);
    at[t] = new Et(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
});
["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
    var t = e.replace(Eh, Sh);
    at[t] = new Et(t, 1, !1, e, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (e) {
    at[e] = new Et(e, 1, !1, e.toLowerCase(), null, !1, !1);
});
at.xlinkHref = new Et("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
["src", "href", "action", "formAction"].forEach(function (e) {
    at[e] = new Et(e, 1, !1, e.toLowerCase(), null, !0, !0);
});
function wh(e, t, n, r) {
    var a = at.hasOwnProperty(t) ? at[t] : null;
    (a !== null ? a.type !== 0 : r || !(2 < t.length) || (t[0] !== "o" && t[0] !== "O") || (t[1] !== "n" && t[1] !== "N")) &&
        (P6(t, n, a, r) && (n = null),
        r || a === null
            ? M6(t) && (n === null ? e.removeAttribute(t) : e.setAttribute(t, "" + n))
            : a.mustUseProperty
              ? (e[a.propertyName] = n === null ? (a.type === 3 ? !1 : "") : n)
              : ((t = a.attributeName),
                (r = a.attributeNamespace),
                n === null
                    ? e.removeAttribute(t)
                    : ((a = a.type), (n = a === 3 || (a === 4 && n === !0) ? "" : "" + n), r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
}
var Jn = L6.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    ko = Symbol.for("react.element"),
    ga = Symbol.for("react.portal"),
    ba = Symbol.for("react.fragment"),
    kh = Symbol.for("react.strict_mode"),
    Yf = Symbol.for("react.profiler"),
    ck = Symbol.for("react.provider"),
    dk = Symbol.for("react.context"),
    Th = Symbol.for("react.forward_ref"),
    Kf = Symbol.for("react.suspense"),
    Xf = Symbol.for("react.suspense_list"),
    Ah = Symbol.for("react.memo"),
    or = Symbol.for("react.lazy"),
    pk = Symbol.for("react.offscreen"),
    T1 = Symbol.iterator;
function li(e) {
    return e === null || typeof e != "object" ? null : ((e = (T1 && e[T1]) || e["@@iterator"]), typeof e == "function" ? e : null);
}
var $e = Object.assign,
    Fs;
function yi(e) {
    if (Fs === void 0)
        try {
            throw Error();
        } catch (n) {
            var t = n.stack.trim().match(/\n( *(at )?)/);
            Fs = (t && t[1]) || "";
        }
    return (
        `
` +
        Fs +
        e
    );
}
var Ps = !1;
function Bs(e, t) {
    if (!e || Ps) return "";
    Ps = !0;
    var n = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
        if (t)
            if (
                ((t = function () {
                    throw Error();
                }),
                Object.defineProperty(t.prototype, "props", {
                    set: function () {
                        throw Error();
                    },
                }),
                typeof Reflect == "object" && Reflect.construct)
            ) {
                try {
                    Reflect.construct(t, []);
                } catch (u) {
                    var r = u;
                }
                Reflect.construct(e, [], t);
            } else {
                try {
                    t.call();
                } catch (u) {
                    r = u;
                }
                e.call(t.prototype);
            }
        else {
            try {
                throw Error();
            } catch (u) {
                r = u;
            }
            e();
        }
    } catch (u) {
        if (u && r && typeof u.stack == "string") {
            for (
                var a = u.stack.split(`
`),
                    i = r.stack.split(`
`),
                    o = a.length - 1,
                    l = i.length - 1;
                1 <= o && 0 <= l && a[o] !== i[l];

            )
                l--;
            for (; 1 <= o && 0 <= l; o--, l--)
                if (a[o] !== i[l]) {
                    if (o !== 1 || l !== 1)
                        do
                            if ((o--, l--, 0 > l || a[o] !== i[l])) {
                                var s =
                                    `
` + a[o].replace(" at new ", " at ");
                                return e.displayName && s.includes("<anonymous>") && (s = s.replace("<anonymous>", e.displayName)), s;
                            }
                        while (1 <= o && 0 <= l);
                    break;
                }
        }
    } finally {
        (Ps = !1), (Error.prepareStackTrace = n);
    }
    return (e = e ? e.displayName || e.name : "") ? yi(e) : "";
}
function B6(e) {
    switch (e.tag) {
        case 5:
            return yi(e.type);
        case 16:
            return yi("Lazy");
        case 13:
            return yi("Suspense");
        case 19:
            return yi("SuspenseList");
        case 0:
        case 2:
        case 15:
            return (e = Bs(e.type, !1)), e;
        case 11:
            return (e = Bs(e.type.render, !1)), e;
        case 1:
            return (e = Bs(e.type, !0)), e;
        default:
            return "";
    }
}
function Zf(e) {
    if (e == null) return null;
    if (typeof e == "function") return e.displayName || e.name || null;
    if (typeof e == "string") return e;
    switch (e) {
        case ba:
            return "Fragment";
        case ga:
            return "Portal";
        case Yf:
            return "Profiler";
        case kh:
            return "StrictMode";
        case Kf:
            return "Suspense";
        case Xf:
            return "SuspenseList";
    }
    if (typeof e == "object")
        switch (e.$$typeof) {
            case dk:
                return (e.displayName || "Context") + ".Consumer";
            case ck:
                return (e._context.displayName || "Context") + ".Provider";
            case Th:
                var t = e.render;
                return (e = e.displayName), e || ((e = t.displayName || t.name || ""), (e = e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef")), e;
            case Ah:
                return (t = e.displayName || null), t !== null ? t : Zf(e.type) || "Memo";
            case or:
                (t = e._payload), (e = e._init);
                try {
                    return Zf(e(t));
                } catch {}
        }
    return null;
}
function U6(e) {
    var t = e.type;
    switch (e.tag) {
        case 24:
            return "Cache";
        case 9:
            return (t.displayName || "Context") + ".Consumer";
        case 10:
            return (t._context.displayName || "Context") + ".Provider";
        case 18:
            return "DehydratedFragment";
        case 11:
            return (e = t.render), (e = e.displayName || e.name || ""), t.displayName || (e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef");
        case 7:
            return "Fragment";
        case 5:
            return t;
        case 4:
            return "Portal";
        case 3:
            return "Root";
        case 6:
            return "Text";
        case 16:
            return Zf(t);
        case 8:
            return t === kh ? "StrictMode" : "Mode";
        case 22:
            return "Offscreen";
        case 12:
            return "Profiler";
        case 21:
            return "Scope";
        case 13:
            return "Suspense";
        case 19:
            return "SuspenseList";
        case 25:
            return "TracingMarker";
        case 1:
        case 0:
        case 17:
        case 2:
        case 14:
        case 15:
            if (typeof t == "function") return t.displayName || t.name || null;
            if (typeof t == "string") return t;
    }
    return null;
}
function wr(e) {
    switch (typeof e) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
            return e;
        case "object":
            return e;
        default:
            return "";
    }
}
function fk(e) {
    var t = e.type;
    return (e = e.nodeName) && e.toLowerCase() === "input" && (t === "checkbox" || t === "radio");
}
function z6(e) {
    var t = fk(e) ? "checked" : "value",
        n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
        r = "" + e[t];
    if (!e.hasOwnProperty(t) && typeof n < "u" && typeof n.get == "function" && typeof n.set == "function") {
        var a = n.get,
            i = n.set;
        return (
            Object.defineProperty(e, t, {
                configurable: !0,
                get: function () {
                    return a.call(this);
                },
                set: function (o) {
                    (r = "" + o), i.call(this, o);
                },
            }),
            Object.defineProperty(e, t, { enumerable: n.enumerable }),
            {
                getValue: function () {
                    return r;
                },
                setValue: function (o) {
                    r = "" + o;
                },
                stopTracking: function () {
                    (e._valueTracker = null), delete e[t];
                },
            }
        );
    }
}
function To(e) {
    e._valueTracker || (e._valueTracker = z6(e));
}
function mk(e) {
    if (!e) return !1;
    var t = e._valueTracker;
    if (!t) return !0;
    var n = t.getValue(),
        r = "";
    return e && (r = fk(e) ? (e.checked ? "true" : "false") : e.value), (e = r), e !== n ? (t.setValue(e), !0) : !1;
}
function yl(e) {
    if (((e = e || (typeof document < "u" ? document : void 0)), typeof e > "u")) return null;
    try {
        return e.activeElement || e.body;
    } catch {
        return e.body;
    }
}
function Qf(e, t) {
    var n = t.checked;
    return $e({}, t, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: n ?? e._wrapperState.initialChecked });
}
function A1(e, t) {
    var n = t.defaultValue == null ? "" : t.defaultValue,
        r = t.checked != null ? t.checked : t.defaultChecked;
    (n = wr(t.value != null ? t.value : n)),
        (e._wrapperState = {
            initialChecked: r,
            initialValue: n,
            controlled: t.type === "checkbox" || t.type === "radio" ? t.checked != null : t.value != null,
        });
}
function hk(e, t) {
    (t = t.checked), t != null && wh(e, "checked", t, !1);
}
function Jf(e, t) {
    hk(e, t);
    var n = wr(t.value),
        r = t.type;
    if (n != null) r === "number" ? ((n === 0 && e.value === "") || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
    else if (r === "submit" || r === "reset") {
        e.removeAttribute("value");
        return;
    }
    t.hasOwnProperty("value") ? em(e, t.type, n) : t.hasOwnProperty("defaultValue") && em(e, t.type, wr(t.defaultValue)),
        t.checked == null && t.defaultChecked != null && (e.defaultChecked = !!t.defaultChecked);
}
function x1(e, t, n) {
    if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
        var r = t.type;
        if (!((r !== "submit" && r !== "reset") || (t.value !== void 0 && t.value !== null))) return;
        (t = "" + e._wrapperState.initialValue), n || t === e.value || (e.value = t), (e.defaultValue = t);
    }
    (n = e.name), n !== "" && (e.name = ""), (e.defaultChecked = !!e._wrapperState.initialChecked), n !== "" && (e.name = n);
}
function em(e, t, n) {
    (t !== "number" || yl(e.ownerDocument) !== e) &&
        (n == null ? (e.defaultValue = "" + e._wrapperState.initialValue) : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
}
var vi = Array.isArray;
function Na(e, t, n, r) {
    if (((e = e.options), t)) {
        t = {};
        for (var a = 0; a < n.length; a++) t["$" + n[a]] = !0;
        for (n = 0; n < e.length; n++)
            (a = t.hasOwnProperty("$" + e[n].value)), e[n].selected !== a && (e[n].selected = a), a && r && (e[n].defaultSelected = !0);
    } else {
        for (n = "" + wr(n), t = null, a = 0; a < e.length; a++) {
            if (e[a].value === n) {
                (e[a].selected = !0), r && (e[a].defaultSelected = !0);
                return;
            }
            t !== null || e[a].disabled || (t = e[a]);
        }
        t !== null && (t.selected = !0);
    }
}
function tm(e, t) {
    if (t.dangerouslySetInnerHTML != null) throw Error(j(91));
    return $e({}, t, { value: void 0, defaultValue: void 0, children: "" + e._wrapperState.initialValue });
}
function R1(e, t) {
    var n = t.value;
    if (n == null) {
        if (((n = t.children), (t = t.defaultValue), n != null)) {
            if (t != null) throw Error(j(92));
            if (vi(n)) {
                if (1 < n.length) throw Error(j(93));
                n = n[0];
            }
            t = n;
        }
        t == null && (t = ""), (n = t);
    }
    e._wrapperState = { initialValue: wr(n) };
}
function gk(e, t) {
    var n = wr(t.value),
        r = wr(t.defaultValue);
    n != null && ((n = "" + n), n !== e.value && (e.value = n), t.defaultValue == null && e.defaultValue !== n && (e.defaultValue = n)),
        r != null && (e.defaultValue = "" + r);
}
function I1(e) {
    var t = e.textContent;
    t === e._wrapperState.initialValue && t !== "" && t !== null && (e.value = t);
}
function bk(e) {
    switch (e) {
        case "svg":
            return "http://www.w3.org/2000/svg";
        case "math":
            return "http://www.w3.org/1998/Math/MathML";
        default:
            return "http://www.w3.org/1999/xhtml";
    }
}
function nm(e, t) {
    return e == null || e === "http://www.w3.org/1999/xhtml"
        ? bk(t)
        : e === "http://www.w3.org/2000/svg" && t === "foreignObject"
          ? "http://www.w3.org/1999/xhtml"
          : e;
}
var Ao,
    yk = (function (e) {
        return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
            ? function (t, n, r, a) {
                  MSApp.execUnsafeLocalFunction(function () {
                      return e(t, n, r, a);
                  });
              }
            : e;
    })(function (e, t) {
        if (e.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in e) e.innerHTML = t;
        else {
            for (Ao = Ao || document.createElement("div"), Ao.innerHTML = "<svg>" + t.valueOf().toString() + "</svg>", t = Ao.firstChild; e.firstChild; )
                e.removeChild(e.firstChild);
            for (; t.firstChild; ) e.appendChild(t.firstChild);
        }
    });
function Bi(e, t) {
    if (t) {
        var n = e.firstChild;
        if (n && n === e.lastChild && n.nodeType === 3) {
            n.nodeValue = t;
            return;
        }
    }
    e.textContent = t;
}
var Ai = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0,
    },
    $6 = ["Webkit", "ms", "Moz", "O"];
Object.keys(Ai).forEach(function (e) {
    $6.forEach(function (t) {
        (t = t + e.charAt(0).toUpperCase() + e.substring(1)), (Ai[t] = Ai[e]);
    });
});
function vk(e, t, n) {
    return t == null || typeof t == "boolean" || t === ""
        ? ""
        : n || typeof t != "number" || t === 0 || (Ai.hasOwnProperty(e) && Ai[e])
          ? ("" + t).trim()
          : t + "px";
}
function Ek(e, t) {
    e = e.style;
    for (var n in t)
        if (t.hasOwnProperty(n)) {
            var r = n.indexOf("--") === 0,
                a = vk(n, t[n], r);
            n === "float" && (n = "cssFloat"), r ? e.setProperty(n, a) : (e[n] = a);
        }
}
var q6 = $e(
    { menuitem: !0 },
    { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 },
);
function rm(e, t) {
    if (t) {
        if (q6[e] && (t.children != null || t.dangerouslySetInnerHTML != null)) throw Error(j(137, e));
        if (t.dangerouslySetInnerHTML != null) {
            if (t.children != null) throw Error(j(60));
            if (typeof t.dangerouslySetInnerHTML != "object" || !("__html" in t.dangerouslySetInnerHTML)) throw Error(j(61));
        }
        if (t.style != null && typeof t.style != "object") throw Error(j(62));
    }
}
function am(e, t) {
    if (e.indexOf("-") === -1) return typeof t.is == "string";
    switch (e) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
            return !1;
        default:
            return !0;
    }
}
var im = null;
function xh(e) {
    return (e = e.target || e.srcElement || window), e.correspondingUseElement && (e = e.correspondingUseElement), e.nodeType === 3 ? e.parentNode : e;
}
var om = null,
    _a = null,
    Ca = null;
function N1(e) {
    if ((e = co(e))) {
        if (typeof om != "function") throw Error(j(280));
        var t = e.stateNode;
        t && ((t = ns(t)), om(e.stateNode, e.type, t));
    }
}
function Sk(e) {
    _a ? (Ca ? Ca.push(e) : (Ca = [e])) : (_a = e);
}
function wk() {
    if (_a) {
        var e = _a,
            t = Ca;
        if (((Ca = _a = null), N1(e), t)) for (e = 0; e < t.length; e++) N1(t[e]);
    }
}
function kk(e, t) {
    return e(t);
}
function Tk() {}
var Us = !1;
function Ak(e, t, n) {
    if (Us) return e(t, n);
    Us = !0;
    try {
        return kk(e, t, n);
    } finally {
        (Us = !1), (_a !== null || Ca !== null) && (Tk(), wk());
    }
}
function Ui(e, t) {
    var n = e.stateNode;
    if (n === null) return null;
    var r = ns(n);
    if (r === null) return null;
    n = r[t];
    e: switch (t) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
            (r = !r.disabled) || ((e = e.type), (r = !(e === "button" || e === "input" || e === "select" || e === "textarea"))), (e = !r);
            break e;
        default:
            e = !1;
    }
    if (e) return null;
    if (n && typeof n != "function") throw Error(j(231, t, typeof n));
    return n;
}
var lm = !1;
if (Vn)
    try {
        var si = {};
        Object.defineProperty(si, "passive", {
            get: function () {
                lm = !0;
            },
        }),
            window.addEventListener("test", si, si),
            window.removeEventListener("test", si, si);
    } catch {
        lm = !1;
    }
function G6(e, t, n, r, a, i, o, l, s) {
    var u = Array.prototype.slice.call(arguments, 3);
    try {
        t.apply(n, u);
    } catch (c) {
        this.onError(c);
    }
}
var xi = !1,
    vl = null,
    El = !1,
    sm = null,
    H6 = {
        onError: function (e) {
            (xi = !0), (vl = e);
        },
    };
function j6(e, t, n, r, a, i, o, l, s) {
    (xi = !1), (vl = null), G6.apply(H6, arguments);
}
function V6(e, t, n, r, a, i, o, l, s) {
    if ((j6.apply(this, arguments), xi)) {
        if (xi) {
            var u = vl;
            (xi = !1), (vl = null);
        } else throw Error(j(198));
        El || ((El = !0), (sm = u));
    }
}
function ta(e) {
    var t = e,
        n = e;
    if (e.alternate) for (; t.return; ) t = t.return;
    else {
        e = t;
        do (t = e), t.flags & 4098 && (n = t.return), (e = t.return);
        while (e);
    }
    return t.tag === 3 ? n : null;
}
function xk(e) {
    if (e.tag === 13) {
        var t = e.memoizedState;
        if ((t === null && ((e = e.alternate), e !== null && (t = e.memoizedState)), t !== null)) return t.dehydrated;
    }
    return null;
}
function _1(e) {
    if (ta(e) !== e) throw Error(j(188));
}
function W6(e) {
    var t = e.alternate;
    if (!t) {
        if (((t = ta(e)), t === null)) throw Error(j(188));
        return t !== e ? null : e;
    }
    for (var n = e, r = t; ; ) {
        var a = n.return;
        if (a === null) break;
        var i = a.alternate;
        if (i === null) {
            if (((r = a.return), r !== null)) {
                n = r;
                continue;
            }
            break;
        }
        if (a.child === i.child) {
            for (i = a.child; i; ) {
                if (i === n) return _1(a), e;
                if (i === r) return _1(a), t;
                i = i.sibling;
            }
            throw Error(j(188));
        }
        if (n.return !== r.return) (n = a), (r = i);
        else {
            for (var o = !1, l = a.child; l; ) {
                if (l === n) {
                    (o = !0), (n = a), (r = i);
                    break;
                }
                if (l === r) {
                    (o = !0), (r = a), (n = i);
                    break;
                }
                l = l.sibling;
            }
            if (!o) {
                for (l = i.child; l; ) {
                    if (l === n) {
                        (o = !0), (n = i), (r = a);
                        break;
                    }
                    if (l === r) {
                        (o = !0), (r = i), (n = a);
                        break;
                    }
                    l = l.sibling;
                }
                if (!o) throw Error(j(189));
            }
        }
        if (n.alternate !== r) throw Error(j(190));
    }
    if (n.tag !== 3) throw Error(j(188));
    return n.stateNode.current === n ? e : t;
}
function Rk(e) {
    return (e = W6(e)), e !== null ? Ik(e) : null;
}
function Ik(e) {
    if (e.tag === 5 || e.tag === 6) return e;
    for (e = e.child; e !== null; ) {
        var t = Ik(e);
        if (t !== null) return t;
        e = e.sibling;
    }
    return null;
}
var Nk = Gt.unstable_scheduleCallback,
    C1 = Gt.unstable_cancelCallback,
    Y6 = Gt.unstable_shouldYield,
    K6 = Gt.unstable_requestPaint,
    je = Gt.unstable_now,
    X6 = Gt.unstable_getCurrentPriorityLevel,
    Rh = Gt.unstable_ImmediatePriority,
    _k = Gt.unstable_UserBlockingPriority,
    Sl = Gt.unstable_NormalPriority,
    Z6 = Gt.unstable_LowPriority,
    Ck = Gt.unstable_IdlePriority,
    Ql = null,
    Rn = null;
function Q6(e) {
    if (Rn && typeof Rn.onCommitFiberRoot == "function")
        try {
            Rn.onCommitFiberRoot(Ql, e, void 0, (e.current.flags & 128) === 128);
        } catch {}
}
var hn = Math.clz32 ? Math.clz32 : t5,
    J6 = Math.log,
    e5 = Math.LN2;
function t5(e) {
    return (e >>>= 0), e === 0 ? 32 : (31 - ((J6(e) / e5) | 0)) | 0;
}
var xo = 64,
    Ro = 4194304;
function Ei(e) {
    switch (e & -e) {
        case 1:
            return 1;
        case 2:
            return 2;
        case 4:
            return 4;
        case 8:
            return 8;
        case 16:
            return 16;
        case 32:
            return 32;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
            return e & 4194240;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
            return e & 130023424;
        case 134217728:
            return 134217728;
        case 268435456:
            return 268435456;
        case 536870912:
            return 536870912;
        case 1073741824:
            return 1073741824;
        default:
            return e;
    }
}
function wl(e, t) {
    var n = e.pendingLanes;
    if (n === 0) return 0;
    var r = 0,
        a = e.suspendedLanes,
        i = e.pingedLanes,
        o = n & 268435455;
    if (o !== 0) {
        var l = o & ~a;
        l !== 0 ? (r = Ei(l)) : ((i &= o), i !== 0 && (r = Ei(i)));
    } else (o = n & ~a), o !== 0 ? (r = Ei(o)) : i !== 0 && (r = Ei(i));
    if (r === 0) return 0;
    if (t !== 0 && t !== r && !(t & a) && ((a = r & -r), (i = t & -t), a >= i || (a === 16 && (i & 4194240) !== 0))) return t;
    if ((r & 4 && (r |= n & 16), (t = e.entangledLanes), t !== 0))
        for (e = e.entanglements, t &= r; 0 < t; ) (n = 31 - hn(t)), (a = 1 << n), (r |= e[n]), (t &= ~a);
    return r;
}
function n5(e, t) {
    switch (e) {
        case 1:
        case 2:
        case 4:
            return t + 250;
        case 8:
        case 16:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
            return t + 5e3;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
            return -1;
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
            return -1;
        default:
            return -1;
    }
}
function r5(e, t) {
    for (var n = e.suspendedLanes, r = e.pingedLanes, a = e.expirationTimes, i = e.pendingLanes; 0 < i; ) {
        var o = 31 - hn(i),
            l = 1 << o,
            s = a[o];
        s === -1 ? (!(l & n) || l & r) && (a[o] = n5(l, t)) : s <= t && (e.expiredLanes |= l), (i &= ~l);
    }
}
function um(e) {
    return (e = e.pendingLanes & -1073741825), e !== 0 ? e : e & 1073741824 ? 1073741824 : 0;
}
function Ok() {
    var e = xo;
    return (xo <<= 1), !(xo & 4194240) && (xo = 64), e;
}
function zs(e) {
    for (var t = [], n = 0; 31 > n; n++) t.push(e);
    return t;
}
function so(e, t, n) {
    (e.pendingLanes |= t), t !== 536870912 && ((e.suspendedLanes = 0), (e.pingedLanes = 0)), (e = e.eventTimes), (t = 31 - hn(t)), (e[t] = n);
}
function a5(e, t) {
    var n = e.pendingLanes & ~t;
    (e.pendingLanes = t),
        (e.suspendedLanes = 0),
        (e.pingedLanes = 0),
        (e.expiredLanes &= t),
        (e.mutableReadLanes &= t),
        (e.entangledLanes &= t),
        (t = e.entanglements);
    var r = e.eventTimes;
    for (e = e.expirationTimes; 0 < n; ) {
        var a = 31 - hn(n),
            i = 1 << a;
        (t[a] = 0), (r[a] = -1), (e[a] = -1), (n &= ~i);
    }
}
function Ih(e, t) {
    var n = (e.entangledLanes |= t);
    for (e = e.entanglements; n; ) {
        var r = 31 - hn(n),
            a = 1 << r;
        (a & t) | (e[r] & t) && (e[r] |= t), (n &= ~a);
    }
}
var Ae = 0;
function Lk(e) {
    return (e &= -e), 1 < e ? (4 < e ? (e & 268435455 ? 16 : 536870912) : 4) : 1;
}
var Dk,
    Nh,
    Mk,
    Fk,
    Pk,
    cm = !1,
    Io = [],
    mr = null,
    hr = null,
    gr = null,
    zi = new Map(),
    $i = new Map(),
    sr = [],
    i5 =
        "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
            " ",
        );
function O1(e, t) {
    switch (e) {
        case "focusin":
        case "focusout":
            mr = null;
            break;
        case "dragenter":
        case "dragleave":
            hr = null;
            break;
        case "mouseover":
        case "mouseout":
            gr = null;
            break;
        case "pointerover":
        case "pointerout":
            zi.delete(t.pointerId);
            break;
        case "gotpointercapture":
        case "lostpointercapture":
            $i.delete(t.pointerId);
    }
}
function ui(e, t, n, r, a, i) {
    return e === null || e.nativeEvent !== i
        ? ((e = { blockedOn: t, domEventName: n, eventSystemFlags: r, nativeEvent: i, targetContainers: [a] }),
          t !== null && ((t = co(t)), t !== null && Nh(t)),
          e)
        : ((e.eventSystemFlags |= r), (t = e.targetContainers), a !== null && t.indexOf(a) === -1 && t.push(a), e);
}
function o5(e, t, n, r, a) {
    switch (t) {
        case "focusin":
            return (mr = ui(mr, e, t, n, r, a)), !0;
        case "dragenter":
            return (hr = ui(hr, e, t, n, r, a)), !0;
        case "mouseover":
            return (gr = ui(gr, e, t, n, r, a)), !0;
        case "pointerover":
            var i = a.pointerId;
            return zi.set(i, ui(zi.get(i) || null, e, t, n, r, a)), !0;
        case "gotpointercapture":
            return (i = a.pointerId), $i.set(i, ui($i.get(i) || null, e, t, n, r, a)), !0;
    }
    return !1;
}
function Bk(e) {
    var t = Gr(e.target);
    if (t !== null) {
        var n = ta(t);
        if (n !== null) {
            if (((t = n.tag), t === 13)) {
                if (((t = xk(n)), t !== null)) {
                    (e.blockedOn = t),
                        Pk(e.priority, function () {
                            Mk(n);
                        });
                    return;
                }
            } else if (t === 3 && n.stateNode.current.memoizedState.isDehydrated) {
                e.blockedOn = n.tag === 3 ? n.stateNode.containerInfo : null;
                return;
            }
        }
    }
    e.blockedOn = null;
}
function nl(e) {
    if (e.blockedOn !== null) return !1;
    for (var t = e.targetContainers; 0 < t.length; ) {
        var n = dm(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
        if (n === null) {
            n = e.nativeEvent;
            var r = new n.constructor(n.type, n);
            (im = r), n.target.dispatchEvent(r), (im = null);
        } else return (t = co(n)), t !== null && Nh(t), (e.blockedOn = n), !1;
        t.shift();
    }
    return !0;
}
function L1(e, t, n) {
    nl(e) && n.delete(t);
}
function l5() {
    (cm = !1), mr !== null && nl(mr) && (mr = null), hr !== null && nl(hr) && (hr = null), gr !== null && nl(gr) && (gr = null), zi.forEach(L1), $i.forEach(L1);
}
function ci(e, t) {
    e.blockedOn === t && ((e.blockedOn = null), cm || ((cm = !0), Gt.unstable_scheduleCallback(Gt.unstable_NormalPriority, l5)));
}
function qi(e) {
    function t(a) {
        return ci(a, e);
    }
    if (0 < Io.length) {
        ci(Io[0], e);
        for (var n = 1; n < Io.length; n++) {
            var r = Io[n];
            r.blockedOn === e && (r.blockedOn = null);
        }
    }
    for (mr !== null && ci(mr, e), hr !== null && ci(hr, e), gr !== null && ci(gr, e), zi.forEach(t), $i.forEach(t), n = 0; n < sr.length; n++)
        (r = sr[n]), r.blockedOn === e && (r.blockedOn = null);
    for (; 0 < sr.length && ((n = sr[0]), n.blockedOn === null); ) Bk(n), n.blockedOn === null && sr.shift();
}
var Oa = Jn.ReactCurrentBatchConfig,
    kl = !0;
function s5(e, t, n, r) {
    var a = Ae,
        i = Oa.transition;
    Oa.transition = null;
    try {
        (Ae = 1), _h(e, t, n, r);
    } finally {
        (Ae = a), (Oa.transition = i);
    }
}
function u5(e, t, n, r) {
    var a = Ae,
        i = Oa.transition;
    Oa.transition = null;
    try {
        (Ae = 4), _h(e, t, n, r);
    } finally {
        (Ae = a), (Oa.transition = i);
    }
}
function _h(e, t, n, r) {
    if (kl) {
        var a = dm(e, t, n, r);
        if (a === null) Xs(e, t, r, Tl, n), O1(e, r);
        else if (o5(a, e, t, n, r)) r.stopPropagation();
        else if ((O1(e, r), t & 4 && -1 < i5.indexOf(e))) {
            for (; a !== null; ) {
                var i = co(a);
                if ((i !== null && Dk(i), (i = dm(e, t, n, r)), i === null && Xs(e, t, r, Tl, n), i === a)) break;
                a = i;
            }
            a !== null && r.stopPropagation();
        } else Xs(e, t, r, null, n);
    }
}
var Tl = null;
function dm(e, t, n, r) {
    if (((Tl = null), (e = xh(r)), (e = Gr(e)), e !== null))
        if (((t = ta(e)), t === null)) e = null;
        else if (((n = t.tag), n === 13)) {
            if (((e = xk(t)), e !== null)) return e;
            e = null;
        } else if (n === 3) {
            if (t.stateNode.current.memoizedState.isDehydrated) return t.tag === 3 ? t.stateNode.containerInfo : null;
            e = null;
        } else t !== e && (e = null);
    return (Tl = e), null;
}
function Uk(e) {
    switch (e) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
            return 1;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
            return 4;
        case "message":
            switch (X6()) {
                case Rh:
                    return 1;
                case _k:
                    return 4;
                case Sl:
                case Z6:
                    return 16;
                case Ck:
                    return 536870912;
                default:
                    return 16;
            }
        default:
            return 16;
    }
}
var cr = null,
    Ch = null,
    rl = null;
function zk() {
    if (rl) return rl;
    var e,
        t = Ch,
        n = t.length,
        r,
        a = "value" in cr ? cr.value : cr.textContent,
        i = a.length;
    for (e = 0; e < n && t[e] === a[e]; e++);
    var o = n - e;
    for (r = 1; r <= o && t[n - r] === a[i - r]; r++);
    return (rl = a.slice(e, 1 < r ? 1 - r : void 0));
}
function al(e) {
    var t = e.keyCode;
    return "charCode" in e ? ((e = e.charCode), e === 0 && t === 13 && (e = 13)) : (e = t), e === 10 && (e = 13), 32 <= e || e === 13 ? e : 0;
}
function No() {
    return !0;
}
function D1() {
    return !1;
}
function jt(e) {
    function t(n, r, a, i, o) {
        (this._reactName = n), (this._targetInst = a), (this.type = r), (this.nativeEvent = i), (this.target = o), (this.currentTarget = null);
        for (var l in e) e.hasOwnProperty(l) && ((n = e[l]), (this[l] = n ? n(i) : i[l]));
        return (
            (this.isDefaultPrevented = (i.defaultPrevented != null ? i.defaultPrevented : i.returnValue === !1) ? No : D1),
            (this.isPropagationStopped = D1),
            this
        );
    }
    return (
        $e(t.prototype, {
            preventDefault: function () {
                this.defaultPrevented = !0;
                var n = this.nativeEvent;
                n && (n.preventDefault ? n.preventDefault() : typeof n.returnValue != "unknown" && (n.returnValue = !1), (this.isDefaultPrevented = No));
            },
            stopPropagation: function () {
                var n = this.nativeEvent;
                n && (n.stopPropagation ? n.stopPropagation() : typeof n.cancelBubble != "unknown" && (n.cancelBubble = !0), (this.isPropagationStopped = No));
            },
            persist: function () {},
            isPersistent: No,
        }),
        t
    );
}
var Ya = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function (e) {
            return e.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0,
    },
    Oh = jt(Ya),
    uo = $e({}, Ya, { view: 0, detail: 0 }),
    c5 = jt(uo),
    $s,
    qs,
    di,
    Jl = $e({}, uo, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: Lh,
        button: 0,
        buttons: 0,
        relatedTarget: function (e) {
            return e.relatedTarget === void 0 ? (e.fromElement === e.srcElement ? e.toElement : e.fromElement) : e.relatedTarget;
        },
        movementX: function (e) {
            return "movementX" in e
                ? e.movementX
                : (e !== di && (di && e.type === "mousemove" ? (($s = e.screenX - di.screenX), (qs = e.screenY - di.screenY)) : (qs = $s = 0), (di = e)), $s);
        },
        movementY: function (e) {
            return "movementY" in e ? e.movementY : qs;
        },
    }),
    M1 = jt(Jl),
    d5 = $e({}, Jl, { dataTransfer: 0 }),
    p5 = jt(d5),
    f5 = $e({}, uo, { relatedTarget: 0 }),
    Gs = jt(f5),
    m5 = $e({}, Ya, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
    h5 = jt(m5),
    g5 = $e({}, Ya, {
        clipboardData: function (e) {
            return "clipboardData" in e ? e.clipboardData : window.clipboardData;
        },
    }),
    b5 = jt(g5),
    y5 = $e({}, Ya, { data: 0 }),
    F1 = jt(y5),
    v5 = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified",
    },
    E5 = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta",
    },
    S5 = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function w5(e) {
    var t = this.nativeEvent;
    return t.getModifierState ? t.getModifierState(e) : (e = S5[e]) ? !!t[e] : !1;
}
function Lh() {
    return w5;
}
var k5 = $e({}, uo, {
        key: function (e) {
            if (e.key) {
                var t = v5[e.key] || e.key;
                if (t !== "Unidentified") return t;
            }
            return e.type === "keypress"
                ? ((e = al(e)), e === 13 ? "Enter" : String.fromCharCode(e))
                : e.type === "keydown" || e.type === "keyup"
                  ? E5[e.keyCode] || "Unidentified"
                  : "";
        },
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: Lh,
        charCode: function (e) {
            return e.type === "keypress" ? al(e) : 0;
        },
        keyCode: function (e) {
            return e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0;
        },
        which: function (e) {
            return e.type === "keypress" ? al(e) : e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0;
        },
    }),
    T5 = jt(k5),
    A5 = $e({}, Jl, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }),
    P1 = jt(A5),
    x5 = $e({}, uo, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: Lh }),
    R5 = jt(x5),
    I5 = $e({}, Ya, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
    N5 = jt(I5),
    _5 = $e({}, Jl, {
        deltaX: function (e) {
            return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0;
        },
        deltaY: function (e) {
            return "deltaY" in e ? e.deltaY : "wheelDeltaY" in e ? -e.wheelDeltaY : "wheelDelta" in e ? -e.wheelDelta : 0;
        },
        deltaZ: 0,
        deltaMode: 0,
    }),
    C5 = jt(_5),
    O5 = [9, 13, 27, 32],
    Dh = Vn && "CompositionEvent" in window,
    Ri = null;
Vn && "documentMode" in document && (Ri = document.documentMode);
var L5 = Vn && "TextEvent" in window && !Ri,
    $k = Vn && (!Dh || (Ri && 8 < Ri && 11 >= Ri)),
    B1 = String.fromCharCode(32),
    U1 = !1;
function qk(e, t) {
    switch (e) {
        case "keyup":
            return O5.indexOf(t.keyCode) !== -1;
        case "keydown":
            return t.keyCode !== 229;
        case "keypress":
        case "mousedown":
        case "focusout":
            return !0;
        default:
            return !1;
    }
}
function Gk(e) {
    return (e = e.detail), typeof e == "object" && "data" in e ? e.data : null;
}
var ya = !1;
function D5(e, t) {
    switch (e) {
        case "compositionend":
            return Gk(t);
        case "keypress":
            return t.which !== 32 ? null : ((U1 = !0), B1);
        case "textInput":
            return (e = t.data), e === B1 && U1 ? null : e;
        default:
            return null;
    }
}
function M5(e, t) {
    if (ya) return e === "compositionend" || (!Dh && qk(e, t)) ? ((e = zk()), (rl = Ch = cr = null), (ya = !1), e) : null;
    switch (e) {
        case "paste":
            return null;
        case "keypress":
            if (!(t.ctrlKey || t.altKey || t.metaKey) || (t.ctrlKey && t.altKey)) {
                if (t.char && 1 < t.char.length) return t.char;
                if (t.which) return String.fromCharCode(t.which);
            }
            return null;
        case "compositionend":
            return $k && t.locale !== "ko" ? null : t.data;
        default:
            return null;
    }
}
var F5 = {
    color: !0,
    date: !0,
    datetime: !0,
    "datetime-local": !0,
    email: !0,
    month: !0,
    number: !0,
    password: !0,
    range: !0,
    search: !0,
    tel: !0,
    text: !0,
    time: !0,
    url: !0,
    week: !0,
};
function z1(e) {
    var t = e && e.nodeName && e.nodeName.toLowerCase();
    return t === "input" ? !!F5[e.type] : t === "textarea";
}
function Hk(e, t, n, r) {
    Sk(r), (t = Al(t, "onChange")), 0 < t.length && ((n = new Oh("onChange", "change", null, n, r)), e.push({ event: n, listeners: t }));
}
var Ii = null,
    Gi = null;
function P5(e) {
    t3(e, 0);
}
function es(e) {
    var t = Sa(e);
    if (mk(t)) return e;
}
function B5(e, t) {
    if (e === "change") return t;
}
var jk = !1;
if (Vn) {
    var Hs;
    if (Vn) {
        var js = "oninput" in document;
        if (!js) {
            var $1 = document.createElement("div");
            $1.setAttribute("oninput", "return;"), (js = typeof $1.oninput == "function");
        }
        Hs = js;
    } else Hs = !1;
    jk = Hs && (!document.documentMode || 9 < document.documentMode);
}
function q1() {
    Ii && (Ii.detachEvent("onpropertychange", Vk), (Gi = Ii = null));
}
function Vk(e) {
    if (e.propertyName === "value" && es(Gi)) {
        var t = [];
        Hk(t, Gi, e, xh(e)), Ak(P5, t);
    }
}
function U5(e, t, n) {
    e === "focusin" ? (q1(), (Ii = t), (Gi = n), Ii.attachEvent("onpropertychange", Vk)) : e === "focusout" && q1();
}
function z5(e) {
    if (e === "selectionchange" || e === "keyup" || e === "keydown") return es(Gi);
}
function $5(e, t) {
    if (e === "click") return es(t);
}
function q5(e, t) {
    if (e === "input" || e === "change") return es(t);
}
function G5(e, t) {
    return (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t);
}
var yn = typeof Object.is == "function" ? Object.is : G5;
function Hi(e, t) {
    if (yn(e, t)) return !0;
    if (typeof e != "object" || e === null || typeof t != "object" || t === null) return !1;
    var n = Object.keys(e),
        r = Object.keys(t);
    if (n.length !== r.length) return !1;
    for (r = 0; r < n.length; r++) {
        var a = n[r];
        if (!Wf.call(t, a) || !yn(e[a], t[a])) return !1;
    }
    return !0;
}
function G1(e) {
    for (; e && e.firstChild; ) e = e.firstChild;
    return e;
}
function H1(e, t) {
    var n = G1(e);
    e = 0;
    for (var r; n; ) {
        if (n.nodeType === 3) {
            if (((r = e + n.textContent.length), e <= t && r >= t)) return { node: n, offset: t - e };
            e = r;
        }
        e: {
            for (; n; ) {
                if (n.nextSibling) {
                    n = n.nextSibling;
                    break e;
                }
                n = n.parentNode;
            }
            n = void 0;
        }
        n = G1(n);
    }
}
function Wk(e, t) {
    return e && t
        ? e === t
            ? !0
            : e && e.nodeType === 3
              ? !1
              : t && t.nodeType === 3
                ? Wk(e, t.parentNode)
                : "contains" in e
                  ? e.contains(t)
                  : e.compareDocumentPosition
                    ? !!(e.compareDocumentPosition(t) & 16)
                    : !1
        : !1;
}
function Yk() {
    for (var e = window, t = yl(); t instanceof e.HTMLIFrameElement; ) {
        try {
            var n = typeof t.contentWindow.location.href == "string";
        } catch {
            n = !1;
        }
        if (n) e = t.contentWindow;
        else break;
        t = yl(e.document);
    }
    return t;
}
function Mh(e) {
    var t = e && e.nodeName && e.nodeName.toLowerCase();
    return (
        t &&
        ((t === "input" && (e.type === "text" || e.type === "search" || e.type === "tel" || e.type === "url" || e.type === "password")) ||
            t === "textarea" ||
            e.contentEditable === "true")
    );
}
function H5(e) {
    var t = Yk(),
        n = e.focusedElem,
        r = e.selectionRange;
    if (t !== n && n && n.ownerDocument && Wk(n.ownerDocument.documentElement, n)) {
        if (r !== null && Mh(n)) {
            if (((t = r.start), (e = r.end), e === void 0 && (e = t), "selectionStart" in n))
                (n.selectionStart = t), (n.selectionEnd = Math.min(e, n.value.length));
            else if (((e = ((t = n.ownerDocument || document) && t.defaultView) || window), e.getSelection)) {
                e = e.getSelection();
                var a = n.textContent.length,
                    i = Math.min(r.start, a);
                (r = r.end === void 0 ? i : Math.min(r.end, a)), !e.extend && i > r && ((a = r), (r = i), (i = a)), (a = H1(n, i));
                var o = H1(n, r);
                a &&
                    o &&
                    (e.rangeCount !== 1 || e.anchorNode !== a.node || e.anchorOffset !== a.offset || e.focusNode !== o.node || e.focusOffset !== o.offset) &&
                    ((t = t.createRange()),
                    t.setStart(a.node, a.offset),
                    e.removeAllRanges(),
                    i > r ? (e.addRange(t), e.extend(o.node, o.offset)) : (t.setEnd(o.node, o.offset), e.addRange(t)));
            }
        }
        for (t = [], e = n; (e = e.parentNode); ) e.nodeType === 1 && t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
        for (typeof n.focus == "function" && n.focus(), n = 0; n < t.length; n++) (e = t[n]), (e.element.scrollLeft = e.left), (e.element.scrollTop = e.top);
    }
}
var j5 = Vn && "documentMode" in document && 11 >= document.documentMode,
    va = null,
    pm = null,
    Ni = null,
    fm = !1;
function j1(e, t, n) {
    var r = n.window === n ? n.document : n.nodeType === 9 ? n : n.ownerDocument;
    fm ||
        va == null ||
        va !== yl(r) ||
        ((r = va),
        "selectionStart" in r && Mh(r)
            ? (r = { start: r.selectionStart, end: r.selectionEnd })
            : ((r = ((r.ownerDocument && r.ownerDocument.defaultView) || window).getSelection()),
              (r = { anchorNode: r.anchorNode, anchorOffset: r.anchorOffset, focusNode: r.focusNode, focusOffset: r.focusOffset })),
        (Ni && Hi(Ni, r)) ||
            ((Ni = r),
            (r = Al(pm, "onSelect")),
            0 < r.length && ((t = new Oh("onSelect", "select", null, t, n)), e.push({ event: t, listeners: r }), (t.target = va))));
}
function _o(e, t) {
    var n = {};
    return (n[e.toLowerCase()] = t.toLowerCase()), (n["Webkit" + e] = "webkit" + t), (n["Moz" + e] = "moz" + t), n;
}
var Ea = {
        animationend: _o("Animation", "AnimationEnd"),
        animationiteration: _o("Animation", "AnimationIteration"),
        animationstart: _o("Animation", "AnimationStart"),
        transitionend: _o("Transition", "TransitionEnd"),
    },
    Vs = {},
    Kk = {};
Vn &&
    ((Kk = document.createElement("div").style),
    "AnimationEvent" in window || (delete Ea.animationend.animation, delete Ea.animationiteration.animation, delete Ea.animationstart.animation),
    "TransitionEvent" in window || delete Ea.transitionend.transition);
function ts(e) {
    if (Vs[e]) return Vs[e];
    if (!Ea[e]) return e;
    var t = Ea[e],
        n;
    for (n in t) if (t.hasOwnProperty(n) && n in Kk) return (Vs[e] = t[n]);
    return e;
}
var Xk = ts("animationend"),
    Zk = ts("animationiteration"),
    Qk = ts("animationstart"),
    Jk = ts("transitionend"),
    e3 = new Map(),
    V1 =
        "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
            " ",
        );
function Rr(e, t) {
    e3.set(e, t), ea(t, [e]);
}
for (var Ws = 0; Ws < V1.length; Ws++) {
    var Ys = V1[Ws],
        V5 = Ys.toLowerCase(),
        W5 = Ys[0].toUpperCase() + Ys.slice(1);
    Rr(V5, "on" + W5);
}
Rr(Xk, "onAnimationEnd");
Rr(Zk, "onAnimationIteration");
Rr(Qk, "onAnimationStart");
Rr("dblclick", "onDoubleClick");
Rr("focusin", "onFocus");
Rr("focusout", "onBlur");
Rr(Jk, "onTransitionEnd");
Ba("onMouseEnter", ["mouseout", "mouseover"]);
Ba("onMouseLeave", ["mouseout", "mouseover"]);
Ba("onPointerEnter", ["pointerout", "pointerover"]);
Ba("onPointerLeave", ["pointerout", "pointerover"]);
ea("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
ea("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
ea("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
ea("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
ea("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
ea("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var Si =
        "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
            " ",
        ),
    Y5 = new Set("cancel close invalid load scroll toggle".split(" ").concat(Si));
function W1(e, t, n) {
    var r = e.type || "unknown-event";
    (e.currentTarget = n), V6(r, t, void 0, e), (e.currentTarget = null);
}
function t3(e, t) {
    t = (t & 4) !== 0;
    for (var n = 0; n < e.length; n++) {
        var r = e[n],
            a = r.event;
        r = r.listeners;
        e: {
            var i = void 0;
            if (t)
                for (var o = r.length - 1; 0 <= o; o--) {
                    var l = r[o],
                        s = l.instance,
                        u = l.currentTarget;
                    if (((l = l.listener), s !== i && a.isPropagationStopped())) break e;
                    W1(a, l, u), (i = s);
                }
            else
                for (o = 0; o < r.length; o++) {
                    if (((l = r[o]), (s = l.instance), (u = l.currentTarget), (l = l.listener), s !== i && a.isPropagationStopped())) break e;
                    W1(a, l, u), (i = s);
                }
        }
    }
    if (El) throw ((e = sm), (El = !1), (sm = null), e);
}
function Le(e, t) {
    var n = t[ym];
    n === void 0 && (n = t[ym] = new Set());
    var r = e + "__bubble";
    n.has(r) || (n3(t, e, 2, !1), n.add(r));
}
function Ks(e, t, n) {
    var r = 0;
    t && (r |= 4), n3(n, e, r, t);
}
var Co = "_reactListening" + Math.random().toString(36).slice(2);
function ji(e) {
    if (!e[Co]) {
        (e[Co] = !0),
            uk.forEach(function (n) {
                n !== "selectionchange" && (Y5.has(n) || Ks(n, !1, e), Ks(n, !0, e));
            });
        var t = e.nodeType === 9 ? e : e.ownerDocument;
        t === null || t[Co] || ((t[Co] = !0), Ks("selectionchange", !1, t));
    }
}
function n3(e, t, n, r) {
    switch (Uk(t)) {
        case 1:
            var a = s5;
            break;
        case 4:
            a = u5;
            break;
        default:
            a = _h;
    }
    (n = a.bind(null, t, n, e)),
        (a = void 0),
        !lm || (t !== "touchstart" && t !== "touchmove" && t !== "wheel") || (a = !0),
        r
            ? a !== void 0
                ? e.addEventListener(t, n, { capture: !0, passive: a })
                : e.addEventListener(t, n, !0)
            : a !== void 0
              ? e.addEventListener(t, n, { passive: a })
              : e.addEventListener(t, n, !1);
}
function Xs(e, t, n, r, a) {
    var i = r;
    if (!(t & 1) && !(t & 2) && r !== null)
        e: for (;;) {
            if (r === null) return;
            var o = r.tag;
            if (o === 3 || o === 4) {
                var l = r.stateNode.containerInfo;
                if (l === a || (l.nodeType === 8 && l.parentNode === a)) break;
                if (o === 4)
                    for (o = r.return; o !== null; ) {
                        var s = o.tag;
                        if ((s === 3 || s === 4) && ((s = o.stateNode.containerInfo), s === a || (s.nodeType === 8 && s.parentNode === a))) return;
                        o = o.return;
                    }
                for (; l !== null; ) {
                    if (((o = Gr(l)), o === null)) return;
                    if (((s = o.tag), s === 5 || s === 6)) {
                        r = i = o;
                        continue e;
                    }
                    l = l.parentNode;
                }
            }
            r = r.return;
        }
    Ak(function () {
        var u = i,
            c = xh(n),
            d = [];
        e: {
            var m = e3.get(e);
            if (m !== void 0) {
                var f = Oh,
                    b = e;
                switch (e) {
                    case "keypress":
                        if (al(n) === 0) break e;
                    case "keydown":
                    case "keyup":
                        f = T5;
                        break;
                    case "focusin":
                        (b = "focus"), (f = Gs);
                        break;
                    case "focusout":
                        (b = "blur"), (f = Gs);
                        break;
                    case "beforeblur":
                    case "afterblur":
                        f = Gs;
                        break;
                    case "click":
                        if (n.button === 2) break e;
                    case "auxclick":
                    case "dblclick":
                    case "mousedown":
                    case "mousemove":
                    case "mouseup":
                    case "mouseout":
                    case "mouseover":
                    case "contextmenu":
                        f = M1;
                        break;
                    case "drag":
                    case "dragend":
                    case "dragenter":
                    case "dragexit":
                    case "dragleave":
                    case "dragover":
                    case "dragstart":
                    case "drop":
                        f = p5;
                        break;
                    case "touchcancel":
                    case "touchend":
                    case "touchmove":
                    case "touchstart":
                        f = R5;
                        break;
                    case Xk:
                    case Zk:
                    case Qk:
                        f = h5;
                        break;
                    case Jk:
                        f = N5;
                        break;
                    case "scroll":
                        f = c5;
                        break;
                    case "wheel":
                        f = C5;
                        break;
                    case "copy":
                    case "cut":
                    case "paste":
                        f = b5;
                        break;
                    case "gotpointercapture":
                    case "lostpointercapture":
                    case "pointercancel":
                    case "pointerdown":
                    case "pointermove":
                    case "pointerout":
                    case "pointerover":
                    case "pointerup":
                        f = P1;
                }
                var E = (t & 4) !== 0,
                    I = !E && e === "scroll",
                    y = E ? (m !== null ? m + "Capture" : null) : m;
                E = [];
                for (var g = u, v; g !== null; ) {
                    v = g;
                    var T = v.stateNode;
                    if ((v.tag === 5 && T !== null && ((v = T), y !== null && ((T = Ui(g, y)), T != null && E.push(Vi(g, T, v)))), I)) break;
                    g = g.return;
                }
                0 < E.length && ((m = new f(m, b, null, n, c)), d.push({ event: m, listeners: E }));
            }
        }
        if (!(t & 7)) {
            e: {
                if (
                    ((m = e === "mouseover" || e === "pointerover"),
                    (f = e === "mouseout" || e === "pointerout"),
                    m && n !== im && (b = n.relatedTarget || n.fromElement) && (Gr(b) || b[Wn]))
                )
                    break e;
                if (
                    (f || m) &&
                    ((m = c.window === c ? c : (m = c.ownerDocument) ? m.defaultView || m.parentWindow : window),
                    f
                        ? ((b = n.relatedTarget || n.toElement),
                          (f = u),
                          (b = b ? Gr(b) : null),
                          b !== null && ((I = ta(b)), b !== I || (b.tag !== 5 && b.tag !== 6)) && (b = null))
                        : ((f = null), (b = u)),
                    f !== b)
                ) {
                    if (
                        ((E = M1),
                        (T = "onMouseLeave"),
                        (y = "onMouseEnter"),
                        (g = "mouse"),
                        (e === "pointerout" || e === "pointerover") && ((E = P1), (T = "onPointerLeave"), (y = "onPointerEnter"), (g = "pointer")),
                        (I = f == null ? m : Sa(f)),
                        (v = b == null ? m : Sa(b)),
                        (m = new E(T, g + "leave", f, n, c)),
                        (m.target = I),
                        (m.relatedTarget = v),
                        (T = null),
                        Gr(c) === u && ((E = new E(y, g + "enter", b, n, c)), (E.target = v), (E.relatedTarget = I), (T = E)),
                        (I = T),
                        f && b)
                    )
                        t: {
                            for (E = f, y = b, g = 0, v = E; v; v = ca(v)) g++;
                            for (v = 0, T = y; T; T = ca(T)) v++;
                            for (; 0 < g - v; ) (E = ca(E)), g--;
                            for (; 0 < v - g; ) (y = ca(y)), v--;
                            for (; g--; ) {
                                if (E === y || (y !== null && E === y.alternate)) break t;
                                (E = ca(E)), (y = ca(y));
                            }
                            E = null;
                        }
                    else E = null;
                    f !== null && Y1(d, m, f, E, !1), b !== null && I !== null && Y1(d, I, b, E, !0);
                }
            }
            e: {
                if (((m = u ? Sa(u) : window), (f = m.nodeName && m.nodeName.toLowerCase()), f === "select" || (f === "input" && m.type === "file")))
                    var R = B5;
                else if (z1(m))
                    if (jk) R = q5;
                    else {
                        R = z5;
                        var k = U5;
                    }
                else (f = m.nodeName) && f.toLowerCase() === "input" && (m.type === "checkbox" || m.type === "radio") && (R = $5);
                if (R && (R = R(e, u))) {
                    Hk(d, R, n, c);
                    break e;
                }
                k && k(e, m, u), e === "focusout" && (k = m._wrapperState) && k.controlled && m.type === "number" && em(m, "number", m.value);
            }
            switch (((k = u ? Sa(u) : window), e)) {
                case "focusin":
                    (z1(k) || k.contentEditable === "true") && ((va = k), (pm = u), (Ni = null));
                    break;
                case "focusout":
                    Ni = pm = va = null;
                    break;
                case "mousedown":
                    fm = !0;
                    break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                    (fm = !1), j1(d, n, c);
                    break;
                case "selectionchange":
                    if (j5) break;
                case "keydown":
                case "keyup":
                    j1(d, n, c);
            }
            var L;
            if (Dh)
                e: {
                    switch (e) {
                        case "compositionstart":
                            var F = "onCompositionStart";
                            break e;
                        case "compositionend":
                            F = "onCompositionEnd";
                            break e;
                        case "compositionupdate":
                            F = "onCompositionUpdate";
                            break e;
                    }
                    F = void 0;
                }
            else ya ? qk(e, n) && (F = "onCompositionEnd") : e === "keydown" && n.keyCode === 229 && (F = "onCompositionStart");
            F &&
                ($k &&
                    n.locale !== "ko" &&
                    (ya || F !== "onCompositionStart"
                        ? F === "onCompositionEnd" && ya && (L = zk())
                        : ((cr = c), (Ch = "value" in cr ? cr.value : cr.textContent), (ya = !0))),
                (k = Al(u, F)),
                0 < k.length &&
                    ((F = new F1(F, e, null, n, c)), d.push({ event: F, listeners: k }), L ? (F.data = L) : ((L = Gk(n)), L !== null && (F.data = L)))),
                (L = L5 ? D5(e, n) : M5(e, n)) &&
                    ((u = Al(u, "onBeforeInput")),
                    0 < u.length && ((c = new F1("onBeforeInput", "beforeinput", null, n, c)), d.push({ event: c, listeners: u }), (c.data = L)));
        }
        t3(d, t);
    });
}
function Vi(e, t, n) {
    return { instance: e, listener: t, currentTarget: n };
}
function Al(e, t) {
    for (var n = t + "Capture", r = []; e !== null; ) {
        var a = e,
            i = a.stateNode;
        a.tag === 5 && i !== null && ((a = i), (i = Ui(e, n)), i != null && r.unshift(Vi(e, i, a)), (i = Ui(e, t)), i != null && r.push(Vi(e, i, a))),
            (e = e.return);
    }
    return r;
}
function ca(e) {
    if (e === null) return null;
    do e = e.return;
    while (e && e.tag !== 5);
    return e || null;
}
function Y1(e, t, n, r, a) {
    for (var i = t._reactName, o = []; n !== null && n !== r; ) {
        var l = n,
            s = l.alternate,
            u = l.stateNode;
        if (s !== null && s === r) break;
        l.tag === 5 &&
            u !== null &&
            ((l = u), a ? ((s = Ui(n, i)), s != null && o.unshift(Vi(n, s, l))) : a || ((s = Ui(n, i)), s != null && o.push(Vi(n, s, l)))),
            (n = n.return);
    }
    o.length !== 0 && e.push({ event: t, listeners: o });
}
var K5 = /\r\n?/g,
    X5 = /\u0000|\uFFFD/g;
function K1(e) {
    return (typeof e == "string" ? e : "" + e)
        .replace(
            K5,
            `
`,
        )
        .replace(X5, "");
}
function Oo(e, t, n) {
    if (((t = K1(t)), K1(e) !== t && n)) throw Error(j(425));
}
function xl() {}
var mm = null,
    hm = null;
function gm(e, t) {
    return (
        e === "textarea" ||
        e === "noscript" ||
        typeof t.children == "string" ||
        typeof t.children == "number" ||
        (typeof t.dangerouslySetInnerHTML == "object" && t.dangerouslySetInnerHTML !== null && t.dangerouslySetInnerHTML.__html != null)
    );
}
var bm = typeof setTimeout == "function" ? setTimeout : void 0,
    Z5 = typeof clearTimeout == "function" ? clearTimeout : void 0,
    X1 = typeof Promise == "function" ? Promise : void 0,
    Q5 =
        typeof queueMicrotask == "function"
            ? queueMicrotask
            : typeof X1 < "u"
              ? function (e) {
                    return X1.resolve(null).then(e).catch(J5);
                }
              : bm;
function J5(e) {
    setTimeout(function () {
        throw e;
    });
}
function Zs(e, t) {
    var n = t,
        r = 0;
    do {
        var a = n.nextSibling;
        if ((e.removeChild(n), a && a.nodeType === 8))
            if (((n = a.data), n === "/$")) {
                if (r === 0) {
                    e.removeChild(a), qi(t);
                    return;
                }
                r--;
            } else (n !== "$" && n !== "$?" && n !== "$!") || r++;
        n = a;
    } while (n);
    qi(t);
}
function br(e) {
    for (; e != null; e = e.nextSibling) {
        var t = e.nodeType;
        if (t === 1 || t === 3) break;
        if (t === 8) {
            if (((t = e.data), t === "$" || t === "$!" || t === "$?")) break;
            if (t === "/$") return null;
        }
    }
    return e;
}
function Z1(e) {
    e = e.previousSibling;
    for (var t = 0; e; ) {
        if (e.nodeType === 8) {
            var n = e.data;
            if (n === "$" || n === "$!" || n === "$?") {
                if (t === 0) return e;
                t--;
            } else n === "/$" && t++;
        }
        e = e.previousSibling;
    }
    return null;
}
var Ka = Math.random().toString(36).slice(2),
    Tn = "__reactFiber$" + Ka,
    Wi = "__reactProps$" + Ka,
    Wn = "__reactContainer$" + Ka,
    ym = "__reactEvents$" + Ka,
    e7 = "__reactListeners$" + Ka,
    t7 = "__reactHandles$" + Ka;
function Gr(e) {
    var t = e[Tn];
    if (t) return t;
    for (var n = e.parentNode; n; ) {
        if ((t = n[Wn] || n[Tn])) {
            if (((n = t.alternate), t.child !== null || (n !== null && n.child !== null)))
                for (e = Z1(e); e !== null; ) {
                    if ((n = e[Tn])) return n;
                    e = Z1(e);
                }
            return t;
        }
        (e = n), (n = e.parentNode);
    }
    return null;
}
function co(e) {
    return (e = e[Tn] || e[Wn]), !e || (e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3) ? null : e;
}
function Sa(e) {
    if (e.tag === 5 || e.tag === 6) return e.stateNode;
    throw Error(j(33));
}
function ns(e) {
    return e[Wi] || null;
}
var vm = [],
    wa = -1;
function Ir(e) {
    return { current: e };
}
function De(e) {
    0 > wa || ((e.current = vm[wa]), (vm[wa] = null), wa--);
}
function _e(e, t) {
    wa++, (vm[wa] = e.current), (e.current = t);
}
var kr = {},
    dt = Ir(kr),
    It = Ir(!1),
    Yr = kr;
function Ua(e, t) {
    var n = e.type.contextTypes;
    if (!n) return kr;
    var r = e.stateNode;
    if (r && r.__reactInternalMemoizedUnmaskedChildContext === t) return r.__reactInternalMemoizedMaskedChildContext;
    var a = {},
        i;
    for (i in n) a[i] = t[i];
    return r && ((e = e.stateNode), (e.__reactInternalMemoizedUnmaskedChildContext = t), (e.__reactInternalMemoizedMaskedChildContext = a)), a;
}
function Nt(e) {
    return (e = e.childContextTypes), e != null;
}
function Rl() {
    De(It), De(dt);
}
function Q1(e, t, n) {
    if (dt.current !== kr) throw Error(j(168));
    _e(dt, t), _e(It, n);
}
function r3(e, t, n) {
    var r = e.stateNode;
    if (((t = t.childContextTypes), typeof r.getChildContext != "function")) return n;
    r = r.getChildContext();
    for (var a in r) if (!(a in t)) throw Error(j(108, U6(e) || "Unknown", a));
    return $e({}, n, r);
}
function Il(e) {
    return (e = ((e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext) || kr), (Yr = dt.current), _e(dt, e), _e(It, It.current), !0;
}
function J1(e, t, n) {
    var r = e.stateNode;
    if (!r) throw Error(j(169));
    n ? ((e = r3(e, t, Yr)), (r.__reactInternalMemoizedMergedChildContext = e), De(It), De(dt), _e(dt, e)) : De(It), _e(It, n);
}
var Bn = null,
    rs = !1,
    Qs = !1;
function a3(e) {
    Bn === null ? (Bn = [e]) : Bn.push(e);
}
function n7(e) {
    (rs = !0), a3(e);
}
function Nr() {
    if (!Qs && Bn !== null) {
        Qs = !0;
        var e = 0,
            t = Ae;
        try {
            var n = Bn;
            for (Ae = 1; e < n.length; e++) {
                var r = n[e];
                do r = r(!0);
                while (r !== null);
            }
            (Bn = null), (rs = !1);
        } catch (a) {
            throw (Bn !== null && (Bn = Bn.slice(e + 1)), Nk(Rh, Nr), a);
        } finally {
            (Ae = t), (Qs = !1);
        }
    }
    return null;
}
var ka = [],
    Ta = 0,
    Nl = null,
    _l = 0,
    Yt = [],
    Kt = 0,
    Kr = null,
    $n = 1,
    qn = "";
function zr(e, t) {
    (ka[Ta++] = _l), (ka[Ta++] = Nl), (Nl = e), (_l = t);
}
function i3(e, t, n) {
    (Yt[Kt++] = $n), (Yt[Kt++] = qn), (Yt[Kt++] = Kr), (Kr = e);
    var r = $n;
    e = qn;
    var a = 32 - hn(r) - 1;
    (r &= ~(1 << a)), (n += 1);
    var i = 32 - hn(t) + a;
    if (30 < i) {
        var o = a - (a % 5);
        (i = (r & ((1 << o) - 1)).toString(32)), (r >>= o), (a -= o), ($n = (1 << (32 - hn(t) + a)) | (n << a) | r), (qn = i + e);
    } else ($n = (1 << i) | (n << a) | r), (qn = e);
}
function Fh(e) {
    e.return !== null && (zr(e, 1), i3(e, 1, 0));
}
function Ph(e) {
    for (; e === Nl; ) (Nl = ka[--Ta]), (ka[Ta] = null), (_l = ka[--Ta]), (ka[Ta] = null);
    for (; e === Kr; ) (Kr = Yt[--Kt]), (Yt[Kt] = null), (qn = Yt[--Kt]), (Yt[Kt] = null), ($n = Yt[--Kt]), (Yt[Kt] = null);
}
var $t = null,
    zt = null,
    Me = !1,
    mn = null;
function o3(e, t) {
    var n = Zt(5, null, null, 0);
    (n.elementType = "DELETED"), (n.stateNode = t), (n.return = e), (t = e.deletions), t === null ? ((e.deletions = [n]), (e.flags |= 16)) : t.push(n);
}
function eb(e, t) {
    switch (e.tag) {
        case 5:
            var n = e.type;
            return (
                (t = t.nodeType !== 1 || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t),
                t !== null ? ((e.stateNode = t), ($t = e), (zt = br(t.firstChild)), !0) : !1
            );
        case 6:
            return (t = e.pendingProps === "" || t.nodeType !== 3 ? null : t), t !== null ? ((e.stateNode = t), ($t = e), (zt = null), !0) : !1;
        case 13:
            return (
                (t = t.nodeType !== 8 ? null : t),
                t !== null
                    ? ((n = Kr !== null ? { id: $n, overflow: qn } : null),
                      (e.memoizedState = { dehydrated: t, treeContext: n, retryLane: 1073741824 }),
                      (n = Zt(18, null, null, 0)),
                      (n.stateNode = t),
                      (n.return = e),
                      (e.child = n),
                      ($t = e),
                      (zt = null),
                      !0)
                    : !1
            );
        default:
            return !1;
    }
}
function Em(e) {
    return (e.mode & 1) !== 0 && (e.flags & 128) === 0;
}
function Sm(e) {
    if (Me) {
        var t = zt;
        if (t) {
            var n = t;
            if (!eb(e, t)) {
                if (Em(e)) throw Error(j(418));
                t = br(n.nextSibling);
                var r = $t;
                t && eb(e, t) ? o3(r, n) : ((e.flags = (e.flags & -4097) | 2), (Me = !1), ($t = e));
            }
        } else {
            if (Em(e)) throw Error(j(418));
            (e.flags = (e.flags & -4097) | 2), (Me = !1), ($t = e);
        }
    }
}
function tb(e) {
    for (e = e.return; e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13; ) e = e.return;
    $t = e;
}
function Lo(e) {
    if (e !== $t) return !1;
    if (!Me) return tb(e), (Me = !0), !1;
    var t;
    if (((t = e.tag !== 3) && !(t = e.tag !== 5) && ((t = e.type), (t = t !== "head" && t !== "body" && !gm(e.type, e.memoizedProps))), t && (t = zt))) {
        if (Em(e)) throw (l3(), Error(j(418)));
        for (; t; ) o3(e, t), (t = br(t.nextSibling));
    }
    if ((tb(e), e.tag === 13)) {
        if (((e = e.memoizedState), (e = e !== null ? e.dehydrated : null), !e)) throw Error(j(317));
        e: {
            for (e = e.nextSibling, t = 0; e; ) {
                if (e.nodeType === 8) {
                    var n = e.data;
                    if (n === "/$") {
                        if (t === 0) {
                            zt = br(e.nextSibling);
                            break e;
                        }
                        t--;
                    } else (n !== "$" && n !== "$!" && n !== "$?") || t++;
                }
                e = e.nextSibling;
            }
            zt = null;
        }
    } else zt = $t ? br(e.stateNode.nextSibling) : null;
    return !0;
}
function l3() {
    for (var e = zt; e; ) e = br(e.nextSibling);
}
function za() {
    (zt = $t = null), (Me = !1);
}
function Bh(e) {
    mn === null ? (mn = [e]) : mn.push(e);
}
var r7 = Jn.ReactCurrentBatchConfig;
function pi(e, t, n) {
    if (((e = n.ref), e !== null && typeof e != "function" && typeof e != "object")) {
        if (n._owner) {
            if (((n = n._owner), n)) {
                if (n.tag !== 1) throw Error(j(309));
                var r = n.stateNode;
            }
            if (!r) throw Error(j(147, e));
            var a = r,
                i = "" + e;
            return t !== null && t.ref !== null && typeof t.ref == "function" && t.ref._stringRef === i
                ? t.ref
                : ((t = function (o) {
                      var l = a.refs;
                      o === null ? delete l[i] : (l[i] = o);
                  }),
                  (t._stringRef = i),
                  t);
        }
        if (typeof e != "string") throw Error(j(284));
        if (!n._owner) throw Error(j(290, e));
    }
    return e;
}
function Do(e, t) {
    throw ((e = Object.prototype.toString.call(t)), Error(j(31, e === "[object Object]" ? "object with keys {" + Object.keys(t).join(", ") + "}" : e)));
}
function nb(e) {
    var t = e._init;
    return t(e._payload);
}
function s3(e) {
    function t(y, g) {
        if (e) {
            var v = y.deletions;
            v === null ? ((y.deletions = [g]), (y.flags |= 16)) : v.push(g);
        }
    }
    function n(y, g) {
        if (!e) return null;
        for (; g !== null; ) t(y, g), (g = g.sibling);
        return null;
    }
    function r(y, g) {
        for (y = new Map(); g !== null; ) g.key !== null ? y.set(g.key, g) : y.set(g.index, g), (g = g.sibling);
        return y;
    }
    function a(y, g) {
        return (y = Sr(y, g)), (y.index = 0), (y.sibling = null), y;
    }
    function i(y, g, v) {
        return (
            (y.index = v),
            e ? ((v = y.alternate), v !== null ? ((v = v.index), v < g ? ((y.flags |= 2), g) : v) : ((y.flags |= 2), g)) : ((y.flags |= 1048576), g)
        );
    }
    function o(y) {
        return e && y.alternate === null && (y.flags |= 2), y;
    }
    function l(y, g, v, T) {
        return g === null || g.tag !== 6 ? ((g = iu(v, y.mode, T)), (g.return = y), g) : ((g = a(g, v)), (g.return = y), g);
    }
    function s(y, g, v, T) {
        var R = v.type;
        return R === ba
            ? c(y, g, v.props.children, T, v.key)
            : g !== null && (g.elementType === R || (typeof R == "object" && R !== null && R.$$typeof === or && nb(R) === g.type))
              ? ((T = a(g, v.props)), (T.ref = pi(y, g, v)), (T.return = y), T)
              : ((T = dl(v.type, v.key, v.props, null, y.mode, T)), (T.ref = pi(y, g, v)), (T.return = y), T);
    }
    function u(y, g, v, T) {
        return g === null || g.tag !== 4 || g.stateNode.containerInfo !== v.containerInfo || g.stateNode.implementation !== v.implementation
            ? ((g = ou(v, y.mode, T)), (g.return = y), g)
            : ((g = a(g, v.children || [])), (g.return = y), g);
    }
    function c(y, g, v, T, R) {
        return g === null || g.tag !== 7 ? ((g = Wr(v, y.mode, T, R)), (g.return = y), g) : ((g = a(g, v)), (g.return = y), g);
    }
    function d(y, g, v) {
        if ((typeof g == "string" && g !== "") || typeof g == "number") return (g = iu("" + g, y.mode, v)), (g.return = y), g;
        if (typeof g == "object" && g !== null) {
            switch (g.$$typeof) {
                case ko:
                    return (v = dl(g.type, g.key, g.props, null, y.mode, v)), (v.ref = pi(y, null, g)), (v.return = y), v;
                case ga:
                    return (g = ou(g, y.mode, v)), (g.return = y), g;
                case or:
                    var T = g._init;
                    return d(y, T(g._payload), v);
            }
            if (vi(g) || li(g)) return (g = Wr(g, y.mode, v, null)), (g.return = y), g;
            Do(y, g);
        }
        return null;
    }
    function m(y, g, v, T) {
        var R = g !== null ? g.key : null;
        if ((typeof v == "string" && v !== "") || typeof v == "number") return R !== null ? null : l(y, g, "" + v, T);
        if (typeof v == "object" && v !== null) {
            switch (v.$$typeof) {
                case ko:
                    return v.key === R ? s(y, g, v, T) : null;
                case ga:
                    return v.key === R ? u(y, g, v, T) : null;
                case or:
                    return (R = v._init), m(y, g, R(v._payload), T);
            }
            if (vi(v) || li(v)) return R !== null ? null : c(y, g, v, T, null);
            Do(y, v);
        }
        return null;
    }
    function f(y, g, v, T, R) {
        if ((typeof T == "string" && T !== "") || typeof T == "number") return (y = y.get(v) || null), l(g, y, "" + T, R);
        if (typeof T == "object" && T !== null) {
            switch (T.$$typeof) {
                case ko:
                    return (y = y.get(T.key === null ? v : T.key) || null), s(g, y, T, R);
                case ga:
                    return (y = y.get(T.key === null ? v : T.key) || null), u(g, y, T, R);
                case or:
                    var k = T._init;
                    return f(y, g, v, k(T._payload), R);
            }
            if (vi(T) || li(T)) return (y = y.get(v) || null), c(g, y, T, R, null);
            Do(g, T);
        }
        return null;
    }
    function b(y, g, v, T) {
        for (var R = null, k = null, L = g, F = (g = 0), M = null; L !== null && F < v.length; F++) {
            L.index > F ? ((M = L), (L = null)) : (M = L.sibling);
            var O = m(y, L, v[F], T);
            if (O === null) {
                L === null && (L = M);
                break;
            }
            e && L && O.alternate === null && t(y, L), (g = i(O, g, F)), k === null ? (R = O) : (k.sibling = O), (k = O), (L = M);
        }
        if (F === v.length) return n(y, L), Me && zr(y, F), R;
        if (L === null) {
            for (; F < v.length; F++) (L = d(y, v[F], T)), L !== null && ((g = i(L, g, F)), k === null ? (R = L) : (k.sibling = L), (k = L));
            return Me && zr(y, F), R;
        }
        for (L = r(y, L); F < v.length; F++)
            (M = f(L, y, F, v[F], T)),
                M !== null &&
                    (e && M.alternate !== null && L.delete(M.key === null ? F : M.key), (g = i(M, g, F)), k === null ? (R = M) : (k.sibling = M), (k = M));
        return (
            e &&
                L.forEach(function (B) {
                    return t(y, B);
                }),
            Me && zr(y, F),
            R
        );
    }
    function E(y, g, v, T) {
        var R = li(v);
        if (typeof R != "function") throw Error(j(150));
        if (((v = R.call(v)), v == null)) throw Error(j(151));
        for (var k = (R = null), L = g, F = (g = 0), M = null, O = v.next(); L !== null && !O.done; F++, O = v.next()) {
            L.index > F ? ((M = L), (L = null)) : (M = L.sibling);
            var B = m(y, L, O.value, T);
            if (B === null) {
                L === null && (L = M);
                break;
            }
            e && L && B.alternate === null && t(y, L), (g = i(B, g, F)), k === null ? (R = B) : (k.sibling = B), (k = B), (L = M);
        }
        if (O.done) return n(y, L), Me && zr(y, F), R;
        if (L === null) {
            for (; !O.done; F++, O = v.next()) (O = d(y, O.value, T)), O !== null && ((g = i(O, g, F)), k === null ? (R = O) : (k.sibling = O), (k = O));
            return Me && zr(y, F), R;
        }
        for (L = r(y, L); !O.done; F++, O = v.next())
            (O = f(L, y, F, O.value, T)),
                O !== null &&
                    (e && O.alternate !== null && L.delete(O.key === null ? F : O.key), (g = i(O, g, F)), k === null ? (R = O) : (k.sibling = O), (k = O));
        return (
            e &&
                L.forEach(function ($) {
                    return t(y, $);
                }),
            Me && zr(y, F),
            R
        );
    }
    function I(y, g, v, T) {
        if ((typeof v == "object" && v !== null && v.type === ba && v.key === null && (v = v.props.children), typeof v == "object" && v !== null)) {
            switch (v.$$typeof) {
                case ko:
                    e: {
                        for (var R = v.key, k = g; k !== null; ) {
                            if (k.key === R) {
                                if (((R = v.type), R === ba)) {
                                    if (k.tag === 7) {
                                        n(y, k.sibling), (g = a(k, v.props.children)), (g.return = y), (y = g);
                                        break e;
                                    }
                                } else if (k.elementType === R || (typeof R == "object" && R !== null && R.$$typeof === or && nb(R) === k.type)) {
                                    n(y, k.sibling), (g = a(k, v.props)), (g.ref = pi(y, k, v)), (g.return = y), (y = g);
                                    break e;
                                }
                                n(y, k);
                                break;
                            } else t(y, k);
                            k = k.sibling;
                        }
                        v.type === ba
                            ? ((g = Wr(v.props.children, y.mode, T, v.key)), (g.return = y), (y = g))
                            : ((T = dl(v.type, v.key, v.props, null, y.mode, T)), (T.ref = pi(y, g, v)), (T.return = y), (y = T));
                    }
                    return o(y);
                case ga:
                    e: {
                        for (k = v.key; g !== null; ) {
                            if (g.key === k)
                                if (g.tag === 4 && g.stateNode.containerInfo === v.containerInfo && g.stateNode.implementation === v.implementation) {
                                    n(y, g.sibling), (g = a(g, v.children || [])), (g.return = y), (y = g);
                                    break e;
                                } else {
                                    n(y, g);
                                    break;
                                }
                            else t(y, g);
                            g = g.sibling;
                        }
                        (g = ou(v, y.mode, T)), (g.return = y), (y = g);
                    }
                    return o(y);
                case or:
                    return (k = v._init), I(y, g, k(v._payload), T);
            }
            if (vi(v)) return b(y, g, v, T);
            if (li(v)) return E(y, g, v, T);
            Do(y, v);
        }
        return (typeof v == "string" && v !== "") || typeof v == "number"
            ? ((v = "" + v),
              g !== null && g.tag === 6
                  ? (n(y, g.sibling), (g = a(g, v)), (g.return = y), (y = g))
                  : (n(y, g), (g = iu(v, y.mode, T)), (g.return = y), (y = g)),
              o(y))
            : n(y, g);
    }
    return I;
}
var $a = s3(!0),
    u3 = s3(!1),
    Cl = Ir(null),
    Ol = null,
    Aa = null,
    Uh = null;
function zh() {
    Uh = Aa = Ol = null;
}
function $h(e) {
    var t = Cl.current;
    De(Cl), (e._currentValue = t);
}
function wm(e, t, n) {
    for (; e !== null; ) {
        var r = e.alternate;
        if (
            ((e.childLanes & t) !== t
                ? ((e.childLanes |= t), r !== null && (r.childLanes |= t))
                : r !== null && (r.childLanes & t) !== t && (r.childLanes |= t),
            e === n)
        )
            break;
        e = e.return;
    }
}
function La(e, t) {
    (Ol = e), (Uh = Aa = null), (e = e.dependencies), e !== null && e.firstContext !== null && (e.lanes & t && (Rt = !0), (e.firstContext = null));
}
function tn(e) {
    var t = e._currentValue;
    if (Uh !== e)
        if (((e = { context: e, memoizedValue: t, next: null }), Aa === null)) {
            if (Ol === null) throw Error(j(308));
            (Aa = e), (Ol.dependencies = { lanes: 0, firstContext: e });
        } else Aa = Aa.next = e;
    return t;
}
var Hr = null;
function qh(e) {
    Hr === null ? (Hr = [e]) : Hr.push(e);
}
function c3(e, t, n, r) {
    var a = t.interleaved;
    return a === null ? ((n.next = n), qh(t)) : ((n.next = a.next), (a.next = n)), (t.interleaved = n), Yn(e, r);
}
function Yn(e, t) {
    e.lanes |= t;
    var n = e.alternate;
    for (n !== null && (n.lanes |= t), n = e, e = e.return; e !== null; )
        (e.childLanes |= t), (n = e.alternate), n !== null && (n.childLanes |= t), (n = e), (e = e.return);
    return n.tag === 3 ? n.stateNode : null;
}
var lr = !1;
function Gh(e) {
    e.updateQueue = {
        baseState: e.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: { pending: null, interleaved: null, lanes: 0 },
        effects: null,
    };
}
function d3(e, t) {
    (e = e.updateQueue),
        t.updateQueue === e &&
            (t.updateQueue = {
                baseState: e.baseState,
                firstBaseUpdate: e.firstBaseUpdate,
                lastBaseUpdate: e.lastBaseUpdate,
                shared: e.shared,
                effects: e.effects,
            });
}
function Gn(e, t) {
    return { eventTime: e, lane: t, tag: 0, payload: null, callback: null, next: null };
}
function yr(e, t, n) {
    var r = e.updateQueue;
    if (r === null) return null;
    if (((r = r.shared), Se & 2)) {
        var a = r.pending;
        return a === null ? (t.next = t) : ((t.next = a.next), (a.next = t)), (r.pending = t), Yn(e, n);
    }
    return (a = r.interleaved), a === null ? ((t.next = t), qh(r)) : ((t.next = a.next), (a.next = t)), (r.interleaved = t), Yn(e, n);
}
function il(e, t, n) {
    if (((t = t.updateQueue), t !== null && ((t = t.shared), (n & 4194240) !== 0))) {
        var r = t.lanes;
        (r &= e.pendingLanes), (n |= r), (t.lanes = n), Ih(e, n);
    }
}
function rb(e, t) {
    var n = e.updateQueue,
        r = e.alternate;
    if (r !== null && ((r = r.updateQueue), n === r)) {
        var a = null,
            i = null;
        if (((n = n.firstBaseUpdate), n !== null)) {
            do {
                var o = { eventTime: n.eventTime, lane: n.lane, tag: n.tag, payload: n.payload, callback: n.callback, next: null };
                i === null ? (a = i = o) : (i = i.next = o), (n = n.next);
            } while (n !== null);
            i === null ? (a = i = t) : (i = i.next = t);
        } else a = i = t;
        (n = { baseState: r.baseState, firstBaseUpdate: a, lastBaseUpdate: i, shared: r.shared, effects: r.effects }), (e.updateQueue = n);
        return;
    }
    (e = n.lastBaseUpdate), e === null ? (n.firstBaseUpdate = t) : (e.next = t), (n.lastBaseUpdate = t);
}
function Ll(e, t, n, r) {
    var a = e.updateQueue;
    lr = !1;
    var i = a.firstBaseUpdate,
        o = a.lastBaseUpdate,
        l = a.shared.pending;
    if (l !== null) {
        a.shared.pending = null;
        var s = l,
            u = s.next;
        (s.next = null), o === null ? (i = u) : (o.next = u), (o = s);
        var c = e.alternate;
        c !== null && ((c = c.updateQueue), (l = c.lastBaseUpdate), l !== o && (l === null ? (c.firstBaseUpdate = u) : (l.next = u), (c.lastBaseUpdate = s)));
    }
    if (i !== null) {
        var d = a.baseState;
        (o = 0), (c = u = s = null), (l = i);
        do {
            var m = l.lane,
                f = l.eventTime;
            if ((r & m) === m) {
                c !== null && (c = c.next = { eventTime: f, lane: 0, tag: l.tag, payload: l.payload, callback: l.callback, next: null });
                e: {
                    var b = e,
                        E = l;
                    switch (((m = t), (f = n), E.tag)) {
                        case 1:
                            if (((b = E.payload), typeof b == "function")) {
                                d = b.call(f, d, m);
                                break e;
                            }
                            d = b;
                            break e;
                        case 3:
                            b.flags = (b.flags & -65537) | 128;
                        case 0:
                            if (((b = E.payload), (m = typeof b == "function" ? b.call(f, d, m) : b), m == null)) break e;
                            d = $e({}, d, m);
                            break e;
                        case 2:
                            lr = !0;
                    }
                }
                l.callback !== null && l.lane !== 0 && ((e.flags |= 64), (m = a.effects), m === null ? (a.effects = [l]) : m.push(l));
            } else
                (f = { eventTime: f, lane: m, tag: l.tag, payload: l.payload, callback: l.callback, next: null }),
                    c === null ? ((u = c = f), (s = d)) : (c = c.next = f),
                    (o |= m);
            if (((l = l.next), l === null)) {
                if (((l = a.shared.pending), l === null)) break;
                (m = l), (l = m.next), (m.next = null), (a.lastBaseUpdate = m), (a.shared.pending = null);
            }
        } while (1);
        if ((c === null && (s = d), (a.baseState = s), (a.firstBaseUpdate = u), (a.lastBaseUpdate = c), (t = a.shared.interleaved), t !== null)) {
            a = t;
            do (o |= a.lane), (a = a.next);
            while (a !== t);
        } else i === null && (a.shared.lanes = 0);
        (Zr |= o), (e.lanes = o), (e.memoizedState = d);
    }
}
function ab(e, t, n) {
    if (((e = t.effects), (t.effects = null), e !== null))
        for (t = 0; t < e.length; t++) {
            var r = e[t],
                a = r.callback;
            if (a !== null) {
                if (((r.callback = null), (r = n), typeof a != "function")) throw Error(j(191, a));
                a.call(r);
            }
        }
}
var po = {},
    In = Ir(po),
    Yi = Ir(po),
    Ki = Ir(po);
function jr(e) {
    if (e === po) throw Error(j(174));
    return e;
}
function Hh(e, t) {
    switch ((_e(Ki, t), _e(Yi, e), _e(In, po), (e = t.nodeType), e)) {
        case 9:
        case 11:
            t = (t = t.documentElement) ? t.namespaceURI : nm(null, "");
            break;
        default:
            (e = e === 8 ? t.parentNode : t), (t = e.namespaceURI || null), (e = e.tagName), (t = nm(t, e));
    }
    De(In), _e(In, t);
}
function qa() {
    De(In), De(Yi), De(Ki);
}
function p3(e) {
    jr(Ki.current);
    var t = jr(In.current),
        n = nm(t, e.type);
    t !== n && (_e(Yi, e), _e(In, n));
}
function jh(e) {
    Yi.current === e && (De(In), De(Yi));
}
var Be = Ir(0);
function Dl(e) {
    for (var t = e; t !== null; ) {
        if (t.tag === 13) {
            var n = t.memoizedState;
            if (n !== null && ((n = n.dehydrated), n === null || n.data === "$?" || n.data === "$!")) return t;
        } else if (t.tag === 19 && t.memoizedProps.revealOrder !== void 0) {
            if (t.flags & 128) return t;
        } else if (t.child !== null) {
            (t.child.return = t), (t = t.child);
            continue;
        }
        if (t === e) break;
        for (; t.sibling === null; ) {
            if (t.return === null || t.return === e) return null;
            t = t.return;
        }
        (t.sibling.return = t.return), (t = t.sibling);
    }
    return null;
}
var Js = [];
function Vh() {
    for (var e = 0; e < Js.length; e++) Js[e]._workInProgressVersionPrimary = null;
    Js.length = 0;
}
var ol = Jn.ReactCurrentDispatcher,
    eu = Jn.ReactCurrentBatchConfig,
    Xr = 0,
    ze = null,
    Ze = null,
    et = null,
    Ml = !1,
    _i = !1,
    Xi = 0,
    a7 = 0;
function ot() {
    throw Error(j(321));
}
function Wh(e, t) {
    if (t === null) return !1;
    for (var n = 0; n < t.length && n < e.length; n++) if (!yn(e[n], t[n])) return !1;
    return !0;
}
function Yh(e, t, n, r, a, i) {
    if (
        ((Xr = i),
        (ze = t),
        (t.memoizedState = null),
        (t.updateQueue = null),
        (t.lanes = 0),
        (ol.current = e === null || e.memoizedState === null ? s7 : u7),
        (e = n(r, a)),
        _i)
    ) {
        i = 0;
        do {
            if (((_i = !1), (Xi = 0), 25 <= i)) throw Error(j(301));
            (i += 1), (et = Ze = null), (t.updateQueue = null), (ol.current = c7), (e = n(r, a));
        } while (_i);
    }
    if (((ol.current = Fl), (t = Ze !== null && Ze.next !== null), (Xr = 0), (et = Ze = ze = null), (Ml = !1), t)) throw Error(j(300));
    return e;
}
function Kh() {
    var e = Xi !== 0;
    return (Xi = 0), e;
}
function En() {
    var e = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return et === null ? (ze.memoizedState = et = e) : (et = et.next = e), et;
}
function nn() {
    if (Ze === null) {
        var e = ze.alternate;
        e = e !== null ? e.memoizedState : null;
    } else e = Ze.next;
    var t = et === null ? ze.memoizedState : et.next;
    if (t !== null) (et = t), (Ze = e);
    else {
        if (e === null) throw Error(j(310));
        (Ze = e),
            (e = { memoizedState: Ze.memoizedState, baseState: Ze.baseState, baseQueue: Ze.baseQueue, queue: Ze.queue, next: null }),
            et === null ? (ze.memoizedState = et = e) : (et = et.next = e);
    }
    return et;
}
function Zi(e, t) {
    return typeof t == "function" ? t(e) : t;
}
function tu(e) {
    var t = nn(),
        n = t.queue;
    if (n === null) throw Error(j(311));
    n.lastRenderedReducer = e;
    var r = Ze,
        a = r.baseQueue,
        i = n.pending;
    if (i !== null) {
        if (a !== null) {
            var o = a.next;
            (a.next = i.next), (i.next = o);
        }
        (r.baseQueue = a = i), (n.pending = null);
    }
    if (a !== null) {
        (i = a.next), (r = r.baseState);
        var l = (o = null),
            s = null,
            u = i;
        do {
            var c = u.lane;
            if ((Xr & c) === c)
                s !== null && (s = s.next = { lane: 0, action: u.action, hasEagerState: u.hasEagerState, eagerState: u.eagerState, next: null }),
                    (r = u.hasEagerState ? u.eagerState : e(r, u.action));
            else {
                var d = { lane: c, action: u.action, hasEagerState: u.hasEagerState, eagerState: u.eagerState, next: null };
                s === null ? ((l = s = d), (o = r)) : (s = s.next = d), (ze.lanes |= c), (Zr |= c);
            }
            u = u.next;
        } while (u !== null && u !== i);
        s === null ? (o = r) : (s.next = l),
            yn(r, t.memoizedState) || (Rt = !0),
            (t.memoizedState = r),
            (t.baseState = o),
            (t.baseQueue = s),
            (n.lastRenderedState = r);
    }
    if (((e = n.interleaved), e !== null)) {
        a = e;
        do (i = a.lane), (ze.lanes |= i), (Zr |= i), (a = a.next);
        while (a !== e);
    } else a === null && (n.lanes = 0);
    return [t.memoizedState, n.dispatch];
}
function nu(e) {
    var t = nn(),
        n = t.queue;
    if (n === null) throw Error(j(311));
    n.lastRenderedReducer = e;
    var r = n.dispatch,
        a = n.pending,
        i = t.memoizedState;
    if (a !== null) {
        n.pending = null;
        var o = (a = a.next);
        do (i = e(i, o.action)), (o = o.next);
        while (o !== a);
        yn(i, t.memoizedState) || (Rt = !0), (t.memoizedState = i), t.baseQueue === null && (t.baseState = i), (n.lastRenderedState = i);
    }
    return [i, r];
}
function f3() {}
function m3(e, t) {
    var n = ze,
        r = nn(),
        a = t(),
        i = !yn(r.memoizedState, a);
    if (
        (i && ((r.memoizedState = a), (Rt = !0)),
        (r = r.queue),
        Xh(b3.bind(null, n, r, e), [e]),
        r.getSnapshot !== t || i || (et !== null && et.memoizedState.tag & 1))
    ) {
        if (((n.flags |= 2048), Qi(9, g3.bind(null, n, r, a, t), void 0, null), tt === null)) throw Error(j(349));
        Xr & 30 || h3(n, t, a);
    }
    return a;
}
function h3(e, t, n) {
    (e.flags |= 16384),
        (e = { getSnapshot: t, value: n }),
        (t = ze.updateQueue),
        t === null
            ? ((t = { lastEffect: null, stores: null }), (ze.updateQueue = t), (t.stores = [e]))
            : ((n = t.stores), n === null ? (t.stores = [e]) : n.push(e));
}
function g3(e, t, n, r) {
    (t.value = n), (t.getSnapshot = r), y3(t) && v3(e);
}
function b3(e, t, n) {
    return n(function () {
        y3(t) && v3(e);
    });
}
function y3(e) {
    var t = e.getSnapshot;
    e = e.value;
    try {
        var n = t();
        return !yn(e, n);
    } catch {
        return !0;
    }
}
function v3(e) {
    var t = Yn(e, 1);
    t !== null && gn(t, e, 1, -1);
}
function ib(e) {
    var t = En();
    return (
        typeof e == "function" && (e = e()),
        (t.memoizedState = t.baseState = e),
        (e = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Zi, lastRenderedState: e }),
        (t.queue = e),
        (e = e.dispatch = l7.bind(null, ze, e)),
        [t.memoizedState, e]
    );
}
function Qi(e, t, n, r) {
    return (
        (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
        (t = ze.updateQueue),
        t === null
            ? ((t = { lastEffect: null, stores: null }), (ze.updateQueue = t), (t.lastEffect = e.next = e))
            : ((n = t.lastEffect), n === null ? (t.lastEffect = e.next = e) : ((r = n.next), (n.next = e), (e.next = r), (t.lastEffect = e))),
        e
    );
}
function E3() {
    return nn().memoizedState;
}
function ll(e, t, n, r) {
    var a = En();
    (ze.flags |= e), (a.memoizedState = Qi(1 | t, n, void 0, r === void 0 ? null : r));
}
function as(e, t, n, r) {
    var a = nn();
    r = r === void 0 ? null : r;
    var i = void 0;
    if (Ze !== null) {
        var o = Ze.memoizedState;
        if (((i = o.destroy), r !== null && Wh(r, o.deps))) {
            a.memoizedState = Qi(t, n, i, r);
            return;
        }
    }
    (ze.flags |= e), (a.memoizedState = Qi(1 | t, n, i, r));
}
function ob(e, t) {
    return ll(8390656, 8, e, t);
}
function Xh(e, t) {
    return as(2048, 8, e, t);
}
function S3(e, t) {
    return as(4, 2, e, t);
}
function w3(e, t) {
    return as(4, 4, e, t);
}
function k3(e, t) {
    if (typeof t == "function")
        return (
            (e = e()),
            t(e),
            function () {
                t(null);
            }
        );
    if (t != null)
        return (
            (e = e()),
            (t.current = e),
            function () {
                t.current = null;
            }
        );
}
function T3(e, t, n) {
    return (n = n != null ? n.concat([e]) : null), as(4, 4, k3.bind(null, t, e), n);
}
function Zh() {}
function A3(e, t) {
    var n = nn();
    t = t === void 0 ? null : t;
    var r = n.memoizedState;
    return r !== null && t !== null && Wh(t, r[1]) ? r[0] : ((n.memoizedState = [e, t]), e);
}
function x3(e, t) {
    var n = nn();
    t = t === void 0 ? null : t;
    var r = n.memoizedState;
    return r !== null && t !== null && Wh(t, r[1]) ? r[0] : ((e = e()), (n.memoizedState = [e, t]), e);
}
function R3(e, t, n) {
    return Xr & 21
        ? (yn(n, t) || ((n = Ok()), (ze.lanes |= n), (Zr |= n), (e.baseState = !0)), t)
        : (e.baseState && ((e.baseState = !1), (Rt = !0)), (e.memoizedState = n));
}
function i7(e, t) {
    var n = Ae;
    (Ae = n !== 0 && 4 > n ? n : 4), e(!0);
    var r = eu.transition;
    eu.transition = {};
    try {
        e(!1), t();
    } finally {
        (Ae = n), (eu.transition = r);
    }
}
function I3() {
    return nn().memoizedState;
}
function o7(e, t, n) {
    var r = Er(e);
    if (((n = { lane: r, action: n, hasEagerState: !1, eagerState: null, next: null }), N3(e))) _3(t, n);
    else if (((n = c3(e, t, n, r)), n !== null)) {
        var a = yt();
        gn(n, e, r, a), C3(n, t, r);
    }
}
function l7(e, t, n) {
    var r = Er(e),
        a = { lane: r, action: n, hasEagerState: !1, eagerState: null, next: null };
    if (N3(e)) _3(t, a);
    else {
        var i = e.alternate;
        if (e.lanes === 0 && (i === null || i.lanes === 0) && ((i = t.lastRenderedReducer), i !== null))
            try {
                var o = t.lastRenderedState,
                    l = i(o, n);
                if (((a.hasEagerState = !0), (a.eagerState = l), yn(l, o))) {
                    var s = t.interleaved;
                    s === null ? ((a.next = a), qh(t)) : ((a.next = s.next), (s.next = a)), (t.interleaved = a);
                    return;
                }
            } catch {
            } finally {
            }
        (n = c3(e, t, a, r)), n !== null && ((a = yt()), gn(n, e, r, a), C3(n, t, r));
    }
}
function N3(e) {
    var t = e.alternate;
    return e === ze || (t !== null && t === ze);
}
function _3(e, t) {
    _i = Ml = !0;
    var n = e.pending;
    n === null ? (t.next = t) : ((t.next = n.next), (n.next = t)), (e.pending = t);
}
function C3(e, t, n) {
    if (n & 4194240) {
        var r = t.lanes;
        (r &= e.pendingLanes), (n |= r), (t.lanes = n), Ih(e, n);
    }
}
var Fl = {
        readContext: tn,
        useCallback: ot,
        useContext: ot,
        useEffect: ot,
        useImperativeHandle: ot,
        useInsertionEffect: ot,
        useLayoutEffect: ot,
        useMemo: ot,
        useReducer: ot,
        useRef: ot,
        useState: ot,
        useDebugValue: ot,
        useDeferredValue: ot,
        useTransition: ot,
        useMutableSource: ot,
        useSyncExternalStore: ot,
        useId: ot,
        unstable_isNewReconciler: !1,
    },
    s7 = {
        readContext: tn,
        useCallback: function (e, t) {
            return (En().memoizedState = [e, t === void 0 ? null : t]), e;
        },
        useContext: tn,
        useEffect: ob,
        useImperativeHandle: function (e, t, n) {
            return (n = n != null ? n.concat([e]) : null), ll(4194308, 4, k3.bind(null, t, e), n);
        },
        useLayoutEffect: function (e, t) {
            return ll(4194308, 4, e, t);
        },
        useInsertionEffect: function (e, t) {
            return ll(4, 2, e, t);
        },
        useMemo: function (e, t) {
            var n = En();
            return (t = t === void 0 ? null : t), (e = e()), (n.memoizedState = [e, t]), e;
        },
        useReducer: function (e, t, n) {
            var r = En();
            return (
                (t = n !== void 0 ? n(t) : t),
                (r.memoizedState = r.baseState = t),
                (e = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: e, lastRenderedState: t }),
                (r.queue = e),
                (e = e.dispatch = o7.bind(null, ze, e)),
                [r.memoizedState, e]
            );
        },
        useRef: function (e) {
            var t = En();
            return (e = { current: e }), (t.memoizedState = e);
        },
        useState: ib,
        useDebugValue: Zh,
        useDeferredValue: function (e) {
            return (En().memoizedState = e);
        },
        useTransition: function () {
            var e = ib(!1),
                t = e[0];
            return (e = i7.bind(null, e[1])), (En().memoizedState = e), [t, e];
        },
        useMutableSource: function () {},
        useSyncExternalStore: function (e, t, n) {
            var r = ze,
                a = En();
            if (Me) {
                if (n === void 0) throw Error(j(407));
                n = n();
            } else {
                if (((n = t()), tt === null)) throw Error(j(349));
                Xr & 30 || h3(r, t, n);
            }
            a.memoizedState = n;
            var i = { value: n, getSnapshot: t };
            return (a.queue = i), ob(b3.bind(null, r, i, e), [e]), (r.flags |= 2048), Qi(9, g3.bind(null, r, i, n, t), void 0, null), n;
        },
        useId: function () {
            var e = En(),
                t = tt.identifierPrefix;
            if (Me) {
                var n = qn,
                    r = $n;
                (n = (r & ~(1 << (32 - hn(r) - 1))).toString(32) + n), (t = ":" + t + "R" + n), (n = Xi++), 0 < n && (t += "H" + n.toString(32)), (t += ":");
            } else (n = a7++), (t = ":" + t + "r" + n.toString(32) + ":");
            return (e.memoizedState = t);
        },
        unstable_isNewReconciler: !1,
    },
    u7 = {
        readContext: tn,
        useCallback: A3,
        useContext: tn,
        useEffect: Xh,
        useImperativeHandle: T3,
        useInsertionEffect: S3,
        useLayoutEffect: w3,
        useMemo: x3,
        useReducer: tu,
        useRef: E3,
        useState: function () {
            return tu(Zi);
        },
        useDebugValue: Zh,
        useDeferredValue: function (e) {
            var t = nn();
            return R3(t, Ze.memoizedState, e);
        },
        useTransition: function () {
            var e = tu(Zi)[0],
                t = nn().memoizedState;
            return [e, t];
        },
        useMutableSource: f3,
        useSyncExternalStore: m3,
        useId: I3,
        unstable_isNewReconciler: !1,
    },
    c7 = {
        readContext: tn,
        useCallback: A3,
        useContext: tn,
        useEffect: Xh,
        useImperativeHandle: T3,
        useInsertionEffect: S3,
        useLayoutEffect: w3,
        useMemo: x3,
        useReducer: nu,
        useRef: E3,
        useState: function () {
            return nu(Zi);
        },
        useDebugValue: Zh,
        useDeferredValue: function (e) {
            var t = nn();
            return Ze === null ? (t.memoizedState = e) : R3(t, Ze.memoizedState, e);
        },
        useTransition: function () {
            var e = nu(Zi)[0],
                t = nn().memoizedState;
            return [e, t];
        },
        useMutableSource: f3,
        useSyncExternalStore: m3,
        useId: I3,
        unstable_isNewReconciler: !1,
    };
function dn(e, t) {
    if (e && e.defaultProps) {
        (t = $e({}, t)), (e = e.defaultProps);
        for (var n in e) t[n] === void 0 && (t[n] = e[n]);
        return t;
    }
    return t;
}
function km(e, t, n, r) {
    (t = e.memoizedState), (n = n(r, t)), (n = n == null ? t : $e({}, t, n)), (e.memoizedState = n), e.lanes === 0 && (e.updateQueue.baseState = n);
}
var is = {
    isMounted: function (e) {
        return (e = e._reactInternals) ? ta(e) === e : !1;
    },
    enqueueSetState: function (e, t, n) {
        e = e._reactInternals;
        var r = yt(),
            a = Er(e),
            i = Gn(r, a);
        (i.payload = t), n != null && (i.callback = n), (t = yr(e, i, a)), t !== null && (gn(t, e, a, r), il(t, e, a));
    },
    enqueueReplaceState: function (e, t, n) {
        e = e._reactInternals;
        var r = yt(),
            a = Er(e),
            i = Gn(r, a);
        (i.tag = 1), (i.payload = t), n != null && (i.callback = n), (t = yr(e, i, a)), t !== null && (gn(t, e, a, r), il(t, e, a));
    },
    enqueueForceUpdate: function (e, t) {
        e = e._reactInternals;
        var n = yt(),
            r = Er(e),
            a = Gn(n, r);
        (a.tag = 2), t != null && (a.callback = t), (t = yr(e, a, r)), t !== null && (gn(t, e, r, n), il(t, e, r));
    },
};
function lb(e, t, n, r, a, i, o) {
    return (
        (e = e.stateNode),
        typeof e.shouldComponentUpdate == "function"
            ? e.shouldComponentUpdate(r, i, o)
            : t.prototype && t.prototype.isPureReactComponent
              ? !Hi(n, r) || !Hi(a, i)
              : !0
    );
}
function O3(e, t, n) {
    var r = !1,
        a = kr,
        i = t.contextType;
    return (
        typeof i == "object" && i !== null ? (i = tn(i)) : ((a = Nt(t) ? Yr : dt.current), (r = t.contextTypes), (i = (r = r != null) ? Ua(e, a) : kr)),
        (t = new t(n, i)),
        (e.memoizedState = t.state !== null && t.state !== void 0 ? t.state : null),
        (t.updater = is),
        (e.stateNode = t),
        (t._reactInternals = e),
        r && ((e = e.stateNode), (e.__reactInternalMemoizedUnmaskedChildContext = a), (e.__reactInternalMemoizedMaskedChildContext = i)),
        t
    );
}
function sb(e, t, n, r) {
    (e = t.state),
        typeof t.componentWillReceiveProps == "function" && t.componentWillReceiveProps(n, r),
        typeof t.UNSAFE_componentWillReceiveProps == "function" && t.UNSAFE_componentWillReceiveProps(n, r),
        t.state !== e && is.enqueueReplaceState(t, t.state, null);
}
function Tm(e, t, n, r) {
    var a = e.stateNode;
    (a.props = n), (a.state = e.memoizedState), (a.refs = {}), Gh(e);
    var i = t.contextType;
    typeof i == "object" && i !== null ? (a.context = tn(i)) : ((i = Nt(t) ? Yr : dt.current), (a.context = Ua(e, i))),
        (a.state = e.memoizedState),
        (i = t.getDerivedStateFromProps),
        typeof i == "function" && (km(e, t, i, n), (a.state = e.memoizedState)),
        typeof t.getDerivedStateFromProps == "function" ||
            typeof a.getSnapshotBeforeUpdate == "function" ||
            (typeof a.UNSAFE_componentWillMount != "function" && typeof a.componentWillMount != "function") ||
            ((t = a.state),
            typeof a.componentWillMount == "function" && a.componentWillMount(),
            typeof a.UNSAFE_componentWillMount == "function" && a.UNSAFE_componentWillMount(),
            t !== a.state && is.enqueueReplaceState(a, a.state, null),
            Ll(e, n, a, r),
            (a.state = e.memoizedState)),
        typeof a.componentDidMount == "function" && (e.flags |= 4194308);
}
function Ga(e, t) {
    try {
        var n = "",
            r = t;
        do (n += B6(r)), (r = r.return);
        while (r);
        var a = n;
    } catch (i) {
        a =
            `
Error generating stack: ` +
            i.message +
            `
` +
            i.stack;
    }
    return { value: e, source: t, stack: a, digest: null };
}
function ru(e, t, n) {
    return { value: e, source: null, stack: n ?? null, digest: t ?? null };
}
function Am(e, t) {
    try {
        console.error(t.value);
    } catch (n) {
        setTimeout(function () {
            throw n;
        });
    }
}
var d7 = typeof WeakMap == "function" ? WeakMap : Map;
function L3(e, t, n) {
    (n = Gn(-1, n)), (n.tag = 3), (n.payload = { element: null });
    var r = t.value;
    return (
        (n.callback = function () {
            Bl || ((Bl = !0), (Mm = r)), Am(e, t);
        }),
        n
    );
}
function D3(e, t, n) {
    (n = Gn(-1, n)), (n.tag = 3);
    var r = e.type.getDerivedStateFromError;
    if (typeof r == "function") {
        var a = t.value;
        (n.payload = function () {
            return r(a);
        }),
            (n.callback = function () {
                Am(e, t);
            });
    }
    var i = e.stateNode;
    return (
        i !== null &&
            typeof i.componentDidCatch == "function" &&
            (n.callback = function () {
                Am(e, t), typeof r != "function" && (vr === null ? (vr = new Set([this])) : vr.add(this));
                var o = t.stack;
                this.componentDidCatch(t.value, { componentStack: o !== null ? o : "" });
            }),
        n
    );
}
function ub(e, t, n) {
    var r = e.pingCache;
    if (r === null) {
        r = e.pingCache = new d7();
        var a = new Set();
        r.set(t, a);
    } else (a = r.get(t)), a === void 0 && ((a = new Set()), r.set(t, a));
    a.has(n) || (a.add(n), (e = A7.bind(null, e, t, n)), t.then(e, e));
}
function cb(e) {
    do {
        var t;
        if (((t = e.tag === 13) && ((t = e.memoizedState), (t = t !== null ? t.dehydrated !== null : !0)), t)) return e;
        e = e.return;
    } while (e !== null);
    return null;
}
function db(e, t, n, r, a) {
    return e.mode & 1
        ? ((e.flags |= 65536), (e.lanes = a), e)
        : (e === t
              ? (e.flags |= 65536)
              : ((e.flags |= 128),
                (n.flags |= 131072),
                (n.flags &= -52805),
                n.tag === 1 && (n.alternate === null ? (n.tag = 17) : ((t = Gn(-1, 1)), (t.tag = 2), yr(n, t, 1))),
                (n.lanes |= 1)),
          e);
}
var p7 = Jn.ReactCurrentOwner,
    Rt = !1;
function ht(e, t, n, r) {
    t.child = e === null ? u3(t, null, n, r) : $a(t, e.child, n, r);
}
function pb(e, t, n, r, a) {
    n = n.render;
    var i = t.ref;
    return (
        La(t, a),
        (r = Yh(e, t, n, r, i, a)),
        (n = Kh()),
        e !== null && !Rt
            ? ((t.updateQueue = e.updateQueue), (t.flags &= -2053), (e.lanes &= ~a), Kn(e, t, a))
            : (Me && n && Fh(t), (t.flags |= 1), ht(e, t, r, a), t.child)
    );
}
function fb(e, t, n, r, a) {
    if (e === null) {
        var i = n.type;
        return typeof i == "function" && !ig(i) && i.defaultProps === void 0 && n.compare === null && n.defaultProps === void 0
            ? ((t.tag = 15), (t.type = i), M3(e, t, i, r, a))
            : ((e = dl(n.type, null, r, t, t.mode, a)), (e.ref = t.ref), (e.return = t), (t.child = e));
    }
    if (((i = e.child), !(e.lanes & a))) {
        var o = i.memoizedProps;
        if (((n = n.compare), (n = n !== null ? n : Hi), n(o, r) && e.ref === t.ref)) return Kn(e, t, a);
    }
    return (t.flags |= 1), (e = Sr(i, r)), (e.ref = t.ref), (e.return = t), (t.child = e);
}
function M3(e, t, n, r, a) {
    if (e !== null) {
        var i = e.memoizedProps;
        if (Hi(i, r) && e.ref === t.ref)
            if (((Rt = !1), (t.pendingProps = r = i), (e.lanes & a) !== 0)) e.flags & 131072 && (Rt = !0);
            else return (t.lanes = e.lanes), Kn(e, t, a);
    }
    return xm(e, t, n, r, a);
}
function F3(e, t, n) {
    var r = t.pendingProps,
        a = r.children,
        i = e !== null ? e.memoizedState : null;
    if (r.mode === "hidden")
        if (!(t.mode & 1)) (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }), _e(Ra, Pt), (Pt |= n);
        else {
            if (!(n & 1073741824))
                return (
                    (e = i !== null ? i.baseLanes | n : n),
                    (t.lanes = t.childLanes = 1073741824),
                    (t.memoizedState = { baseLanes: e, cachePool: null, transitions: null }),
                    (t.updateQueue = null),
                    _e(Ra, Pt),
                    (Pt |= e),
                    null
                );
            (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }), (r = i !== null ? i.baseLanes : n), _e(Ra, Pt), (Pt |= r);
        }
    else i !== null ? ((r = i.baseLanes | n), (t.memoizedState = null)) : (r = n), _e(Ra, Pt), (Pt |= r);
    return ht(e, t, a, n), t.child;
}
function P3(e, t) {
    var n = t.ref;
    ((e === null && n !== null) || (e !== null && e.ref !== n)) && ((t.flags |= 512), (t.flags |= 2097152));
}
function xm(e, t, n, r, a) {
    var i = Nt(n) ? Yr : dt.current;
    return (
        (i = Ua(t, i)),
        La(t, a),
        (n = Yh(e, t, n, r, i, a)),
        (r = Kh()),
        e !== null && !Rt
            ? ((t.updateQueue = e.updateQueue), (t.flags &= -2053), (e.lanes &= ~a), Kn(e, t, a))
            : (Me && r && Fh(t), (t.flags |= 1), ht(e, t, n, a), t.child)
    );
}
function mb(e, t, n, r, a) {
    if (Nt(n)) {
        var i = !0;
        Il(t);
    } else i = !1;
    if ((La(t, a), t.stateNode === null)) sl(e, t), O3(t, n, r), Tm(t, n, r, a), (r = !0);
    else if (e === null) {
        var o = t.stateNode,
            l = t.memoizedProps;
        o.props = l;
        var s = o.context,
            u = n.contextType;
        typeof u == "object" && u !== null ? (u = tn(u)) : ((u = Nt(n) ? Yr : dt.current), (u = Ua(t, u)));
        var c = n.getDerivedStateFromProps,
            d = typeof c == "function" || typeof o.getSnapshotBeforeUpdate == "function";
        d ||
            (typeof o.UNSAFE_componentWillReceiveProps != "function" && typeof o.componentWillReceiveProps != "function") ||
            ((l !== r || s !== u) && sb(t, o, r, u)),
            (lr = !1);
        var m = t.memoizedState;
        (o.state = m),
            Ll(t, r, o, a),
            (s = t.memoizedState),
            l !== r || m !== s || It.current || lr
                ? (typeof c == "function" && (km(t, n, c, r), (s = t.memoizedState)),
                  (l = lr || lb(t, n, l, r, m, s, u))
                      ? (d ||
                            (typeof o.UNSAFE_componentWillMount != "function" && typeof o.componentWillMount != "function") ||
                            (typeof o.componentWillMount == "function" && o.componentWillMount(),
                            typeof o.UNSAFE_componentWillMount == "function" && o.UNSAFE_componentWillMount()),
                        typeof o.componentDidMount == "function" && (t.flags |= 4194308))
                      : (typeof o.componentDidMount == "function" && (t.flags |= 4194308), (t.memoizedProps = r), (t.memoizedState = s)),
                  (o.props = r),
                  (o.state = s),
                  (o.context = u),
                  (r = l))
                : (typeof o.componentDidMount == "function" && (t.flags |= 4194308), (r = !1));
    } else {
        (o = t.stateNode),
            d3(e, t),
            (l = t.memoizedProps),
            (u = t.type === t.elementType ? l : dn(t.type, l)),
            (o.props = u),
            (d = t.pendingProps),
            (m = o.context),
            (s = n.contextType),
            typeof s == "object" && s !== null ? (s = tn(s)) : ((s = Nt(n) ? Yr : dt.current), (s = Ua(t, s)));
        var f = n.getDerivedStateFromProps;
        (c = typeof f == "function" || typeof o.getSnapshotBeforeUpdate == "function") ||
            (typeof o.UNSAFE_componentWillReceiveProps != "function" && typeof o.componentWillReceiveProps != "function") ||
            ((l !== d || m !== s) && sb(t, o, r, s)),
            (lr = !1),
            (m = t.memoizedState),
            (o.state = m),
            Ll(t, r, o, a);
        var b = t.memoizedState;
        l !== d || m !== b || It.current || lr
            ? (typeof f == "function" && (km(t, n, f, r), (b = t.memoizedState)),
              (u = lr || lb(t, n, u, r, m, b, s) || !1)
                  ? (c ||
                        (typeof o.UNSAFE_componentWillUpdate != "function" && typeof o.componentWillUpdate != "function") ||
                        (typeof o.componentWillUpdate == "function" && o.componentWillUpdate(r, b, s),
                        typeof o.UNSAFE_componentWillUpdate == "function" && o.UNSAFE_componentWillUpdate(r, b, s)),
                    typeof o.componentDidUpdate == "function" && (t.flags |= 4),
                    typeof o.getSnapshotBeforeUpdate == "function" && (t.flags |= 1024))
                  : (typeof o.componentDidUpdate != "function" || (l === e.memoizedProps && m === e.memoizedState) || (t.flags |= 4),
                    typeof o.getSnapshotBeforeUpdate != "function" || (l === e.memoizedProps && m === e.memoizedState) || (t.flags |= 1024),
                    (t.memoizedProps = r),
                    (t.memoizedState = b)),
              (o.props = r),
              (o.state = b),
              (o.context = s),
              (r = u))
            : (typeof o.componentDidUpdate != "function" || (l === e.memoizedProps && m === e.memoizedState) || (t.flags |= 4),
              typeof o.getSnapshotBeforeUpdate != "function" || (l === e.memoizedProps && m === e.memoizedState) || (t.flags |= 1024),
              (r = !1));
    }
    return Rm(e, t, n, r, i, a);
}
function Rm(e, t, n, r, a, i) {
    P3(e, t);
    var o = (t.flags & 128) !== 0;
    if (!r && !o) return a && J1(t, n, !1), Kn(e, t, i);
    (r = t.stateNode), (p7.current = t);
    var l = o && typeof n.getDerivedStateFromError != "function" ? null : r.render();
    return (
        (t.flags |= 1),
        e !== null && o ? ((t.child = $a(t, e.child, null, i)), (t.child = $a(t, null, l, i))) : ht(e, t, l, i),
        (t.memoizedState = r.state),
        a && J1(t, n, !0),
        t.child
    );
}
function B3(e) {
    var t = e.stateNode;
    t.pendingContext ? Q1(e, t.pendingContext, t.pendingContext !== t.context) : t.context && Q1(e, t.context, !1), Hh(e, t.containerInfo);
}
function hb(e, t, n, r, a) {
    return za(), Bh(a), (t.flags |= 256), ht(e, t, n, r), t.child;
}
var Im = { dehydrated: null, treeContext: null, retryLane: 0 };
function Nm(e) {
    return { baseLanes: e, cachePool: null, transitions: null };
}
function U3(e, t, n) {
    var r = t.pendingProps,
        a = Be.current,
        i = !1,
        o = (t.flags & 128) !== 0,
        l;
    if (
        ((l = o) || (l = e !== null && e.memoizedState === null ? !1 : (a & 2) !== 0),
        l ? ((i = !0), (t.flags &= -129)) : (e === null || e.memoizedState !== null) && (a |= 1),
        _e(Be, a & 1),
        e === null)
    )
        return (
            Sm(t),
            (e = t.memoizedState),
            e !== null && ((e = e.dehydrated), e !== null)
                ? (t.mode & 1 ? (e.data === "$!" ? (t.lanes = 8) : (t.lanes = 1073741824)) : (t.lanes = 1), null)
                : ((o = r.children),
                  (e = r.fallback),
                  i
                      ? ((r = t.mode),
                        (i = t.child),
                        (o = { mode: "hidden", children: o }),
                        !(r & 1) && i !== null ? ((i.childLanes = 0), (i.pendingProps = o)) : (i = ss(o, r, 0, null)),
                        (e = Wr(e, r, n, null)),
                        (i.return = t),
                        (e.return = t),
                        (i.sibling = e),
                        (t.child = i),
                        (t.child.memoizedState = Nm(n)),
                        (t.memoizedState = Im),
                        e)
                      : Qh(t, o))
        );
    if (((a = e.memoizedState), a !== null && ((l = a.dehydrated), l !== null))) return f7(e, t, o, r, l, a, n);
    if (i) {
        (i = r.fallback), (o = t.mode), (a = e.child), (l = a.sibling);
        var s = { mode: "hidden", children: r.children };
        return (
            !(o & 1) && t.child !== a
                ? ((r = t.child), (r.childLanes = 0), (r.pendingProps = s), (t.deletions = null))
                : ((r = Sr(a, s)), (r.subtreeFlags = a.subtreeFlags & 14680064)),
            l !== null ? (i = Sr(l, i)) : ((i = Wr(i, o, n, null)), (i.flags |= 2)),
            (i.return = t),
            (r.return = t),
            (r.sibling = i),
            (t.child = r),
            (r = i),
            (i = t.child),
            (o = e.child.memoizedState),
            (o = o === null ? Nm(n) : { baseLanes: o.baseLanes | n, cachePool: null, transitions: o.transitions }),
            (i.memoizedState = o),
            (i.childLanes = e.childLanes & ~n),
            (t.memoizedState = Im),
            r
        );
    }
    return (
        (i = e.child),
        (e = i.sibling),
        (r = Sr(i, { mode: "visible", children: r.children })),
        !(t.mode & 1) && (r.lanes = n),
        (r.return = t),
        (r.sibling = null),
        e !== null && ((n = t.deletions), n === null ? ((t.deletions = [e]), (t.flags |= 16)) : n.push(e)),
        (t.child = r),
        (t.memoizedState = null),
        r
    );
}
function Qh(e, t) {
    return (t = ss({ mode: "visible", children: t }, e.mode, 0, null)), (t.return = e), (e.child = t);
}
function Mo(e, t, n, r) {
    return r !== null && Bh(r), $a(t, e.child, null, n), (e = Qh(t, t.pendingProps.children)), (e.flags |= 2), (t.memoizedState = null), e;
}
function f7(e, t, n, r, a, i, o) {
    if (n)
        return t.flags & 256
            ? ((t.flags &= -257), (r = ru(Error(j(422)))), Mo(e, t, o, r))
            : t.memoizedState !== null
              ? ((t.child = e.child), (t.flags |= 128), null)
              : ((i = r.fallback),
                (a = t.mode),
                (r = ss({ mode: "visible", children: r.children }, a, 0, null)),
                (i = Wr(i, a, o, null)),
                (i.flags |= 2),
                (r.return = t),
                (i.return = t),
                (r.sibling = i),
                (t.child = r),
                t.mode & 1 && $a(t, e.child, null, o),
                (t.child.memoizedState = Nm(o)),
                (t.memoizedState = Im),
                i);
    if (!(t.mode & 1)) return Mo(e, t, o, null);
    if (a.data === "$!") {
        if (((r = a.nextSibling && a.nextSibling.dataset), r)) var l = r.dgst;
        return (r = l), (i = Error(j(419))), (r = ru(i, r, void 0)), Mo(e, t, o, r);
    }
    if (((l = (o & e.childLanes) !== 0), Rt || l)) {
        if (((r = tt), r !== null)) {
            switch (o & -o) {
                case 4:
                    a = 2;
                    break;
                case 16:
                    a = 8;
                    break;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    a = 32;
                    break;
                case 536870912:
                    a = 268435456;
                    break;
                default:
                    a = 0;
            }
            (a = a & (r.suspendedLanes | o) ? 0 : a), a !== 0 && a !== i.retryLane && ((i.retryLane = a), Yn(e, a), gn(r, e, a, -1));
        }
        return ag(), (r = ru(Error(j(421)))), Mo(e, t, o, r);
    }
    return a.data === "$?"
        ? ((t.flags |= 128), (t.child = e.child), (t = x7.bind(null, e)), (a._reactRetry = t), null)
        : ((e = i.treeContext),
          (zt = br(a.nextSibling)),
          ($t = t),
          (Me = !0),
          (mn = null),
          e !== null && ((Yt[Kt++] = $n), (Yt[Kt++] = qn), (Yt[Kt++] = Kr), ($n = e.id), (qn = e.overflow), (Kr = t)),
          (t = Qh(t, r.children)),
          (t.flags |= 4096),
          t);
}
function gb(e, t, n) {
    e.lanes |= t;
    var r = e.alternate;
    r !== null && (r.lanes |= t), wm(e.return, t, n);
}
function au(e, t, n, r, a) {
    var i = e.memoizedState;
    i === null
        ? (e.memoizedState = { isBackwards: t, rendering: null, renderingStartTime: 0, last: r, tail: n, tailMode: a })
        : ((i.isBackwards = t), (i.rendering = null), (i.renderingStartTime = 0), (i.last = r), (i.tail = n), (i.tailMode = a));
}
function z3(e, t, n) {
    var r = t.pendingProps,
        a = r.revealOrder,
        i = r.tail;
    if ((ht(e, t, r.children, n), (r = Be.current), r & 2)) (r = (r & 1) | 2), (t.flags |= 128);
    else {
        if (e !== null && e.flags & 128)
            e: for (e = t.child; e !== null; ) {
                if (e.tag === 13) e.memoizedState !== null && gb(e, n, t);
                else if (e.tag === 19) gb(e, n, t);
                else if (e.child !== null) {
                    (e.child.return = e), (e = e.child);
                    continue;
                }
                if (e === t) break e;
                for (; e.sibling === null; ) {
                    if (e.return === null || e.return === t) break e;
                    e = e.return;
                }
                (e.sibling.return = e.return), (e = e.sibling);
            }
        r &= 1;
    }
    if ((_e(Be, r), !(t.mode & 1))) t.memoizedState = null;
    else
        switch (a) {
            case "forwards":
                for (n = t.child, a = null; n !== null; ) (e = n.alternate), e !== null && Dl(e) === null && (a = n), (n = n.sibling);
                (n = a), n === null ? ((a = t.child), (t.child = null)) : ((a = n.sibling), (n.sibling = null)), au(t, !1, a, n, i);
                break;
            case "backwards":
                for (n = null, a = t.child, t.child = null; a !== null; ) {
                    if (((e = a.alternate), e !== null && Dl(e) === null)) {
                        t.child = a;
                        break;
                    }
                    (e = a.sibling), (a.sibling = n), (n = a), (a = e);
                }
                au(t, !0, n, null, i);
                break;
            case "together":
                au(t, !1, null, null, void 0);
                break;
            default:
                t.memoizedState = null;
        }
    return t.child;
}
function sl(e, t) {
    !(t.mode & 1) && e !== null && ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
}
function Kn(e, t, n) {
    if ((e !== null && (t.dependencies = e.dependencies), (Zr |= t.lanes), !(n & t.childLanes))) return null;
    if (e !== null && t.child !== e.child) throw Error(j(153));
    if (t.child !== null) {
        for (e = t.child, n = Sr(e, e.pendingProps), t.child = n, n.return = t; e.sibling !== null; )
            (e = e.sibling), (n = n.sibling = Sr(e, e.pendingProps)), (n.return = t);
        n.sibling = null;
    }
    return t.child;
}
function m7(e, t, n) {
    switch (t.tag) {
        case 3:
            B3(t), za();
            break;
        case 5:
            p3(t);
            break;
        case 1:
            Nt(t.type) && Il(t);
            break;
        case 4:
            Hh(t, t.stateNode.containerInfo);
            break;
        case 10:
            var r = t.type._context,
                a = t.memoizedProps.value;
            _e(Cl, r._currentValue), (r._currentValue = a);
            break;
        case 13:
            if (((r = t.memoizedState), r !== null))
                return r.dehydrated !== null
                    ? (_e(Be, Be.current & 1), (t.flags |= 128), null)
                    : n & t.child.childLanes
                      ? U3(e, t, n)
                      : (_e(Be, Be.current & 1), (e = Kn(e, t, n)), e !== null ? e.sibling : null);
            _e(Be, Be.current & 1);
            break;
        case 19:
            if (((r = (n & t.childLanes) !== 0), e.flags & 128)) {
                if (r) return z3(e, t, n);
                t.flags |= 128;
            }
            if (((a = t.memoizedState), a !== null && ((a.rendering = null), (a.tail = null), (a.lastEffect = null)), _e(Be, Be.current), r)) break;
            return null;
        case 22:
        case 23:
            return (t.lanes = 0), F3(e, t, n);
    }
    return Kn(e, t, n);
}
var $3, _m, q3, G3;
$3 = function (e, t) {
    for (var n = t.child; n !== null; ) {
        if (n.tag === 5 || n.tag === 6) e.appendChild(n.stateNode);
        else if (n.tag !== 4 && n.child !== null) {
            (n.child.return = n), (n = n.child);
            continue;
        }
        if (n === t) break;
        for (; n.sibling === null; ) {
            if (n.return === null || n.return === t) return;
            n = n.return;
        }
        (n.sibling.return = n.return), (n = n.sibling);
    }
};
_m = function () {};
q3 = function (e, t, n, r) {
    var a = e.memoizedProps;
    if (a !== r) {
        (e = t.stateNode), jr(In.current);
        var i = null;
        switch (n) {
            case "input":
                (a = Qf(e, a)), (r = Qf(e, r)), (i = []);
                break;
            case "select":
                (a = $e({}, a, { value: void 0 })), (r = $e({}, r, { value: void 0 })), (i = []);
                break;
            case "textarea":
                (a = tm(e, a)), (r = tm(e, r)), (i = []);
                break;
            default:
                typeof a.onClick != "function" && typeof r.onClick == "function" && (e.onclick = xl);
        }
        rm(n, r);
        var o;
        n = null;
        for (u in a)
            if (!r.hasOwnProperty(u) && a.hasOwnProperty(u) && a[u] != null)
                if (u === "style") {
                    var l = a[u];
                    for (o in l) l.hasOwnProperty(o) && (n || (n = {}), (n[o] = ""));
                } else
                    u !== "dangerouslySetInnerHTML" &&
                        u !== "children" &&
                        u !== "suppressContentEditableWarning" &&
                        u !== "suppressHydrationWarning" &&
                        u !== "autoFocus" &&
                        (Pi.hasOwnProperty(u) ? i || (i = []) : (i = i || []).push(u, null));
        for (u in r) {
            var s = r[u];
            if (((l = a != null ? a[u] : void 0), r.hasOwnProperty(u) && s !== l && (s != null || l != null)))
                if (u === "style")
                    if (l) {
                        for (o in l) !l.hasOwnProperty(o) || (s && s.hasOwnProperty(o)) || (n || (n = {}), (n[o] = ""));
                        for (o in s) s.hasOwnProperty(o) && l[o] !== s[o] && (n || (n = {}), (n[o] = s[o]));
                    } else n || (i || (i = []), i.push(u, n)), (n = s);
                else
                    u === "dangerouslySetInnerHTML"
                        ? ((s = s ? s.__html : void 0), (l = l ? l.__html : void 0), s != null && l !== s && (i = i || []).push(u, s))
                        : u === "children"
                          ? (typeof s != "string" && typeof s != "number") || (i = i || []).push(u, "" + s)
                          : u !== "suppressContentEditableWarning" &&
                            u !== "suppressHydrationWarning" &&
                            (Pi.hasOwnProperty(u) ? (s != null && u === "onScroll" && Le("scroll", e), i || l === s || (i = [])) : (i = i || []).push(u, s));
        }
        n && (i = i || []).push("style", n);
        var u = i;
        (t.updateQueue = u) && (t.flags |= 4);
    }
};
G3 = function (e, t, n, r) {
    n !== r && (t.flags |= 4);
};
function fi(e, t) {
    if (!Me)
        switch (e.tailMode) {
            case "hidden":
                t = e.tail;
                for (var n = null; t !== null; ) t.alternate !== null && (n = t), (t = t.sibling);
                n === null ? (e.tail = null) : (n.sibling = null);
                break;
            case "collapsed":
                n = e.tail;
                for (var r = null; n !== null; ) n.alternate !== null && (r = n), (n = n.sibling);
                r === null ? (t || e.tail === null ? (e.tail = null) : (e.tail.sibling = null)) : (r.sibling = null);
        }
}
function lt(e) {
    var t = e.alternate !== null && e.alternate.child === e.child,
        n = 0,
        r = 0;
    if (t)
        for (var a = e.child; a !== null; )
            (n |= a.lanes | a.childLanes), (r |= a.subtreeFlags & 14680064), (r |= a.flags & 14680064), (a.return = e), (a = a.sibling);
    else for (a = e.child; a !== null; ) (n |= a.lanes | a.childLanes), (r |= a.subtreeFlags), (r |= a.flags), (a.return = e), (a = a.sibling);
    return (e.subtreeFlags |= r), (e.childLanes = n), t;
}
function h7(e, t, n) {
    var r = t.pendingProps;
    switch ((Ph(t), t.tag)) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
            return lt(t), null;
        case 1:
            return Nt(t.type) && Rl(), lt(t), null;
        case 3:
            return (
                (r = t.stateNode),
                qa(),
                De(It),
                De(dt),
                Vh(),
                r.pendingContext && ((r.context = r.pendingContext), (r.pendingContext = null)),
                (e === null || e.child === null) &&
                    (Lo(t)
                        ? (t.flags |= 4)
                        : e === null || (e.memoizedState.isDehydrated && !(t.flags & 256)) || ((t.flags |= 1024), mn !== null && (Bm(mn), (mn = null)))),
                _m(e, t),
                lt(t),
                null
            );
        case 5:
            jh(t);
            var a = jr(Ki.current);
            if (((n = t.type), e !== null && t.stateNode != null)) q3(e, t, n, r, a), e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
            else {
                if (!r) {
                    if (t.stateNode === null) throw Error(j(166));
                    return lt(t), null;
                }
                if (((e = jr(In.current)), Lo(t))) {
                    (r = t.stateNode), (n = t.type);
                    var i = t.memoizedProps;
                    switch (((r[Tn] = t), (r[Wi] = i), (e = (t.mode & 1) !== 0), n)) {
                        case "dialog":
                            Le("cancel", r), Le("close", r);
                            break;
                        case "iframe":
                        case "object":
                        case "embed":
                            Le("load", r);
                            break;
                        case "video":
                        case "audio":
                            for (a = 0; a < Si.length; a++) Le(Si[a], r);
                            break;
                        case "source":
                            Le("error", r);
                            break;
                        case "img":
                        case "image":
                        case "link":
                            Le("error", r), Le("load", r);
                            break;
                        case "details":
                            Le("toggle", r);
                            break;
                        case "input":
                            A1(r, i), Le("invalid", r);
                            break;
                        case "select":
                            (r._wrapperState = { wasMultiple: !!i.multiple }), Le("invalid", r);
                            break;
                        case "textarea":
                            R1(r, i), Le("invalid", r);
                    }
                    rm(n, i), (a = null);
                    for (var o in i)
                        if (i.hasOwnProperty(o)) {
                            var l = i[o];
                            o === "children"
                                ? typeof l == "string"
                                    ? r.textContent !== l && (i.suppressHydrationWarning !== !0 && Oo(r.textContent, l, e), (a = ["children", l]))
                                    : typeof l == "number" &&
                                      r.textContent !== "" + l &&
                                      (i.suppressHydrationWarning !== !0 && Oo(r.textContent, l, e), (a = ["children", "" + l]))
                                : Pi.hasOwnProperty(o) && l != null && o === "onScroll" && Le("scroll", r);
                        }
                    switch (n) {
                        case "input":
                            To(r), x1(r, i, !0);
                            break;
                        case "textarea":
                            To(r), I1(r);
                            break;
                        case "select":
                        case "option":
                            break;
                        default:
                            typeof i.onClick == "function" && (r.onclick = xl);
                    }
                    (r = a), (t.updateQueue = r), r !== null && (t.flags |= 4);
                } else {
                    (o = a.nodeType === 9 ? a : a.ownerDocument),
                        e === "http://www.w3.org/1999/xhtml" && (e = bk(n)),
                        e === "http://www.w3.org/1999/xhtml"
                            ? n === "script"
                                ? ((e = o.createElement("div")), (e.innerHTML = "<script><\/script>"), (e = e.removeChild(e.firstChild)))
                                : typeof r.is == "string"
                                  ? (e = o.createElement(n, { is: r.is }))
                                  : ((e = o.createElement(n)), n === "select" && ((o = e), r.multiple ? (o.multiple = !0) : r.size && (o.size = r.size)))
                            : (e = o.createElementNS(e, n)),
                        (e[Tn] = t),
                        (e[Wi] = r),
                        $3(e, t, !1, !1),
                        (t.stateNode = e);
                    e: {
                        switch (((o = am(n, r)), n)) {
                            case "dialog":
                                Le("cancel", e), Le("close", e), (a = r);
                                break;
                            case "iframe":
                            case "object":
                            case "embed":
                                Le("load", e), (a = r);
                                break;
                            case "video":
                            case "audio":
                                for (a = 0; a < Si.length; a++) Le(Si[a], e);
                                a = r;
                                break;
                            case "source":
                                Le("error", e), (a = r);
                                break;
                            case "img":
                            case "image":
                            case "link":
                                Le("error", e), Le("load", e), (a = r);
                                break;
                            case "details":
                                Le("toggle", e), (a = r);
                                break;
                            case "input":
                                A1(e, r), (a = Qf(e, r)), Le("invalid", e);
                                break;
                            case "option":
                                a = r;
                                break;
                            case "select":
                                (e._wrapperState = { wasMultiple: !!r.multiple }), (a = $e({}, r, { value: void 0 })), Le("invalid", e);
                                break;
                            case "textarea":
                                R1(e, r), (a = tm(e, r)), Le("invalid", e);
                                break;
                            default:
                                a = r;
                        }
                        rm(n, a), (l = a);
                        for (i in l)
                            if (l.hasOwnProperty(i)) {
                                var s = l[i];
                                i === "style"
                                    ? Ek(e, s)
                                    : i === "dangerouslySetInnerHTML"
                                      ? ((s = s ? s.__html : void 0), s != null && yk(e, s))
                                      : i === "children"
                                        ? typeof s == "string"
                                            ? (n !== "textarea" || s !== "") && Bi(e, s)
                                            : typeof s == "number" && Bi(e, "" + s)
                                        : i !== "suppressContentEditableWarning" &&
                                          i !== "suppressHydrationWarning" &&
                                          i !== "autoFocus" &&
                                          (Pi.hasOwnProperty(i) ? s != null && i === "onScroll" && Le("scroll", e) : s != null && wh(e, i, s, o));
                            }
                        switch (n) {
                            case "input":
                                To(e), x1(e, r, !1);
                                break;
                            case "textarea":
                                To(e), I1(e);
                                break;
                            case "option":
                                r.value != null && e.setAttribute("value", "" + wr(r.value));
                                break;
                            case "select":
                                (e.multiple = !!r.multiple),
                                    (i = r.value),
                                    i != null ? Na(e, !!r.multiple, i, !1) : r.defaultValue != null && Na(e, !!r.multiple, r.defaultValue, !0);
                                break;
                            default:
                                typeof a.onClick == "function" && (e.onclick = xl);
                        }
                        switch (n) {
                            case "button":
                            case "input":
                            case "select":
                            case "textarea":
                                r = !!r.autoFocus;
                                break e;
                            case "img":
                                r = !0;
                                break e;
                            default:
                                r = !1;
                        }
                    }
                    r && (t.flags |= 4);
                }
                t.ref !== null && ((t.flags |= 512), (t.flags |= 2097152));
            }
            return lt(t), null;
        case 6:
            if (e && t.stateNode != null) G3(e, t, e.memoizedProps, r);
            else {
                if (typeof r != "string" && t.stateNode === null) throw Error(j(166));
                if (((n = jr(Ki.current)), jr(In.current), Lo(t))) {
                    if (((r = t.stateNode), (n = t.memoizedProps), (r[Tn] = t), (i = r.nodeValue !== n) && ((e = $t), e !== null)))
                        switch (e.tag) {
                            case 3:
                                Oo(r.nodeValue, n, (e.mode & 1) !== 0);
                                break;
                            case 5:
                                e.memoizedProps.suppressHydrationWarning !== !0 && Oo(r.nodeValue, n, (e.mode & 1) !== 0);
                        }
                    i && (t.flags |= 4);
                } else (r = (n.nodeType === 9 ? n : n.ownerDocument).createTextNode(r)), (r[Tn] = t), (t.stateNode = r);
            }
            return lt(t), null;
        case 13:
            if ((De(Be), (r = t.memoizedState), e === null || (e.memoizedState !== null && e.memoizedState.dehydrated !== null))) {
                if (Me && zt !== null && t.mode & 1 && !(t.flags & 128)) l3(), za(), (t.flags |= 98560), (i = !1);
                else if (((i = Lo(t)), r !== null && r.dehydrated !== null)) {
                    if (e === null) {
                        if (!i) throw Error(j(318));
                        if (((i = t.memoizedState), (i = i !== null ? i.dehydrated : null), !i)) throw Error(j(317));
                        i[Tn] = t;
                    } else za(), !(t.flags & 128) && (t.memoizedState = null), (t.flags |= 4);
                    lt(t), (i = !1);
                } else mn !== null && (Bm(mn), (mn = null)), (i = !0);
                if (!i) return t.flags & 65536 ? t : null;
            }
            return t.flags & 128
                ? ((t.lanes = n), t)
                : ((r = r !== null),
                  r !== (e !== null && e.memoizedState !== null) &&
                      r &&
                      ((t.child.flags |= 8192), t.mode & 1 && (e === null || Be.current & 1 ? Qe === 0 && (Qe = 3) : ag())),
                  t.updateQueue !== null && (t.flags |= 4),
                  lt(t),
                  null);
        case 4:
            return qa(), _m(e, t), e === null && ji(t.stateNode.containerInfo), lt(t), null;
        case 10:
            return $h(t.type._context), lt(t), null;
        case 17:
            return Nt(t.type) && Rl(), lt(t), null;
        case 19:
            if ((De(Be), (i = t.memoizedState), i === null)) return lt(t), null;
            if (((r = (t.flags & 128) !== 0), (o = i.rendering), o === null))
                if (r) fi(i, !1);
                else {
                    if (Qe !== 0 || (e !== null && e.flags & 128))
                        for (e = t.child; e !== null; ) {
                            if (((o = Dl(e)), o !== null)) {
                                for (
                                    t.flags |= 128,
                                        fi(i, !1),
                                        r = o.updateQueue,
                                        r !== null && ((t.updateQueue = r), (t.flags |= 4)),
                                        t.subtreeFlags = 0,
                                        r = n,
                                        n = t.child;
                                    n !== null;

                                )
                                    (i = n),
                                        (e = r),
                                        (i.flags &= 14680066),
                                        (o = i.alternate),
                                        o === null
                                            ? ((i.childLanes = 0),
                                              (i.lanes = e),
                                              (i.child = null),
                                              (i.subtreeFlags = 0),
                                              (i.memoizedProps = null),
                                              (i.memoizedState = null),
                                              (i.updateQueue = null),
                                              (i.dependencies = null),
                                              (i.stateNode = null))
                                            : ((i.childLanes = o.childLanes),
                                              (i.lanes = o.lanes),
                                              (i.child = o.child),
                                              (i.subtreeFlags = 0),
                                              (i.deletions = null),
                                              (i.memoizedProps = o.memoizedProps),
                                              (i.memoizedState = o.memoizedState),
                                              (i.updateQueue = o.updateQueue),
                                              (i.type = o.type),
                                              (e = o.dependencies),
                                              (i.dependencies = e === null ? null : { lanes: e.lanes, firstContext: e.firstContext })),
                                        (n = n.sibling);
                                return _e(Be, (Be.current & 1) | 2), t.child;
                            }
                            e = e.sibling;
                        }
                    i.tail !== null && je() > Ha && ((t.flags |= 128), (r = !0), fi(i, !1), (t.lanes = 4194304));
                }
            else {
                if (!r)
                    if (((e = Dl(o)), e !== null)) {
                        if (
                            ((t.flags |= 128),
                            (r = !0),
                            (n = e.updateQueue),
                            n !== null && ((t.updateQueue = n), (t.flags |= 4)),
                            fi(i, !0),
                            i.tail === null && i.tailMode === "hidden" && !o.alternate && !Me)
                        )
                            return lt(t), null;
                    } else 2 * je() - i.renderingStartTime > Ha && n !== 1073741824 && ((t.flags |= 128), (r = !0), fi(i, !1), (t.lanes = 4194304));
                i.isBackwards ? ((o.sibling = t.child), (t.child = o)) : ((n = i.last), n !== null ? (n.sibling = o) : (t.child = o), (i.last = o));
            }
            return i.tail !== null
                ? ((t = i.tail),
                  (i.rendering = t),
                  (i.tail = t.sibling),
                  (i.renderingStartTime = je()),
                  (t.sibling = null),
                  (n = Be.current),
                  _e(Be, r ? (n & 1) | 2 : n & 1),
                  t)
                : (lt(t), null);
        case 22:
        case 23:
            return (
                rg(),
                (r = t.memoizedState !== null),
                e !== null && (e.memoizedState !== null) !== r && (t.flags |= 8192),
                r && t.mode & 1 ? Pt & 1073741824 && (lt(t), t.subtreeFlags & 6 && (t.flags |= 8192)) : lt(t),
                null
            );
        case 24:
            return null;
        case 25:
            return null;
    }
    throw Error(j(156, t.tag));
}
function g7(e, t) {
    switch ((Ph(t), t.tag)) {
        case 1:
            return Nt(t.type) && Rl(), (e = t.flags), e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null;
        case 3:
            return qa(), De(It), De(dt), Vh(), (e = t.flags), e & 65536 && !(e & 128) ? ((t.flags = (e & -65537) | 128), t) : null;
        case 5:
            return jh(t), null;
        case 13:
            if ((De(Be), (e = t.memoizedState), e !== null && e.dehydrated !== null)) {
                if (t.alternate === null) throw Error(j(340));
                za();
            }
            return (e = t.flags), e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null;
        case 19:
            return De(Be), null;
        case 4:
            return qa(), null;
        case 10:
            return $h(t.type._context), null;
        case 22:
        case 23:
            return rg(), null;
        case 24:
            return null;
        default:
            return null;
    }
}
var Fo = !1,
    st = !1,
    b7 = typeof WeakSet == "function" ? WeakSet : Set,
    te = null;
function xa(e, t) {
    var n = e.ref;
    if (n !== null)
        if (typeof n == "function")
            try {
                n(null);
            } catch (r) {
                Ge(e, t, r);
            }
        else n.current = null;
}
function Cm(e, t, n) {
    try {
        n();
    } catch (r) {
        Ge(e, t, r);
    }
}
var bb = !1;
function y7(e, t) {
    if (((mm = kl), (e = Yk()), Mh(e))) {
        if ("selectionStart" in e) var n = { start: e.selectionStart, end: e.selectionEnd };
        else
            e: {
                n = ((n = e.ownerDocument) && n.defaultView) || window;
                var r = n.getSelection && n.getSelection();
                if (r && r.rangeCount !== 0) {
                    n = r.anchorNode;
                    var a = r.anchorOffset,
                        i = r.focusNode;
                    r = r.focusOffset;
                    try {
                        n.nodeType, i.nodeType;
                    } catch {
                        n = null;
                        break e;
                    }
                    var o = 0,
                        l = -1,
                        s = -1,
                        u = 0,
                        c = 0,
                        d = e,
                        m = null;
                    t: for (;;) {
                        for (
                            var f;
                            d !== n || (a !== 0 && d.nodeType !== 3) || (l = o + a),
                                d !== i || (r !== 0 && d.nodeType !== 3) || (s = o + r),
                                d.nodeType === 3 && (o += d.nodeValue.length),
                                (f = d.firstChild) !== null;

                        )
                            (m = d), (d = f);
                        for (;;) {
                            if (d === e) break t;
                            if ((m === n && ++u === a && (l = o), m === i && ++c === r && (s = o), (f = d.nextSibling) !== null)) break;
                            (d = m), (m = d.parentNode);
                        }
                        d = f;
                    }
                    n = l === -1 || s === -1 ? null : { start: l, end: s };
                } else n = null;
            }
        n = n || { start: 0, end: 0 };
    } else n = null;
    for (hm = { focusedElem: e, selectionRange: n }, kl = !1, te = t; te !== null; )
        if (((t = te), (e = t.child), (t.subtreeFlags & 1028) !== 0 && e !== null)) (e.return = t), (te = e);
        else
            for (; te !== null; ) {
                t = te;
                try {
                    var b = t.alternate;
                    if (t.flags & 1024)
                        switch (t.tag) {
                            case 0:
                            case 11:
                            case 15:
                                break;
                            case 1:
                                if (b !== null) {
                                    var E = b.memoizedProps,
                                        I = b.memoizedState,
                                        y = t.stateNode,
                                        g = y.getSnapshotBeforeUpdate(t.elementType === t.type ? E : dn(t.type, E), I);
                                    y.__reactInternalSnapshotBeforeUpdate = g;
                                }
                                break;
                            case 3:
                                var v = t.stateNode.containerInfo;
                                v.nodeType === 1 ? (v.textContent = "") : v.nodeType === 9 && v.documentElement && v.removeChild(v.documentElement);
                                break;
                            case 5:
                            case 6:
                            case 4:
                            case 17:
                                break;
                            default:
                                throw Error(j(163));
                        }
                } catch (T) {
                    Ge(t, t.return, T);
                }
                if (((e = t.sibling), e !== null)) {
                    (e.return = t.return), (te = e);
                    break;
                }
                te = t.return;
            }
    return (b = bb), (bb = !1), b;
}
function Ci(e, t, n) {
    var r = t.updateQueue;
    if (((r = r !== null ? r.lastEffect : null), r !== null)) {
        var a = (r = r.next);
        do {
            if ((a.tag & e) === e) {
                var i = a.destroy;
                (a.destroy = void 0), i !== void 0 && Cm(t, n, i);
            }
            a = a.next;
        } while (a !== r);
    }
}
function os(e, t) {
    if (((t = t.updateQueue), (t = t !== null ? t.lastEffect : null), t !== null)) {
        var n = (t = t.next);
        do {
            if ((n.tag & e) === e) {
                var r = n.create;
                n.destroy = r();
            }
            n = n.next;
        } while (n !== t);
    }
}
function Om(e) {
    var t = e.ref;
    if (t !== null) {
        var n = e.stateNode;
        switch (e.tag) {
            case 5:
                e = n;
                break;
            default:
                e = n;
        }
        typeof t == "function" ? t(e) : (t.current = e);
    }
}
function H3(e) {
    var t = e.alternate;
    t !== null && ((e.alternate = null), H3(t)),
        (e.child = null),
        (e.deletions = null),
        (e.sibling = null),
        e.tag === 5 && ((t = e.stateNode), t !== null && (delete t[Tn], delete t[Wi], delete t[ym], delete t[e7], delete t[t7])),
        (e.stateNode = null),
        (e.return = null),
        (e.dependencies = null),
        (e.memoizedProps = null),
        (e.memoizedState = null),
        (e.pendingProps = null),
        (e.stateNode = null),
        (e.updateQueue = null);
}
function j3(e) {
    return e.tag === 5 || e.tag === 3 || e.tag === 4;
}
function yb(e) {
    e: for (;;) {
        for (; e.sibling === null; ) {
            if (e.return === null || j3(e.return)) return null;
            e = e.return;
        }
        for (e.sibling.return = e.return, e = e.sibling; e.tag !== 5 && e.tag !== 6 && e.tag !== 18; ) {
            if (e.flags & 2 || e.child === null || e.tag === 4) continue e;
            (e.child.return = e), (e = e.child);
        }
        if (!(e.flags & 2)) return e.stateNode;
    }
}
function Lm(e, t, n) {
    var r = e.tag;
    if (r === 5 || r === 6)
        (e = e.stateNode),
            t
                ? n.nodeType === 8
                    ? n.parentNode.insertBefore(e, t)
                    : n.insertBefore(e, t)
                : (n.nodeType === 8 ? ((t = n.parentNode), t.insertBefore(e, n)) : ((t = n), t.appendChild(e)),
                  (n = n._reactRootContainer),
                  n != null || t.onclick !== null || (t.onclick = xl));
    else if (r !== 4 && ((e = e.child), e !== null)) for (Lm(e, t, n), e = e.sibling; e !== null; ) Lm(e, t, n), (e = e.sibling);
}
function Dm(e, t, n) {
    var r = e.tag;
    if (r === 5 || r === 6) (e = e.stateNode), t ? n.insertBefore(e, t) : n.appendChild(e);
    else if (r !== 4 && ((e = e.child), e !== null)) for (Dm(e, t, n), e = e.sibling; e !== null; ) Dm(e, t, n), (e = e.sibling);
}
var nt = null,
    pn = !1;
function nr(e, t, n) {
    for (n = n.child; n !== null; ) V3(e, t, n), (n = n.sibling);
}
function V3(e, t, n) {
    if (Rn && typeof Rn.onCommitFiberUnmount == "function")
        try {
            Rn.onCommitFiberUnmount(Ql, n);
        } catch {}
    switch (n.tag) {
        case 5:
            st || xa(n, t);
        case 6:
            var r = nt,
                a = pn;
            (nt = null),
                nr(e, t, n),
                (nt = r),
                (pn = a),
                nt !== null &&
                    (pn ? ((e = nt), (n = n.stateNode), e.nodeType === 8 ? e.parentNode.removeChild(n) : e.removeChild(n)) : nt.removeChild(n.stateNode));
            break;
        case 18:
            nt !== null &&
                (pn ? ((e = nt), (n = n.stateNode), e.nodeType === 8 ? Zs(e.parentNode, n) : e.nodeType === 1 && Zs(e, n), qi(e)) : Zs(nt, n.stateNode));
            break;
        case 4:
            (r = nt), (a = pn), (nt = n.stateNode.containerInfo), (pn = !0), nr(e, t, n), (nt = r), (pn = a);
            break;
        case 0:
        case 11:
        case 14:
        case 15:
            if (!st && ((r = n.updateQueue), r !== null && ((r = r.lastEffect), r !== null))) {
                a = r = r.next;
                do {
                    var i = a,
                        o = i.destroy;
                    (i = i.tag), o !== void 0 && (i & 2 || i & 4) && Cm(n, t, o), (a = a.next);
                } while (a !== r);
            }
            nr(e, t, n);
            break;
        case 1:
            if (!st && (xa(n, t), (r = n.stateNode), typeof r.componentWillUnmount == "function"))
                try {
                    (r.props = n.memoizedProps), (r.state = n.memoizedState), r.componentWillUnmount();
                } catch (l) {
                    Ge(n, t, l);
                }
            nr(e, t, n);
            break;
        case 21:
            nr(e, t, n);
            break;
        case 22:
            n.mode & 1 ? ((st = (r = st) || n.memoizedState !== null), nr(e, t, n), (st = r)) : nr(e, t, n);
            break;
        default:
            nr(e, t, n);
    }
}
function vb(e) {
    var t = e.updateQueue;
    if (t !== null) {
        e.updateQueue = null;
        var n = e.stateNode;
        n === null && (n = e.stateNode = new b7()),
            t.forEach(function (r) {
                var a = R7.bind(null, e, r);
                n.has(r) || (n.add(r), r.then(a, a));
            });
    }
}
function cn(e, t) {
    var n = t.deletions;
    if (n !== null)
        for (var r = 0; r < n.length; r++) {
            var a = n[r];
            try {
                var i = e,
                    o = t,
                    l = o;
                e: for (; l !== null; ) {
                    switch (l.tag) {
                        case 5:
                            (nt = l.stateNode), (pn = !1);
                            break e;
                        case 3:
                            (nt = l.stateNode.containerInfo), (pn = !0);
                            break e;
                        case 4:
                            (nt = l.stateNode.containerInfo), (pn = !0);
                            break e;
                    }
                    l = l.return;
                }
                if (nt === null) throw Error(j(160));
                V3(i, o, a), (nt = null), (pn = !1);
                var s = a.alternate;
                s !== null && (s.return = null), (a.return = null);
            } catch (u) {
                Ge(a, t, u);
            }
        }
    if (t.subtreeFlags & 12854) for (t = t.child; t !== null; ) W3(t, e), (t = t.sibling);
}
function W3(e, t) {
    var n = e.alternate,
        r = e.flags;
    switch (e.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
            if ((cn(t, e), vn(e), r & 4)) {
                try {
                    Ci(3, e, e.return), os(3, e);
                } catch (E) {
                    Ge(e, e.return, E);
                }
                try {
                    Ci(5, e, e.return);
                } catch (E) {
                    Ge(e, e.return, E);
                }
            }
            break;
        case 1:
            cn(t, e), vn(e), r & 512 && n !== null && xa(n, n.return);
            break;
        case 5:
            if ((cn(t, e), vn(e), r & 512 && n !== null && xa(n, n.return), e.flags & 32)) {
                var a = e.stateNode;
                try {
                    Bi(a, "");
                } catch (E) {
                    Ge(e, e.return, E);
                }
            }
            if (r & 4 && ((a = e.stateNode), a != null)) {
                var i = e.memoizedProps,
                    o = n !== null ? n.memoizedProps : i,
                    l = e.type,
                    s = e.updateQueue;
                if (((e.updateQueue = null), s !== null))
                    try {
                        l === "input" && i.type === "radio" && i.name != null && hk(a, i), am(l, o);
                        var u = am(l, i);
                        for (o = 0; o < s.length; o += 2) {
                            var c = s[o],
                                d = s[o + 1];
                            c === "style" ? Ek(a, d) : c === "dangerouslySetInnerHTML" ? yk(a, d) : c === "children" ? Bi(a, d) : wh(a, c, d, u);
                        }
                        switch (l) {
                            case "input":
                                Jf(a, i);
                                break;
                            case "textarea":
                                gk(a, i);
                                break;
                            case "select":
                                var m = a._wrapperState.wasMultiple;
                                a._wrapperState.wasMultiple = !!i.multiple;
                                var f = i.value;
                                f != null
                                    ? Na(a, !!i.multiple, f, !1)
                                    : m !== !!i.multiple &&
                                      (i.defaultValue != null ? Na(a, !!i.multiple, i.defaultValue, !0) : Na(a, !!i.multiple, i.multiple ? [] : "", !1));
                        }
                        a[Wi] = i;
                    } catch (E) {
                        Ge(e, e.return, E);
                    }
            }
            break;
        case 6:
            if ((cn(t, e), vn(e), r & 4)) {
                if (e.stateNode === null) throw Error(j(162));
                (a = e.stateNode), (i = e.memoizedProps);
                try {
                    a.nodeValue = i;
                } catch (E) {
                    Ge(e, e.return, E);
                }
            }
            break;
        case 3:
            if ((cn(t, e), vn(e), r & 4 && n !== null && n.memoizedState.isDehydrated))
                try {
                    qi(t.containerInfo);
                } catch (E) {
                    Ge(e, e.return, E);
                }
            break;
        case 4:
            cn(t, e), vn(e);
            break;
        case 13:
            cn(t, e),
                vn(e),
                (a = e.child),
                a.flags & 8192 &&
                    ((i = a.memoizedState !== null),
                    (a.stateNode.isHidden = i),
                    !i || (a.alternate !== null && a.alternate.memoizedState !== null) || (tg = je())),
                r & 4 && vb(e);
            break;
        case 22:
            if (((c = n !== null && n.memoizedState !== null), e.mode & 1 ? ((st = (u = st) || c), cn(t, e), (st = u)) : cn(t, e), vn(e), r & 8192)) {
                if (((u = e.memoizedState !== null), (e.stateNode.isHidden = u) && !c && e.mode & 1))
                    for (te = e, c = e.child; c !== null; ) {
                        for (d = te = c; te !== null; ) {
                            switch (((m = te), (f = m.child), m.tag)) {
                                case 0:
                                case 11:
                                case 14:
                                case 15:
                                    Ci(4, m, m.return);
                                    break;
                                case 1:
                                    xa(m, m.return);
                                    var b = m.stateNode;
                                    if (typeof b.componentWillUnmount == "function") {
                                        (r = m), (n = m.return);
                                        try {
                                            (t = r), (b.props = t.memoizedProps), (b.state = t.memoizedState), b.componentWillUnmount();
                                        } catch (E) {
                                            Ge(r, n, E);
                                        }
                                    }
                                    break;
                                case 5:
                                    xa(m, m.return);
                                    break;
                                case 22:
                                    if (m.memoizedState !== null) {
                                        Sb(d);
                                        continue;
                                    }
                            }
                            f !== null ? ((f.return = m), (te = f)) : Sb(d);
                        }
                        c = c.sibling;
                    }
                e: for (c = null, d = e; ; ) {
                    if (d.tag === 5) {
                        if (c === null) {
                            c = d;
                            try {
                                (a = d.stateNode),
                                    u
                                        ? ((i = a.style),
                                          typeof i.setProperty == "function" ? i.setProperty("display", "none", "important") : (i.display = "none"))
                                        : ((l = d.stateNode),
                                          (s = d.memoizedProps.style),
                                          (o = s != null && s.hasOwnProperty("display") ? s.display : null),
                                          (l.style.display = vk("display", o)));
                            } catch (E) {
                                Ge(e, e.return, E);
                            }
                        }
                    } else if (d.tag === 6) {
                        if (c === null)
                            try {
                                d.stateNode.nodeValue = u ? "" : d.memoizedProps;
                            } catch (E) {
                                Ge(e, e.return, E);
                            }
                    } else if (((d.tag !== 22 && d.tag !== 23) || d.memoizedState === null || d === e) && d.child !== null) {
                        (d.child.return = d), (d = d.child);
                        continue;
                    }
                    if (d === e) break e;
                    for (; d.sibling === null; ) {
                        if (d.return === null || d.return === e) break e;
                        c === d && (c = null), (d = d.return);
                    }
                    c === d && (c = null), (d.sibling.return = d.return), (d = d.sibling);
                }
            }
            break;
        case 19:
            cn(t, e), vn(e), r & 4 && vb(e);
            break;
        case 21:
            break;
        default:
            cn(t, e), vn(e);
    }
}
function vn(e) {
    var t = e.flags;
    if (t & 2) {
        try {
            e: {
                for (var n = e.return; n !== null; ) {
                    if (j3(n)) {
                        var r = n;
                        break e;
                    }
                    n = n.return;
                }
                throw Error(j(160));
            }
            switch (r.tag) {
                case 5:
                    var a = r.stateNode;
                    r.flags & 32 && (Bi(a, ""), (r.flags &= -33));
                    var i = yb(e);
                    Dm(e, i, a);
                    break;
                case 3:
                case 4:
                    var o = r.stateNode.containerInfo,
                        l = yb(e);
                    Lm(e, l, o);
                    break;
                default:
                    throw Error(j(161));
            }
        } catch (s) {
            Ge(e, e.return, s);
        }
        e.flags &= -3;
    }
    t & 4096 && (e.flags &= -4097);
}
function v7(e, t, n) {
    (te = e), Y3(e);
}
function Y3(e, t, n) {
    for (var r = (e.mode & 1) !== 0; te !== null; ) {
        var a = te,
            i = a.child;
        if (a.tag === 22 && r) {
            var o = a.memoizedState !== null || Fo;
            if (!o) {
                var l = a.alternate,
                    s = (l !== null && l.memoizedState !== null) || st;
                l = Fo;
                var u = st;
                if (((Fo = o), (st = s) && !u))
                    for (te = a; te !== null; )
                        (o = te), (s = o.child), o.tag === 22 && o.memoizedState !== null ? wb(a) : s !== null ? ((s.return = o), (te = s)) : wb(a);
                for (; i !== null; ) (te = i), Y3(i), (i = i.sibling);
                (te = a), (Fo = l), (st = u);
            }
            Eb(e);
        } else a.subtreeFlags & 8772 && i !== null ? ((i.return = a), (te = i)) : Eb(e);
    }
}
function Eb(e) {
    for (; te !== null; ) {
        var t = te;
        if (t.flags & 8772) {
            var n = t.alternate;
            try {
                if (t.flags & 8772)
                    switch (t.tag) {
                        case 0:
                        case 11:
                        case 15:
                            st || os(5, t);
                            break;
                        case 1:
                            var r = t.stateNode;
                            if (t.flags & 4 && !st)
                                if (n === null) r.componentDidMount();
                                else {
                                    var a = t.elementType === t.type ? n.memoizedProps : dn(t.type, n.memoizedProps);
                                    r.componentDidUpdate(a, n.memoizedState, r.__reactInternalSnapshotBeforeUpdate);
                                }
                            var i = t.updateQueue;
                            i !== null && ab(t, i, r);
                            break;
                        case 3:
                            var o = t.updateQueue;
                            if (o !== null) {
                                if (((n = null), t.child !== null))
                                    switch (t.child.tag) {
                                        case 5:
                                            n = t.child.stateNode;
                                            break;
                                        case 1:
                                            n = t.child.stateNode;
                                    }
                                ab(t, o, n);
                            }
                            break;
                        case 5:
                            var l = t.stateNode;
                            if (n === null && t.flags & 4) {
                                n = l;
                                var s = t.memoizedProps;
                                switch (t.type) {
                                    case "button":
                                    case "input":
                                    case "select":
                                    case "textarea":
                                        s.autoFocus && n.focus();
                                        break;
                                    case "img":
                                        s.src && (n.src = s.src);
                                }
                            }
                            break;
                        case 6:
                            break;
                        case 4:
                            break;
                        case 12:
                            break;
                        case 13:
                            if (t.memoizedState === null) {
                                var u = t.alternate;
                                if (u !== null) {
                                    var c = u.memoizedState;
                                    if (c !== null) {
                                        var d = c.dehydrated;
                                        d !== null && qi(d);
                                    }
                                }
                            }
                            break;
                        case 19:
                        case 17:
                        case 21:
                        case 22:
                        case 23:
                        case 25:
                            break;
                        default:
                            throw Error(j(163));
                    }
                st || (t.flags & 512 && Om(t));
            } catch (m) {
                Ge(t, t.return, m);
            }
        }
        if (t === e) {
            te = null;
            break;
        }
        if (((n = t.sibling), n !== null)) {
            (n.return = t.return), (te = n);
            break;
        }
        te = t.return;
    }
}
function Sb(e) {
    for (; te !== null; ) {
        var t = te;
        if (t === e) {
            te = null;
            break;
        }
        var n = t.sibling;
        if (n !== null) {
            (n.return = t.return), (te = n);
            break;
        }
        te = t.return;
    }
}
function wb(e) {
    for (; te !== null; ) {
        var t = te;
        try {
            switch (t.tag) {
                case 0:
                case 11:
                case 15:
                    var n = t.return;
                    try {
                        os(4, t);
                    } catch (s) {
                        Ge(t, n, s);
                    }
                    break;
                case 1:
                    var r = t.stateNode;
                    if (typeof r.componentDidMount == "function") {
                        var a = t.return;
                        try {
                            r.componentDidMount();
                        } catch (s) {
                            Ge(t, a, s);
                        }
                    }
                    var i = t.return;
                    try {
                        Om(t);
                    } catch (s) {
                        Ge(t, i, s);
                    }
                    break;
                case 5:
                    var o = t.return;
                    try {
                        Om(t);
                    } catch (s) {
                        Ge(t, o, s);
                    }
            }
        } catch (s) {
            Ge(t, t.return, s);
        }
        if (t === e) {
            te = null;
            break;
        }
        var l = t.sibling;
        if (l !== null) {
            (l.return = t.return), (te = l);
            break;
        }
        te = t.return;
    }
}
var E7 = Math.ceil,
    Pl = Jn.ReactCurrentDispatcher,
    Jh = Jn.ReactCurrentOwner,
    Jt = Jn.ReactCurrentBatchConfig,
    Se = 0,
    tt = null,
    Ye = null,
    rt = 0,
    Pt = 0,
    Ra = Ir(0),
    Qe = 0,
    Ji = null,
    Zr = 0,
    ls = 0,
    eg = 0,
    Oi = null,
    xt = null,
    tg = 0,
    Ha = 1 / 0,
    Pn = null,
    Bl = !1,
    Mm = null,
    vr = null,
    Po = !1,
    dr = null,
    Ul = 0,
    Li = 0,
    Fm = null,
    ul = -1,
    cl = 0;
function yt() {
    return Se & 6 ? je() : ul !== -1 ? ul : (ul = je());
}
function Er(e) {
    return e.mode & 1
        ? Se & 2 && rt !== 0
            ? rt & -rt
            : r7.transition !== null
              ? (cl === 0 && (cl = Ok()), cl)
              : ((e = Ae), e !== 0 || ((e = window.event), (e = e === void 0 ? 16 : Uk(e.type))), e)
        : 1;
}
function gn(e, t, n, r) {
    if (50 < Li) throw ((Li = 0), (Fm = null), Error(j(185)));
    so(e, n, r),
        (!(Se & 2) || e !== tt) &&
            (e === tt && (!(Se & 2) && (ls |= n), Qe === 4 && ur(e, rt)), _t(e, r), n === 1 && Se === 0 && !(t.mode & 1) && ((Ha = je() + 500), rs && Nr()));
}
function _t(e, t) {
    var n = e.callbackNode;
    r5(e, t);
    var r = wl(e, e === tt ? rt : 0);
    if (r === 0) n !== null && C1(n), (e.callbackNode = null), (e.callbackPriority = 0);
    else if (((t = r & -r), e.callbackPriority !== t)) {
        if ((n != null && C1(n), t === 1))
            e.tag === 0 ? n7(kb.bind(null, e)) : a3(kb.bind(null, e)),
                Q5(function () {
                    !(Se & 6) && Nr();
                }),
                (n = null);
        else {
            switch (Lk(r)) {
                case 1:
                    n = Rh;
                    break;
                case 4:
                    n = _k;
                    break;
                case 16:
                    n = Sl;
                    break;
                case 536870912:
                    n = Ck;
                    break;
                default:
                    n = Sl;
            }
            n = nT(n, K3.bind(null, e));
        }
        (e.callbackPriority = t), (e.callbackNode = n);
    }
}
function K3(e, t) {
    if (((ul = -1), (cl = 0), Se & 6)) throw Error(j(327));
    var n = e.callbackNode;
    if (Da() && e.callbackNode !== n) return null;
    var r = wl(e, e === tt ? rt : 0);
    if (r === 0) return null;
    if (r & 30 || r & e.expiredLanes || t) t = zl(e, r);
    else {
        t = r;
        var a = Se;
        Se |= 2;
        var i = Z3();
        (tt !== e || rt !== t) && ((Pn = null), (Ha = je() + 500), Vr(e, t));
        do
            try {
                k7();
                break;
            } catch (l) {
                X3(e, l);
            }
        while (1);
        zh(), (Pl.current = i), (Se = a), Ye !== null ? (t = 0) : ((tt = null), (rt = 0), (t = Qe));
    }
    if (t !== 0) {
        if ((t === 2 && ((a = um(e)), a !== 0 && ((r = a), (t = Pm(e, a)))), t === 1)) throw ((n = Ji), Vr(e, 0), ur(e, r), _t(e, je()), n);
        if (t === 6) ur(e, r);
        else {
            if (((a = e.current.alternate), !(r & 30) && !S7(a) && ((t = zl(e, r)), t === 2 && ((i = um(e)), i !== 0 && ((r = i), (t = Pm(e, i)))), t === 1)))
                throw ((n = Ji), Vr(e, 0), ur(e, r), _t(e, je()), n);
            switch (((e.finishedWork = a), (e.finishedLanes = r), t)) {
                case 0:
                case 1:
                    throw Error(j(345));
                case 2:
                    $r(e, xt, Pn);
                    break;
                case 3:
                    if ((ur(e, r), (r & 130023424) === r && ((t = tg + 500 - je()), 10 < t))) {
                        if (wl(e, 0) !== 0) break;
                        if (((a = e.suspendedLanes), (a & r) !== r)) {
                            yt(), (e.pingedLanes |= e.suspendedLanes & a);
                            break;
                        }
                        e.timeoutHandle = bm($r.bind(null, e, xt, Pn), t);
                        break;
                    }
                    $r(e, xt, Pn);
                    break;
                case 4:
                    if ((ur(e, r), (r & 4194240) === r)) break;
                    for (t = e.eventTimes, a = -1; 0 < r; ) {
                        var o = 31 - hn(r);
                        (i = 1 << o), (o = t[o]), o > a && (a = o), (r &= ~i);
                    }
                    if (
                        ((r = a),
                        (r = je() - r),
                        (r = (120 > r ? 120 : 480 > r ? 480 : 1080 > r ? 1080 : 1920 > r ? 1920 : 3e3 > r ? 3e3 : 4320 > r ? 4320 : 1960 * E7(r / 1960)) - r),
                        10 < r)
                    ) {
                        e.timeoutHandle = bm($r.bind(null, e, xt, Pn), r);
                        break;
                    }
                    $r(e, xt, Pn);
                    break;
                case 5:
                    $r(e, xt, Pn);
                    break;
                default:
                    throw Error(j(329));
            }
        }
    }
    return _t(e, je()), e.callbackNode === n ? K3.bind(null, e) : null;
}
function Pm(e, t) {
    var n = Oi;
    return e.current.memoizedState.isDehydrated && (Vr(e, t).flags |= 256), (e = zl(e, t)), e !== 2 && ((t = xt), (xt = n), t !== null && Bm(t)), e;
}
function Bm(e) {
    xt === null ? (xt = e) : xt.push.apply(xt, e);
}
function S7(e) {
    for (var t = e; ; ) {
        if (t.flags & 16384) {
            var n = t.updateQueue;
            if (n !== null && ((n = n.stores), n !== null))
                for (var r = 0; r < n.length; r++) {
                    var a = n[r],
                        i = a.getSnapshot;
                    a = a.value;
                    try {
                        if (!yn(i(), a)) return !1;
                    } catch {
                        return !1;
                    }
                }
        }
        if (((n = t.child), t.subtreeFlags & 16384 && n !== null)) (n.return = t), (t = n);
        else {
            if (t === e) break;
            for (; t.sibling === null; ) {
                if (t.return === null || t.return === e) return !0;
                t = t.return;
            }
            (t.sibling.return = t.return), (t = t.sibling);
        }
    }
    return !0;
}
function ur(e, t) {
    for (t &= ~eg, t &= ~ls, e.suspendedLanes |= t, e.pingedLanes &= ~t, e = e.expirationTimes; 0 < t; ) {
        var n = 31 - hn(t),
            r = 1 << n;
        (e[n] = -1), (t &= ~r);
    }
}
function kb(e) {
    if (Se & 6) throw Error(j(327));
    Da();
    var t = wl(e, 0);
    if (!(t & 1)) return _t(e, je()), null;
    var n = zl(e, t);
    if (e.tag !== 0 && n === 2) {
        var r = um(e);
        r !== 0 && ((t = r), (n = Pm(e, r)));
    }
    if (n === 1) throw ((n = Ji), Vr(e, 0), ur(e, t), _t(e, je()), n);
    if (n === 6) throw Error(j(345));
    return (e.finishedWork = e.current.alternate), (e.finishedLanes = t), $r(e, xt, Pn), _t(e, je()), null;
}
function ng(e, t) {
    var n = Se;
    Se |= 1;
    try {
        return e(t);
    } finally {
        (Se = n), Se === 0 && ((Ha = je() + 500), rs && Nr());
    }
}
function Qr(e) {
    dr !== null && dr.tag === 0 && !(Se & 6) && Da();
    var t = Se;
    Se |= 1;
    var n = Jt.transition,
        r = Ae;
    try {
        if (((Jt.transition = null), (Ae = 1), e)) return e();
    } finally {
        (Ae = r), (Jt.transition = n), (Se = t), !(Se & 6) && Nr();
    }
}
function rg() {
    (Pt = Ra.current), De(Ra);
}
function Vr(e, t) {
    (e.finishedWork = null), (e.finishedLanes = 0);
    var n = e.timeoutHandle;
    if ((n !== -1 && ((e.timeoutHandle = -1), Z5(n)), Ye !== null))
        for (n = Ye.return; n !== null; ) {
            var r = n;
            switch ((Ph(r), r.tag)) {
                case 1:
                    (r = r.type.childContextTypes), r != null && Rl();
                    break;
                case 3:
                    qa(), De(It), De(dt), Vh();
                    break;
                case 5:
                    jh(r);
                    break;
                case 4:
                    qa();
                    break;
                case 13:
                    De(Be);
                    break;
                case 19:
                    De(Be);
                    break;
                case 10:
                    $h(r.type._context);
                    break;
                case 22:
                case 23:
                    rg();
            }
            n = n.return;
        }
    if (((tt = e), (Ye = e = Sr(e.current, null)), (rt = Pt = t), (Qe = 0), (Ji = null), (eg = ls = Zr = 0), (xt = Oi = null), Hr !== null)) {
        for (t = 0; t < Hr.length; t++)
            if (((n = Hr[t]), (r = n.interleaved), r !== null)) {
                n.interleaved = null;
                var a = r.next,
                    i = n.pending;
                if (i !== null) {
                    var o = i.next;
                    (i.next = a), (r.next = o);
                }
                n.pending = r;
            }
        Hr = null;
    }
    return e;
}
function X3(e, t) {
    do {
        var n = Ye;
        try {
            if ((zh(), (ol.current = Fl), Ml)) {
                for (var r = ze.memoizedState; r !== null; ) {
                    var a = r.queue;
                    a !== null && (a.pending = null), (r = r.next);
                }
                Ml = !1;
            }
            if (((Xr = 0), (et = Ze = ze = null), (_i = !1), (Xi = 0), (Jh.current = null), n === null || n.return === null)) {
                (Qe = 1), (Ji = t), (Ye = null);
                break;
            }
            e: {
                var i = e,
                    o = n.return,
                    l = n,
                    s = t;
                if (((t = rt), (l.flags |= 32768), s !== null && typeof s == "object" && typeof s.then == "function")) {
                    var u = s,
                        c = l,
                        d = c.tag;
                    if (!(c.mode & 1) && (d === 0 || d === 11 || d === 15)) {
                        var m = c.alternate;
                        m
                            ? ((c.updateQueue = m.updateQueue), (c.memoizedState = m.memoizedState), (c.lanes = m.lanes))
                            : ((c.updateQueue = null), (c.memoizedState = null));
                    }
                    var f = cb(o);
                    if (f !== null) {
                        (f.flags &= -257), db(f, o, l, i, t), f.mode & 1 && ub(i, u, t), (t = f), (s = u);
                        var b = t.updateQueue;
                        if (b === null) {
                            var E = new Set();
                            E.add(s), (t.updateQueue = E);
                        } else b.add(s);
                        break e;
                    } else {
                        if (!(t & 1)) {
                            ub(i, u, t), ag();
                            break e;
                        }
                        s = Error(j(426));
                    }
                } else if (Me && l.mode & 1) {
                    var I = cb(o);
                    if (I !== null) {
                        !(I.flags & 65536) && (I.flags |= 256), db(I, o, l, i, t), Bh(Ga(s, l));
                        break e;
                    }
                }
                (i = s = Ga(s, l)), Qe !== 4 && (Qe = 2), Oi === null ? (Oi = [i]) : Oi.push(i), (i = o);
                do {
                    switch (i.tag) {
                        case 3:
                            (i.flags |= 65536), (t &= -t), (i.lanes |= t);
                            var y = L3(i, s, t);
                            rb(i, y);
                            break e;
                        case 1:
                            l = s;
                            var g = i.type,
                                v = i.stateNode;
                            if (
                                !(i.flags & 128) &&
                                (typeof g.getDerivedStateFromError == "function" ||
                                    (v !== null && typeof v.componentDidCatch == "function" && (vr === null || !vr.has(v))))
                            ) {
                                (i.flags |= 65536), (t &= -t), (i.lanes |= t);
                                var T = D3(i, l, t);
                                rb(i, T);
                                break e;
                            }
                    }
                    i = i.return;
                } while (i !== null);
            }
            J3(n);
        } catch (R) {
            (t = R), Ye === n && n !== null && (Ye = n = n.return);
            continue;
        }
        break;
    } while (1);
}
function Z3() {
    var e = Pl.current;
    return (Pl.current = Fl), e === null ? Fl : e;
}
function ag() {
    (Qe === 0 || Qe === 3 || Qe === 2) && (Qe = 4), tt === null || (!(Zr & 268435455) && !(ls & 268435455)) || ur(tt, rt);
}
function zl(e, t) {
    var n = Se;
    Se |= 2;
    var r = Z3();
    (tt !== e || rt !== t) && ((Pn = null), Vr(e, t));
    do
        try {
            w7();
            break;
        } catch (a) {
            X3(e, a);
        }
    while (1);
    if ((zh(), (Se = n), (Pl.current = r), Ye !== null)) throw Error(j(261));
    return (tt = null), (rt = 0), Qe;
}
function w7() {
    for (; Ye !== null; ) Q3(Ye);
}
function k7() {
    for (; Ye !== null && !Y6(); ) Q3(Ye);
}
function Q3(e) {
    var t = tT(e.alternate, e, Pt);
    (e.memoizedProps = e.pendingProps), t === null ? J3(e) : (Ye = t), (Jh.current = null);
}
function J3(e) {
    var t = e;
    do {
        var n = t.alternate;
        if (((e = t.return), t.flags & 32768)) {
            if (((n = g7(n, t)), n !== null)) {
                (n.flags &= 32767), (Ye = n);
                return;
            }
            if (e !== null) (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
            else {
                (Qe = 6), (Ye = null);
                return;
            }
        } else if (((n = h7(n, t, Pt)), n !== null)) {
            Ye = n;
            return;
        }
        if (((t = t.sibling), t !== null)) {
            Ye = t;
            return;
        }
        Ye = t = e;
    } while (t !== null);
    Qe === 0 && (Qe = 5);
}
function $r(e, t, n) {
    var r = Ae,
        a = Jt.transition;
    try {
        (Jt.transition = null), (Ae = 1), T7(e, t, n, r);
    } finally {
        (Jt.transition = a), (Ae = r);
    }
    return null;
}
function T7(e, t, n, r) {
    do Da();
    while (dr !== null);
    if (Se & 6) throw Error(j(327));
    n = e.finishedWork;
    var a = e.finishedLanes;
    if (n === null) return null;
    if (((e.finishedWork = null), (e.finishedLanes = 0), n === e.current)) throw Error(j(177));
    (e.callbackNode = null), (e.callbackPriority = 0);
    var i = n.lanes | n.childLanes;
    if (
        (a5(e, i),
        e === tt && ((Ye = tt = null), (rt = 0)),
        (!(n.subtreeFlags & 2064) && !(n.flags & 2064)) ||
            Po ||
            ((Po = !0),
            nT(Sl, function () {
                return Da(), null;
            })),
        (i = (n.flags & 15990) !== 0),
        n.subtreeFlags & 15990 || i)
    ) {
        (i = Jt.transition), (Jt.transition = null);
        var o = Ae;
        Ae = 1;
        var l = Se;
        (Se |= 4),
            (Jh.current = null),
            y7(e, n),
            W3(n, e),
            H5(hm),
            (kl = !!mm),
            (hm = mm = null),
            (e.current = n),
            v7(n),
            K6(),
            (Se = l),
            (Ae = o),
            (Jt.transition = i);
    } else e.current = n;
    if ((Po && ((Po = !1), (dr = e), (Ul = a)), (i = e.pendingLanes), i === 0 && (vr = null), Q6(n.stateNode), _t(e, je()), t !== null))
        for (r = e.onRecoverableError, n = 0; n < t.length; n++) (a = t[n]), r(a.value, { componentStack: a.stack, digest: a.digest });
    if (Bl) throw ((Bl = !1), (e = Mm), (Mm = null), e);
    return Ul & 1 && e.tag !== 0 && Da(), (i = e.pendingLanes), i & 1 ? (e === Fm ? Li++ : ((Li = 0), (Fm = e))) : (Li = 0), Nr(), null;
}
function Da() {
    if (dr !== null) {
        var e = Lk(Ul),
            t = Jt.transition,
            n = Ae;
        try {
            if (((Jt.transition = null), (Ae = 16 > e ? 16 : e), dr === null)) var r = !1;
            else {
                if (((e = dr), (dr = null), (Ul = 0), Se & 6)) throw Error(j(331));
                var a = Se;
                for (Se |= 4, te = e.current; te !== null; ) {
                    var i = te,
                        o = i.child;
                    if (te.flags & 16) {
                        var l = i.deletions;
                        if (l !== null) {
                            for (var s = 0; s < l.length; s++) {
                                var u = l[s];
                                for (te = u; te !== null; ) {
                                    var c = te;
                                    switch (c.tag) {
                                        case 0:
                                        case 11:
                                        case 15:
                                            Ci(8, c, i);
                                    }
                                    var d = c.child;
                                    if (d !== null) (d.return = c), (te = d);
                                    else
                                        for (; te !== null; ) {
                                            c = te;
                                            var m = c.sibling,
                                                f = c.return;
                                            if ((H3(c), c === u)) {
                                                te = null;
                                                break;
                                            }
                                            if (m !== null) {
                                                (m.return = f), (te = m);
                                                break;
                                            }
                                            te = f;
                                        }
                                }
                            }
                            var b = i.alternate;
                            if (b !== null) {
                                var E = b.child;
                                if (E !== null) {
                                    b.child = null;
                                    do {
                                        var I = E.sibling;
                                        (E.sibling = null), (E = I);
                                    } while (E !== null);
                                }
                            }
                            te = i;
                        }
                    }
                    if (i.subtreeFlags & 2064 && o !== null) (o.return = i), (te = o);
                    else
                        e: for (; te !== null; ) {
                            if (((i = te), i.flags & 2048))
                                switch (i.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                        Ci(9, i, i.return);
                                }
                            var y = i.sibling;
                            if (y !== null) {
                                (y.return = i.return), (te = y);
                                break e;
                            }
                            te = i.return;
                        }
                }
                var g = e.current;
                for (te = g; te !== null; ) {
                    o = te;
                    var v = o.child;
                    if (o.subtreeFlags & 2064 && v !== null) (v.return = o), (te = v);
                    else
                        e: for (o = g; te !== null; ) {
                            if (((l = te), l.flags & 2048))
                                try {
                                    switch (l.tag) {
                                        case 0:
                                        case 11:
                                        case 15:
                                            os(9, l);
                                    }
                                } catch (R) {
                                    Ge(l, l.return, R);
                                }
                            if (l === o) {
                                te = null;
                                break e;
                            }
                            var T = l.sibling;
                            if (T !== null) {
                                (T.return = l.return), (te = T);
                                break e;
                            }
                            te = l.return;
                        }
                }
                if (((Se = a), Nr(), Rn && typeof Rn.onPostCommitFiberRoot == "function"))
                    try {
                        Rn.onPostCommitFiberRoot(Ql, e);
                    } catch {}
                r = !0;
            }
            return r;
        } finally {
            (Ae = n), (Jt.transition = t);
        }
    }
    return !1;
}
function Tb(e, t, n) {
    (t = Ga(n, t)), (t = L3(e, t, 1)), (e = yr(e, t, 1)), (t = yt()), e !== null && (so(e, 1, t), _t(e, t));
}
function Ge(e, t, n) {
    if (e.tag === 3) Tb(e, e, n);
    else
        for (; t !== null; ) {
            if (t.tag === 3) {
                Tb(t, e, n);
                break;
            } else if (t.tag === 1) {
                var r = t.stateNode;
                if (typeof t.type.getDerivedStateFromError == "function" || (typeof r.componentDidCatch == "function" && (vr === null || !vr.has(r)))) {
                    (e = Ga(n, e)), (e = D3(t, e, 1)), (t = yr(t, e, 1)), (e = yt()), t !== null && (so(t, 1, e), _t(t, e));
                    break;
                }
            }
            t = t.return;
        }
}
function A7(e, t, n) {
    var r = e.pingCache;
    r !== null && r.delete(t),
        (t = yt()),
        (e.pingedLanes |= e.suspendedLanes & n),
        tt === e && (rt & n) === n && (Qe === 4 || (Qe === 3 && (rt & 130023424) === rt && 500 > je() - tg) ? Vr(e, 0) : (eg |= n)),
        _t(e, t);
}
function eT(e, t) {
    t === 0 && (e.mode & 1 ? ((t = Ro), (Ro <<= 1), !(Ro & 130023424) && (Ro = 4194304)) : (t = 1));
    var n = yt();
    (e = Yn(e, t)), e !== null && (so(e, t, n), _t(e, n));
}
function x7(e) {
    var t = e.memoizedState,
        n = 0;
    t !== null && (n = t.retryLane), eT(e, n);
}
function R7(e, t) {
    var n = 0;
    switch (e.tag) {
        case 13:
            var r = e.stateNode,
                a = e.memoizedState;
            a !== null && (n = a.retryLane);
            break;
        case 19:
            r = e.stateNode;
            break;
        default:
            throw Error(j(314));
    }
    r !== null && r.delete(t), eT(e, n);
}
var tT;
tT = function (e, t, n) {
    if (e !== null)
        if (e.memoizedProps !== t.pendingProps || It.current) Rt = !0;
        else {
            if (!(e.lanes & n) && !(t.flags & 128)) return (Rt = !1), m7(e, t, n);
            Rt = !!(e.flags & 131072);
        }
    else (Rt = !1), Me && t.flags & 1048576 && i3(t, _l, t.index);
    switch (((t.lanes = 0), t.tag)) {
        case 2:
            var r = t.type;
            sl(e, t), (e = t.pendingProps);
            var a = Ua(t, dt.current);
            La(t, n), (a = Yh(null, t, r, e, a, n));
            var i = Kh();
            return (
                (t.flags |= 1),
                typeof a == "object" && a !== null && typeof a.render == "function" && a.$$typeof === void 0
                    ? ((t.tag = 1),
                      (t.memoizedState = null),
                      (t.updateQueue = null),
                      Nt(r) ? ((i = !0), Il(t)) : (i = !1),
                      (t.memoizedState = a.state !== null && a.state !== void 0 ? a.state : null),
                      Gh(t),
                      (a.updater = is),
                      (t.stateNode = a),
                      (a._reactInternals = t),
                      Tm(t, r, e, n),
                      (t = Rm(null, t, r, !0, i, n)))
                    : ((t.tag = 0), Me && i && Fh(t), ht(null, t, a, n), (t = t.child)),
                t
            );
        case 16:
            r = t.elementType;
            e: {
                switch ((sl(e, t), (e = t.pendingProps), (a = r._init), (r = a(r._payload)), (t.type = r), (a = t.tag = N7(r)), (e = dn(r, e)), a)) {
                    case 0:
                        t = xm(null, t, r, e, n);
                        break e;
                    case 1:
                        t = mb(null, t, r, e, n);
                        break e;
                    case 11:
                        t = pb(null, t, r, e, n);
                        break e;
                    case 14:
                        t = fb(null, t, r, dn(r.type, e), n);
                        break e;
                }
                throw Error(j(306, r, ""));
            }
            return t;
        case 0:
            return (r = t.type), (a = t.pendingProps), (a = t.elementType === r ? a : dn(r, a)), xm(e, t, r, a, n);
        case 1:
            return (r = t.type), (a = t.pendingProps), (a = t.elementType === r ? a : dn(r, a)), mb(e, t, r, a, n);
        case 3:
            e: {
                if ((B3(t), e === null)) throw Error(j(387));
                (r = t.pendingProps), (i = t.memoizedState), (a = i.element), d3(e, t), Ll(t, r, null, n);
                var o = t.memoizedState;
                if (((r = o.element), i.isDehydrated))
                    if (
                        ((i = {
                            element: r,
                            isDehydrated: !1,
                            cache: o.cache,
                            pendingSuspenseBoundaries: o.pendingSuspenseBoundaries,
                            transitions: o.transitions,
                        }),
                        (t.updateQueue.baseState = i),
                        (t.memoizedState = i),
                        t.flags & 256)
                    ) {
                        (a = Ga(Error(j(423)), t)), (t = hb(e, t, r, n, a));
                        break e;
                    } else if (r !== a) {
                        (a = Ga(Error(j(424)), t)), (t = hb(e, t, r, n, a));
                        break e;
                    } else
                        for (zt = br(t.stateNode.containerInfo.firstChild), $t = t, Me = !0, mn = null, n = u3(t, null, r, n), t.child = n; n; )
                            (n.flags = (n.flags & -3) | 4096), (n = n.sibling);
                else {
                    if ((za(), r === a)) {
                        t = Kn(e, t, n);
                        break e;
                    }
                    ht(e, t, r, n);
                }
                t = t.child;
            }
            return t;
        case 5:
            return (
                p3(t),
                e === null && Sm(t),
                (r = t.type),
                (a = t.pendingProps),
                (i = e !== null ? e.memoizedProps : null),
                (o = a.children),
                gm(r, a) ? (o = null) : i !== null && gm(r, i) && (t.flags |= 32),
                P3(e, t),
                ht(e, t, o, n),
                t.child
            );
        case 6:
            return e === null && Sm(t), null;
        case 13:
            return U3(e, t, n);
        case 4:
            return Hh(t, t.stateNode.containerInfo), (r = t.pendingProps), e === null ? (t.child = $a(t, null, r, n)) : ht(e, t, r, n), t.child;
        case 11:
            return (r = t.type), (a = t.pendingProps), (a = t.elementType === r ? a : dn(r, a)), pb(e, t, r, a, n);
        case 7:
            return ht(e, t, t.pendingProps, n), t.child;
        case 8:
            return ht(e, t, t.pendingProps.children, n), t.child;
        case 12:
            return ht(e, t, t.pendingProps.children, n), t.child;
        case 10:
            e: {
                if (
                    ((r = t.type._context),
                    (a = t.pendingProps),
                    (i = t.memoizedProps),
                    (o = a.value),
                    _e(Cl, r._currentValue),
                    (r._currentValue = o),
                    i !== null)
                )
                    if (yn(i.value, o)) {
                        if (i.children === a.children && !It.current) {
                            t = Kn(e, t, n);
                            break e;
                        }
                    } else
                        for (i = t.child, i !== null && (i.return = t); i !== null; ) {
                            var l = i.dependencies;
                            if (l !== null) {
                                o = i.child;
                                for (var s = l.firstContext; s !== null; ) {
                                    if (s.context === r) {
                                        if (i.tag === 1) {
                                            (s = Gn(-1, n & -n)), (s.tag = 2);
                                            var u = i.updateQueue;
                                            if (u !== null) {
                                                u = u.shared;
                                                var c = u.pending;
                                                c === null ? (s.next = s) : ((s.next = c.next), (c.next = s)), (u.pending = s);
                                            }
                                        }
                                        (i.lanes |= n), (s = i.alternate), s !== null && (s.lanes |= n), wm(i.return, n, t), (l.lanes |= n);
                                        break;
                                    }
                                    s = s.next;
                                }
                            } else if (i.tag === 10) o = i.type === t.type ? null : i.child;
                            else if (i.tag === 18) {
                                if (((o = i.return), o === null)) throw Error(j(341));
                                (o.lanes |= n), (l = o.alternate), l !== null && (l.lanes |= n), wm(o, n, t), (o = i.sibling);
                            } else o = i.child;
                            if (o !== null) o.return = i;
                            else
                                for (o = i; o !== null; ) {
                                    if (o === t) {
                                        o = null;
                                        break;
                                    }
                                    if (((i = o.sibling), i !== null)) {
                                        (i.return = o.return), (o = i);
                                        break;
                                    }
                                    o = o.return;
                                }
                            i = o;
                        }
                ht(e, t, a.children, n), (t = t.child);
            }
            return t;
        case 9:
            return (a = t.type), (r = t.pendingProps.children), La(t, n), (a = tn(a)), (r = r(a)), (t.flags |= 1), ht(e, t, r, n), t.child;
        case 14:
            return (r = t.type), (a = dn(r, t.pendingProps)), (a = dn(r.type, a)), fb(e, t, r, a, n);
        case 15:
            return M3(e, t, t.type, t.pendingProps, n);
        case 17:
            return (
                (r = t.type),
                (a = t.pendingProps),
                (a = t.elementType === r ? a : dn(r, a)),
                sl(e, t),
                (t.tag = 1),
                Nt(r) ? ((e = !0), Il(t)) : (e = !1),
                La(t, n),
                O3(t, r, a),
                Tm(t, r, a, n),
                Rm(null, t, r, !0, e, n)
            );
        case 19:
            return z3(e, t, n);
        case 22:
            return F3(e, t, n);
    }
    throw Error(j(156, t.tag));
};
function nT(e, t) {
    return Nk(e, t);
}
function I7(e, t, n, r) {
    (this.tag = e),
        (this.key = n),
        (this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null),
        (this.index = 0),
        (this.ref = null),
        (this.pendingProps = t),
        (this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null),
        (this.mode = r),
        (this.subtreeFlags = this.flags = 0),
        (this.deletions = null),
        (this.childLanes = this.lanes = 0),
        (this.alternate = null);
}
function Zt(e, t, n, r) {
    return new I7(e, t, n, r);
}
function ig(e) {
    return (e = e.prototype), !(!e || !e.isReactComponent);
}
function N7(e) {
    if (typeof e == "function") return ig(e) ? 1 : 0;
    if (e != null) {
        if (((e = e.$$typeof), e === Th)) return 11;
        if (e === Ah) return 14;
    }
    return 2;
}
function Sr(e, t) {
    var n = e.alternate;
    return (
        n === null
            ? ((n = Zt(e.tag, t, e.key, e.mode)),
              (n.elementType = e.elementType),
              (n.type = e.type),
              (n.stateNode = e.stateNode),
              (n.alternate = e),
              (e.alternate = n))
            : ((n.pendingProps = t), (n.type = e.type), (n.flags = 0), (n.subtreeFlags = 0), (n.deletions = null)),
        (n.flags = e.flags & 14680064),
        (n.childLanes = e.childLanes),
        (n.lanes = e.lanes),
        (n.child = e.child),
        (n.memoizedProps = e.memoizedProps),
        (n.memoizedState = e.memoizedState),
        (n.updateQueue = e.updateQueue),
        (t = e.dependencies),
        (n.dependencies = t === null ? null : { lanes: t.lanes, firstContext: t.firstContext }),
        (n.sibling = e.sibling),
        (n.index = e.index),
        (n.ref = e.ref),
        n
    );
}
function dl(e, t, n, r, a, i) {
    var o = 2;
    if (((r = e), typeof e == "function")) ig(e) && (o = 1);
    else if (typeof e == "string") o = 5;
    else
        e: switch (e) {
            case ba:
                return Wr(n.children, a, i, t);
            case kh:
                (o = 8), (a |= 8);
                break;
            case Yf:
                return (e = Zt(12, n, t, a | 2)), (e.elementType = Yf), (e.lanes = i), e;
            case Kf:
                return (e = Zt(13, n, t, a)), (e.elementType = Kf), (e.lanes = i), e;
            case Xf:
                return (e = Zt(19, n, t, a)), (e.elementType = Xf), (e.lanes = i), e;
            case pk:
                return ss(n, a, i, t);
            default:
                if (typeof e == "object" && e !== null)
                    switch (e.$$typeof) {
                        case ck:
                            o = 10;
                            break e;
                        case dk:
                            o = 9;
                            break e;
                        case Th:
                            o = 11;
                            break e;
                        case Ah:
                            o = 14;
                            break e;
                        case or:
                            (o = 16), (r = null);
                            break e;
                    }
                throw Error(j(130, e == null ? e : typeof e, ""));
        }
    return (t = Zt(o, n, t, a)), (t.elementType = e), (t.type = r), (t.lanes = i), t;
}
function Wr(e, t, n, r) {
    return (e = Zt(7, e, r, t)), (e.lanes = n), e;
}
function ss(e, t, n, r) {
    return (e = Zt(22, e, r, t)), (e.elementType = pk), (e.lanes = n), (e.stateNode = { isHidden: !1 }), e;
}
function iu(e, t, n) {
    return (e = Zt(6, e, null, t)), (e.lanes = n), e;
}
function ou(e, t, n) {
    return (
        (t = Zt(4, e.children !== null ? e.children : [], e.key, t)),
        (t.lanes = n),
        (t.stateNode = { containerInfo: e.containerInfo, pendingChildren: null, implementation: e.implementation }),
        t
    );
}
function _7(e, t, n, r, a) {
    (this.tag = t),
        (this.containerInfo = e),
        (this.finishedWork = this.pingCache = this.current = this.pendingChildren = null),
        (this.timeoutHandle = -1),
        (this.callbackNode = this.pendingContext = this.context = null),
        (this.callbackPriority = 0),
        (this.eventTimes = zs(0)),
        (this.expirationTimes = zs(-1)),
        (this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0),
        (this.entanglements = zs(0)),
        (this.identifierPrefix = r),
        (this.onRecoverableError = a),
        (this.mutableSourceEagerHydrationData = null);
}
function og(e, t, n, r, a, i, o, l, s) {
    return (
        (e = new _7(e, t, n, l, s)),
        t === 1 ? ((t = 1), i === !0 && (t |= 8)) : (t = 0),
        (i = Zt(3, null, null, t)),
        (e.current = i),
        (i.stateNode = e),
        (i.memoizedState = { element: r, isDehydrated: n, cache: null, transitions: null, pendingSuspenseBoundaries: null }),
        Gh(i),
        e
    );
}
function C7(e, t, n) {
    var r = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return { $$typeof: ga, key: r == null ? null : "" + r, children: e, containerInfo: t, implementation: n };
}
function rT(e) {
    if (!e) return kr;
    e = e._reactInternals;
    e: {
        if (ta(e) !== e || e.tag !== 1) throw Error(j(170));
        var t = e;
        do {
            switch (t.tag) {
                case 3:
                    t = t.stateNode.context;
                    break e;
                case 1:
                    if (Nt(t.type)) {
                        t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                        break e;
                    }
            }
            t = t.return;
        } while (t !== null);
        throw Error(j(171));
    }
    if (e.tag === 1) {
        var n = e.type;
        if (Nt(n)) return r3(e, n, t);
    }
    return t;
}
function aT(e, t, n, r, a, i, o, l, s) {
    return (
        (e = og(n, r, !0, e, a, i, o, l, s)),
        (e.context = rT(null)),
        (n = e.current),
        (r = yt()),
        (a = Er(n)),
        (i = Gn(r, a)),
        (i.callback = t ?? null),
        yr(n, i, a),
        (e.current.lanes = a),
        so(e, a, r),
        _t(e, r),
        e
    );
}
function us(e, t, n, r) {
    var a = t.current,
        i = yt(),
        o = Er(a);
    return (
        (n = rT(n)),
        t.context === null ? (t.context = n) : (t.pendingContext = n),
        (t = Gn(i, o)),
        (t.payload = { element: e }),
        (r = r === void 0 ? null : r),
        r !== null && (t.callback = r),
        (e = yr(a, t, o)),
        e !== null && (gn(e, a, o, i), il(e, a, o)),
        o
    );
}
function $l(e) {
    if (((e = e.current), !e.child)) return null;
    switch (e.child.tag) {
        case 5:
            return e.child.stateNode;
        default:
            return e.child.stateNode;
    }
}
function Ab(e, t) {
    if (((e = e.memoizedState), e !== null && e.dehydrated !== null)) {
        var n = e.retryLane;
        e.retryLane = n !== 0 && n < t ? n : t;
    }
}
function lg(e, t) {
    Ab(e, t), (e = e.alternate) && Ab(e, t);
}
function O7() {
    return null;
}
var iT =
    typeof reportError == "function"
        ? reportError
        : function (e) {
              console.error(e);
          };
function sg(e) {
    this._internalRoot = e;
}
cs.prototype.render = sg.prototype.render = function (e) {
    var t = this._internalRoot;
    if (t === null) throw Error(j(409));
    us(e, t, null, null);
};
cs.prototype.unmount = sg.prototype.unmount = function () {
    var e = this._internalRoot;
    if (e !== null) {
        this._internalRoot = null;
        var t = e.containerInfo;
        Qr(function () {
            us(null, e, null, null);
        }),
            (t[Wn] = null);
    }
};
function cs(e) {
    this._internalRoot = e;
}
cs.prototype.unstable_scheduleHydration = function (e) {
    if (e) {
        var t = Fk();
        e = { blockedOn: null, target: e, priority: t };
        for (var n = 0; n < sr.length && t !== 0 && t < sr[n].priority; n++);
        sr.splice(n, 0, e), n === 0 && Bk(e);
    }
};
function ug(e) {
    return !(!e || (e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11));
}
function ds(e) {
    return !(!e || (e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11 && (e.nodeType !== 8 || e.nodeValue !== " react-mount-point-unstable ")));
}
function xb() {}
function L7(e, t, n, r, a) {
    if (a) {
        if (typeof r == "function") {
            var i = r;
            r = function () {
                var u = $l(o);
                i.call(u);
            };
        }
        var o = aT(t, r, e, 0, null, !1, !1, "", xb);
        return (e._reactRootContainer = o), (e[Wn] = o.current), ji(e.nodeType === 8 ? e.parentNode : e), Qr(), o;
    }
    for (; (a = e.lastChild); ) e.removeChild(a);
    if (typeof r == "function") {
        var l = r;
        r = function () {
            var u = $l(s);
            l.call(u);
        };
    }
    var s = og(e, 0, !1, null, null, !1, !1, "", xb);
    return (
        (e._reactRootContainer = s),
        (e[Wn] = s.current),
        ji(e.nodeType === 8 ? e.parentNode : e),
        Qr(function () {
            us(t, s, n, r);
        }),
        s
    );
}
function ps(e, t, n, r, a) {
    var i = n._reactRootContainer;
    if (i) {
        var o = i;
        if (typeof a == "function") {
            var l = a;
            a = function () {
                var s = $l(o);
                l.call(s);
            };
        }
        us(t, o, e, a);
    } else o = L7(n, t, e, a, r);
    return $l(o);
}
Dk = function (e) {
    switch (e.tag) {
        case 3:
            var t = e.stateNode;
            if (t.current.memoizedState.isDehydrated) {
                var n = Ei(t.pendingLanes);
                n !== 0 && (Ih(t, n | 1), _t(t, je()), !(Se & 6) && ((Ha = je() + 500), Nr()));
            }
            break;
        case 13:
            Qr(function () {
                var r = Yn(e, 1);
                if (r !== null) {
                    var a = yt();
                    gn(r, e, 1, a);
                }
            }),
                lg(e, 1);
    }
};
Nh = function (e) {
    if (e.tag === 13) {
        var t = Yn(e, 134217728);
        if (t !== null) {
            var n = yt();
            gn(t, e, 134217728, n);
        }
        lg(e, 134217728);
    }
};
Mk = function (e) {
    if (e.tag === 13) {
        var t = Er(e),
            n = Yn(e, t);
        if (n !== null) {
            var r = yt();
            gn(n, e, t, r);
        }
        lg(e, t);
    }
};
Fk = function () {
    return Ae;
};
Pk = function (e, t) {
    var n = Ae;
    try {
        return (Ae = e), t();
    } finally {
        Ae = n;
    }
};
om = function (e, t, n) {
    switch (t) {
        case "input":
            if ((Jf(e, n), (t = n.name), n.type === "radio" && t != null)) {
                for (n = e; n.parentNode; ) n = n.parentNode;
                for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'), t = 0; t < n.length; t++) {
                    var r = n[t];
                    if (r !== e && r.form === e.form) {
                        var a = ns(r);
                        if (!a) throw Error(j(90));
                        mk(r), Jf(r, a);
                    }
                }
            }
            break;
        case "textarea":
            gk(e, n);
            break;
        case "select":
            (t = n.value), t != null && Na(e, !!n.multiple, t, !1);
    }
};
kk = ng;
Tk = Qr;
var D7 = { usingClientEntryPoint: !1, Events: [co, Sa, ns, Sk, wk, ng] },
    mi = { findFiberByHostInstance: Gr, bundleType: 0, version: "18.3.1", rendererPackageName: "react-dom" },
    M7 = {
        bundleType: mi.bundleType,
        version: mi.version,
        rendererPackageName: mi.rendererPackageName,
        rendererConfig: mi.rendererConfig,
        overrideHookState: null,
        overrideHookStateDeletePath: null,
        overrideHookStateRenamePath: null,
        overrideProps: null,
        overridePropsDeletePath: null,
        overridePropsRenamePath: null,
        setErrorHandler: null,
        setSuspenseHandler: null,
        scheduleUpdate: null,
        currentDispatcherRef: Jn.ReactCurrentDispatcher,
        findHostInstanceByFiber: function (e) {
            return (e = Rk(e)), e === null ? null : e.stateNode;
        },
        findFiberByHostInstance: mi.findFiberByHostInstance || O7,
        findHostInstancesForRefresh: null,
        scheduleRefresh: null,
        scheduleRoot: null,
        setRefreshHandler: null,
        getCurrentFiber: null,
        reconcilerVersion: "18.3.1-next-f1338f8080-20240426",
    };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var Bo = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!Bo.isDisabled && Bo.supportsFiber)
        try {
            (Ql = Bo.inject(M7)), (Rn = Bo);
        } catch {}
}
Ht.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = D7;
Ht.createPortal = function (e, t) {
    var n = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!ug(t)) throw Error(j(200));
    return C7(e, t, null, n);
};
Ht.createRoot = function (e, t) {
    if (!ug(e)) throw Error(j(299));
    var n = !1,
        r = "",
        a = iT;
    return (
        t != null &&
            (t.unstable_strictMode === !0 && (n = !0),
            t.identifierPrefix !== void 0 && (r = t.identifierPrefix),
            t.onRecoverableError !== void 0 && (a = t.onRecoverableError)),
        (t = og(e, 1, !1, null, null, n, !1, r, a)),
        (e[Wn] = t.current),
        ji(e.nodeType === 8 ? e.parentNode : e),
        new sg(t)
    );
};
Ht.findDOMNode = function (e) {
    if (e == null) return null;
    if (e.nodeType === 1) return e;
    var t = e._reactInternals;
    if (t === void 0) throw typeof e.render == "function" ? Error(j(188)) : ((e = Object.keys(e).join(",")), Error(j(268, e)));
    return (e = Rk(t)), (e = e === null ? null : e.stateNode), e;
};
Ht.flushSync = function (e) {
    return Qr(e);
};
Ht.hydrate = function (e, t, n) {
    if (!ds(t)) throw Error(j(200));
    return ps(null, e, t, !0, n);
};
Ht.hydrateRoot = function (e, t, n) {
    if (!ug(e)) throw Error(j(405));
    var r = (n != null && n.hydratedSources) || null,
        a = !1,
        i = "",
        o = iT;
    if (
        (n != null &&
            (n.unstable_strictMode === !0 && (a = !0),
            n.identifierPrefix !== void 0 && (i = n.identifierPrefix),
            n.onRecoverableError !== void 0 && (o = n.onRecoverableError)),
        (t = aT(t, null, e, 1, n ?? null, a, !1, i, o)),
        (e[Wn] = t.current),
        ji(e),
        r)
    )
        for (e = 0; e < r.length; e++)
            (n = r[e]),
                (a = n._getVersion),
                (a = a(n._source)),
                t.mutableSourceEagerHydrationData == null ? (t.mutableSourceEagerHydrationData = [n, a]) : t.mutableSourceEagerHydrationData.push(n, a);
    return new cs(t);
};
Ht.render = function (e, t, n) {
    if (!ds(t)) throw Error(j(200));
    return ps(null, e, t, !1, n);
};
Ht.unmountComponentAtNode = function (e) {
    if (!ds(e)) throw Error(j(40));
    return e._reactRootContainer
        ? (Qr(function () {
              ps(null, null, e, !1, function () {
                  (e._reactRootContainer = null), (e[Wn] = null);
              });
          }),
          !0)
        : !1;
};
Ht.unstable_batchedUpdates = ng;
Ht.unstable_renderSubtreeIntoContainer = function (e, t, n, r) {
    if (!ds(n)) throw Error(j(200));
    if (e == null || e._reactInternals === void 0) throw Error(j(38));
    return ps(e, t, n, !1, r);
};
Ht.version = "18.3.1-next-f1338f8080-20240426";
function oT() {
    if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"))
        try {
            __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(oT);
        } catch (e) {
            console.error(e);
        }
}
oT(), (ok.exports = Ht);
var F7 = ok.exports,
    Rb = F7;
(Vf.createRoot = Rb.createRoot), (Vf.hydrateRoot = Rb.hydrateRoot);
function P7(e, t) {
    if (e == null) return {};
    var n = {};
    for (var r in e)
        if ({}.hasOwnProperty.call(e, r)) {
            if (t.indexOf(r) !== -1) continue;
            n[r] = e[r];
        }
    return n;
}
function B7(e, t) {
    if (e == null) return {};
    var n,
        r,
        a = P7(e, t);
    if (Object.getOwnPropertySymbols) {
        var i = Object.getOwnPropertySymbols(e);
        for (r = 0; r < i.length; r++) (n = i[r]), t.indexOf(n) === -1 && {}.propertyIsEnumerable.call(e, n) && (a[n] = e[n]);
    }
    return a;
}
function Um(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];
    return r;
}
function U7(e) {
    if (Array.isArray(e)) return Um(e);
}
function z7(e) {
    if ((typeof Symbol < "u" && e[Symbol.iterator] != null) || e["@@iterator"] != null) return Array.from(e);
}
function $7(e, t) {
    if (e) {
        if (typeof e == "string") return Um(e, t);
        var n = {}.toString.call(e).slice(8, -1);
        return (
            n === "Object" && e.constructor && (n = e.constructor.name),
            n === "Map" || n === "Set" ? Array.from(e) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Um(e, t) : void 0
        );
    }
}
function q7() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function zm(e) {
    return U7(e) || z7(e) || $7(e) || q7();
}
function eo(e) {
    "@babel/helpers - typeof";
    return (
        (eo =
            typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
                ? function (t) {
                      return typeof t;
                  }
                : function (t) {
                      return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                  }),
        eo(e)
    );
}
function G7(e, t) {
    if (eo(e) != "object" || !e) return e;
    var n = e[Symbol.toPrimitive];
    if (n !== void 0) {
        var r = n.call(e, t || "default");
        if (eo(r) != "object") return r;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (t === "string" ? String : Number)(e);
}
function H7(e) {
    var t = G7(e, "string");
    return eo(t) == "symbol" ? t : t + "";
}
function lT(e, t, n) {
    return (t = H7(t)) in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : (e[t] = n), e;
}
function $m() {
    return (
        ($m = Object.assign
            ? Object.assign.bind()
            : function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                      var n = arguments[t];
                      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                  }
                  return e;
              }),
        $m.apply(null, arguments)
    );
}
function Ib(e, t) {
    var n = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(e);
        t &&
            (r = r.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable;
            })),
            n.push.apply(n, r);
    }
    return n;
}
function Ia(e) {
    for (var t = 1; t < arguments.length; t++) {
        var n = arguments[t] != null ? arguments[t] : {};
        t % 2
            ? Ib(Object(n), !0).forEach(function (r) {
                  lT(e, r, n[r]);
              })
            : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : Ib(Object(n)).forEach(function (r) {
                    Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
                });
    }
    return e;
}
function j7(e) {
    var t = e.length;
    if (t === 0 || t === 1) return e;
    if (t === 2) return [e[0], e[1], "".concat(e[0], ".").concat(e[1]), "".concat(e[1], ".").concat(e[0])];
    if (t === 3)
        return [
            e[0],
            e[1],
            e[2],
            "".concat(e[0], ".").concat(e[1]),
            "".concat(e[0], ".").concat(e[2]),
            "".concat(e[1], ".").concat(e[0]),
            "".concat(e[1], ".").concat(e[2]),
            "".concat(e[2], ".").concat(e[0]),
            "".concat(e[2], ".").concat(e[1]),
            "".concat(e[0], ".").concat(e[1], ".").concat(e[2]),
            "".concat(e[0], ".").concat(e[2], ".").concat(e[1]),
            "".concat(e[1], ".").concat(e[0], ".").concat(e[2]),
            "".concat(e[1], ".").concat(e[2], ".").concat(e[0]),
            "".concat(e[2], ".").concat(e[0], ".").concat(e[1]),
            "".concat(e[2], ".").concat(e[1], ".").concat(e[0]),
        ];
    if (t >= 4)
        return [
            e[0],
            e[1],
            e[2],
            e[3],
            "".concat(e[0], ".").concat(e[1]),
            "".concat(e[0], ".").concat(e[2]),
            "".concat(e[0], ".").concat(e[3]),
            "".concat(e[1], ".").concat(e[0]),
            "".concat(e[1], ".").concat(e[2]),
            "".concat(e[1], ".").concat(e[3]),
            "".concat(e[2], ".").concat(e[0]),
            "".concat(e[2], ".").concat(e[1]),
            "".concat(e[2], ".").concat(e[3]),
            "".concat(e[3], ".").concat(e[0]),
            "".concat(e[3], ".").concat(e[1]),
            "".concat(e[3], ".").concat(e[2]),
            "".concat(e[0], ".").concat(e[1], ".").concat(e[2]),
            "".concat(e[0], ".").concat(e[1], ".").concat(e[3]),
            "".concat(e[0], ".").concat(e[2], ".").concat(e[1]),
            "".concat(e[0], ".").concat(e[2], ".").concat(e[3]),
            "".concat(e[0], ".").concat(e[3], ".").concat(e[1]),
            "".concat(e[0], ".").concat(e[3], ".").concat(e[2]),
            "".concat(e[1], ".").concat(e[0], ".").concat(e[2]),
            "".concat(e[1], ".").concat(e[0], ".").concat(e[3]),
            "".concat(e[1], ".").concat(e[2], ".").concat(e[0]),
            "".concat(e[1], ".").concat(e[2], ".").concat(e[3]),
            "".concat(e[1], ".").concat(e[3], ".").concat(e[0]),
            "".concat(e[1], ".").concat(e[3], ".").concat(e[2]),
            "".concat(e[2], ".").concat(e[0], ".").concat(e[1]),
            "".concat(e[2], ".").concat(e[0], ".").concat(e[3]),
            "".concat(e[2], ".").concat(e[1], ".").concat(e[0]),
            "".concat(e[2], ".").concat(e[1], ".").concat(e[3]),
            "".concat(e[2], ".").concat(e[3], ".").concat(e[0]),
            "".concat(e[2], ".").concat(e[3], ".").concat(e[1]),
            "".concat(e[3], ".").concat(e[0], ".").concat(e[1]),
            "".concat(e[3], ".").concat(e[0], ".").concat(e[2]),
            "".concat(e[3], ".").concat(e[1], ".").concat(e[0]),
            "".concat(e[3], ".").concat(e[1], ".").concat(e[2]),
            "".concat(e[3], ".").concat(e[2], ".").concat(e[0]),
            "".concat(e[3], ".").concat(e[2], ".").concat(e[1]),
            "".concat(e[0], ".").concat(e[1], ".").concat(e[2], ".").concat(e[3]),
            "".concat(e[0], ".").concat(e[1], ".").concat(e[3], ".").concat(e[2]),
            "".concat(e[0], ".").concat(e[2], ".").concat(e[1], ".").concat(e[3]),
            "".concat(e[0], ".").concat(e[2], ".").concat(e[3], ".").concat(e[1]),
            "".concat(e[0], ".").concat(e[3], ".").concat(e[1], ".").concat(e[2]),
            "".concat(e[0], ".").concat(e[3], ".").concat(e[2], ".").concat(e[1]),
            "".concat(e[1], ".").concat(e[0], ".").concat(e[2], ".").concat(e[3]),
            "".concat(e[1], ".").concat(e[0], ".").concat(e[3], ".").concat(e[2]),
            "".concat(e[1], ".").concat(e[2], ".").concat(e[0], ".").concat(e[3]),
            "".concat(e[1], ".").concat(e[2], ".").concat(e[3], ".").concat(e[0]),
            "".concat(e[1], ".").concat(e[3], ".").concat(e[0], ".").concat(e[2]),
            "".concat(e[1], ".").concat(e[3], ".").concat(e[2], ".").concat(e[0]),
            "".concat(e[2], ".").concat(e[0], ".").concat(e[1], ".").concat(e[3]),
            "".concat(e[2], ".").concat(e[0], ".").concat(e[3], ".").concat(e[1]),
            "".concat(e[2], ".").concat(e[1], ".").concat(e[0], ".").concat(e[3]),
            "".concat(e[2], ".").concat(e[1], ".").concat(e[3], ".").concat(e[0]),
            "".concat(e[2], ".").concat(e[3], ".").concat(e[0], ".").concat(e[1]),
            "".concat(e[2], ".").concat(e[3], ".").concat(e[1], ".").concat(e[0]),
            "".concat(e[3], ".").concat(e[0], ".").concat(e[1], ".").concat(e[2]),
            "".concat(e[3], ".").concat(e[0], ".").concat(e[2], ".").concat(e[1]),
            "".concat(e[3], ".").concat(e[1], ".").concat(e[0], ".").concat(e[2]),
            "".concat(e[3], ".").concat(e[1], ".").concat(e[2], ".").concat(e[0]),
            "".concat(e[3], ".").concat(e[2], ".").concat(e[0], ".").concat(e[1]),
            "".concat(e[3], ".").concat(e[2], ".").concat(e[1], ".").concat(e[0]),
        ];
}
var lu = {};
function V7(e) {
    if (e.length === 0 || e.length === 1) return e;
    var t = e.join(".");
    return lu[t] || (lu[t] = j7(e)), lu[t];
}
function W7(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        n = arguments.length > 2 ? arguments[2] : void 0,
        r = e.filter(function (i) {
            return i !== "token";
        }),
        a = V7(r);
    return a.reduce(function (i, o) {
        return Ia(Ia({}, i), n[o]);
    }, t);
}
function Nb(e) {
    return e.join(" ");
}
function Y7(e, t) {
    var n = 0;
    return function (r) {
        return (
            (n += 1),
            r.map(function (a, i) {
                return sT({ node: a, stylesheet: e, useInlineStyles: t, key: "code-segment-".concat(n, "-").concat(i) });
            })
        );
    };
}
function sT(e) {
    var t = e.node,
        n = e.stylesheet,
        r = e.style,
        a = r === void 0 ? {} : r,
        i = e.useInlineStyles,
        o = e.key,
        l = t.properties,
        s = t.type,
        u = t.tagName,
        c = t.value;
    if (s === "text") return c;
    if (u) {
        var d = Y7(n, i),
            m;
        if (!i) m = Ia(Ia({}, l), {}, { className: Nb(l.className) });
        else {
            var f = Object.keys(n).reduce(function (y, g) {
                    return (
                        g.split(".").forEach(function (v) {
                            y.includes(v) || y.push(v);
                        }),
                        y
                    );
                }, []),
                b = l.className && l.className.includes("token") ? ["token"] : [],
                E =
                    l.className &&
                    b.concat(
                        l.className.filter(function (y) {
                            return !f.includes(y);
                        }),
                    );
            m = Ia(Ia({}, l), {}, { className: Nb(E) || void 0, style: W7(l.className, Object.assign({}, l.style, a), n) });
        }
        var I = d(t.children);
        return zn.createElement(u, $m({ key: o }, m), I);
    }
}
const K7 = function (e, t) {
    var n = e.listLanguages();
    return n.indexOf(t) !== -1;
};
var X7 = [
    "language",
    "children",
    "style",
    "customStyle",
    "codeTagProps",
    "useInlineStyles",
    "showLineNumbers",
    "showInlineLineNumbers",
    "startingLineNumber",
    "lineNumberContainerStyle",
    "lineNumberStyle",
    "wrapLines",
    "wrapLongLines",
    "lineProps",
    "renderer",
    "PreTag",
    "CodeTag",
    "code",
    "astGenerator",
];
function _b(e, t) {
    var n = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(e);
        t &&
            (r = r.filter(function (a) {
                return Object.getOwnPropertyDescriptor(e, a).enumerable;
            })),
            n.push.apply(n, r);
    }
    return n;
}
function pr(e) {
    for (var t = 1; t < arguments.length; t++) {
        var n = arguments[t] != null ? arguments[t] : {};
        t % 2
            ? _b(Object(n), !0).forEach(function (r) {
                  lT(e, r, n[r]);
              })
            : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : _b(Object(n)).forEach(function (r) {
                    Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
                });
    }
    return e;
}
var Z7 = /\n/g;
function Q7(e) {
    return e.match(Z7);
}
function J7(e) {
    var t = e.lines,
        n = e.startingLineNumber,
        r = e.style;
    return t.map(function (a, i) {
        var o = i + n;
        return zn.createElement(
            "span",
            { key: "line-".concat(i), className: "react-syntax-highlighter-line-number", style: typeof r == "function" ? r(o) : r },
            "".concat(
                o,
                `
`,
            ),
        );
    });
}
function eR(e) {
    var t = e.codeString,
        n = e.codeStyle,
        r = e.containerStyle,
        a = r === void 0 ? { float: "left", paddingRight: "10px" } : r,
        i = e.numberStyle,
        o = i === void 0 ? {} : i,
        l = e.startingLineNumber;
    return zn.createElement(
        "code",
        { style: Object.assign({}, n, a) },
        J7({
            lines: t.replace(/\n$/, "").split(`
`),
            style: o,
            startingLineNumber: l,
        }),
    );
}
function tR(e) {
    return "".concat(e.toString().length, ".25em");
}
function uT(e, t) {
    return {
        type: "element",
        tagName: "span",
        properties: { key: "line-number--".concat(e), className: ["comment", "linenumber", "react-syntax-highlighter-line-number"], style: t },
        children: [{ type: "text", value: e }],
    };
}
function cT(e, t, n) {
    var r = { display: "inline-block", minWidth: tR(n), paddingRight: "1em", textAlign: "right", userSelect: "none" },
        a = typeof e == "function" ? e(t) : e,
        i = pr(pr({}, r), a);
    return i;
}
function pl(e) {
    var t = e.children,
        n = e.lineNumber,
        r = e.lineNumberStyle,
        a = e.largestLineNumber,
        i = e.showInlineLineNumbers,
        o = e.lineProps,
        l = o === void 0 ? {} : o,
        s = e.className,
        u = s === void 0 ? [] : s,
        c = e.showLineNumbers,
        d = e.wrapLongLines,
        m = e.wrapLines,
        f = m === void 0 ? !1 : m,
        b = f ? pr({}, typeof l == "function" ? l(n) : l) : {};
    if (((b.className = b.className ? [].concat(zm(b.className.trim().split(/\s+/)), zm(u)) : u), n && i)) {
        var E = cT(r, n, a);
        t.unshift(uT(n, E));
    }
    return d & c && (b.style = pr({ display: "flex" }, b.style)), { type: "element", tagName: "span", properties: b, children: t };
}
function dT(e) {
    for (
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
            n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [],
            r = 0;
        r < e.length;
        r++
    ) {
        var a = e[r];
        if (a.type === "text") n.push(pl({ children: [a], className: zm(new Set(t)) }));
        else if (a.children) {
            var i = t.concat(a.properties.className);
            dT(a.children, i).forEach(function (o) {
                return n.push(o);
            });
        }
    }
    return n;
}
function nR(e, t, n, r, a, i, o, l, s) {
    var u,
        c = dT(e.value),
        d = [],
        m = -1,
        f = 0;
    function b(R, k) {
        var L = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
        return pl({
            children: R,
            lineNumber: k,
            lineNumberStyle: l,
            largestLineNumber: o,
            showInlineLineNumbers: a,
            lineProps: n,
            className: L,
            showLineNumbers: r,
            wrapLongLines: s,
            wrapLines: t,
        });
    }
    function E(R, k) {
        if (r && k && a) {
            var L = cT(l, k, o);
            R.unshift(uT(k, L));
        }
        return R;
    }
    function I(R, k) {
        var L = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
        return t || L.length > 0 ? b(R, k, L) : E(R, k);
    }
    for (
        var y = function () {
            var k = c[f],
                L = k.children[0].value,
                F = Q7(L);
            if (F) {
                var M = L.split(`
`);
                M.forEach(function (O, B) {
                    var $ = r && d.length + i,
                        ne = {
                            type: "text",
                            value: "".concat(
                                O,
                                `
`,
                            ),
                        };
                    if (B === 0) {
                        var re = c.slice(m + 1, f).concat(pl({ children: [ne], className: k.properties.className })),
                            J = I(re, $);
                        d.push(J);
                    } else if (B === M.length - 1) {
                        var se = c[f + 1] && c[f + 1].children && c[f + 1].children[0],
                            ce = { type: "text", value: "".concat(O) };
                        if (se) {
                            var U = pl({ children: [ce], className: k.properties.className });
                            c.splice(f + 1, 0, U);
                        } else {
                            var W = [ce],
                                A = I(W, $, k.properties.className);
                            d.push(A);
                        }
                    } else {
                        var Y = [ne],
                            Q = I(Y, $, k.properties.className);
                        d.push(Q);
                    }
                }),
                    (m = f);
            }
            f++;
        };
        f < c.length;

    )
        y();
    if (m !== c.length - 1) {
        var g = c.slice(m + 1, c.length);
        if (g && g.length) {
            var v = r && d.length + i,
                T = I(g, v);
            d.push(T);
        }
    }
    return t ? d : (u = []).concat.apply(u, d);
}
function rR(e) {
    var t = e.rows,
        n = e.stylesheet,
        r = e.useInlineStyles;
    return t.map(function (a, i) {
        return sT({ node: a, stylesheet: n, useInlineStyles: r, key: "code-segement".concat(i) });
    });
}
function pT(e) {
    return e && typeof e.highlightAuto < "u";
}
function aR(e) {
    var t = e.astGenerator,
        n = e.language,
        r = e.code,
        a = e.defaultCodeValue;
    if (pT(t)) {
        var i = K7(t, n);
        return n === "text" ? { value: a, language: "text" } : i ? t.highlight(n, r) : t.highlightAuto(r);
    }
    try {
        return n && n !== "text" ? { value: t.highlight(r, n) } : { value: a };
    } catch {
        return { value: a };
    }
}
function iR(e, t) {
    return function (r) {
        var a = r.language,
            i = r.children,
            o = r.style,
            l = o === void 0 ? t : o,
            s = r.customStyle,
            u = s === void 0 ? {} : s,
            c = r.codeTagProps,
            d =
                c === void 0
                    ? {
                          className: a ? "language-".concat(a) : void 0,
                          style: pr(pr({}, l['code[class*="language-"]']), l['code[class*="language-'.concat(a, '"]')]),
                      }
                    : c,
            m = r.useInlineStyles,
            f = m === void 0 ? !0 : m,
            b = r.showLineNumbers,
            E = b === void 0 ? !1 : b,
            I = r.showInlineLineNumbers,
            y = I === void 0 ? !0 : I,
            g = r.startingLineNumber,
            v = g === void 0 ? 1 : g,
            T = r.lineNumberContainerStyle,
            R = r.lineNumberStyle,
            k = R === void 0 ? {} : R,
            L = r.wrapLines,
            F = r.wrapLongLines,
            M = F === void 0 ? !1 : F,
            O = r.lineProps,
            B = O === void 0 ? {} : O,
            $ = r.renderer,
            ne = r.PreTag,
            re = ne === void 0 ? "pre" : ne,
            J = r.CodeTag,
            se = J === void 0 ? "code" : J,
            ce = r.code,
            U = ce === void 0 ? (Array.isArray(i) ? i[0] : i) || "" : ce,
            W = r.astGenerator,
            A = B7(r, X7);
        W = W || e;
        var Y = E ? zn.createElement(eR, { containerStyle: T, codeStyle: d.style || {}, numberStyle: k, startingLineNumber: v, codeString: U }) : null,
            Q = l.hljs || l['pre[class*="language-"]'] || { backgroundColor: "#fff" },
            C = pT(W) ? "hljs" : "prismjs",
            he = f
                ? Object.assign({}, A, { style: Object.assign({}, Q, u) })
                : Object.assign({}, A, { className: A.className ? "".concat(C, " ").concat(A.className) : C, style: Object.assign({}, u) });
        if ((M ? (d.style = pr({ whiteSpace: "pre-wrap" }, d.style)) : (d.style = pr({ whiteSpace: "pre" }, d.style)), !W))
            return zn.createElement(re, he, Y, zn.createElement(se, d, U));
        ((L === void 0 && $) || M) && (L = !0), ($ = $ || rR);
        var ke = [{ type: "text", value: U }],
            de = aR({ astGenerator: W, language: a, code: U, defaultCodeValue: ke });
        de.language === null && (de.value = ke);
        var Te = de.value.length;
        Te === 1 &&
            de.value[0].type === "text" &&
            (Te = de.value[0].value.split(`
`).length);
        var He = Te + v,
            it = nR(de, L, B, E, y, v, He, k, M);
        return zn.createElement(re, he, zn.createElement(se, d, !y && Y, $({ rows: it, stylesheet: l, useInlineStyles: f })));
    };
}
const oR = [
    "abap",
    "abnf",
    "actionscript",
    "ada",
    "agda",
    "al",
    "antlr4",
    "apacheconf",
    "apex",
    "apl",
    "applescript",
    "aql",
    "arduino",
    "arff",
    "asciidoc",
    "asm6502",
    "asmatmel",
    "aspnet",
    "autohotkey",
    "autoit",
    "avisynth",
    "avro-idl",
    "bash",
    "basic",
    "batch",
    "bbcode",
    "bicep",
    "birb",
    "bison",
    "bnf",
    "brainfuck",
    "brightscript",
    "bro",
    "bsl",
    "c",
    "cfscript",
    "chaiscript",
    "cil",
    "clike",
    "clojure",
    "cmake",
    "cobol",
    "coffeescript",
    "concurnas",
    "coq",
    "cpp",
    "crystal",
    "csharp",
    "cshtml",
    "csp",
    "css-extras",
    "css",
    "csv",
    "cypher",
    "d",
    "dart",
    "dataweave",
    "dax",
    "dhall",
    "diff",
    "django",
    "dns-zone-file",
    "docker",
    "dot",
    "ebnf",
    "editorconfig",
    "eiffel",
    "ejs",
    "elixir",
    "elm",
    "erb",
    "erlang",
    "etlua",
    "excel-formula",
    "factor",
    "false",
    "firestore-security-rules",
    "flow",
    "fortran",
    "fsharp",
    "ftl",
    "gap",
    "gcode",
    "gdscript",
    "gedcom",
    "gherkin",
    "git",
    "glsl",
    "gml",
    "gn",
    "go-module",
    "go",
    "graphql",
    "groovy",
    "haml",
    "handlebars",
    "haskell",
    "haxe",
    "hcl",
    "hlsl",
    "hoon",
    "hpkp",
    "hsts",
    "http",
    "ichigojam",
    "icon",
    "icu-message-format",
    "idris",
    "iecst",
    "ignore",
    "inform7",
    "ini",
    "io",
    "j",
    "java",
    "javadoc",
    "javadoclike",
    "javascript",
    "javastacktrace",
    "jexl",
    "jolie",
    "jq",
    "js-extras",
    "js-templates",
    "jsdoc",
    "json",
    "json5",
    "jsonp",
    "jsstacktrace",
    "jsx",
    "julia",
    "keepalived",
    "keyman",
    "kotlin",
    "kumir",
    "kusto",
    "latex",
    "latte",
    "less",
    "lilypond",
    "liquid",
    "lisp",
    "livescript",
    "llvm",
    "log",
    "lolcode",
    "lua",
    "magma",
    "makefile",
    "markdown",
    "markup-templating",
    "markup",
    "matlab",
    "maxscript",
    "mel",
    "mermaid",
    "mizar",
    "mongodb",
    "monkey",
    "moonscript",
    "n1ql",
    "n4js",
    "nand2tetris-hdl",
    "naniscript",
    "nasm",
    "neon",
    "nevod",
    "nginx",
    "nim",
    "nix",
    "nsis",
    "objectivec",
    "ocaml",
    "opencl",
    "openqasm",
    "oz",
    "parigp",
    "parser",
    "pascal",
    "pascaligo",
    "pcaxis",
    "peoplecode",
    "perl",
    "php-extras",
    "php",
    "phpdoc",
    "plsql",
    "powerquery",
    "powershell",
    "processing",
    "prolog",
    "promql",
    "properties",
    "protobuf",
    "psl",
    "pug",
    "puppet",
    "pure",
    "purebasic",
    "purescript",
    "python",
    "q",
    "qml",
    "qore",
    "qsharp",
    "r",
    "racket",
    "reason",
    "regex",
    "rego",
    "renpy",
    "rest",
    "rip",
    "roboconf",
    "robotframework",
    "ruby",
    "rust",
    "sas",
    "sass",
    "scala",
    "scheme",
    "scss",
    "shell-session",
    "smali",
    "smalltalk",
    "smarty",
    "sml",
    "solidity",
    "solution-file",
    "soy",
    "sparql",
    "splunk-spl",
    "sqf",
    "sql",
    "squirrel",
    "stan",
    "stylus",
    "swift",
    "systemd",
    "t4-cs",
    "t4-templating",
    "t4-vb",
    "tap",
    "tcl",
    "textile",
    "toml",
    "tremor",
    "tsx",
    "tt2",
    "turtle",
    "twig",
    "typescript",
    "typoscript",
    "unrealscript",
    "uorazor",
    "uri",
    "v",
    "vala",
    "vbnet",
    "velocity",
    "verilog",
    "vhdl",
    "vim",
    "visual-basic",
    "warpscript",
    "wasm",
    "web-idl",
    "wiki",
    "wolfram",
    "wren",
    "xeora",
    "xml-doc",
    "xojo",
    "xquery",
    "yaml",
    "yang",
    "zig",
];
var lR = uR,
    sR = Object.prototype.hasOwnProperty;
function uR() {
    for (var e = {}, t = 0; t < arguments.length; t++) {
        var n = arguments[t];
        for (var r in n) sR.call(n, r) && (e[r] = n[r]);
    }
    return e;
}
var fT = mT,
    cg = mT.prototype;
cg.space = null;
cg.normal = {};
cg.property = {};
function mT(e, t, n) {
    (this.property = e), (this.normal = t), n && (this.space = n);
}
var Cb = lR,
    cR = fT,
    dR = pR;
function pR(e) {
    for (var t = e.length, n = [], r = [], a = -1, i, o; ++a < t; ) (i = e[a]), n.push(i.property), r.push(i.normal), (o = i.space);
    return new cR(Cb.apply(null, n), Cb.apply(null, r), o);
}
var dg = fR;
function fR(e) {
    return e.toLowerCase();
}
var hT = gT,
    on = gT.prototype;
on.space = null;
on.attribute = null;
on.property = null;
on.boolean = !1;
on.booleanish = !1;
on.overloadedBoolean = !1;
on.number = !1;
on.commaSeparated = !1;
on.spaceSeparated = !1;
on.commaOrSpaceSeparated = !1;
on.mustUseProperty = !1;
on.defined = !1;
function gT(e, t) {
    (this.property = e), (this.attribute = t);
}
var Nn = {},
    mR = 0;
Nn.boolean = na();
Nn.booleanish = na();
Nn.overloadedBoolean = na();
Nn.number = na();
Nn.spaceSeparated = na();
Nn.commaSeparated = na();
Nn.commaOrSpaceSeparated = na();
function na() {
    return Math.pow(2, ++mR);
}
var bT = hT,
    Ob = Nn,
    yT = pg;
pg.prototype = new bT();
pg.prototype.defined = !0;
var vT = ["boolean", "booleanish", "overloadedBoolean", "number", "commaSeparated", "spaceSeparated", "commaOrSpaceSeparated"],
    hR = vT.length;
function pg(e, t, n, r) {
    var a = -1,
        i;
    for (Lb(this, "space", r), bT.call(this, e, t); ++a < hR; ) (i = vT[a]), Lb(this, i, (n & Ob[i]) === Ob[i]);
}
function Lb(e, t, n) {
    n && (e[t] = n);
}
var Db = dg,
    gR = fT,
    bR = yT,
    fo = yR;
function yR(e) {
    var t = e.space,
        n = e.mustUseProperty || [],
        r = e.attributes || {},
        a = e.properties,
        i = e.transform,
        o = {},
        l = {},
        s,
        u;
    for (s in a) (u = new bR(s, i(r, s), a[s], t)), n.indexOf(s) !== -1 && (u.mustUseProperty = !0), (o[s] = u), (l[Db(s)] = s), (l[Db(u.attribute)] = s);
    return new gR(o, l, t);
}
var vR = fo,
    ER = vR({
        space: "xlink",
        transform: SR,
        properties: { xLinkActuate: null, xLinkArcRole: null, xLinkHref: null, xLinkRole: null, xLinkShow: null, xLinkTitle: null, xLinkType: null },
    });
function SR(e, t) {
    return "xlink:" + t.slice(5).toLowerCase();
}
var wR = fo,
    kR = wR({ space: "xml", transform: TR, properties: { xmlLang: null, xmlBase: null, xmlSpace: null } });
function TR(e, t) {
    return "xml:" + t.slice(3).toLowerCase();
}
var AR = xR;
function xR(e, t) {
    return t in e ? e[t] : t;
}
var RR = AR,
    ET = IR;
function IR(e, t) {
    return RR(e, t.toLowerCase());
}
var NR = fo,
    _R = ET,
    CR = NR({ space: "xmlns", attributes: { xmlnsxlink: "xmlns:xlink" }, transform: _R, properties: { xmlns: null, xmlnsXLink: null } }),
    fg = Nn,
    OR = fo,
    kt = fg.booleanish,
    Wt = fg.number,
    Fr = fg.spaceSeparated,
    LR = OR({
        transform: DR,
        properties: {
            ariaActiveDescendant: null,
            ariaAtomic: kt,
            ariaAutoComplete: null,
            ariaBusy: kt,
            ariaChecked: kt,
            ariaColCount: Wt,
            ariaColIndex: Wt,
            ariaColSpan: Wt,
            ariaControls: Fr,
            ariaCurrent: null,
            ariaDescribedBy: Fr,
            ariaDetails: null,
            ariaDisabled: kt,
            ariaDropEffect: Fr,
            ariaErrorMessage: null,
            ariaExpanded: kt,
            ariaFlowTo: Fr,
            ariaGrabbed: kt,
            ariaHasPopup: null,
            ariaHidden: kt,
            ariaInvalid: null,
            ariaKeyShortcuts: null,
            ariaLabel: null,
            ariaLabelledBy: Fr,
            ariaLevel: Wt,
            ariaLive: null,
            ariaModal: kt,
            ariaMultiLine: kt,
            ariaMultiSelectable: kt,
            ariaOrientation: null,
            ariaOwns: Fr,
            ariaPlaceholder: null,
            ariaPosInSet: Wt,
            ariaPressed: kt,
            ariaReadOnly: kt,
            ariaRelevant: null,
            ariaRequired: kt,
            ariaRoleDescription: Fr,
            ariaRowCount: Wt,
            ariaRowIndex: Wt,
            ariaRowSpan: Wt,
            ariaSelected: kt,
            ariaSetSize: Wt,
            ariaSort: null,
            ariaValueMax: Wt,
            ariaValueMin: Wt,
            ariaValueNow: Wt,
            ariaValueText: null,
            role: null,
        },
    });
function DR(e, t) {
    return t === "role" ? t : "aria-" + t.slice(4).toLowerCase();
}
var Xa = Nn,
    MR = fo,
    FR = ET,
    ge = Xa.boolean,
    PR = Xa.overloadedBoolean,
    hi = Xa.booleanish,
    Oe = Xa.number,
    ft = Xa.spaceSeparated,
    Uo = Xa.commaSeparated,
    BR = MR({
        space: "html",
        attributes: { acceptcharset: "accept-charset", classname: "class", htmlfor: "for", httpequiv: "http-equiv" },
        transform: FR,
        mustUseProperty: ["checked", "multiple", "muted", "selected"],
        properties: {
            abbr: null,
            accept: Uo,
            acceptCharset: ft,
            accessKey: ft,
            action: null,
            allow: null,
            allowFullScreen: ge,
            allowPaymentRequest: ge,
            allowUserMedia: ge,
            alt: null,
            as: null,
            async: ge,
            autoCapitalize: null,
            autoComplete: ft,
            autoFocus: ge,
            autoPlay: ge,
            capture: ge,
            charSet: null,
            checked: ge,
            cite: null,
            className: ft,
            cols: Oe,
            colSpan: null,
            content: null,
            contentEditable: hi,
            controls: ge,
            controlsList: ft,
            coords: Oe | Uo,
            crossOrigin: null,
            data: null,
            dateTime: null,
            decoding: null,
            default: ge,
            defer: ge,
            dir: null,
            dirName: null,
            disabled: ge,
            download: PR,
            draggable: hi,
            encType: null,
            enterKeyHint: null,
            form: null,
            formAction: null,
            formEncType: null,
            formMethod: null,
            formNoValidate: ge,
            formTarget: null,
            headers: ft,
            height: Oe,
            hidden: ge,
            high: Oe,
            href: null,
            hrefLang: null,
            htmlFor: ft,
            httpEquiv: ft,
            id: null,
            imageSizes: null,
            imageSrcSet: Uo,
            inputMode: null,
            integrity: null,
            is: null,
            isMap: ge,
            itemId: null,
            itemProp: ft,
            itemRef: ft,
            itemScope: ge,
            itemType: ft,
            kind: null,
            label: null,
            lang: null,
            language: null,
            list: null,
            loading: null,
            loop: ge,
            low: Oe,
            manifest: null,
            max: null,
            maxLength: Oe,
            media: null,
            method: null,
            min: null,
            minLength: Oe,
            multiple: ge,
            muted: ge,
            name: null,
            nonce: null,
            noModule: ge,
            noValidate: ge,
            onAbort: null,
            onAfterPrint: null,
            onAuxClick: null,
            onBeforePrint: null,
            onBeforeUnload: null,
            onBlur: null,
            onCancel: null,
            onCanPlay: null,
            onCanPlayThrough: null,
            onChange: null,
            onClick: null,
            onClose: null,
            onContextMenu: null,
            onCopy: null,
            onCueChange: null,
            onCut: null,
            onDblClick: null,
            onDrag: null,
            onDragEnd: null,
            onDragEnter: null,
            onDragExit: null,
            onDragLeave: null,
            onDragOver: null,
            onDragStart: null,
            onDrop: null,
            onDurationChange: null,
            onEmptied: null,
            onEnded: null,
            onError: null,
            onFocus: null,
            onFormData: null,
            onHashChange: null,
            onInput: null,
            onInvalid: null,
            onKeyDown: null,
            onKeyPress: null,
            onKeyUp: null,
            onLanguageChange: null,
            onLoad: null,
            onLoadedData: null,
            onLoadedMetadata: null,
            onLoadEnd: null,
            onLoadStart: null,
            onMessage: null,
            onMessageError: null,
            onMouseDown: null,
            onMouseEnter: null,
            onMouseLeave: null,
            onMouseMove: null,
            onMouseOut: null,
            onMouseOver: null,
            onMouseUp: null,
            onOffline: null,
            onOnline: null,
            onPageHide: null,
            onPageShow: null,
            onPaste: null,
            onPause: null,
            onPlay: null,
            onPlaying: null,
            onPopState: null,
            onProgress: null,
            onRateChange: null,
            onRejectionHandled: null,
            onReset: null,
            onResize: null,
            onScroll: null,
            onSecurityPolicyViolation: null,
            onSeeked: null,
            onSeeking: null,
            onSelect: null,
            onSlotChange: null,
            onStalled: null,
            onStorage: null,
            onSubmit: null,
            onSuspend: null,
            onTimeUpdate: null,
            onToggle: null,
            onUnhandledRejection: null,
            onUnload: null,
            onVolumeChange: null,
            onWaiting: null,
            onWheel: null,
            open: ge,
            optimum: Oe,
            pattern: null,
            ping: ft,
            placeholder: null,
            playsInline: ge,
            poster: null,
            preload: null,
            readOnly: ge,
            referrerPolicy: null,
            rel: ft,
            required: ge,
            reversed: ge,
            rows: Oe,
            rowSpan: Oe,
            sandbox: ft,
            scope: null,
            scoped: ge,
            seamless: ge,
            selected: ge,
            shape: null,
            size: Oe,
            sizes: null,
            slot: null,
            span: Oe,
            spellCheck: hi,
            src: null,
            srcDoc: null,
            srcLang: null,
            srcSet: Uo,
            start: Oe,
            step: null,
            style: null,
            tabIndex: Oe,
            target: null,
            title: null,
            translate: null,
            type: null,
            typeMustMatch: ge,
            useMap: null,
            value: hi,
            width: Oe,
            wrap: null,
            align: null,
            aLink: null,
            archive: ft,
            axis: null,
            background: null,
            bgColor: null,
            border: Oe,
            borderColor: null,
            bottomMargin: Oe,
            cellPadding: null,
            cellSpacing: null,
            char: null,
            charOff: null,
            classId: null,
            clear: null,
            code: null,
            codeBase: null,
            codeType: null,
            color: null,
            compact: ge,
            declare: ge,
            event: null,
            face: null,
            frame: null,
            frameBorder: null,
            hSpace: Oe,
            leftMargin: Oe,
            link: null,
            longDesc: null,
            lowSrc: null,
            marginHeight: Oe,
            marginWidth: Oe,
            noResize: ge,
            noHref: ge,
            noShade: ge,
            noWrap: ge,
            object: null,
            profile: null,
            prompt: null,
            rev: null,
            rightMargin: Oe,
            rules: null,
            scheme: null,
            scrolling: hi,
            standby: null,
            summary: null,
            text: null,
            topMargin: Oe,
            valueType: null,
            version: null,
            vAlign: null,
            vLink: null,
            vSpace: Oe,
            allowTransparency: null,
            autoCorrect: null,
            autoSave: null,
            disablePictureInPicture: ge,
            disableRemotePlayback: ge,
            prefix: null,
            property: null,
            results: Oe,
            security: null,
            unselectable: null,
        },
    }),
    UR = dR,
    zR = ER,
    $R = kR,
    qR = CR,
    GR = LR,
    HR = BR,
    jR = UR([$R, zR, qR, GR, HR]),
    VR = dg,
    WR = yT,
    YR = hT,
    mg = "data",
    KR = QR,
    XR = /^data[-\w.:]+$/i,
    ST = /-[a-z]/g,
    ZR = /[A-Z]/g;
function QR(e, t) {
    var n = VR(t),
        r = t,
        a = YR;
    return n in e.normal
        ? e.property[e.normal[n]]
        : (n.length > 4 && n.slice(0, 4) === mg && XR.test(t) && (t.charAt(4) === "-" ? (r = JR(t)) : (t = eI(t)), (a = WR)), new a(r, t));
}
function JR(e) {
    var t = e.slice(5).replace(ST, nI);
    return mg + t.charAt(0).toUpperCase() + t.slice(1);
}
function eI(e) {
    var t = e.slice(4);
    return ST.test(t) ? e : ((t = t.replace(ZR, tI)), t.charAt(0) !== "-" && (t = "-" + t), mg + t);
}
function tI(e) {
    return "-" + e.toLowerCase();
}
function nI(e) {
    return e.charAt(1).toUpperCase();
}
var rI = aI,
    Mb = /[#.]/g;
function aI(e, t) {
    for (var n = e || "", r = t || "div", a = {}, i = 0, o, l, s; i < n.length; )
        (Mb.lastIndex = i),
            (s = Mb.exec(n)),
            (o = n.slice(i, s ? s.index : n.length)),
            o && (l ? (l === "#" ? (a.id = o) : a.className ? a.className.push(o) : (a.className = [o])) : (r = o), (i += o.length)),
            s && ((l = s[0]), i++);
    return { type: "element", tagName: r, properties: a, children: [] };
}
var hg = {};
hg.parse = lI;
hg.stringify = sI;
var Fb = "",
    iI = " ",
    oI = /[ \t\n\r\f]+/g;
function lI(e) {
    var t = String(e || Fb).trim();
    return t === Fb ? [] : t.split(oI);
}
function sI(e) {
    return e.join(iI).trim();
}
var gg = {};
gg.parse = uI;
gg.stringify = cI;
var qm = ",",
    Pb = " ",
    wi = "";
function uI(e) {
    for (var t = [], n = String(e || wi), r = n.indexOf(qm), a = 0, i = !1, o; !i; )
        r === -1 && ((r = n.length), (i = !0)), (o = n.slice(a, r).trim()), (o || !i) && t.push(o), (a = r + 1), (r = n.indexOf(qm, a));
    return t;
}
function cI(e, t) {
    var n = t || {},
        r = n.padLeft === !1 ? wi : Pb,
        a = n.padRight ? Pb : wi;
    return e[e.length - 1] === wi && (e = e.concat(wi)), e.join(a + qm + r).trim();
}
var dI = KR,
    Bb = dg,
    pI = rI,
    Ub = hg.parse,
    zb = gg.parse,
    fI = hI,
    mI = {}.hasOwnProperty;
function hI(e, t, n) {
    var r = n ? EI(n) : null;
    return a;
    function a(o, l) {
        var s = pI(o, t),
            u = Array.prototype.slice.call(arguments, 2),
            c = s.tagName.toLowerCase(),
            d;
        if (((s.tagName = r && mI.call(r, c) ? r[c] : c), l && gI(l, s) && (u.unshift(l), (l = null)), l)) for (d in l) i(s.properties, d, l[d]);
        return wT(s.children, u), s.tagName === "template" && ((s.content = { type: "root", children: s.children }), (s.children = [])), s;
    }
    function i(o, l, s) {
        var u, c, d;
        s == null ||
            s !== s ||
            ((u = dI(e, l)),
            (c = u.property),
            (d = s),
            typeof d == "string" && (u.spaceSeparated ? (d = Ub(d)) : u.commaSeparated ? (d = zb(d)) : u.commaOrSpaceSeparated && (d = Ub(zb(d).join(" ")))),
            c === "style" && typeof s != "string" && (d = vI(d)),
            c === "className" && o.className && (d = o.className.concat(d)),
            (o[c] = yI(u, c, d)));
    }
}
function gI(e, t) {
    return typeof e == "string" || "length" in e || bI(t.tagName, e);
}
function bI(e, t) {
    var n = t.type;
    return e === "input" || !n || typeof n != "string"
        ? !1
        : typeof t.children == "object" && "length" in t.children
          ? !0
          : ((n = n.toLowerCase()), e === "button" ? n !== "menu" && n !== "submit" && n !== "reset" && n !== "button" : "value" in t);
}
function wT(e, t) {
    var n, r;
    if (typeof t == "string" || typeof t == "number") {
        e.push({ type: "text", value: String(t) });
        return;
    }
    if (typeof t == "object" && "length" in t) {
        for (n = -1, r = t.length; ++n < r; ) wT(e, t[n]);
        return;
    }
    if (typeof t != "object" || !("type" in t)) throw new Error("Expected node, nodes, or string, got `" + t + "`");
    e.push(t);
}
function yI(e, t, n) {
    var r, a, i;
    if (typeof n != "object" || !("length" in n)) return $b(e, t, n);
    for (a = n.length, r = -1, i = []; ++r < a; ) i[r] = $b(e, t, n[r]);
    return i;
}
function $b(e, t, n) {
    var r = n;
    return (
        e.number || e.positiveNumber
            ? !isNaN(r) && r !== "" && (r = Number(r))
            : (e.boolean || e.overloadedBoolean) && typeof r == "string" && (r === "" || Bb(n) === Bb(t)) && (r = !0),
        r
    );
}
function vI(e) {
    var t = [],
        n;
    for (n in e) t.push([n, e[n]].join(": "));
    return t.join("; ");
}
function EI(e) {
    for (var t = e.length, n = -1, r = {}, a; ++n < t; ) (a = e[n]), (r[a.toLowerCase()] = a);
    return r;
}
var SI = jR,
    wI = fI,
    kT = wI(SI, "div");
kT.displayName = "html";
var kI = kT,
    TI = kI;
const AI = "Æ",
    xI = "&",
    RI = "Á",
    II = "Â",
    NI = "À",
    _I = "Å",
    CI = "Ã",
    OI = "Ä",
    LI = "©",
    DI = "Ç",
    MI = "Ð",
    FI = "É",
    PI = "Ê",
    BI = "È",
    UI = "Ë",
    zI = ">",
    $I = "Í",
    qI = "Î",
    GI = "Ì",
    HI = "Ï",
    jI = "<",
    VI = "Ñ",
    WI = "Ó",
    YI = "Ô",
    KI = "Ò",
    XI = "Ø",
    ZI = "Õ",
    QI = "Ö",
    JI = '"',
    eN = "®",
    tN = "Þ",
    nN = "Ú",
    rN = "Û",
    aN = "Ù",
    iN = "Ü",
    oN = "Ý",
    lN = "á",
    sN = "â",
    uN = "´",
    cN = "æ",
    dN = "à",
    pN = "&",
    fN = "å",
    mN = "ã",
    hN = "ä",
    gN = "¦",
    bN = "ç",
    yN = "¸",
    vN = "¢",
    EN = "©",
    SN = "¤",
    wN = "°",
    kN = "÷",
    TN = "é",
    AN = "ê",
    xN = "è",
    RN = "ð",
    IN = "ë",
    NN = "½",
    _N = "¼",
    CN = "¾",
    ON = ">",
    LN = "í",
    DN = "î",
    MN = "¡",
    FN = "ì",
    PN = "¿",
    BN = "ï",
    UN = "«",
    zN = "<",
    $N = "¯",
    qN = "µ",
    GN = "·",
    HN = " ",
    jN = "¬",
    VN = "ñ",
    WN = "ó",
    YN = "ô",
    KN = "ò",
    XN = "ª",
    ZN = "º",
    QN = "ø",
    JN = "õ",
    e_ = "ö",
    t_ = "¶",
    n_ = "±",
    r_ = "£",
    a_ = '"',
    i_ = "»",
    o_ = "®",
    l_ = "§",
    s_ = "­",
    u_ = "¹",
    c_ = "²",
    d_ = "³",
    p_ = "ß",
    f_ = "þ",
    m_ = "×",
    h_ = "ú",
    g_ = "û",
    b_ = "ù",
    y_ = "¨",
    v_ = "ü",
    E_ = "ý",
    S_ = "¥",
    w_ = "ÿ",
    k_ = {
        AElig: AI,
        AMP: xI,
        Aacute: RI,
        Acirc: II,
        Agrave: NI,
        Aring: _I,
        Atilde: CI,
        Auml: OI,
        COPY: LI,
        Ccedil: DI,
        ETH: MI,
        Eacute: FI,
        Ecirc: PI,
        Egrave: BI,
        Euml: UI,
        GT: zI,
        Iacute: $I,
        Icirc: qI,
        Igrave: GI,
        Iuml: HI,
        LT: jI,
        Ntilde: VI,
        Oacute: WI,
        Ocirc: YI,
        Ograve: KI,
        Oslash: XI,
        Otilde: ZI,
        Ouml: QI,
        QUOT: JI,
        REG: eN,
        THORN: tN,
        Uacute: nN,
        Ucirc: rN,
        Ugrave: aN,
        Uuml: iN,
        Yacute: oN,
        aacute: lN,
        acirc: sN,
        acute: uN,
        aelig: cN,
        agrave: dN,
        amp: pN,
        aring: fN,
        atilde: mN,
        auml: hN,
        brvbar: gN,
        ccedil: bN,
        cedil: yN,
        cent: vN,
        copy: EN,
        curren: SN,
        deg: wN,
        divide: kN,
        eacute: TN,
        ecirc: AN,
        egrave: xN,
        eth: RN,
        euml: IN,
        frac12: NN,
        frac14: _N,
        frac34: CN,
        gt: ON,
        iacute: LN,
        icirc: DN,
        iexcl: MN,
        igrave: FN,
        iquest: PN,
        iuml: BN,
        laquo: UN,
        lt: zN,
        macr: $N,
        micro: qN,
        middot: GN,
        nbsp: HN,
        not: jN,
        ntilde: VN,
        oacute: WN,
        ocirc: YN,
        ograve: KN,
        ordf: XN,
        ordm: ZN,
        oslash: QN,
        otilde: JN,
        ouml: e_,
        para: t_,
        plusmn: n_,
        pound: r_,
        quot: a_,
        raquo: i_,
        reg: o_,
        sect: l_,
        shy: s_,
        sup1: u_,
        sup2: c_,
        sup3: d_,
        szlig: p_,
        thorn: f_,
        times: m_,
        uacute: h_,
        ucirc: g_,
        ugrave: b_,
        uml: y_,
        uuml: v_,
        yacute: E_,
        yen: S_,
        yuml: w_,
    },
    T_ = {
        0: "�",
        128: "€",
        130: "‚",
        131: "ƒ",
        132: "„",
        133: "…",
        134: "†",
        135: "‡",
        136: "ˆ",
        137: "‰",
        138: "Š",
        139: "‹",
        140: "Œ",
        142: "Ž",
        145: "‘",
        146: "’",
        147: "“",
        148: "”",
        149: "•",
        150: "–",
        151: "—",
        152: "˜",
        153: "™",
        154: "š",
        155: "›",
        156: "œ",
        158: "ž",
        159: "Ÿ",
    };
var TT = A_;
function A_(e) {
    var t = typeof e == "string" ? e.charCodeAt(0) : e;
    return t >= 48 && t <= 57;
}
var x_ = R_;
function R_(e) {
    var t = typeof e == "string" ? e.charCodeAt(0) : e;
    return (t >= 97 && t <= 102) || (t >= 65 && t <= 70) || (t >= 48 && t <= 57);
}
var I_ = N_;
function N_(e) {
    var t = typeof e == "string" ? e.charCodeAt(0) : e;
    return (t >= 97 && t <= 122) || (t >= 65 && t <= 90);
}
var __ = I_,
    C_ = TT,
    O_ = L_;
function L_(e) {
    return __(e) || C_(e);
}
var zo,
    D_ = 59,
    M_ = F_;
function F_(e) {
    var t = "&" + e + ";",
        n;
    return (
        (zo = zo || document.createElement("i")),
        (zo.innerHTML = t),
        (n = zo.textContent),
        (n.charCodeAt(n.length - 1) === D_ && e !== "semi") || n === t ? !1 : n
    );
}
var qb = k_,
    Gb = T_,
    P_ = TT,
    B_ = x_,
    AT = O_,
    U_ = M_,
    z_ = J_,
    $_ = {}.hasOwnProperty,
    da = String.fromCharCode,
    q_ = Function.prototype,
    Hb = {
        warning: null,
        reference: null,
        text: null,
        warningContext: null,
        referenceContext: null,
        textContext: null,
        position: {},
        additional: null,
        attribute: !1,
        nonTerminated: !0,
    },
    G_ = 9,
    jb = 10,
    H_ = 12,
    j_ = 32,
    Vb = 38,
    V_ = 59,
    W_ = 60,
    Y_ = 61,
    K_ = 35,
    X_ = 88,
    Z_ = 120,
    Q_ = 65533,
    ma = "named",
    bg = "hexadecimal",
    yg = "decimal",
    vg = {};
vg[bg] = 16;
vg[yg] = 10;
var fs = {};
fs[ma] = AT;
fs[yg] = P_;
fs[bg] = B_;
var xT = 1,
    RT = 2,
    IT = 3,
    NT = 4,
    _T = 5,
    Gm = 6,
    CT = 7,
    _r = {};
_r[xT] = "Named character references must be terminated by a semicolon";
_r[RT] = "Numeric character references must be terminated by a semicolon";
_r[IT] = "Named character references cannot be empty";
_r[NT] = "Numeric character references cannot be empty";
_r[_T] = "Named character references must be known";
_r[Gm] = "Numeric character references cannot be disallowed";
_r[CT] = "Numeric character references cannot be outside the permissible Unicode range";
function J_(e, t) {
    var n = {},
        r,
        a;
    t || (t = {});
    for (a in Hb) (r = t[a]), (n[a] = r ?? Hb[a]);
    return (n.position.indent || n.position.start) && ((n.indent = n.position.indent || []), (n.position = n.position.start)), eC(e, n);
}
function eC(e, t) {
    var n = t.additional,
        r = t.nonTerminated,
        a = t.text,
        i = t.reference,
        o = t.warning,
        l = t.textContext,
        s = t.referenceContext,
        u = t.warningContext,
        c = t.position,
        d = t.indent || [],
        m = e.length,
        f = 0,
        b = -1,
        E = c.column || 1,
        I = c.line || 1,
        y = "",
        g = [],
        v,
        T,
        R,
        k,
        L,
        F,
        M,
        O,
        B,
        $,
        ne,
        re,
        J,
        se,
        ce,
        U,
        W,
        A,
        Y;
    for (typeof n == "string" && (n = n.charCodeAt(0)), U = Q(), O = o ? C : q_, f--, m++; ++f < m; )
        if ((L === jb && (E = d[b] || 1), (L = e.charCodeAt(f)), L === Vb)) {
            if (((M = e.charCodeAt(f + 1)), M === G_ || M === jb || M === H_ || M === j_ || M === Vb || M === W_ || M !== M || (n && M === n))) {
                (y += da(L)), E++;
                continue;
            }
            for (
                J = f + 1,
                    re = J,
                    Y = J,
                    M === K_ ? ((Y = ++re), (M = e.charCodeAt(Y)), M === X_ || M === Z_ ? ((se = bg), (Y = ++re)) : (se = yg)) : (se = ma),
                    v = "",
                    ne = "",
                    k = "",
                    ce = fs[se],
                    Y--;
                ++Y < m && ((M = e.charCodeAt(Y)), !!ce(M));

            )
                (k += da(M)), se === ma && $_.call(qb, k) && ((v = k), (ne = qb[k]));
            (R = e.charCodeAt(Y) === V_),
                R && (Y++, (T = se === ma ? U_(k) : !1), T && ((v = k), (ne = T))),
                (A = 1 + Y - J),
                (!R && !r) ||
                    (k
                        ? se === ma
                            ? (R && !ne
                                  ? O(_T, 1)
                                  : (v !== k && ((Y = re + v.length), (A = 1 + Y - re), (R = !1)),
                                    R ||
                                        ((B = v ? xT : IT),
                                        t.attribute ? ((M = e.charCodeAt(Y)), M === Y_ ? (O(B, A), (ne = null)) : AT(M) ? (ne = null) : O(B, A)) : O(B, A))),
                              (F = ne))
                            : (R || O(RT, A),
                              (F = parseInt(k, vg[se])),
                              tC(F)
                                  ? (O(CT, A), (F = da(Q_)))
                                  : F in Gb
                                    ? (O(Gm, A), (F = Gb[F]))
                                    : (($ = ""),
                                      nC(F) && O(Gm, A),
                                      F > 65535 && ((F -= 65536), ($ += da((F >>> 10) | 55296)), (F = 56320 | (F & 1023))),
                                      (F = $ + da(F))))
                        : se !== ma && O(NT, A)),
                F
                    ? (he(),
                      (U = Q()),
                      (f = Y - 1),
                      (E += Y - J + 1),
                      g.push(F),
                      (W = Q()),
                      W.offset++,
                      i && i.call(s, F, { start: U, end: W }, e.slice(J - 1, Y)),
                      (U = W))
                    : ((k = e.slice(J - 1, Y)), (y += k), (E += k.length), (f = Y - 1));
        } else L === 10 && (I++, b++, (E = 0)), L === L ? ((y += da(L)), E++) : he();
    return g.join("");
    function Q() {
        return { line: I, column: E, offset: f + (c.offset || 0) };
    }
    function C(ke, de) {
        var Te = Q();
        (Te.column += de), (Te.offset += de), o.call(u, _r[ke], Te, ke);
    }
    function he() {
        y && (g.push(y), a && a.call(l, y, { start: U, end: Q() }), (y = ""));
    }
}
function tC(e) {
    return (e >= 55296 && e <= 57343) || e > 1114111;
}
function nC(e) {
    return (
        (e >= 1 && e <= 8) ||
        e === 11 ||
        (e >= 13 && e <= 31) ||
        (e >= 127 && e <= 159) ||
        (e >= 64976 && e <= 65007) ||
        (e & 65535) === 65535 ||
        (e & 65535) === 65534
    );
}
var OT = { exports: {} };
(function (e) {
    var t = typeof window < "u" ? window : typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope ? self : {};
    /**
     * Prism: Lightweight, robust, elegant syntax highlighting
     *
     * @license MIT <https://opensource.org/licenses/MIT>
     * @author Lea Verou <https://lea.verou.me>
     * @namespace
     * @public
     */ var n = (function (r) {
        var a = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,
            i = 0,
            o = {},
            l = {
                manual: r.Prism && r.Prism.manual,
                disableWorkerMessageHandler: r.Prism && r.Prism.disableWorkerMessageHandler,
                util: {
                    encode: function g(v) {
                        return v instanceof s
                            ? new s(v.type, g(v.content), v.alias)
                            : Array.isArray(v)
                              ? v.map(g)
                              : v
                                    .replace(/&/g, "&amp;")
                                    .replace(/</g, "&lt;")
                                    .replace(/\u00a0/g, " ");
                    },
                    type: function (g) {
                        return Object.prototype.toString.call(g).slice(8, -1);
                    },
                    objId: function (g) {
                        return g.__id || Object.defineProperty(g, "__id", { value: ++i }), g.__id;
                    },
                    clone: function g(v, T) {
                        T = T || {};
                        var R, k;
                        switch (l.util.type(v)) {
                            case "Object":
                                if (((k = l.util.objId(v)), T[k])) return T[k];
                                (R = {}), (T[k] = R);
                                for (var L in v) v.hasOwnProperty(L) && (R[L] = g(v[L], T));
                                return R;
                            case "Array":
                                return (
                                    (k = l.util.objId(v)),
                                    T[k]
                                        ? T[k]
                                        : ((R = []),
                                          (T[k] = R),
                                          v.forEach(function (F, M) {
                                              R[M] = g(F, T);
                                          }),
                                          R)
                                );
                            default:
                                return v;
                        }
                    },
                    getLanguage: function (g) {
                        for (; g; ) {
                            var v = a.exec(g.className);
                            if (v) return v[1].toLowerCase();
                            g = g.parentElement;
                        }
                        return "none";
                    },
                    setLanguage: function (g, v) {
                        (g.className = g.className.replace(RegExp(a, "gi"), "")), g.classList.add("language-" + v);
                    },
                    currentScript: function () {
                        if (typeof document > "u") return null;
                        if ("currentScript" in document && 1 < 2) return document.currentScript;
                        try {
                            throw new Error();
                        } catch (R) {
                            var g = (/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(R.stack) || [])[1];
                            if (g) {
                                var v = document.getElementsByTagName("script");
                                for (var T in v) if (v[T].src == g) return v[T];
                            }
                            return null;
                        }
                    },
                    isActive: function (g, v, T) {
                        for (var R = "no-" + v; g; ) {
                            var k = g.classList;
                            if (k.contains(v)) return !0;
                            if (k.contains(R)) return !1;
                            g = g.parentElement;
                        }
                        return !!T;
                    },
                },
                languages: {
                    plain: o,
                    plaintext: o,
                    text: o,
                    txt: o,
                    extend: function (g, v) {
                        var T = l.util.clone(l.languages[g]);
                        for (var R in v) T[R] = v[R];
                        return T;
                    },
                    insertBefore: function (g, v, T, R) {
                        R = R || l.languages;
                        var k = R[g],
                            L = {};
                        for (var F in k)
                            if (k.hasOwnProperty(F)) {
                                if (F == v) for (var M in T) T.hasOwnProperty(M) && (L[M] = T[M]);
                                T.hasOwnProperty(F) || (L[F] = k[F]);
                            }
                        var O = R[g];
                        return (
                            (R[g] = L),
                            l.languages.DFS(l.languages, function (B, $) {
                                $ === O && B != g && (this[B] = L);
                            }),
                            L
                        );
                    },
                    DFS: function g(v, T, R, k) {
                        k = k || {};
                        var L = l.util.objId;
                        for (var F in v)
                            if (v.hasOwnProperty(F)) {
                                T.call(v, F, v[F], R || F);
                                var M = v[F],
                                    O = l.util.type(M);
                                O === "Object" && !k[L(M)] ? ((k[L(M)] = !0), g(M, T, null, k)) : O === "Array" && !k[L(M)] && ((k[L(M)] = !0), g(M, T, F, k));
                            }
                    },
                },
                plugins: {},
                highlightAll: function (g, v) {
                    l.highlightAllUnder(document, g, v);
                },
                highlightAllUnder: function (g, v, T) {
                    var R = {
                        callback: T,
                        container: g,
                        selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code',
                    };
                    l.hooks.run("before-highlightall", R),
                        (R.elements = Array.prototype.slice.apply(R.container.querySelectorAll(R.selector))),
                        l.hooks.run("before-all-elements-highlight", R);
                    for (var k = 0, L; (L = R.elements[k++]); ) l.highlightElement(L, v === !0, R.callback);
                },
                highlightElement: function (g, v, T) {
                    var R = l.util.getLanguage(g),
                        k = l.languages[R];
                    l.util.setLanguage(g, R);
                    var L = g.parentElement;
                    L && L.nodeName.toLowerCase() === "pre" && l.util.setLanguage(L, R);
                    var F = g.textContent,
                        M = { element: g, language: R, grammar: k, code: F };
                    function O($) {
                        (M.highlightedCode = $),
                            l.hooks.run("before-insert", M),
                            (M.element.innerHTML = M.highlightedCode),
                            l.hooks.run("after-highlight", M),
                            l.hooks.run("complete", M),
                            T && T.call(M.element);
                    }
                    if (
                        (l.hooks.run("before-sanity-check", M),
                        (L = M.element.parentElement),
                        L && L.nodeName.toLowerCase() === "pre" && !L.hasAttribute("tabindex") && L.setAttribute("tabindex", "0"),
                        !M.code)
                    ) {
                        l.hooks.run("complete", M), T && T.call(M.element);
                        return;
                    }
                    if ((l.hooks.run("before-highlight", M), !M.grammar)) {
                        O(l.util.encode(M.code));
                        return;
                    }
                    if (v && r.Worker) {
                        var B = new Worker(l.filename);
                        (B.onmessage = function ($) {
                            O($.data);
                        }),
                            B.postMessage(JSON.stringify({ language: M.language, code: M.code, immediateClose: !0 }));
                    } else O(l.highlight(M.code, M.grammar, M.language));
                },
                highlight: function (g, v, T) {
                    var R = { code: g, grammar: v, language: T };
                    if ((l.hooks.run("before-tokenize", R), !R.grammar)) throw new Error('The language "' + R.language + '" has no grammar.');
                    return (R.tokens = l.tokenize(R.code, R.grammar)), l.hooks.run("after-tokenize", R), s.stringify(l.util.encode(R.tokens), R.language);
                },
                tokenize: function (g, v) {
                    var T = v.rest;
                    if (T) {
                        for (var R in T) v[R] = T[R];
                        delete v.rest;
                    }
                    var k = new d();
                    return m(k, k.head, g), c(g, k, v, k.head, 0), b(k);
                },
                hooks: {
                    all: {},
                    add: function (g, v) {
                        var T = l.hooks.all;
                        (T[g] = T[g] || []), T[g].push(v);
                    },
                    run: function (g, v) {
                        var T = l.hooks.all[g];
                        if (!(!T || !T.length)) for (var R = 0, k; (k = T[R++]); ) k(v);
                    },
                },
                Token: s,
            };
        r.Prism = l;
        function s(g, v, T, R) {
            (this.type = g), (this.content = v), (this.alias = T), (this.length = (R || "").length | 0);
        }
        s.stringify = function g(v, T) {
            if (typeof v == "string") return v;
            if (Array.isArray(v)) {
                var R = "";
                return (
                    v.forEach(function (O) {
                        R += g(O, T);
                    }),
                    R
                );
            }
            var k = { type: v.type, content: g(v.content, T), tag: "span", classes: ["token", v.type], attributes: {}, language: T },
                L = v.alias;
            L && (Array.isArray(L) ? Array.prototype.push.apply(k.classes, L) : k.classes.push(L)), l.hooks.run("wrap", k);
            var F = "";
            for (var M in k.attributes) F += " " + M + '="' + (k.attributes[M] || "").replace(/"/g, "&quot;") + '"';
            return "<" + k.tag + ' class="' + k.classes.join(" ") + '"' + F + ">" + k.content + "</" + k.tag + ">";
        };
        function u(g, v, T, R) {
            g.lastIndex = v;
            var k = g.exec(T);
            if (k && R && k[1]) {
                var L = k[1].length;
                (k.index += L), (k[0] = k[0].slice(L));
            }
            return k;
        }
        function c(g, v, T, R, k, L) {
            for (var F in T)
                if (!(!T.hasOwnProperty(F) || !T[F])) {
                    var M = T[F];
                    M = Array.isArray(M) ? M : [M];
                    for (var O = 0; O < M.length; ++O) {
                        if (L && L.cause == F + "," + O) return;
                        var B = M[O],
                            $ = B.inside,
                            ne = !!B.lookbehind,
                            re = !!B.greedy,
                            J = B.alias;
                        if (re && !B.pattern.global) {
                            var se = B.pattern.toString().match(/[imsuy]*$/)[0];
                            B.pattern = RegExp(B.pattern.source, se + "g");
                        }
                        for (var ce = B.pattern || B, U = R.next, W = k; U !== v.tail && !(L && W >= L.reach); W += U.value.length, U = U.next) {
                            var A = U.value;
                            if (v.length > g.length) return;
                            if (!(A instanceof s)) {
                                var Y = 1,
                                    Q;
                                if (re) {
                                    if (((Q = u(ce, W, g, ne)), !Q || Q.index >= g.length)) break;
                                    var de = Q.index,
                                        C = Q.index + Q[0].length,
                                        he = W;
                                    for (he += U.value.length; de >= he; ) (U = U.next), (he += U.value.length);
                                    if (((he -= U.value.length), (W = he), U.value instanceof s)) continue;
                                    for (var ke = U; ke !== v.tail && (he < C || typeof ke.value == "string"); ke = ke.next) Y++, (he += ke.value.length);
                                    Y--, (A = g.slice(W, he)), (Q.index -= W);
                                } else if (((Q = u(ce, 0, A, ne)), !Q)) continue;
                                var de = Q.index,
                                    Te = Q[0],
                                    He = A.slice(0, de),
                                    it = A.slice(de + Te.length),
                                    pt = W + A.length;
                                L && pt > L.reach && (L.reach = pt);
                                var sn = U.prev;
                                He && ((sn = m(v, sn, He)), (W += He.length)), f(v, sn, Y);
                                var ti = new s(F, $ ? l.tokenize(Te, $) : Te, J, Te);
                                if (((U = m(v, sn, ti)), it && m(v, U, it), Y > 1)) {
                                    var Lr = { cause: F + "," + O, reach: pt };
                                    c(g, v, T, U.prev, W, Lr), L && Lr.reach > L.reach && (L.reach = Lr.reach);
                                }
                            }
                        }
                    }
                }
        }
        function d() {
            var g = { value: null, prev: null, next: null },
                v = { value: null, prev: g, next: null };
            (g.next = v), (this.head = g), (this.tail = v), (this.length = 0);
        }
        function m(g, v, T) {
            var R = v.next,
                k = { value: T, prev: v, next: R };
            return (v.next = k), (R.prev = k), g.length++, k;
        }
        function f(g, v, T) {
            for (var R = v.next, k = 0; k < T && R !== g.tail; k++) R = R.next;
            (v.next = R), (R.prev = v), (g.length -= k);
        }
        function b(g) {
            for (var v = [], T = g.head.next; T !== g.tail; ) v.push(T.value), (T = T.next);
            return v;
        }
        if (!r.document)
            return (
                r.addEventListener &&
                    (l.disableWorkerMessageHandler ||
                        r.addEventListener(
                            "message",
                            function (g) {
                                var v = JSON.parse(g.data),
                                    T = v.language,
                                    R = v.code,
                                    k = v.immediateClose;
                                r.postMessage(l.highlight(R, l.languages[T], T)), k && r.close();
                            },
                            !1,
                        )),
                l
            );
        var E = l.util.currentScript();
        E && ((l.filename = E.src), E.hasAttribute("data-manual") && (l.manual = !0));
        function I() {
            l.manual || l.highlightAll();
        }
        if (!l.manual) {
            var y = document.readyState;
            y === "loading" || (y === "interactive" && E && E.defer)
                ? document.addEventListener("DOMContentLoaded", I)
                : window.requestAnimationFrame
                  ? window.requestAnimationFrame(I)
                  : window.setTimeout(I, 16);
        }
        return l;
    })(t);
    e.exports && (e.exports = n), typeof Pa < "u" && (Pa.Prism = n);
})(OT);
var rC = OT.exports,
    aC = Eg;
Eg.displayName = "markup";
Eg.aliases = ["html", "mathml", "svg", "xml", "ssml", "atom", "rss"];
function Eg(e) {
    (e.languages.markup = {
        comment: { pattern: /<!--(?:(?!<!--)[\s\S])*?-->/, greedy: !0 },
        prolog: { pattern: /<\?[\s\S]+?\?>/, greedy: !0 },
        doctype: {
            pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
            greedy: !0,
            inside: {
                "internal-subset": { pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/, lookbehind: !0, greedy: !0, inside: null },
                string: { pattern: /"[^"]*"|'[^']*'/, greedy: !0 },
                punctuation: /^<!|>$|[[\]]/,
                "doctype-tag": /^DOCTYPE/i,
                name: /[^\s<>'"]+/,
            },
        },
        cdata: { pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i, greedy: !0 },
        tag: {
            pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
            greedy: !0,
            inside: {
                tag: { pattern: /^<\/?[^\s>\/]+/, inside: { punctuation: /^<\/?/, namespace: /^[^\s>\/:]+:/ } },
                "special-attr": [],
                "attr-value": { pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/, inside: { punctuation: [{ pattern: /^=/, alias: "attr-equals" }, /"|'/] } },
                punctuation: /\/?>/,
                "attr-name": { pattern: /[^\s>\/]+/, inside: { namespace: /^[^\s>\/:]+:/ } },
            },
        },
        entity: [{ pattern: /&[\da-z]{1,8};/i, alias: "named-entity" }, /&#x?[\da-f]{1,8};/i],
    }),
        (e.languages.markup.tag.inside["attr-value"].inside.entity = e.languages.markup.entity),
        (e.languages.markup.doctype.inside["internal-subset"].inside = e.languages.markup),
        e.hooks.add("wrap", function (t) {
            t.type === "entity" && (t.attributes.title = t.content.value.replace(/&amp;/, "&"));
        }),
        Object.defineProperty(e.languages.markup.tag, "addInlined", {
            value: function (n, r) {
                var a = {};
                (a["language-" + r] = { pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i, lookbehind: !0, inside: e.languages[r] }),
                    (a.cdata = /^<!\[CDATA\[|\]\]>$/i);
                var i = { "included-cdata": { pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i, inside: a } };
                i["language-" + r] = { pattern: /[\s\S]+/, inside: e.languages[r] };
                var o = {};
                (o[n] = {
                    pattern: RegExp(
                        /(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function () {
                            return n;
                        }),
                        "i",
                    ),
                    lookbehind: !0,
                    greedy: !0,
                    inside: i,
                }),
                    e.languages.insertBefore("markup", "cdata", o);
            },
        }),
        Object.defineProperty(e.languages.markup.tag, "addAttribute", {
            value: function (t, n) {
                e.languages.markup.tag.inside["special-attr"].push({
                    pattern: RegExp(/(^|["'\s])/.source + "(?:" + t + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source, "i"),
                    lookbehind: !0,
                    inside: {
                        "attr-name": /^[^\s=]+/,
                        "attr-value": {
                            pattern: /=[\s\S]+/,
                            inside: {
                                value: {
                                    pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                                    lookbehind: !0,
                                    alias: [n, "language-" + n],
                                    inside: e.languages[n],
                                },
                                punctuation: [{ pattern: /^=/, alias: "attr-equals" }, /"|'/],
                            },
                        },
                    },
                });
            },
        }),
        (e.languages.html = e.languages.markup),
        (e.languages.mathml = e.languages.markup),
        (e.languages.svg = e.languages.markup),
        (e.languages.xml = e.languages.extend("markup", {})),
        (e.languages.ssml = e.languages.xml),
        (e.languages.atom = e.languages.xml),
        (e.languages.rss = e.languages.xml);
}
var iC = Sg;
Sg.displayName = "css";
Sg.aliases = [];
function Sg(e) {
    (function (t) {
        var n = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
        (t.languages.css = {
            comment: /\/\*[\s\S]*?\*\//,
            atrule: {
                pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
                inside: {
                    rule: /^@[\w-]+/,
                    "selector-function-argument": {
                        pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
                        lookbehind: !0,
                        alias: "selector",
                    },
                    keyword: { pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/, lookbehind: !0 },
                },
            },
            url: {
                pattern: RegExp("\\burl\\((?:" + n.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"),
                greedy: !0,
                inside: { function: /^url/i, punctuation: /^\(|\)$/, string: { pattern: RegExp("^" + n.source + "$"), alias: "url" } },
            },
            selector: { pattern: RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + n.source + ")*(?=\\s*\\{)"), lookbehind: !0 },
            string: { pattern: n, greedy: !0 },
            property: { pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i, lookbehind: !0 },
            important: /!important\b/i,
            function: { pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i, lookbehind: !0 },
            punctuation: /[(){};:,]/,
        }),
            (t.languages.css.atrule.inside.rest = t.languages.css);
        var r = t.languages.markup;
        r && (r.tag.addInlined("style", "css"), r.tag.addAttribute("style", "css"));
    })(e);
}
var oC = wg;
wg.displayName = "clike";
wg.aliases = [];
function wg(e) {
    e.languages.clike = {
        comment: [
            { pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0, greedy: !0 },
            { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 },
        ],
        string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
        "class-name": {
            pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,
            lookbehind: !0,
            inside: { punctuation: /[.\\]/ },
        },
        keyword: /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
        boolean: /\b(?:false|true)\b/,
        function: /\b\w+(?=\()/,
        number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
        operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
        punctuation: /[{}[\];(),.:]/,
    };
}
var lC = kg;
kg.displayName = "javascript";
kg.aliases = ["js"];
function kg(e) {
    (e.languages.javascript = e.languages.extend("clike", {
        "class-name": [
            e.languages.clike["class-name"],
            { pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/, lookbehind: !0 },
        ],
        keyword: [
            { pattern: /((?:^|\})\s*)catch\b/, lookbehind: !0 },
            {
                pattern:
                    /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
                lookbehind: !0,
            },
        ],
        function: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
        number: {
            pattern: RegExp(
                /(^|[^\w$])/.source +
                    "(?:" +
                    (/NaN|Infinity/.source +
                        "|" +
                        /0[bB][01]+(?:_[01]+)*n?/.source +
                        "|" +
                        /0[oO][0-7]+(?:_[0-7]+)*n?/.source +
                        "|" +
                        /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source +
                        "|" +
                        /\d+(?:_\d+)*n/.source +
                        "|" +
                        /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) +
                    ")" +
                    /(?![\w$])/.source,
            ),
            lookbehind: !0,
        },
        operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/,
    })),
        (e.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/),
        e.languages.insertBefore("javascript", "keyword", {
            regex: {
                pattern:
                    /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    "regex-source": { pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/, lookbehind: !0, alias: "language-regex", inside: e.languages.regex },
                    "regex-delimiter": /^\/|\/$/,
                    "regex-flags": /^[a-z]+$/,
                },
            },
            "function-variable": {
                pattern:
                    /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
                alias: "function",
            },
            parameter: [
                {
                    pattern:
                        /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
                    lookbehind: !0,
                    inside: e.languages.javascript,
                },
                {
                    pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
                    lookbehind: !0,
                    inside: e.languages.javascript,
                },
                { pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/, lookbehind: !0, inside: e.languages.javascript },
                {
                    pattern:
                        /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
                    lookbehind: !0,
                    inside: e.languages.javascript,
                },
            ],
            constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/,
        }),
        e.languages.insertBefore("javascript", "string", {
            hashbang: { pattern: /^#!.*/, greedy: !0, alias: "comment" },
            "template-string": {
                pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
                greedy: !0,
                inside: {
                    "template-punctuation": { pattern: /^`|`$/, alias: "string" },
                    interpolation: {
                        pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
                        lookbehind: !0,
                        inside: { "interpolation-punctuation": { pattern: /^\$\{|\}$/, alias: "punctuation" }, rest: e.languages.javascript },
                    },
                    string: /[\s\S]+/,
                },
            },
            "string-property": {
                pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
                lookbehind: !0,
                greedy: !0,
                alias: "property",
            },
        }),
        e.languages.insertBefore("javascript", "operator", {
            "literal-property": {
                pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
                lookbehind: !0,
                alias: "property",
            },
        }),
        e.languages.markup &&
            (e.languages.markup.tag.addInlined("script", "javascript"),
            e.languages.markup.tag.addAttribute(
                /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/
                    .source,
                "javascript",
            )),
        (e.languages.js = e.languages.javascript);
}
var ki = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof Pa == "object" ? Pa : {},
    sC = TC();
ki.Prism = { manual: !0, disableWorkerMessageHandler: !0 };
var uC = TI,
    cC = z_,
    LT = rC,
    dC = aC,
    pC = iC,
    fC = oC,
    mC = lC;
sC();
var Tg = {}.hasOwnProperty;
function DT() {}
DT.prototype = LT;
var Ke = new DT(),
    hC = Ke;
Ke.highlight = bC;
Ke.register = mo;
Ke.alias = gC;
Ke.registered = yC;
Ke.listLanguages = vC;
mo(dC);
mo(pC);
mo(fC);
mo(mC);
Ke.util.encode = wC;
Ke.Token.stringify = EC;
function mo(e) {
    if (typeof e != "function" || !e.displayName) throw new Error("Expected `function` for `grammar`, got `" + e + "`");
    Ke.languages[e.displayName] === void 0 && e(Ke);
}
function gC(e, t) {
    var n = Ke.languages,
        r = e,
        a,
        i,
        o,
        l;
    t && ((r = {}), (r[e] = t));
    for (a in r) for (i = r[a], i = typeof i == "string" ? [i] : i, o = i.length, l = -1; ++l < o; ) n[i[l]] = n[a];
}
function bC(e, t) {
    var n = LT.highlight,
        r;
    if (typeof e != "string") throw new Error("Expected `string` for `value`, got `" + e + "`");
    if (Ke.util.type(t) === "Object") (r = t), (t = null);
    else {
        if (typeof t != "string") throw new Error("Expected `string` for `name`, got `" + t + "`");
        if (Tg.call(Ke.languages, t)) r = Ke.languages[t];
        else throw new Error("Unknown language: `" + t + "` is not registered");
    }
    return n.call(this, e, r, t);
}
function yC(e) {
    if (typeof e != "string") throw new Error("Expected `string` for `language`, got `" + e + "`");
    return Tg.call(Ke.languages, e);
}
function vC() {
    var e = Ke.languages,
        t = [],
        n;
    for (n in e) Tg.call(e, n) && typeof e[n] == "object" && t.push(n);
    return t;
}
function EC(e, t, n) {
    var r;
    return typeof e == "string"
        ? { type: "text", value: e }
        : Ke.util.type(e) === "Array"
          ? SC(e, t)
          : ((r = {
                type: e.type,
                content: Ke.Token.stringify(e.content, t, n),
                tag: "span",
                classes: ["token", e.type],
                attributes: {},
                language: t,
                parent: n,
            }),
            e.alias && (r.classes = r.classes.concat(e.alias)),
            Ke.hooks.run("wrap", r),
            uC(r.tag + "." + r.classes.join("."), kC(r.attributes), r.content));
}
function SC(e, t) {
    for (var n = [], r = e.length, a = -1, i; ++a < r; ) (i = e[a]), i !== "" && i !== null && i !== void 0 && n.push(i);
    for (a = -1, r = n.length; ++a < r; ) (i = n[a]), (n[a] = Ke.Token.stringify(i, t, n));
    return n;
}
function wC(e) {
    return e;
}
function kC(e) {
    var t;
    for (t in e) e[t] = cC(e[t]);
    return e;
}
function TC() {
    var e = "Prism" in ki,
        t = e ? ki.Prism : void 0;
    return n;
    function n() {
        e ? (ki.Prism = t) : delete ki.Prism, (e = void 0), (t = void 0);
    }
}
const AC = {
    'code[class*="language-"]': {
        color: "black",
        background: "none",
        textShadow: "0 1px white",
        fontFamily: "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
        fontSize: "1em",
        textAlign: "left",
        whiteSpace: "pre",
        wordSpacing: "normal",
        wordBreak: "normal",
        wordWrap: "normal",
        lineHeight: "1.5",
        MozTabSize: "4",
        OTabSize: "4",
        tabSize: "4",
        WebkitHyphens: "none",
        MozHyphens: "none",
        msHyphens: "none",
        hyphens: "none",
    },
    'pre[class*="language-"]': {
        color: "black",
        background: "#f5f2f0",
        textShadow: "0 1px white",
        fontFamily: "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
        fontSize: "1em",
        textAlign: "left",
        whiteSpace: "pre",
        wordSpacing: "normal",
        wordBreak: "normal",
        wordWrap: "normal",
        lineHeight: "1.5",
        MozTabSize: "4",
        OTabSize: "4",
        tabSize: "4",
        WebkitHyphens: "none",
        MozHyphens: "none",
        msHyphens: "none",
        hyphens: "none",
        padding: "1em",
        margin: ".5em 0",
        overflow: "auto",
    },
    'pre[class*="language-"]::-moz-selection': { textShadow: "none", background: "#b3d4fc" },
    'pre[class*="language-"] ::-moz-selection': { textShadow: "none", background: "#b3d4fc" },
    'code[class*="language-"]::-moz-selection': { textShadow: "none", background: "#b3d4fc" },
    'code[class*="language-"] ::-moz-selection': { textShadow: "none", background: "#b3d4fc" },
    'pre[class*="language-"]::selection': { textShadow: "none", background: "#b3d4fc" },
    'pre[class*="language-"] ::selection': { textShadow: "none", background: "#b3d4fc" },
    'code[class*="language-"]::selection': { textShadow: "none", background: "#b3d4fc" },
    'code[class*="language-"] ::selection': { textShadow: "none", background: "#b3d4fc" },
    ':not(pre) > code[class*="language-"]': { background: "#f5f2f0", padding: ".1em", borderRadius: ".3em", whiteSpace: "normal" },
    comment: { color: "slategray" },
    prolog: { color: "slategray" },
    doctype: { color: "slategray" },
    cdata: { color: "slategray" },
    punctuation: { color: "#999" },
    namespace: { Opacity: ".7" },
    property: { color: "#905" },
    tag: { color: "#905" },
    boolean: { color: "#905" },
    number: { color: "#905" },
    constant: { color: "#905" },
    symbol: { color: "#905" },
    deleted: { color: "#905" },
    selector: { color: "#690" },
    "attr-name": { color: "#690" },
    string: { color: "#690" },
    char: { color: "#690" },
    builtin: { color: "#690" },
    inserted: { color: "#690" },
    operator: { color: "#9a6e3a", background: "hsla(0, 0%, 100%, .5)" },
    entity: { color: "#9a6e3a", background: "hsla(0, 0%, 100%, .5)", cursor: "help" },
    url: { color: "#9a6e3a", background: "hsla(0, 0%, 100%, .5)" },
    ".language-css .token.string": { color: "#9a6e3a", background: "hsla(0, 0%, 100%, .5)" },
    ".style .token.string": { color: "#9a6e3a", background: "hsla(0, 0%, 100%, .5)" },
    atrule: { color: "#07a" },
    "attr-value": { color: "#07a" },
    keyword: { color: "#07a" },
    function: { color: "#DD4A68" },
    "class-name": { color: "#DD4A68" },
    regex: { color: "#e90" },
    important: { color: "#e90", fontWeight: "bold" },
    variable: { color: "#e90" },
    bold: { fontWeight: "bold" },
    italic: { fontStyle: "italic" },
};
var su, Wb;
function xC() {
    if (Wb) return su;
    (Wb = 1), (su = e), (e.displayName = "abap"), (e.aliases = []);
    function e(t) {
        t.languages.abap = {
            comment: /^\*.*/m,
            string: /(`|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
            "string-template": { pattern: /([|}])(?:\\.|[^\\|{\r\n])*(?=[|{])/, lookbehind: !0, alias: "string" },
            "eol-comment": { pattern: /(^|\s)".*/m, lookbehind: !0, alias: "comment" },
            keyword: {
                pattern:
                    /(\s|\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\/MM\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\/DD\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\/MM\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\/DD\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\b/i,
                lookbehind: !0,
            },
            number: /\b\d+\b/,
            operator: { pattern: /(\s)(?:\*\*?|<[=>]?|>=?|\?=|[-+\/=])(?=\s)/, lookbehind: !0 },
            "string-operator": { pattern: /(\s)&&?(?=\s)/, lookbehind: !0, alias: "keyword" },
            "token-operator": [
                { pattern: /(\w)(?:->?|=>|[~|{}])(?=\w)/, lookbehind: !0, alias: "punctuation" },
                { pattern: /[|{}]/, alias: "punctuation" },
            ],
            punctuation: /[,.:()]/,
        };
    }
    return su;
}
var uu, Yb;
function RC() {
    if (Yb) return uu;
    (Yb = 1), (uu = e), (e.displayName = "abnf"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = "(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)";
            n.languages.abnf = {
                comment: /;.*/,
                string: { pattern: /(?:%[is])?"[^"\n\r]*"/, greedy: !0, inside: { punctuation: /^%[is]/ } },
                range: { pattern: /%(?:b[01]+-[01]+|d\d+-\d+|x[A-F\d]+-[A-F\d]+)/i, alias: "number" },
                terminal: { pattern: /%(?:b[01]+(?:\.[01]+)*|d\d+(?:\.\d+)*|x[A-F\d]+(?:\.[A-F\d]+)*)/i, alias: "number" },
                repetition: { pattern: /(^|[^\w-])(?:\d*\*\d*|\d+)/, lookbehind: !0, alias: "operator" },
                definition: { pattern: /(^[ \t]*)(?:[a-z][\w-]*|<[^<>\r\n]*>)(?=\s*=)/m, lookbehind: !0, alias: "keyword", inside: { punctuation: /<|>/ } },
                "core-rule": {
                    pattern: RegExp("(?:(^|[^<\\w-])" + r + "|<" + r + ">)(?![\\w-])", "i"),
                    lookbehind: !0,
                    alias: ["rule", "constant"],
                    inside: { punctuation: /<|>/ },
                },
                rule: { pattern: /(^|[^<\w-])[a-z][\w-]*|<[^<>\r\n]*>/i, lookbehind: !0, inside: { punctuation: /<|>/ } },
                operator: /=\/?|\//,
                punctuation: /[()\[\]]/,
            };
        })(t);
    }
    return uu;
}
var cu, Kb;
function IC() {
    if (Kb) return cu;
    (Kb = 1), (cu = e), (e.displayName = "actionscript"), (e.aliases = []);
    function e(t) {
        (t.languages.actionscript = t.languages.extend("javascript", {
            keyword:
                /\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\b/,
            operator: /\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/,
        })),
            (t.languages.actionscript["class-name"].alias = "function"),
            delete t.languages.actionscript.parameter,
            delete t.languages.actionscript["literal-property"],
            t.languages.markup &&
                t.languages.insertBefore("actionscript", "string", {
                    xml: { pattern: /(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/, lookbehind: !0, inside: t.languages.markup },
                });
    }
    return cu;
}
var du, Xb;
function NC() {
    if (Xb) return du;
    (Xb = 1), (du = e), (e.displayName = "ada"), (e.aliases = []);
    function e(t) {
        t.languages.ada = {
            comment: /--.*/,
            string: /"(?:""|[^"\r\f\n])*"/,
            number: [
                { pattern: /\b\d(?:_?\d)*#[\dA-F](?:_?[\dA-F])*(?:\.[\dA-F](?:_?[\dA-F])*)?#(?:E[+-]?\d(?:_?\d)*)?/i },
                { pattern: /\b\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:E[+-]?\d(?:_?\d)*)?\b/i },
            ],
            "attr-name": /\b'\w+/,
            keyword:
                /\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\b/i,
            boolean: /\b(?:false|true)\b/i,
            operator: /<[=>]?|>=?|=>?|:=|\/=?|\*\*?|[&+-]/,
            punctuation: /\.\.?|[,;():]/,
            char: /'.'/,
            variable: /\b[a-z](?:\w)*\b/i,
        };
    }
    return du;
}
var pu, Zb;
function _C() {
    if (Zb) return pu;
    (Zb = 1), (pu = e), (e.displayName = "agda"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.agda = {
                comment: /\{-[\s\S]*?(?:-\}|$)|--.*/,
                string: { pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/, greedy: !0 },
                punctuation: /[(){}⦃⦄.;@]/,
                "class-name": { pattern: /((?:data|record) +)\S+/, lookbehind: !0 },
                function: { pattern: /(^[ \t]*)(?!\s)[^:\r\n]+(?=:)/m, lookbehind: !0 },
                operator: { pattern: /(^\s*|\s)(?:[=|:∀→λ\\?_]|->)(?=\s)/, lookbehind: !0 },
                keyword:
                    /\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\b/,
            };
        })(t);
    }
    return pu;
}
var fu, Qb;
function CC() {
    if (Qb) return fu;
    (Qb = 1), (fu = e), (e.displayName = "al"), (e.aliases = []);
    function e(t) {
        t.languages.al = {
            comment: /\/\/.*|\/\*[\s\S]*?\*\//,
            string: { pattern: /'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/, greedy: !0 },
            function: { pattern: /(\b(?:event|procedure|trigger)\s+|(?:^|[^.])\.\s*)[a-z_]\w*(?=\s*\()/i, lookbehind: !0 },
            keyword: [
                /\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\b/i,
                /\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\b/i,
            ],
            number: /\b(?:0x[\da-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)(?:F|LL?|U(?:LL?)?)?\b/i,
            boolean: /\b(?:false|true)\b/i,
            variable: /\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\b/,
            "class-name":
                /\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\b/i,
            operator: /\.\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\b(?:and|div|mod|not|or|xor)\b/i,
            punctuation: /[()\[\]{}:.;,]/,
        };
    }
    return fu;
}
var mu, Jb;
function OC() {
    if (Jb) return mu;
    (Jb = 1), (mu = e), (e.displayName = "antlr4"), (e.aliases = ["g4"]);
    function e(t) {
        (t.languages.antlr4 = {
            comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
            string: { pattern: /'(?:\\.|[^\\'\r\n])*'/, greedy: !0 },
            "character-class": {
                pattern: /\[(?:\\.|[^\\\]\r\n])*\]/,
                greedy: !0,
                alias: "regex",
                inside: {
                    range: { pattern: /([^[]|(?:^|[^\\])(?:\\\\)*\\\[)-(?!\])/, lookbehind: !0, alias: "punctuation" },
                    escape: /\\(?:u(?:[a-fA-F\d]{4}|\{[a-fA-F\d]+\})|[pP]\{[=\w-]+\}|[^\r\nupP])/,
                    punctuation: /[\[\]]/,
                },
            },
            action: {
                pattern: /\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\}/,
                greedy: !0,
                inside: { content: { pattern: /(\{)[\s\S]+(?=\})/, lookbehind: !0 }, punctuation: /[{}]/ },
            },
            command: {
                pattern: /(->\s*(?!\s))(?:\s*(?:,\s*)?\b[a-z]\w*(?:\s*\([^()\r\n]*\))?)+(?=\s*;)/i,
                lookbehind: !0,
                inside: { function: /\b\w+(?=\s*(?:[,(]|$))/, punctuation: /[,()]/ },
            },
            annotation: { pattern: /@\w+(?:::\w+)*/, alias: "keyword" },
            label: { pattern: /#[ \t]*\w+/, alias: "punctuation" },
            keyword: /\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\b/,
            definition: [
                { pattern: /\b[a-z]\w*(?=\s*:)/, alias: ["rule", "class-name"] },
                { pattern: /\b[A-Z]\w*(?=\s*:)/, alias: ["token", "constant"] },
            ],
            constant: /\b[A-Z][A-Z_]*\b/,
            operator: /\.\.|->|[|~]|[*+?]\??/,
            punctuation: /[;:()=]/,
        }),
            (t.languages.g4 = t.languages.antlr4);
    }
    return mu;
}
var hu, ey;
function LC() {
    if (ey) return hu;
    (ey = 1), (hu = e), (e.displayName = "apacheconf"), (e.aliases = []);
    function e(t) {
        t.languages.apacheconf = {
            comment: /#.*/,
            "directive-inline": {
                pattern:
                    /(^[\t ]*)\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\b/im,
                lookbehind: !0,
                alias: "property",
            },
            "directive-block": {
                pattern:
                    /<\/?\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\b.*>/i,
                inside: {
                    "directive-block": { pattern: /^<\/?\w+/, inside: { punctuation: /^<\/?/ }, alias: "tag" },
                    "directive-block-parameter": {
                        pattern: /.*[^>]/,
                        inside: { punctuation: /:/, string: { pattern: /("|').*\1/, inside: { variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/ } } },
                        alias: "attr-value",
                    },
                    punctuation: />/,
                },
                alias: "tag",
            },
            "directive-flags": { pattern: /\[(?:[\w=],?)+\]/, alias: "keyword" },
            string: { pattern: /("|').*\1/, inside: { variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/ } },
            variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/,
            regex: /\^?.*\$|\^.*\$?/,
        };
    }
    return hu;
}
var gu, ty;
function Ag() {
    if (ty) return gu;
    (ty = 1), (gu = e), (e.displayName = "sql"), (e.aliases = []);
    function e(t) {
        t.languages.sql = {
            comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/, lookbehind: !0 },
            variable: [{ pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/, greedy: !0 }, /@[\w.$]+/],
            string: { pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/, greedy: !0, lookbehind: !0 },
            identifier: { pattern: /(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/, greedy: !0, lookbehind: !0, inside: { punctuation: /^`|`$/ } },
            function: /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,
            keyword:
                /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,
            boolean: /\b(?:FALSE|NULL|TRUE)\b/i,
            number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
            operator: /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
            punctuation: /[;[\]()`,.]/,
        };
    }
    return gu;
}
var bu, ny;
function DC() {
    if (ny) return bu;
    ny = 1;
    var e = Ag();
    (bu = t), (t.displayName = "apex"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                var a =
                        /\b(?:(?:after|before)(?=\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\s+sharing)\b/i,
                    i =
                        /\b(?:(?=[a-z_]\w*\s*[<\[])|(?!<keyword>))[A-Z_]\w*(?:\s*\.\s*[A-Z_]\w*)*\b(?:\s*(?:\[\s*\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(
                            /<keyword>/g,
                            function () {
                                return a.source;
                            },
                        );
                function o(s) {
                    return RegExp(
                        s.replace(/<CLASS-NAME>/g, function () {
                            return i;
                        }),
                        "i",
                    );
                }
                var l = { keyword: a, punctuation: /[()\[\]{};,:.<>]/ };
                r.languages.apex = {
                    comment: r.languages.clike.comment,
                    string: r.languages.clike.string,
                    sql: { pattern: /((?:[=,({:]|\breturn)\s*)\[[^\[\]]*\]/i, lookbehind: !0, greedy: !0, alias: "language-sql", inside: r.languages.sql },
                    annotation: { pattern: /@\w+\b/, alias: "punctuation" },
                    "class-name": [
                        {
                            pattern: o(/(\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\s+\w+\s+on)\s+)<CLASS-NAME>/.source),
                            lookbehind: !0,
                            inside: l,
                        },
                        { pattern: o(/(\(\s*)<CLASS-NAME>(?=\s*\)\s*[\w(])/.source), lookbehind: !0, inside: l },
                        { pattern: o(/<CLASS-NAME>(?=\s*\w+\s*[;=,(){:])/.source), inside: l },
                    ],
                    trigger: { pattern: /(\btrigger\s+)\w+\b/i, lookbehind: !0, alias: "class-name" },
                    keyword: a,
                    function: /\b[a-z_]\w*(?=\s*\()/i,
                    boolean: /\b(?:false|true)\b/i,
                    number: /(?:\B\.\d+|\b\d+(?:\.\d+|L)?)\b/i,
                    operator: /[!=](?:==?)?|\?\.?|&&|\|\||--|\+\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,
                    punctuation: /[()\[\]{};,.]/,
                };
            })(n);
    }
    return bu;
}
var yu, ry;
function MC() {
    if (ry) return yu;
    (ry = 1), (yu = e), (e.displayName = "apl"), (e.aliases = []);
    function e(t) {
        t.languages.apl = {
            comment: /(?:⍝|#[! ]).*$/m,
            string: { pattern: /'(?:[^'\r\n]|'')*'/, greedy: !0 },
            number: /¯?(?:\d*\.?\b\d+(?:e[+¯]?\d+)?|¯|∞)(?:j¯?(?:(?:\d+(?:\.\d+)?|\.\d+)(?:e[+¯]?\d+)?|¯|∞))?/i,
            statement: /:[A-Z][a-z][A-Za-z]*\b/,
            "system-function": { pattern: /⎕[A-Z]+/i, alias: "function" },
            constant: /[⍬⌾#⎕⍞]/,
            function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,
            "monadic-operator": { pattern: /[\\\/⌿⍀¨⍨⌶&∥]/, alias: "operator" },
            "dyadic-operator": { pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/, alias: "operator" },
            assignment: { pattern: /←/, alias: "keyword" },
            punctuation: /[\[;\]()◇⋄]/,
            dfn: { pattern: /[{}⍺⍵⍶⍹∇⍫:]/, alias: "builtin" },
        };
    }
    return yu;
}
var vu, ay;
function FC() {
    if (ay) return vu;
    (ay = 1), (vu = e), (e.displayName = "applescript"), (e.aliases = []);
    function e(t) {
        t.languages.applescript = {
            comment: [/\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/, /--.+/, /#.+/],
            string: /"(?:\\.|[^"\\\r\n])*"/,
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?\b/i,
            operator: [
                /[&=≠≤≥*+\-\/÷^]|[<>]=?/,
                /\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\b/,
            ],
            keyword:
                /\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\b/,
            "class-name":
                /\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\b/,
            punctuation: /[{}():,¬«»《》]/,
        };
    }
    return vu;
}
var Eu, iy;
function PC() {
    if (iy) return Eu;
    (iy = 1), (Eu = e), (e.displayName = "aql"), (e.aliases = []);
    function e(t) {
        t.languages.aql = {
            comment: /\/\/.*|\/\*[\s\S]*?\*\//,
            property: { pattern: /([{,]\s*)(?:(?!\d)\w+|(["'´`])(?:(?!\2)[^\\\r\n]|\\.)*\2)(?=\s*:)/, lookbehind: !0, greedy: !0 },
            string: { pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\.)*\1/, greedy: !0 },
            identifier: { pattern: /([´`])(?:(?!\1)[^\\\r\n]|\\.)*\1/, greedy: !0 },
            variable: /@@?\w+/,
            keyword: [
                { pattern: /(\bWITH\s+)COUNT(?=\s+INTO\b)/i, lookbehind: !0 },
                /\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\b/i,
                { pattern: /(^|[^\w.[])(?:KEEP|PRUNE|SEARCH|TO)\b/i, lookbehind: !0 },
                { pattern: /(^|[^\w.[])(?:CURRENT|NEW|OLD)\b/, lookbehind: !0 },
                { pattern: /\bOPTIONS(?=\s*\{)/i },
            ],
            function: /\b(?!\d)\w+(?=\s*\()/,
            boolean: /\b(?:false|true)\b/i,
            range: { pattern: /\.\./, alias: "operator" },
            number: [/\b0b[01]+/i, /\b0x[0-9a-f]+/i, /(?:\B\.\d+|\b(?:0|[1-9]\d*)(?:\.\d+)?)(?:e[+-]?\d+)?/i],
            operator: /\*{2,}|[=!]~|[!=<>]=?|&&|\|\||[-+*/%]/,
            punctuation: /::|[?.:,;()[\]{}]/,
        };
    }
    return Eu;
}
var Su, oy;
function ra() {
    if (oy) return Su;
    (oy = 1), (Su = e), (e.displayName = "c"), (e.aliases = []);
    function e(t) {
        (t.languages.c = t.languages.extend("clike", {
            comment: { pattern: /\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/, greedy: !0 },
            string: { pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/, greedy: !0 },
            "class-name": { pattern: /(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/, lookbehind: !0 },
            keyword:
                /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,
            operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/,
        })),
            t.languages.insertBefore("c", "string", { char: { pattern: /'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/, greedy: !0 } }),
            t.languages.insertBefore("c", "string", {
                macro: {
                    pattern: /(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,
                    lookbehind: !0,
                    greedy: !0,
                    alias: "property",
                    inside: {
                        string: [{ pattern: /^(#\s*include\s*)<[^>]+>/, lookbehind: !0 }, t.languages.c.string],
                        char: t.languages.c.char,
                        comment: t.languages.c.comment,
                        "macro-name": [
                            { pattern: /(^#\s*define\s+)\w+\b(?!\()/i, lookbehind: !0 },
                            { pattern: /(^#\s*define\s+)\w+\b(?=\()/i, lookbehind: !0, alias: "function" },
                        ],
                        directive: { pattern: /^(#\s*)[a-z]+/, lookbehind: !0, alias: "keyword" },
                        "directive-hash": /^#/,
                        punctuation: /##|\\(?=[\r\n])/,
                        expression: { pattern: /\S[\s\S]*/, inside: t.languages.c },
                    },
                },
            }),
            t.languages.insertBefore("c", "function", {
                constant: /\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/,
            }),
            delete t.languages.c.boolean;
    }
    return Su;
}
var wu, ly;
function xg() {
    if (ly) return wu;
    ly = 1;
    var e = ra();
    (wu = t), (t.displayName = "cpp"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                var a =
                        /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,
                    i = /\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g, function () {
                        return a.source;
                    });
                (r.languages.cpp = r.languages.extend("c", {
                    "class-name": [
                        {
                            pattern: RegExp(
                                /(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g, function () {
                                    return a.source;
                                }),
                            ),
                            lookbehind: !0,
                        },
                        /\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,
                        /\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,
                        /\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/,
                    ],
                    keyword: a,
                    number: {
                        pattern:
                            /(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,
                        greedy: !0,
                    },
                    operator: />>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,
                    boolean: /\b(?:false|true)\b/,
                })),
                    r.languages.insertBefore("cpp", "string", {
                        module: {
                            pattern: RegExp(
                                /(\b(?:import|module)\s+)/.source +
                                    "(?:" +
                                    /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source +
                                    "|" +
                                    /<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g, function () {
                                        return i;
                                    }) +
                                    ")",
                            ),
                            lookbehind: !0,
                            greedy: !0,
                            inside: { string: /^[<"][\s\S]+/, operator: /:/, punctuation: /\./ },
                        },
                        "raw-string": { pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/, alias: "string", greedy: !0 },
                    }),
                    r.languages.insertBefore("cpp", "keyword", {
                        "generic-function": {
                            pattern: /\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,
                            inside: { function: /^\w+/, generic: { pattern: /<[\s\S]+/, alias: "class-name", inside: r.languages.cpp } },
                        },
                    }),
                    r.languages.insertBefore("cpp", "operator", { "double-colon": { pattern: /::/, alias: "punctuation" } }),
                    r.languages.insertBefore("cpp", "class-name", {
                        "base-clause": {
                            pattern: /(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,
                            lookbehind: !0,
                            greedy: !0,
                            inside: r.languages.extend("cpp", {}),
                        },
                    }),
                    r.languages.insertBefore("inside", "double-colon", { "class-name": /\b[a-z_]\w*\b(?!\s*::)/i }, r.languages.cpp["base-clause"]);
            })(n);
    }
    return wu;
}
var ku, sy;
function BC() {
    if (sy) return ku;
    sy = 1;
    var e = xg();
    (ku = t), (t.displayName = "arduino"), (t.aliases = ["ino"]);
    function t(n) {
        n.register(e),
            (n.languages.arduino = n.languages.extend("cpp", {
                keyword:
                    /\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\b/,
                constant:
                    /\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\b/,
                builtin:
                    /\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\b/,
            })),
            (n.languages.ino = n.languages.arduino);
    }
    return ku;
}
var Tu, uy;
function UC() {
    if (uy) return Tu;
    (uy = 1), (Tu = e), (e.displayName = "arff"), (e.aliases = []);
    function e(t) {
        t.languages.arff = {
            comment: /%.*/,
            string: { pattern: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            keyword: /@(?:attribute|data|end|relation)\b/i,
            number: /\b\d+(?:\.\d+)?\b/,
            punctuation: /[{},]/,
        };
    }
    return Tu;
}
var Au, cy;
function zC() {
    if (cy) return Au;
    (cy = 1), (Au = e), (e.displayName = "asciidoc"), (e.aliases = ["adoc"]);
    function e(t) {
        (function (n) {
            var r = {
                    pattern: /(^[ \t]*)\[(?!\[)(?:(["'$`])(?:(?!\2)[^\\]|\\.)*\2|\[(?:[^\[\]\\]|\\.)*\]|[^\[\]\\"'$`]|\\.)*\]/m,
                    lookbehind: !0,
                    inside: {
                        quoted: { pattern: /([$`])(?:(?!\1)[^\\]|\\.)*\1/, inside: { punctuation: /^[$`]|[$`]$/ } },
                        interpreted: { pattern: /'(?:[^'\\]|\\.)*'/, inside: { punctuation: /^'|'$/ } },
                        string: /"(?:[^"\\]|\\.)*"/,
                        variable: /\w+(?==)/,
                        punctuation: /^\[|\]$|,/,
                        operator: /=/,
                        "attr-value": /(?!^\s+$).+/,
                    },
                },
                a = (n.languages.asciidoc = {
                    "comment-block": { pattern: /^(\/{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1/m, alias: "comment" },
                    table: {
                        pattern: /^\|={3,}(?:(?:\r?\n|\r(?!\n)).*)*?(?:\r?\n|\r)\|={3,}$/m,
                        inside: {
                            specifiers: {
                                pattern: /(?:(?:(?:\d+(?:\.\d+)?|\.\d+)[+*](?:[<^>](?:\.[<^>])?|\.[<^>])?|[<^>](?:\.[<^>])?|\.[<^>])[a-z]*|[a-z]+)(?=\|)/,
                                alias: "attr-value",
                            },
                            punctuation: { pattern: /(^|[^\\])[|!]=*/, lookbehind: !0 },
                        },
                    },
                    "passthrough-block": { pattern: /^(\+{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m, inside: { punctuation: /^\++|\++$/ } },
                    "literal-block": {
                        pattern: /^(-{4,}|\.{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
                        inside: { punctuation: /^(?:-+|\.+)|(?:-+|\.+)$/ },
                    },
                    "other-block": {
                        pattern: /^(--|\*{4,}|_{4,}|={4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
                        inside: { punctuation: /^(?:-+|\*+|_+|=+)|(?:-+|\*+|_+|=+)$/ },
                    },
                    "list-punctuation": { pattern: /(^[ \t]*)(?:-|\*{1,5}|\.{1,5}|(?:[a-z]|\d+)\.|[xvi]+\))(?= )/im, lookbehind: !0, alias: "punctuation" },
                    "list-label": { pattern: /(^[ \t]*)[a-z\d].+(?::{2,4}|;;)(?=\s)/im, lookbehind: !0, alias: "symbol" },
                    "indented-block": { pattern: /((\r?\n|\r)\2)([ \t]+)\S.*(?:(?:\r?\n|\r)\3.+)*(?=\2{2}|$)/, lookbehind: !0 },
                    comment: /^\/\/.*/m,
                    title: {
                        pattern: /^.+(?:\r?\n|\r)(?:={3,}|-{3,}|~{3,}|\^{3,}|\+{3,})$|^={1,5} .+|^\.(?![\s.]).*/m,
                        alias: "important",
                        inside: { punctuation: /^(?:\.|=+)|(?:=+|-+|~+|\^+|\++)$/ },
                    },
                    "attribute-entry": { pattern: /^:[^:\r\n]+:(?: .*?(?: \+(?:\r?\n|\r).*?)*)?$/m, alias: "tag" },
                    attributes: r,
                    hr: { pattern: /^'{3,}$/m, alias: "punctuation" },
                    "page-break": { pattern: /^<{3,}$/m, alias: "punctuation" },
                    admonition: { pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m, alias: "keyword" },
                    callout: [
                        { pattern: /(^[ \t]*)<?\d*>/m, lookbehind: !0, alias: "symbol" },
                        { pattern: /<\d+>/, alias: "symbol" },
                    ],
                    macro: {
                        pattern: /\b[a-z\d][a-z\d-]*::?(?:[^\s\[\]]*\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,
                        inside: {
                            function: /^[a-z\d-]+(?=:)/,
                            punctuation: /^::?/,
                            attributes: { pattern: /(?:\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/, inside: r.inside },
                        },
                    },
                    inline: {
                        pattern:
                            /(^|[^\\])(?:(?:\B\[(?:[^\]\\"']|(["'])(?:(?!\2)[^\\]|\\.)*\2|\\.)*\])?(?:\b_(?!\s)(?: _|[^_\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: _|[^_\\\r\n]|\\.)+)*_\b|\B``(?!\s).+?(?:(?:\r?\n|\r).+?)*''\B|\B`(?!\s)(?:[^`'\s]|\s+\S)+['`]\B|\B(['*+#])(?!\s)(?: \3|(?!\3)[^\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: \3|(?!\3)[^\\\r\n]|\\.)+)*\3\B)|(?:\[(?:[^\]\\"']|(["'])(?:(?!\4)[^\\]|\\.)*\4|\\.)*\])?(?:(__|\*\*|\+\+\+?|##|\$\$|[~^]).+?(?:(?:\r?\n|\r).+?)*\5|\{[^}\r\n]+\}|\[\[\[?.+?(?:(?:\r?\n|\r).+?)*\]?\]\]|<<.+?(?:(?:\r?\n|\r).+?)*>>|\(\(\(?.+?(?:(?:\r?\n|\r).+?)*\)?\)\)))/m,
                        lookbehind: !0,
                        inside: {
                            attributes: r,
                            url: { pattern: /^(?:\[\[\[?.+?\]?\]\]|<<.+?>>)$/, inside: { punctuation: /^(?:\[\[\[?|<<)|(?:\]\]\]?|>>)$/ } },
                            "attribute-ref": {
                                pattern: /^\{.+\}$/,
                                inside: {
                                    variable: { pattern: /(^\{)[a-z\d,+_-]+/, lookbehind: !0 },
                                    operator: /^[=?!#%@$]|!(?=[:}])/,
                                    punctuation: /^\{|\}$|::?/,
                                },
                            },
                            italic: { pattern: /^(['_])[\s\S]+\1$/, inside: { punctuation: /^(?:''?|__?)|(?:''?|__?)$/ } },
                            bold: { pattern: /^\*[\s\S]+\*$/, inside: { punctuation: /^\*\*?|\*\*?$/ } },
                            punctuation: /^(?:``?|\+{1,3}|##?|\$\$|[~^]|\(\(\(?)|(?:''?|\+{1,3}|##?|\$\$|[~^`]|\)?\)\))$/,
                        },
                    },
                    replacement: { pattern: /\((?:C|R|TM)\)/, alias: "builtin" },
                    entity: /&#?[\da-z]{1,8};/i,
                    "line-continuation": { pattern: /(^| )\+$/m, lookbehind: !0, alias: "punctuation" },
                });
            function i(o) {
                o = o.split(" ");
                for (var l = {}, s = 0, u = o.length; s < u; s++) l[o[s]] = a[o[s]];
                return l;
            }
            (r.inside.interpreted.inside.rest = i("macro inline replacement entity")),
                (a["passthrough-block"].inside.rest = i("macro")),
                (a["literal-block"].inside.rest = i("callout")),
                (a.table.inside.rest = i(
                    "comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation",
                )),
                (a["other-block"].inside.rest = i(
                    "table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation",
                )),
                (a.title.inside.rest = i("macro inline replacement entity")),
                n.hooks.add("wrap", function (o) {
                    o.type === "entity" && (o.attributes.title = o.content.value.replace(/&amp;/, "&"));
                }),
                (n.languages.adoc = n.languages.asciidoc);
        })(t);
    }
    return Au;
}
var xu, dy;
function $C() {
    if (dy) return xu;
    (dy = 1), (xu = e), (e.displayName = "asm6502"), (e.aliases = []);
    function e(t) {
        t.languages.asm6502 = {
            comment: /;.*/,
            directive: { pattern: /\.\w+(?= )/, alias: "property" },
            string: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
            "op-code": {
                pattern:
                    /\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\b/,
                alias: "keyword",
            },
            "hex-number": { pattern: /#?\$[\da-f]{1,4}\b/i, alias: "number" },
            "binary-number": { pattern: /#?%[01]+\b/, alias: "number" },
            "decimal-number": { pattern: /#?\b\d+\b/, alias: "number" },
            register: { pattern: /\b[xya]\b/i, alias: "variable" },
            punctuation: /[(),:]/,
        };
    }
    return xu;
}
var Ru, py;
function qC() {
    if (py) return Ru;
    (py = 1), (Ru = e), (e.displayName = "asmatmel"), (e.aliases = []);
    function e(t) {
        t.languages.asmatmel = {
            comment: { pattern: /;.*/, greedy: !0 },
            string: { pattern: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            constant: /\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\d|[0-2]\d|3[01]))\b/,
            directive: { pattern: /\.\w+(?= )/, alias: "property" },
            "r-register": { pattern: /\br(?:\d|[12]\d|3[01])\b/, alias: "variable" },
            "op-code": {
                pattern:
                    /\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\b/,
                alias: "keyword",
            },
            "hex-number": { pattern: /#?\$[\da-f]{2,4}\b/i, alias: "number" },
            "binary-number": { pattern: /#?%[01]+\b/, alias: "number" },
            "decimal-number": { pattern: /#?\b\d+\b/, alias: "number" },
            register: { pattern: /\b[acznvshtixy]\b/i, alias: "variable" },
            operator: />>=?|<<=?|&&?|\|\|?|[-+*/%&|^!=<>?]=?/,
            punctuation: /[(),:]/,
        };
    }
    return Ru;
}
var Iu, fy;
function ms() {
    if (fy) return Iu;
    (fy = 1), (Iu = e), (e.displayName = "csharp"), (e.aliases = ["dotnet", "cs"]);
    function e(t) {
        (function (n) {
            function r(Y, Q) {
                return Y.replace(/<<(\d+)>>/g, function (C, he) {
                    return "(?:" + Q[+he] + ")";
                });
            }
            function a(Y, Q, C) {
                return RegExp(r(Y, Q), C || "");
            }
            function i(Y, Q) {
                for (var C = 0; C < Q; C++)
                    Y = Y.replace(/<<self>>/g, function () {
                        return "(?:" + Y + ")";
                    });
                return Y.replace(/<<self>>/g, "[^\\s\\S]");
            }
            var o = {
                type: "bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void",
                typeDeclaration: "class enum interface record struct",
                contextual:
                    "add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)",
                other: "abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield",
            };
            function l(Y) {
                return "\\b(?:" + Y.trim().replace(/ /g, "|") + ")\\b";
            }
            var s = l(o.typeDeclaration),
                u = RegExp(l(o.type + " " + o.typeDeclaration + " " + o.contextual + " " + o.other)),
                c = l(o.typeDeclaration + " " + o.contextual + " " + o.other),
                d = l(o.type + " " + o.typeDeclaration + " " + o.other),
                m = i(/<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source, 2),
                f = i(/\((?:[^()]|<<self>>)*\)/.source, 2),
                b = /@?\b[A-Za-z_]\w*\b/.source,
                E = r(/<<0>>(?:\s*<<1>>)?/.source, [b, m]),
                I = r(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source, [c, E]),
                y = /\[\s*(?:,\s*)*\]/.source,
                g = r(/<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source, [I, y]),
                v = r(/[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [m, f, y]),
                T = r(/\(<<0>>+(?:,<<0>>+)+\)/.source, [v]),
                R = r(/(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/.source, [T, I, y]),
                k = { keyword: u, punctuation: /[<>()?,.:[\]]/ },
                L = /'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/.source,
                F = /"(?:\\.|[^\\"\r\n])*"/.source,
                M = /@"(?:""|\\[\s\S]|[^\\"])*"(?!")/.source;
            (n.languages.csharp = n.languages.extend("clike", {
                string: [
                    { pattern: a(/(^|[^$\\])<<0>>/.source, [M]), lookbehind: !0, greedy: !0 },
                    { pattern: a(/(^|[^@$\\])<<0>>/.source, [F]), lookbehind: !0, greedy: !0 },
                ],
                "class-name": [
                    { pattern: a(/(\busing\s+static\s+)<<0>>(?=\s*;)/.source, [I]), lookbehind: !0, inside: k },
                    { pattern: a(/(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/.source, [b, R]), lookbehind: !0, inside: k },
                    { pattern: a(/(\busing\s+)<<0>>(?=\s*=)/.source, [b]), lookbehind: !0 },
                    { pattern: a(/(\b<<0>>\s+)<<1>>/.source, [s, E]), lookbehind: !0, inside: k },
                    { pattern: a(/(\bcatch\s*\(\s*)<<0>>/.source, [I]), lookbehind: !0, inside: k },
                    { pattern: a(/(\bwhere\s+)<<0>>/.source, [b]), lookbehind: !0 },
                    { pattern: a(/(\b(?:is(?:\s+not)?|as)\s+)<<0>>/.source, [g]), lookbehind: !0, inside: k },
                    { pattern: a(/\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/.source, [R, d, b]), inside: k },
                ],
                keyword: u,
                number: /(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b/i,
                operator: />>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,
                punctuation: /\?\.?|::|[{}[\];(),.:]/,
            })),
                n.languages.insertBefore("csharp", "number", { range: { pattern: /\.\./, alias: "operator" } }),
                n.languages.insertBefore("csharp", "punctuation", {
                    "named-parameter": { pattern: a(/([(,]\s*)<<0>>(?=\s*:)/.source, [b]), lookbehind: !0, alias: "punctuation" },
                }),
                n.languages.insertBefore("csharp", "class-name", {
                    namespace: {
                        pattern: a(/(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/.source, [b]),
                        lookbehind: !0,
                        inside: { punctuation: /\./ },
                    },
                    "type-expression": {
                        pattern: a(/(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/.source, [f]),
                        lookbehind: !0,
                        alias: "class-name",
                        inside: k,
                    },
                    "return-type": {
                        pattern: a(/<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/.source, [R, I]),
                        inside: k,
                        alias: "class-name",
                    },
                    "constructor-invocation": { pattern: a(/(\bnew\s+)<<0>>(?=\s*[[({])/.source, [R]), lookbehind: !0, inside: k, alias: "class-name" },
                    "generic-method": {
                        pattern: a(/<<0>>\s*<<1>>(?=\s*\()/.source, [b, m]),
                        inside: { function: a(/^<<0>>/.source, [b]), generic: { pattern: RegExp(m), alias: "class-name", inside: k } },
                    },
                    "type-list": {
                        pattern: a(
                            /\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/
                                .source,
                            [s, E, b, R, u.source, f, /\bnew\s*\(\s*\)/.source],
                        ),
                        lookbehind: !0,
                        inside: {
                            "record-arguments": {
                                pattern: a(/(^(?!new\s*\()<<0>>\s*)<<1>>/.source, [E, f]),
                                lookbehind: !0,
                                greedy: !0,
                                inside: n.languages.csharp,
                            },
                            keyword: u,
                            "class-name": { pattern: RegExp(R), greedy: !0, inside: k },
                            punctuation: /[,()]/,
                        },
                    },
                    preprocessor: {
                        pattern: /(^[\t ]*)#.*/m,
                        lookbehind: !0,
                        alias: "property",
                        inside: {
                            directive: {
                                pattern: /(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,
                                lookbehind: !0,
                                alias: "keyword",
                            },
                        },
                    },
                });
            var O = F + "|" + L,
                B = r(/\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/.source, [O]),
                $ = i(r(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [B]), 2),
                ne = /\b(?:assembly|event|field|method|module|param|property|return|type)\b/.source,
                re = r(/<<0>>(?:\s*\(<<1>>*\))?/.source, [I, $]);
            n.languages.insertBefore("csharp", "class-name", {
                attribute: {
                    pattern: a(/((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/.source, [ne, re]),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        target: { pattern: a(/^<<0>>(?=\s*:)/.source, [ne]), alias: "keyword" },
                        "attribute-arguments": { pattern: a(/\(<<0>>*\)/.source, [$]), inside: n.languages.csharp },
                        "class-name": { pattern: RegExp(I), inside: { punctuation: /\./ } },
                        punctuation: /[:,]/,
                    },
                },
            });
            var J = /:[^}\r\n]+/.source,
                se = i(r(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [B]), 2),
                ce = r(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [se, J]),
                U = i(r(/[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/.source, [O]), 2),
                W = r(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [U, J]);
            function A(Y, Q) {
                return {
                    interpolation: {
                        pattern: a(/((?:^|[^{])(?:\{\{)*)<<0>>/.source, [Y]),
                        lookbehind: !0,
                        inside: {
                            "format-string": {
                                pattern: a(/(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/.source, [Q, J]),
                                lookbehind: !0,
                                inside: { punctuation: /^:/ },
                            },
                            punctuation: /^\{|\}$/,
                            expression: { pattern: /[\s\S]+/, alias: "language-csharp", inside: n.languages.csharp },
                        },
                    },
                    string: /[\s\S]+/,
                };
            }
            n.languages.insertBefore("csharp", "string", {
                "interpolation-string": [
                    { pattern: a(/(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/.source, [ce]), lookbehind: !0, greedy: !0, inside: A(ce, se) },
                    { pattern: a(/(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/.source, [W]), lookbehind: !0, greedy: !0, inside: A(W, U) },
                ],
                char: { pattern: RegExp(L), greedy: !0 },
            }),
                (n.languages.dotnet = n.languages.cs = n.languages.csharp);
        })(t);
    }
    return Iu;
}
var Nu, my;
function GC() {
    if (my) return Nu;
    my = 1;
    var e = ms();
    (Nu = t), (t.displayName = "aspnet"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.aspnet = n.languages.extend("markup", {
                "page-directive": {
                    pattern: /<%\s*@.*%>/,
                    alias: "tag",
                    inside: {
                        "page-directive": {
                            pattern:
                                /<%\s*@\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,
                            alias: "tag",
                        },
                        rest: n.languages.markup.tag.inside,
                    },
                },
                directive: {
                    pattern: /<%.*%>/,
                    alias: "tag",
                    inside: { directive: { pattern: /<%\s*?[$=%#:]{0,2}|%>/, alias: "tag" }, rest: n.languages.csharp },
                },
            })),
            (n.languages.aspnet.tag.pattern = /<(?!%)\/?[^\s>\/]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/),
            n.languages.insertBefore("inside", "punctuation", { directive: n.languages.aspnet.directive }, n.languages.aspnet.tag.inside["attr-value"]),
            n.languages.insertBefore("aspnet", "comment", { "asp-comment": { pattern: /<%--[\s\S]*?--%>/, alias: ["asp", "comment"] } }),
            n.languages.insertBefore("aspnet", n.languages.javascript ? "script" : "tag", {
                "asp-script": {
                    pattern: /(<script(?=.*runat=['"]?server\b)[^>]*>)[\s\S]*?(?=<\/script>)/i,
                    lookbehind: !0,
                    alias: ["asp", "script"],
                    inside: n.languages.csharp || {},
                },
            });
    }
    return Nu;
}
var _u, hy;
function HC() {
    if (hy) return _u;
    (hy = 1), (_u = e), (e.displayName = "autohotkey"), (e.aliases = []);
    function e(t) {
        t.languages.autohotkey = {
            comment: [
                { pattern: /(^|\s);.*/, lookbehind: !0 },
                { pattern: /(^[\t ]*)\/\*(?:[\r\n](?![ \t]*\*\/)|[^\r\n])*(?:[\r\n][ \t]*\*\/)?/m, lookbehind: !0, greedy: !0 },
            ],
            tag: { pattern: /^([ \t]*)[^\s,`":]+(?=:[ \t]*$)/m, lookbehind: !0 },
            string: /"(?:[^"\n\r]|"")*"/,
            variable: /%\w+%/,
            number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
            operator: /\?|\/\/?=?|:=|\|[=|]?|&[=&]?|\+[=+]?|-[=-]?|\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\b(?:AND|NOT|OR)\b/,
            boolean: /\b(?:false|true)\b/,
            selector:
                /\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\b/i,
            constant:
                /\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\b/i,
            builtin:
                /\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\b/i,
            symbol: /\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\b/i,
            important:
                /#\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\b/i,
            keyword:
                /\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\b/i,
            function: /[^(); \t,\n+*\-=?>:\\\/<&%\[\]]+(?=\()/,
            punctuation: /[{}[\]():,]/,
        };
    }
    return _u;
}
var Cu, gy;
function jC() {
    if (gy) return Cu;
    (gy = 1), (Cu = e), (e.displayName = "autoit"), (e.aliases = []);
    function e(t) {
        t.languages.autoit = {
            comment: [/;.*/, { pattern: /(^[\t ]*)#(?:comments-start|cs)[\s\S]*?^[ \t]*#(?:ce|comments-end)/m, lookbehind: !0 }],
            url: { pattern: /(^[\t ]*#include\s+)(?:<[^\r\n>]+>|"[^\r\n"]+")/m, lookbehind: !0 },
            string: { pattern: /(["'])(?:\1\1|(?!\1)[^\r\n])*\1/, greedy: !0, inside: { variable: /([%$@])\w+\1/ } },
            directive: { pattern: /(^[\t ]*)#[\w-]+/m, lookbehind: !0, alias: "keyword" },
            function: /\b\w+(?=\()/,
            variable: /[$@]\w+/,
            keyword:
                /\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\b/i,
            number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
            boolean: /\b(?:False|True)\b/i,
            operator: /<[=>]?|[-+*\/=&>]=?|[?^]|\b(?:And|Not|Or)\b/i,
            punctuation: /[\[\]().,:]/,
        };
    }
    return Cu;
}
var Ou, by;
function VC() {
    if (by) return Ou;
    (by = 1), (Ou = e), (e.displayName = "avisynth"), (e.aliases = ["avs"]);
    function e(t) {
        (function (n) {
            function r(c, d) {
                return c.replace(/<<(\d+)>>/g, function (m, f) {
                    return d[+f];
                });
            }
            function a(c, d, m) {
                return RegExp(r(c, d), m || "");
            }
            var i = /bool|clip|float|int|string|val/.source,
                o = [
                    /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/.source,
                    /apply|assert|default|eval|import|nop|select|undefined/.source,
                    /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/
                        .source,
                    /hex(?:value)?|value/.source,
                    /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/.source,
                    /a?sinh?|a?cosh?|a?tan[2h]?/.source,
                    /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/.source,
                    /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/
                        .source,
                    /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/.source,
                    /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/.source,
                    /isversionorgreater|version(?:number|string)/.source,
                    /buildpixeltype|colorspacenametopixeltype/.source,
                    /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source,
                ].join("|"),
                l = [
                    /has(?:audio|video)/.source,
                    /height|width/.source,
                    /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,
                    /getparity|is(?:field|frame)based/.source,
                    /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/
                        .source,
                    /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/.source,
                ].join("|"),
                s = [
                    /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/
                        .source,
                    /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/
                        .source,
                    /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,
                    /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/
                        .source,
                    /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/.source,
                    /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/
                        .source,
                    /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/
                        .source,
                    /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/
                        .source,
                    /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/.source,
                    /imagewriter/.source,
                    /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/
                        .source,
                ].join("|"),
                u = [o, l, s].join("|");
            (n.languages.avisynth = {
                comment: [
                    { pattern: /(^|[^\\])\[\*(?:[^\[*]|\[(?!\*)|\*(?!\])|\[\*(?:[^\[*]|\[(?!\*)|\*(?!\]))*\*\])*\*\]/, lookbehind: !0, greedy: !0 },
                    { pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0, greedy: !0 },
                    { pattern: /(^|[^\\$])#.*/, lookbehind: !0, greedy: !0 },
                ],
                argument: { pattern: a(/\b(?:<<0>>)\s+("?)\w+\1/.source, [i], "i"), inside: { keyword: /^\w+/ } },
                "argument-label": {
                    pattern: /([,(][\s\\]*)\w+\s*=(?!=)/,
                    lookbehind: !0,
                    inside: { "argument-name": { pattern: /^\w+/, alias: "punctuation" }, punctuation: /=$/ },
                },
                string: [
                    { pattern: /"""[\s\S]*?"""/, greedy: !0 },
                    {
                        pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
                        greedy: !0,
                        inside: { constant: { pattern: /\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\b/ } },
                    },
                ],
                variable: /\b(?:last)\b/i,
                boolean: /\b(?:false|no|true|yes)\b/i,
                keyword: /\b(?:catch|else|for|function|global|if|return|try|while|__END__)\b/i,
                constant: /\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\b/,
                "builtin-function": { pattern: a(/\b(?:<<0>>)\b/.source, [u], "i"), alias: "function" },
                "type-cast": { pattern: a(/\b(?:<<0>>)(?=\s*\()/.source, [i], "i"), alias: "keyword" },
                function: { pattern: /\b[a-z_]\w*(?=\s*\()|(\.)[a-z_]\w*\b/i, lookbehind: !0 },
                "line-continuation": { pattern: /(^[ \t]*)\\|\\(?=[ \t]*$)/m, lookbehind: !0, alias: "punctuation" },
                number: /\B\$(?:[\da-f]{6}|[\da-f]{8})\b|(?:(?:\b|\B-)\d+(?:\.\d*)?\b|\B\.\d+\b)/i,
                operator: /\+\+?|[!=<>]=?|&&|\|\||[?:*/%-]/,
                punctuation: /[{}\[\]();,.]/,
            }),
                (n.languages.avs = n.languages.avisynth);
        })(t);
    }
    return Ou;
}
var Lu, yy;
function WC() {
    if (yy) return Lu;
    (yy = 1), (Lu = e), (e.displayName = "avroIdl"), (e.aliases = []);
    function e(t) {
        (t.languages["avro-idl"] = {
            comment: { pattern: /\/\/.*|\/\*[\s\S]*?\*\//, greedy: !0 },
            string: { pattern: /(^|[^\\])"(?:[^\r\n"\\]|\\.)*"/, lookbehind: !0, greedy: !0 },
            annotation: { pattern: /@(?:[$\w.-]|`[^\r\n`]+`)+/, greedy: !0, alias: "function" },
            "function-identifier": { pattern: /`[^\r\n`]+`(?=\s*\()/, greedy: !0, alias: "function" },
            identifier: { pattern: /`[^\r\n`]+`/, greedy: !0 },
            "class-name": { pattern: /(\b(?:enum|error|protocol|record|throws)\b\s+)[$\w]+/, lookbehind: !0, greedy: !0 },
            keyword:
                /\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            number: [
                {
                    pattern: /(^|[^\w.])-?(?:(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|0x(?:[a-f0-9]+(?:\.[a-f0-9]*)?|\.[a-f0-9]+)(?:p[+-]?\d+)?)[dfl]?(?![\w.])/i,
                    lookbehind: !0,
                },
                /-?\b(?:Infinity|NaN)\b/,
            ],
            operator: /=/,
            punctuation: /[()\[\]{}<>.:,;-]/,
        }),
            (t.languages.avdl = t.languages["avro-idl"]);
    }
    return Lu;
}
var Du, vy;
function MT() {
    if (vy) return Du;
    (vy = 1), (Du = e), (e.displayName = "bash"), (e.aliases = ["shell"]);
    function e(t) {
        (function (n) {
            var r =
                    "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",
                a = { pattern: /(^(["']?)\w+\2)[ \t]+\S.*/, lookbehind: !0, alias: "punctuation", inside: null },
                i = {
                    bash: a,
                    environment: { pattern: RegExp("\\$" + r), alias: "constant" },
                    variable: [
                        {
                            pattern: /\$?\(\([\s\S]+?\)\)/,
                            greedy: !0,
                            inside: {
                                variable: [{ pattern: /(^\$\(\([\s\S]+)\)\)/, lookbehind: !0 }, /^\$\(\(/],
                                number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
                                operator: /--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,
                                punctuation: /\(\(?|\)\)?|,|;/,
                            },
                        },
                        { pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/, greedy: !0, inside: { variable: /^\$\(|^`|\)$|`$/ } },
                        {
                            pattern: /\$\{[^}]+\}/,
                            greedy: !0,
                            inside: {
                                operator: /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
                                punctuation: /[\[\]]/,
                                environment: { pattern: RegExp("(\\{)" + r), lookbehind: !0, alias: "constant" },
                            },
                        },
                        /\$(?:\w+|[#?*!@$])/,
                    ],
                    entity: /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/,
                };
            (n.languages.bash = {
                shebang: { pattern: /^#!\s*\/.*/, alias: "important" },
                comment: { pattern: /(^|[^"{\\$])#.*/, lookbehind: !0 },
                "function-name": [
                    { pattern: /(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/, lookbehind: !0, alias: "function" },
                    { pattern: /\b[\w-]+(?=\s*\(\s*\)\s*\{)/, alias: "function" },
                ],
                "for-or-select": { pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/, alias: "variable", lookbehind: !0 },
                "assign-left": {
                    pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
                    inside: { environment: { pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + r), lookbehind: !0, alias: "constant" } },
                    alias: "variable",
                    lookbehind: !0,
                },
                string: [
                    { pattern: /((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/, lookbehind: !0, greedy: !0, inside: i },
                    { pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/, lookbehind: !0, greedy: !0, inside: { bash: a } },
                    { pattern: /(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/, lookbehind: !0, greedy: !0, inside: i },
                    { pattern: /(^|[^$\\])'[^']*'/, lookbehind: !0, greedy: !0 },
                    { pattern: /\$'(?:[^'\\]|\\[\s\S])*'/, greedy: !0, inside: { entity: i.entity } },
                ],
                environment: { pattern: RegExp("\\$?" + r), alias: "constant" },
                variable: i.variable,
                function: {
                    pattern:
                        /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
                    lookbehind: !0,
                },
                keyword: {
                    pattern: /(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,
                    lookbehind: !0,
                },
                builtin: {
                    pattern:
                        /(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,
                    lookbehind: !0,
                    alias: "class-name",
                },
                boolean: { pattern: /(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/, lookbehind: !0 },
                "file-descriptor": { pattern: /\B&\d\b/, alias: "important" },
                operator: {
                    pattern: /\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,
                    inside: { "file-descriptor": { pattern: /^\d/, alias: "important" } },
                },
                punctuation: /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
                number: { pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/, lookbehind: !0 },
            }),
                (a.inside = n.languages.bash);
            for (
                var o = [
                        "comment",
                        "function-name",
                        "for-or-select",
                        "assign-left",
                        "string",
                        "environment",
                        "function",
                        "keyword",
                        "builtin",
                        "boolean",
                        "file-descriptor",
                        "operator",
                        "punctuation",
                        "number",
                    ],
                    l = i.variable[1].inside,
                    s = 0;
                s < o.length;
                s++
            )
                l[o[s]] = n.languages.bash[o[s]];
            n.languages.shell = n.languages.bash;
        })(t);
    }
    return Du;
}
var Mu, Ey;
function FT() {
    if (Ey) return Mu;
    (Ey = 1), (Mu = e), (e.displayName = "basic"), (e.aliases = []);
    function e(t) {
        t.languages.basic = {
            comment: { pattern: /(?:!|REM\b).+/i, inside: { keyword: /^REM/i } },
            string: { pattern: /"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/, greedy: !0 },
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
            keyword:
                /\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\$|\b)/i,
            function:
                /\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\$|\b)/i,
            operator: /<[=>]?|>=?|[+\-*\/^=&]|\b(?:AND|EQV|IMP|NOT|OR|XOR)\b/i,
            punctuation: /[,;:()]/,
        };
    }
    return Mu;
}
var Fu, Sy;
function YC() {
    if (Sy) return Fu;
    (Sy = 1), (Fu = e), (e.displayName = "batch"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /%%?[~:\w]+%?|!\S+!/,
                a = { pattern: /\/[a-z?]+(?=[ :]|$):?|-[a-z]\b|--[a-z-]+\b/im, alias: "attr-name", inside: { punctuation: /:/ } },
                i = /"(?:[\\"]"|[^"])*"(?!")/,
                o = /(?:\b|-)\d+\b/;
            n.languages.batch = {
                comment: [/^::.*/m, { pattern: /((?:^|[&(])[ \t]*)rem\b(?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im, lookbehind: !0 }],
                label: { pattern: /^:.*/m, alias: "property" },
                command: [
                    {
                        pattern: /((?:^|[&(])[ \t]*)for(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* \S+ in \([^)]+\) do/im,
                        lookbehind: !0,
                        inside: { keyword: /\b(?:do|in)\b|^for\b/i, string: i, parameter: a, variable: r, number: o, punctuation: /[()',]/ },
                    },
                    {
                        pattern:
                            /((?:^|[&(])[ \t]*)if(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:not )?(?:cmdextversion \d+|defined \w+|errorlevel \d+|exist \S+|(?:"[^"]*"|(?!")(?:(?!==)\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:"[^"]*"|[^\s"]\S*))/im,
                        lookbehind: !0,
                        inside: {
                            keyword: /\b(?:cmdextversion|defined|errorlevel|exist|not)\b|^if\b/i,
                            string: i,
                            parameter: a,
                            variable: r,
                            number: o,
                            operator: /\^|==|\b(?:equ|geq|gtr|leq|lss|neq)\b/i,
                        },
                    },
                    { pattern: /((?:^|[&()])[ \t]*)else\b/im, lookbehind: !0, inside: { keyword: /^else\b/i } },
                    {
                        pattern: /((?:^|[&(])[ \t]*)set(?: \/[a-z](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
                        lookbehind: !0,
                        inside: {
                            keyword: /^set\b/i,
                            string: i,
                            parameter: a,
                            variable: [r, /\w+(?=(?:[*\/%+\-&^|]|<<|>>)?=)/],
                            number: o,
                            operator: /[*\/%+\-&^|]=?|<<=?|>>=?|[!~_=]/,
                            punctuation: /[()',]/,
                        },
                    },
                    {
                        pattern: /((?:^|[&(])[ \t]*@?)\w+\b(?:"(?:[\\"]"|[^"])*"(?!")|[^"^&)\r\n]|\^(?:\r\n|[\s\S]))*/m,
                        lookbehind: !0,
                        inside: {
                            keyword: /^\w+\b/,
                            string: i,
                            parameter: a,
                            label: { pattern: /(^\s*):\S+/m, lookbehind: !0, alias: "property" },
                            variable: r,
                            number: o,
                            operator: /\^/,
                        },
                    },
                ],
                operator: /[&@]/,
                punctuation: /[()']/,
            };
        })(t);
    }
    return Fu;
}
var Pu, wy;
function KC() {
    if (wy) return Pu;
    (wy = 1), (Pu = e), (e.displayName = "bbcode"), (e.aliases = ["shortcode"]);
    function e(t) {
        (t.languages.bbcode = {
            tag: {
                pattern: /\[\/?[^\s=\]]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))?(?:\s+[^\s=\]]+\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))*\s*\]/,
                inside: {
                    tag: { pattern: /^\[\/?[^\s=\]]+/, inside: { punctuation: /^\[\/?/ } },
                    "attr-value": {
                        pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+)/,
                        inside: { punctuation: [/^=/, { pattern: /^(\s*)["']|["']$/, lookbehind: !0 }] },
                    },
                    punctuation: /\]/,
                    "attr-name": /[^\s=\]]+/,
                },
            },
        }),
            (t.languages.shortcode = t.languages.bbcode);
    }
    return Pu;
}
var Bu, ky;
function XC() {
    if (ky) return Bu;
    (ky = 1), (Bu = e), (e.displayName = "bicep"), (e.aliases = []);
    function e(t) {
        (t.languages.bicep = {
            comment: [
                { pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0, greedy: !0 },
                { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 },
            ],
            property: [
                { pattern: /([\r\n][ \t]*)[a-z_]\w*(?=[ \t]*:)/i, lookbehind: !0 },
                { pattern: /([\r\n][ \t]*)'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'(?=[ \t]*:)/, lookbehind: !0, greedy: !0 },
            ],
            string: [
                { pattern: /'''[^'][\s\S]*?'''/, greedy: !0 },
                { pattern: /(^|[^\\'])'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'/, lookbehind: !0, greedy: !0 },
            ],
            "interpolated-string": {
                pattern: /(^|[^\\'])'(?:\\.|\$(?:(?!\{)|\{[^{}\r\n]*\})|[^'\\\r\n$])*'/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /\$\{[^{}\r\n]*\}/,
                        inside: { expression: { pattern: /(^\$\{)[\s\S]+(?=\}$)/, lookbehind: !0 }, punctuation: /^\$\{|\}$/ },
                    },
                    string: /[\s\S]+/,
                },
            },
            datatype: { pattern: /(\b(?:output|param)\b[ \t]+\w+[ \t]+)\w+\b/, lookbehind: !0, alias: "class-name" },
            boolean: /\b(?:false|true)\b/,
            keyword: /\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\b/,
            decorator: /@\w+\b/,
            function: /\b[a-z_]\w*(?=[ \t]*\()/i,
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
            operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/,
            punctuation: /[{}[\];(),.:]/,
        }),
            (t.languages.bicep["interpolated-string"].inside.interpolation.inside.expression.inside = t.languages.bicep);
    }
    return Bu;
}
var Uu, Ty;
function ZC() {
    if (Ty) return Uu;
    (Ty = 1), (Uu = e), (e.displayName = "birb"), (e.aliases = []);
    function e(t) {
        (t.languages.birb = t.languages.extend("clike", {
            string: { pattern: /r?("|')(?:\\.|(?!\1)[^\\])*\1/, greedy: !0 },
            "class-name": [/\b[A-Z](?:[\d_]*[a-zA-Z]\w*)?\b/, /\b(?:[A-Z]\w*|(?!(?:var|void)\b)[a-z]\w*)(?=\s+\w+\s*[;,=()])/],
            keyword:
                /\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\b/,
            operator: /\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?|:/,
            variable: /\b[a-z_]\w*\b/,
        })),
            t.languages.insertBefore("birb", "function", { metadata: { pattern: /<\w+>/, greedy: !0, alias: "symbol" } });
    }
    return Uu;
}
var zu, Ay;
function QC() {
    if (Ay) return zu;
    Ay = 1;
    var e = ra();
    (zu = t), (t.displayName = "bison"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.bison = n.languages.extend("c", {})),
            n.languages.insertBefore("bison", "comment", {
                bison: {
                    pattern: /^(?:[^%]|%(?!%))*%%[\s\S]*?%%/,
                    inside: {
                        c: {
                            pattern: /%\{[\s\S]*?%\}|\{(?:\{[^}]*\}|[^{}])*\}/,
                            inside: {
                                delimiter: { pattern: /^%?\{|%?\}$/, alias: "punctuation" },
                                "bison-variable": { pattern: /[$@](?:<[^\s>]+>)?[\w$]+/, alias: "variable", inside: { punctuation: /<|>/ } },
                                rest: n.languages.c,
                            },
                        },
                        comment: n.languages.c.comment,
                        string: n.languages.c.string,
                        property: /\S+(?=:)/,
                        keyword: /%\w+/,
                        number: { pattern: /(^|[^@])\b(?:0x[\da-f]+|\d+)/i, lookbehind: !0 },
                        punctuation: /%[%?]|[|:;\[\]<>]/,
                    },
                },
            });
    }
    return zu;
}
var $u, xy;
function JC() {
    if (xy) return $u;
    (xy = 1), ($u = e), (e.displayName = "bnf"), (e.aliases = ["rbnf"]);
    function e(t) {
        (t.languages.bnf = {
            string: { pattern: /"[^\r\n"]*"|'[^\r\n']*'/ },
            definition: { pattern: /<[^<>\r\n\t]+>(?=\s*::=)/, alias: ["rule", "keyword"], inside: { punctuation: /^<|>$/ } },
            rule: { pattern: /<[^<>\r\n\t]+>/, inside: { punctuation: /^<|>$/ } },
            operator: /::=|[|()[\]{}*+?]|\.{3}/,
        }),
            (t.languages.rbnf = t.languages.bnf);
    }
    return $u;
}
var qu, Ry;
function e8() {
    if (Ry) return qu;
    (Ry = 1), (qu = e), (e.displayName = "brainfuck"), (e.aliases = []);
    function e(t) {
        t.languages.brainfuck = {
            pointer: { pattern: /<|>/, alias: "keyword" },
            increment: { pattern: /\+/, alias: "inserted" },
            decrement: { pattern: /-/, alias: "deleted" },
            branching: { pattern: /\[|\]/, alias: "important" },
            operator: /[.,]/,
            comment: /\S+/,
        };
    }
    return qu;
}
var Gu, Iy;
function t8() {
    if (Iy) return Gu;
    (Iy = 1), (Gu = e), (e.displayName = "brightscript"), (e.aliases = []);
    function e(t) {
        (t.languages.brightscript = {
            comment: /(?:\brem|').*/i,
            "directive-statement": {
                pattern: /(^[\t ]*)#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if).*/im,
                lookbehind: !0,
                alias: "property",
                inside: {
                    "error-message": { pattern: /(^#error).+/, lookbehind: !0 },
                    directive: { pattern: /^#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if)/, alias: "keyword" },
                    expression: { pattern: /[\s\S]+/, inside: null },
                },
            },
            property: { pattern: /([\r\n{,][\t ]*)(?:(?!\d)\w+|"(?:[^"\r\n]|"")*"(?!"))(?=[ \t]*:)/, lookbehind: !0, greedy: !0 },
            string: { pattern: /"(?:[^"\r\n]|"")*"(?!")/, greedy: !0 },
            "class-name": { pattern: /(\bAs[\t ]+)\w+/i, lookbehind: !0 },
            keyword: /\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\b/i,
            boolean: /\b(?:false|true)\b/i,
            function: /\b(?!\d)\w+(?=[\t ]*\()/,
            number: /(?:\b\d+(?:\.\d+)?(?:[ed][+-]\d+)?|&h[a-f\d]+)\b[%&!#]?/i,
            operator: /--|\+\+|>>=?|<<=?|<>|[-+*/\\<>]=?|[:^=?]|\b(?:and|mod|not|or)\b/i,
            punctuation: /[.,;()[\]{}]/,
            constant: /\b(?:LINE_NUM)\b/i,
        }),
            (t.languages.brightscript["directive-statement"].inside.expression.inside = t.languages.brightscript);
    }
    return Gu;
}
var Hu, Ny;
function n8() {
    if (Ny) return Hu;
    (Ny = 1), (Hu = e), (e.displayName = "bro"), (e.aliases = []);
    function e(t) {
        t.languages.bro = {
            comment: { pattern: /(^|[^\\$])#.*/, lookbehind: !0, inside: { italic: /\b(?:FIXME|TODO|XXX)\b/ } },
            string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            boolean: /\b[TF]\b/,
            function: { pattern: /(\b(?:event|function|hook)[ \t]+)\w+(?:::\w+)?/, lookbehind: !0 },
            builtin:
                /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,
            constant: { pattern: /(\bconst[ \t]+)\w+/i, lookbehind: !0 },
            keyword:
                /\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\b/,
            operator: /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&|\|\|?|\?|\*|\/|~|\^|%/,
            number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
            punctuation: /[{}[\];(),.:]/,
        };
    }
    return Hu;
}
var ju, _y;
function r8() {
    if (_y) return ju;
    (_y = 1), (ju = e), (e.displayName = "bsl"), (e.aliases = []);
    function e(t) {
        (t.languages.bsl = {
            comment: /\/\/.*/,
            string: [{ pattern: /"(?:[^"]|"")*"(?!")/, greedy: !0 }, { pattern: /'(?:[^'\r\n\\]|\\.)*'/ }],
            keyword: [
                {
                    pattern:
                        /(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,
                    lookbehind: !0,
                },
                {
                    pattern:
                        /\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\b/i,
                },
            ],
            number: {
                pattern: /(^(?=\d)|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:\d+(?:\.\d*)?|\.\d+)(?:E[+-]?\d+)?/i,
                lookbehind: !0,
            },
            operator: [
                /[<>+\-*/]=?|[%=]/,
                {
                    pattern:
                        /(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:и|или|не)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,
                    lookbehind: !0,
                },
                { pattern: /\b(?:and|not|or)\b/i },
            ],
            punctuation: /\(\.|\.\)|[()\[\]:;,.]/,
            directive: [
                { pattern: /^([ \t]*)&.*/m, lookbehind: !0, greedy: !0, alias: "important" },
                { pattern: /^([ \t]*)#.*/gm, lookbehind: !0, greedy: !0, alias: "important" },
            ],
        }),
            (t.languages.oscript = t.languages.bsl);
    }
    return ju;
}
var Vu, Cy;
function a8() {
    if (Cy) return Vu;
    (Cy = 1), (Vu = e), (e.displayName = "cfscript"), (e.aliases = []);
    function e(t) {
        (t.languages.cfscript = t.languages.extend("clike", {
            comment: [
                { pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0, inside: { annotation: { pattern: /(?:^|[^.])@[\w\.]+/, alias: "punctuation" } } },
                { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 },
            ],
            keyword:
                /\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\b(?!\s*=)/,
            operator: [
                /\+\+|--|&&|\|\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\?(?:\.|:)?|[?:]/,
                /\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\b/,
            ],
            scope: { pattern: /\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\b/, alias: "global" },
            type: { pattern: /\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\b/, alias: "builtin" },
        })),
            t.languages.insertBefore("cfscript", "keyword", {
                "function-variable": {
                    pattern:
                        /[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
                    alias: "function",
                },
            }),
            delete t.languages.cfscript["class-name"],
            (t.languages.cfc = t.languages.cfscript);
    }
    return Vu;
}
var Wu, Oy;
function i8() {
    if (Oy) return Wu;
    Oy = 1;
    var e = xg();
    (Wu = t), (t.displayName = "chaiscript"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.chaiscript = n.languages.extend("clike", {
                string: { pattern: /(^|[^\\])'(?:[^'\\]|\\[\s\S])*'/, lookbehind: !0, greedy: !0 },
                "class-name": [
                    { pattern: /(\bclass\s+)\w+/, lookbehind: !0 },
                    { pattern: /(\b(?:attr|def)\s+)\w+(?=\s*::)/, lookbehind: !0 },
                ],
                keyword: /\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\b/,
                number: [n.languages.cpp.number, /\b(?:Infinity|NaN)\b/],
                operator: />>=?|<<=?|\|\||&&|:[:=]?|--|\+\+|[=!<>+\-*/%|&^]=?|[?~]|`[^`\r\n]{1,4}`/,
            })),
            n.languages.insertBefore("chaiscript", "operator", { "parameter-type": { pattern: /([,(]\s*)\w+(?=\s+\w)/, lookbehind: !0, alias: "class-name" } }),
            n.languages.insertBefore("chaiscript", "string", {
                "string-interpolation": {
                    pattern: /(^|[^\\])"(?:[^"$\\]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*"/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\}/,
                            lookbehind: !0,
                            inside: {
                                "interpolation-expression": { pattern: /(^\$\{)[\s\S]+(?=\}$)/, lookbehind: !0, inside: n.languages.chaiscript },
                                "interpolation-punctuation": { pattern: /^\$\{|\}$/, alias: "punctuation" },
                            },
                        },
                        string: /[\s\S]+/,
                    },
                },
            });
    }
    return Wu;
}
var Yu, Ly;
function o8() {
    if (Ly) return Yu;
    (Ly = 1), (Yu = e), (e.displayName = "cil"), (e.aliases = []);
    function e(t) {
        t.languages.cil = {
            comment: /\/\/.*/,
            string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            directive: { pattern: /(^|\W)\.[a-z]+(?=\s)/, lookbehind: !0, alias: "class-name" },
            variable: /\[[\w\.]+\]/,
            keyword:
                /\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\b/,
            function:
                /\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\.)?(?:conv\.(?:[iu][1248]?|ovf\.[iu][1248]?(?:\.un)?|r\.un|r4|r8)|ldc\.(?:i4(?:\.\d+|\.[mM]1|\.s)?|i8|r4|r8)|ldelem(?:\.[iu][1248]?|\.r[48]|\.ref|a)?|ldind\.(?:[iu][1248]?|r[48]|ref)|stelem\.?(?:i[1248]?|r[48]|ref)?|stind\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\.[0-3s]|a(?:\.s)?)?|ldloc(?:\.\d+|\.s)?|sub(?:\.ovf(?:\.un)?)?|mul(?:\.ovf(?:\.un)?)?|add(?:\.ovf(?:\.un)?)?|stloc(?:\.[0-3s])?|refany(?:type|val)|blt(?:\.un)?(?:\.s)?|ble(?:\.un)?(?:\.s)?|bgt(?:\.un)?(?:\.s)?|bge(?:\.un)?(?:\.s)?|unbox(?:\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\.s)?|bne\.un(?:\.s)?|ldloca(?:\.s)?|brzero(?:\.s)?|brtrue(?:\.s)?|brnull(?:\.s)?|brinst(?:\.s)?|starg(?:\.s)?|leave(?:\.s)?|shr(?:\.un)?|rem(?:\.un)?|div(?:\.un)?|clt(?:\.un)?|alignment|castclass|ldvirtftn|beq(?:\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\b/,
            boolean: /\b(?:false|true)\b/,
            number: /\b-?(?:0x[0-9a-f]+|\d+)(?:\.[0-9a-f]+)?\b/i,
            punctuation: /[{}[\];(),:=]|IL_[0-9A-Za-z]+/,
        };
    }
    return Yu;
}
var Ku, Dy;
function l8() {
    if (Dy) return Ku;
    (Dy = 1), (Ku = e), (e.displayName = "clojure"), (e.aliases = []);
    function e(t) {
        t.languages.clojure = {
            comment: { pattern: /;.*/, greedy: !0 },
            string: { pattern: /"(?:[^"\\]|\\.)*"/, greedy: !0 },
            char: /\\\w+/,
            symbol: { pattern: /(^|[\s()\[\]{},])::?[\w*+!?'<>=/.-]+/, lookbehind: !0 },
            keyword: {
                pattern:
                    /(\()(?:-|->|->>|\.|\.\.|\*|\/|\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\?|ensure|eval|every\?|false\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\?|new|newline|next|nil\?|node|not|not-any\?|not-every\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\?|split-at|split-with|str|string\?|struct|struct-map|subs|subvec|symbol|symbol\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\?|vector|vector-zip|vector\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\?|zipmap|zipper)(?=[\s)]|$)/,
                lookbehind: !0,
            },
            boolean: /\b(?:false|nil|true)\b/,
            number: { pattern: /(^|[^\w$@])(?:\d+(?:[/.]\d+)?(?:e[+-]?\d+)?|0x[a-f0-9]+|[1-9]\d?r[a-z0-9]+)[lmn]?(?![\w$@])/i, lookbehind: !0 },
            function: { pattern: /((?:^|[^'])\()[\w*+!?'<>=/.-]+(?=[\s)]|$)/, lookbehind: !0 },
            operator: /[#@^`~]/,
            punctuation: /[{}\[\](),]/,
        };
    }
    return Ku;
}
var Xu, My;
function s8() {
    if (My) return Xu;
    (My = 1), (Xu = e), (e.displayName = "cmake"), (e.aliases = []);
    function e(t) {
        t.languages.cmake = {
            comment: /#.*/,
            string: {
                pattern: /"(?:[^\\"]|\\.)*"/,
                greedy: !0,
                inside: { interpolation: { pattern: /\$\{(?:[^{}$]|\$\{[^{}$]*\})*\}/, inside: { punctuation: /\$\{|\}/, variable: /\w+/ } } },
            },
            variable:
                /\b(?:CMAKE_\w+|\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\b/,
            property:
                /\b(?:cxx_\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\w+|\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\b/,
            keyword:
                /\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\s*\()\b/,
            boolean: /\b(?:FALSE|OFF|ON|TRUE)\b/,
            namespace: /\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\b/,
            operator: /\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\b/,
            inserted: { pattern: /\b\w+::\w+\b/, alias: "class-name" },
            number: /\b\d+(?:\.\d+)*\b/,
            function: /\b[a-z_]\w*(?=\s*\()\b/i,
            punctuation: /[()>}]|\$[<{]/,
        };
    }
    return Xu;
}
var Zu, Fy;
function u8() {
    if (Fy) return Zu;
    (Fy = 1), (Zu = e), (e.displayName = "cobol"), (e.aliases = []);
    function e(t) {
        t.languages.cobol = {
            comment: { pattern: /\*>.*|(^[ \t]*)\*.*/m, lookbehind: !0, greedy: !0 },
            string: { pattern: /[xzgn]?(?:"(?:[^\r\n"]|"")*"(?!")|'(?:[^\r\n']|'')*'(?!'))/i, greedy: !0 },
            level: { pattern: /(^[ \t]*)\d+\b/m, lookbehind: !0, greedy: !0, alias: "number" },
            "class-name": {
                pattern: /(\bpic(?:ture)?\s+)(?:(?:[-\w$/,:*+<>]|\.(?!\s|$))(?:\(\d+\))?)+/i,
                lookbehind: !0,
                inside: { number: { pattern: /(\()\d+/, lookbehind: !0 }, punctuation: /[()]/ },
            },
            keyword: {
                pattern:
                    /(^|[^\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\w-])/i,
                lookbehind: !0,
            },
            boolean: { pattern: /(^|[^\w-])(?:false|true)(?![\w-])/i, lookbehind: !0 },
            number: { pattern: /(^|[^\w-])(?:[+-]?(?:(?:\d+(?:[.,]\d+)?|[.,]\d+)(?:e[+-]?\d+)?|zero))(?![\w-])/i, lookbehind: !0 },
            operator: [/<>|[<>]=?|[=+*/&]/, { pattern: /(^|[^\w-])(?:-|and|equal|greater|less|not|or|than)(?![\w-])/i, lookbehind: !0 }],
            punctuation: /[.:,()]/,
        };
    }
    return Zu;
}
var Qu, Py;
function c8() {
    if (Py) return Qu;
    (Py = 1), (Qu = e), (e.displayName = "coffeescript"), (e.aliases = ["coffee"]);
    function e(t) {
        (function (n) {
            var r = /#(?!\{).+/,
                a = { pattern: /#\{[^}]+\}/, alias: "variable" };
            (n.languages.coffeescript = n.languages.extend("javascript", {
                comment: r,
                string: [
                    { pattern: /'(?:\\[\s\S]|[^\\'])*'/, greedy: !0 },
                    { pattern: /"(?:\\[\s\S]|[^\\"])*"/, greedy: !0, inside: { interpolation: a } },
                ],
                keyword:
                    /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,
                "class-member": { pattern: /@(?!\d)\w+/, alias: "variable" },
            })),
                n.languages.insertBefore("coffeescript", "comment", {
                    "multiline-comment": { pattern: /###[\s\S]+?###/, alias: "comment" },
                    "block-regex": { pattern: /\/{3}[\s\S]*?\/{3}/, alias: "regex", inside: { comment: r, interpolation: a } },
                }),
                n.languages.insertBefore("coffeescript", "string", {
                    "inline-javascript": {
                        pattern: /`(?:\\[\s\S]|[^\\`])*`/,
                        inside: {
                            delimiter: { pattern: /^`|`$/, alias: "punctuation" },
                            script: { pattern: /[\s\S]+/, alias: "language-javascript", inside: n.languages.javascript },
                        },
                    },
                    "multiline-string": [
                        { pattern: /'''[\s\S]*?'''/, greedy: !0, alias: "string" },
                        { pattern: /"""[\s\S]*?"""/, greedy: !0, alias: "string", inside: { interpolation: a } },
                    ],
                }),
                n.languages.insertBefore("coffeescript", "keyword", { property: /(?!\d)\w+(?=\s*:(?!:))/ }),
                delete n.languages.coffeescript["template-string"],
                (n.languages.coffee = n.languages.coffeescript);
        })(t);
    }
    return Qu;
}
var Ju, By;
function d8() {
    if (By) return Ju;
    (By = 1), (Ju = e), (e.displayName = "concurnas"), (e.aliases = ["conc"]);
    function e(t) {
        (t.languages.concurnas = {
            comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*)/, lookbehind: !0, greedy: !0 },
            langext: {
                pattern: /\b\w+\s*\|\|[\s\S]+?\|\|/,
                greedy: !0,
                inside: { "class-name": /^\w+/, string: { pattern: /(^\s*\|\|)[\s\S]+(?=\|\|$)/, lookbehind: !0 }, punctuation: /\|\|/ },
            },
            function: { pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/, lookbehind: !0 },
            keyword:
                /\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\b/,
            boolean: /\b(?:false|true)\b/,
            number: /\b0b[01][01_]*L?\b|\b0x(?:[\da-f_]*\.)?[\da-f_p+-]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfls]?/i,
            punctuation: /[{}[\];(),.:]/,
            operator: /<==|>==|=>|->|<-|<>|&==|&<>|\?:?|\.\?|\+\+|--|[-+*/=<>]=?|[!^~]|\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\b=?/,
            annotation: { pattern: /@(?:\w+:)?(?:\w+|\[[^\]]+\])?/, alias: "builtin" },
        }),
            t.languages.insertBefore("concurnas", "langext", {
                "regex-literal": {
                    pattern: /\br("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
                            lookbehind: !0,
                            inside: t.languages.concurnas,
                        },
                        regex: /[\s\S]+/,
                    },
                },
                "string-literal": {
                    pattern: /(?:\B|\bs)("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
                            lookbehind: !0,
                            inside: t.languages.concurnas,
                        },
                        string: /[\s\S]+/,
                    },
                },
            }),
            (t.languages.conc = t.languages.concurnas);
    }
    return Ju;
}
var ec, Uy;
function p8() {
    if (Uy) return ec;
    (Uy = 1), (ec = e), (e.displayName = "coq"), (e.aliases = []);
    function e(t) {
        (function (n) {
            for (var r = /\(\*(?:[^(*]|\((?!\*)|\*(?!\))|<self>)*\*\)/.source, a = 0; a < 2; a++)
                r = r.replace(/<self>/g, function () {
                    return r;
                });
            (r = r.replace(/<self>/g, "[]")),
                (n.languages.coq = {
                    comment: RegExp(r),
                    string: { pattern: /"(?:[^"]|"")*"(?!")/, greedy: !0 },
                    attribute: [
                        {
                            pattern: RegExp(
                                /#\[(?:[^\[\]("]|"(?:[^"]|"")*"(?!")|\((?!\*)|<comment>)*\]/.source.replace(/<comment>/g, function () {
                                    return r;
                                }),
                            ),
                            greedy: !0,
                            alias: "attr-name",
                            inside: {
                                comment: RegExp(r),
                                string: { pattern: /"(?:[^"]|"")*"(?!")/, greedy: !0 },
                                operator: /=/,
                                punctuation: /^#\[|\]$|[,()]/,
                            },
                        },
                        { pattern: /\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\b/, alias: "attr-name" },
                    ],
                    keyword:
                        /\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\b/,
                    number: /\b(?:0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]+)?(?:p[+-]?\d[\d_]*)?|\d[\d_]*(?:\.[\d_]+)?(?:e[+-]?\d[\d_]*)?)\b/i,
                    punct: { pattern: /@\{|\{\||\[=|:>/, alias: "punctuation" },
                    operator: /\/\\|\\\/|\.{2,3}|:{1,2}=|\*\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\|[-|]?|[-!%&*+/<=>?@^~']/,
                    punctuation: /\.\(|`\(|@\{|`\{|\{\||\[=|:>|[:.,;(){}\[\]]/,
                });
        })(t);
    }
    return ec;
}
var tc, zy;
function hs() {
    if (zy) return tc;
    (zy = 1), (tc = e), (e.displayName = "ruby"), (e.aliases = ["rb"]);
    function e(t) {
        (function (n) {
            (n.languages.ruby = n.languages.extend("clike", {
                comment: { pattern: /#.*|^=begin\s[\s\S]*?^=end/m, greedy: !0 },
                "class-name": {
                    pattern: /(\b(?:class|module)\s+|\bcatch\s+\()[\w.\\]+|\b[A-Z_]\w*(?=\s*\.\s*new\b)/,
                    lookbehind: !0,
                    inside: { punctuation: /[.\\]/ },
                },
                keyword:
                    /\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/,
                operator: /\.{2,3}|&\.|===|<?=>|[!=]?~|(?:&&|\|\||<<|>>|\*\*|[+\-*/%<>!^&|=])=?|[?:]/,
                punctuation: /[(){}[\].,;]/,
            })),
                n.languages.insertBefore("ruby", "operator", { "double-colon": { pattern: /::/, alias: "punctuation" } });
            var r = {
                pattern: /((?:^|[^\\])(?:\\{2})*)#\{(?:[^{}]|\{[^{}]*\})*\}/,
                lookbehind: !0,
                inside: {
                    content: { pattern: /^(#\{)[\s\S]+(?=\}$)/, lookbehind: !0, inside: n.languages.ruby },
                    delimiter: { pattern: /^#\{|\}$/, alias: "punctuation" },
                },
            };
            delete n.languages.ruby.function;
            var a =
                    "(?:" +
                    [
                        /([^a-zA-Z0-9\s{(\[<=])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
                        /\((?:[^()\\]|\\[\s\S]|\((?:[^()\\]|\\[\s\S])*\))*\)/.source,
                        /\{(?:[^{}\\]|\\[\s\S]|\{(?:[^{}\\]|\\[\s\S])*\})*\}/.source,
                        /\[(?:[^\[\]\\]|\\[\s\S]|\[(?:[^\[\]\\]|\\[\s\S])*\])*\]/.source,
                        /<(?:[^<>\\]|\\[\s\S]|<(?:[^<>\\]|\\[\s\S])*>)*>/.source,
                    ].join("|") +
                    ")",
                i = /(?:"(?:\\.|[^"\\\r\n])*"|(?:\b[a-zA-Z_]\w*|[^\s\0-\x7F]+)[?!]?|\$.)/.source;
            n.languages.insertBefore("ruby", "keyword", {
                "regex-literal": [
                    { pattern: RegExp(/%r/.source + a + /[egimnosux]{0,6}/.source), greedy: !0, inside: { interpolation: r, regex: /[\s\S]+/ } },
                    {
                        pattern: /(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: { interpolation: r, regex: /[\s\S]+/ },
                    },
                ],
                variable: /[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,
                symbol: [
                    { pattern: RegExp(/(^|[^:]):/.source + i), lookbehind: !0, greedy: !0 },
                    { pattern: RegExp(/([\r\n{(,][ \t]*)/.source + i + /(?=:(?!:))/.source), lookbehind: !0, greedy: !0 },
                ],
                "method-definition": {
                    pattern: /(\bdef\s+)\w+(?:\s*\.\s*\w+)?/,
                    lookbehind: !0,
                    inside: { function: /\b\w+$/, keyword: /^self\b/, "class-name": /^\w+/, punctuation: /\./ },
                },
            }),
                n.languages.insertBefore("ruby", "string", {
                    "string-literal": [
                        { pattern: RegExp(/%[qQiIwWs]?/.source + a), greedy: !0, inside: { interpolation: r, string: /[\s\S]+/ } },
                        {
                            pattern: /("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,
                            greedy: !0,
                            inside: { interpolation: r, string: /[\s\S]+/ },
                        },
                        {
                            pattern: /<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
                            alias: "heredoc-string",
                            greedy: !0,
                            inside: {
                                delimiter: { pattern: /^<<[-~]?[a-z_]\w*|\b[a-z_]\w*$/i, inside: { symbol: /\b\w+/, punctuation: /^<<[-~]?/ } },
                                interpolation: r,
                                string: /[\s\S]+/,
                            },
                        },
                        {
                            pattern: /<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
                            alias: "heredoc-string",
                            greedy: !0,
                            inside: {
                                delimiter: { pattern: /^<<[-~]?'[a-z_]\w*'|\b[a-z_]\w*$/i, inside: { symbol: /\b\w+/, punctuation: /^<<[-~]?'|'$/ } },
                                string: /[\s\S]+/,
                            },
                        },
                    ],
                    "command-literal": [
                        { pattern: RegExp(/%x/.source + a), greedy: !0, inside: { interpolation: r, command: { pattern: /[\s\S]+/, alias: "string" } } },
                        {
                            pattern: /`(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|[^\\`#\r\n])*`/,
                            greedy: !0,
                            inside: { interpolation: r, command: { pattern: /[\s\S]+/, alias: "string" } },
                        },
                    ],
                }),
                delete n.languages.ruby.string,
                n.languages.insertBefore("ruby", "number", {
                    builtin:
                        /\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\b/,
                    constant: /\b[A-Z][A-Z0-9_]*(?:[?!]|\b)/,
                }),
                (n.languages.rb = n.languages.ruby);
        })(t);
    }
    return tc;
}
var nc, $y;
function f8() {
    if ($y) return nc;
    $y = 1;
    var e = hs();
    (nc = t), (t.displayName = "crystal"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                (r.languages.crystal = r.languages.extend("ruby", {
                    keyword: [
                        /\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\b/,
                        { pattern: /(\.\s*)(?:is_a|responds_to)\?/, lookbehind: !0 },
                    ],
                    number: /\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\da-fA-F_]*[\da-fA-F]|(?:\d(?:[\d_]*\d)?)(?:\.[\d_]*\d)?(?:[eE][+-]?[\d_]*\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\b/,
                    operator: [/->/, r.languages.ruby.operator],
                    punctuation: /[(){}[\].,;\\]/,
                })),
                    r.languages.insertBefore("crystal", "string-literal", {
                        attribute: {
                            pattern: /@\[.*?\]/,
                            inside: {
                                delimiter: { pattern: /^@\[|\]$/, alias: "punctuation" },
                                attribute: { pattern: /^(\s*)\w+/, lookbehind: !0, alias: "class-name" },
                                args: { pattern: /\S(?:[\s\S]*\S)?/, inside: r.languages.crystal },
                            },
                        },
                        expansion: {
                            pattern: /\{(?:\{.*?\}|%.*?%)\}/,
                            inside: {
                                content: { pattern: /^(\{.)[\s\S]+(?=.\}$)/, lookbehind: !0, inside: r.languages.crystal },
                                delimiter: { pattern: /^\{[\{%]|[\}%]\}$/, alias: "operator" },
                            },
                        },
                        char: { pattern: /'(?:[^\\\r\n]{1,2}|\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\{[A-Fa-f0-9]{1,6}\})))'/, greedy: !0 },
                    });
            })(n);
    }
    return nc;
}
var rc, qy;
function m8() {
    if (qy) return rc;
    qy = 1;
    var e = ms();
    (rc = t), (t.displayName = "cshtml"), (t.aliases = ["razor"]);
    function t(n) {
        n.register(e),
            (function (r) {
                var a = /\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\//.source,
                    i =
                        /@(?!")|"(?:[^\r\n\\"]|\\.)*"|@"(?:[^\\"]|""|\\[\s\S])*"(?!")/.source +
                        "|" +
                        /'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!')))/.source;
                function o(I, y) {
                    for (var g = 0; g < y; g++)
                        I = I.replace(/<self>/g, function () {
                            return "(?:" + I + ")";
                        });
                    return I.replace(/<self>/g, "[^\\s\\S]")
                        .replace(/<str>/g, "(?:" + i + ")")
                        .replace(/<comment>/g, "(?:" + a + ")");
                }
                var l = o(/\((?:[^()'"@/]|<str>|<comment>|<self>)*\)/.source, 2),
                    s = o(/\[(?:[^\[\]'"@/]|<str>|<comment>|<self>)*\]/.source, 2),
                    u = o(/\{(?:[^{}'"@/]|<str>|<comment>|<self>)*\}/.source, 2),
                    c = o(/<(?:[^<>'"@/]|<str>|<comment>|<self>)*>/.source, 2),
                    d = /(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?/.source,
                    m = /(?!\d)[^\s>\/=$<%]+/.source + d + /\s*\/?>/.source,
                    f =
                        /\B@?/.source +
                        "(?:" +
                        /<([a-zA-Z][\w:]*)/.source +
                        d +
                        /\s*>/.source +
                        "(?:" +
                        (/[^<]/.source +
                            "|" +
                            /<\/?(?!\1\b)/.source +
                            m +
                            "|" +
                            o(
                                /<\1/.source +
                                    d +
                                    /\s*>/.source +
                                    "(?:" +
                                    (/[^<]/.source + "|" + /<\/?(?!\1\b)/.source + m + "|<self>") +
                                    ")*" +
                                    /<\/\1\s*>/.source,
                                2,
                            )) +
                        ")*" +
                        /<\/\1\s*>/.source +
                        "|" +
                        /</.source +
                        m +
                        ")";
                r.languages.cshtml = r.languages.extend("markup", {});
                var b = r.languages.insertBefore(
                        "csharp",
                        "string",
                        { html: { pattern: RegExp(f), greedy: !0, inside: r.languages.cshtml } },
                        { csharp: r.languages.extend("csharp", {}) },
                    ),
                    E = { pattern: /\S[\s\S]*/, alias: "language-csharp", inside: b };
                r.languages.insertBefore("cshtml", "prolog", {
                    "razor-comment": { pattern: /@\*[\s\S]*?\*@/, greedy: !0, alias: "comment" },
                    block: {
                        pattern: RegExp(
                            /(^|[^@])@/.source +
                                "(?:" +
                                [
                                    u,
                                    /(?:code|functions)\s*/.source + u,
                                    /(?:for|foreach|lock|switch|using|while)\s*/.source + l + /\s*/.source + u,
                                    /do\s*/.source + u + /\s*while\s*/.source + l + /(?:\s*;)?/.source,
                                    /try\s*/.source + u + /\s*catch\s*/.source + l + /\s*/.source + u + /\s*finally\s*/.source + u,
                                    /if\s*/.source +
                                        l +
                                        /\s*/.source +
                                        u +
                                        "(?:" +
                                        /\s*else/.source +
                                        "(?:" +
                                        /\s+if\s*/.source +
                                        l +
                                        ")?" +
                                        /\s*/.source +
                                        u +
                                        ")*",
                                ].join("|") +
                                ")",
                        ),
                        lookbehind: !0,
                        greedy: !0,
                        inside: { keyword: /^@\w*/, csharp: E },
                    },
                    directive: {
                        pattern:
                            /^([ \t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\s).*/m,
                        lookbehind: !0,
                        greedy: !0,
                        inside: { keyword: /^@\w+/, csharp: E },
                    },
                    value: {
                        pattern: RegExp(
                            /(^|[^@])@/.source +
                                /(?:await\b\s*)?/.source +
                                "(?:" +
                                /\w+\b/.source +
                                "|" +
                                l +
                                ")(?:" +
                                /[?!]?\.\w+\b/.source +
                                "|" +
                                l +
                                "|" +
                                s +
                                "|" +
                                c +
                                l +
                                ")*",
                        ),
                        lookbehind: !0,
                        greedy: !0,
                        alias: "variable",
                        inside: { keyword: /^@/, csharp: E },
                    },
                    "delegate-operator": { pattern: /(^|[^@])@(?=<)/, lookbehind: !0, alias: "operator" },
                }),
                    (r.languages.razor = r.languages.cshtml);
            })(n);
    }
    return rc;
}
var ac, Gy;
function h8() {
    if (Gy) return ac;
    (Gy = 1), (ac = e), (e.displayName = "csp"), (e.aliases = []);
    function e(t) {
        (function (n) {
            function r(a) {
                return RegExp(/([ \t])/.source + "(?:" + a + ")" + /(?=[\s;]|$)/.source, "i");
            }
            n.languages.csp = {
                directive: {
                    pattern:
                        /(^|[\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\s;]|$)/i,
                    lookbehind: !0,
                    alias: "property",
                },
                scheme: { pattern: r(/[a-z][a-z0-9.+-]*:/.source), lookbehind: !0 },
                none: { pattern: r(/'none'/.source), lookbehind: !0, alias: "keyword" },
                nonce: { pattern: r(/'nonce-[-+/\w=]+'/.source), lookbehind: !0, alias: "number" },
                hash: { pattern: r(/'sha(?:256|384|512)-[-+/\w=]+'/.source), lookbehind: !0, alias: "number" },
                host: {
                    pattern: r(
                        /[a-z][a-z0-9.+-]*:\/\/[^\s;,']*/.source +
                            "|" +
                            /\*[^\s;,']*/.source +
                            "|" +
                            /[a-z0-9-]+(?:\.[a-z0-9-]+)+(?::[\d*]+)?(?:\/[^\s;,']*)?/.source,
                    ),
                    lookbehind: !0,
                    alias: "url",
                    inside: { important: /\*/ },
                },
                keyword: [
                    { pattern: r(/'unsafe-[a-z-]+'/.source), lookbehind: !0, alias: "unsafe" },
                    { pattern: r(/'[a-z-]+'/.source), lookbehind: !0, alias: "safe" },
                ],
                punctuation: /;/,
            };
        })(t);
    }
    return ac;
}
var ic, Hy;
function g8() {
    if (Hy) return ic;
    (Hy = 1), (ic = e), (e.displayName = "cssExtras"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                a;
            (n.languages.css.selector = {
                pattern: n.languages.css.selector.pattern,
                lookbehind: !0,
                inside: (a = {
                    "pseudo-element": /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,
                    "pseudo-class": /:[-\w]+/,
                    class: /\.[-\w]+/,
                    id: /#[-\w]+/,
                    attribute: {
                        pattern: RegExp(`\\[(?:[^[\\]"']|` + r.source + ")*\\]"),
                        greedy: !0,
                        inside: {
                            punctuation: /^\[|\]$/,
                            "case-sensitivity": { pattern: /(\s)[si]$/i, lookbehind: !0, alias: "keyword" },
                            namespace: { pattern: /^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/, lookbehind: !0, inside: { punctuation: /\|$/ } },
                            "attr-name": { pattern: /^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/, lookbehind: !0 },
                            "attr-value": [r, { pattern: /(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/, lookbehind: !0 }],
                            operator: /[|~*^$]?=/,
                        },
                    },
                    "n-th": [
                        { pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/, lookbehind: !0, inside: { number: /[\dn]+/, operator: /[+-]/ } },
                        { pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i, lookbehind: !0 },
                    ],
                    combinator: />|\+|~|\|\|/,
                    punctuation: /[(),]/,
                }),
            }),
                (n.languages.css.atrule.inside["selector-function-argument"].inside = a),
                n.languages.insertBefore("css", "property", {
                    variable: { pattern: /(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i, lookbehind: !0 },
                });
            var i = { pattern: /(\b\d+)(?:%|[a-z]+(?![\w-]))/, lookbehind: !0 },
                o = { pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/, lookbehind: !0 };
            n.languages.insertBefore("css", "function", {
                operator: { pattern: /(\s)[+\-*\/](?=\s)/, lookbehind: !0 },
                hexcode: { pattern: /\B#[\da-f]{3,8}\b/i, alias: "color" },
                color: [
                    {
                        pattern:
                            /(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,
                        lookbehind: !0,
                    },
                    {
                        pattern:
                            /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
                        inside: { unit: i, number: o, function: /[\w-]+(?=\()/, punctuation: /[(),]/ },
                    },
                ],
                entity: /\\[\da-f]{1,8}/i,
                unit: i,
                number: o,
            });
        })(t);
    }
    return ic;
}
var oc, jy;
function b8() {
    if (jy) return oc;
    (jy = 1), (oc = e), (e.displayName = "csv"), (e.aliases = []);
    function e(t) {
        t.languages.csv = { value: /[^\r\n,"]+|"(?:[^"]|"")*"(?!")/, punctuation: /,/ };
    }
    return oc;
}
var lc, Vy;
function y8() {
    if (Vy) return lc;
    (Vy = 1), (lc = e), (e.displayName = "cypher"), (e.aliases = []);
    function e(t) {
        t.languages.cypher = {
            comment: /\/\/.*/,
            string: { pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/, greedy: !0 },
            "class-name": { pattern: /(:\s*)(?:\w+|`(?:[^`\\\r\n])*`)(?=\s*[{):])/, lookbehind: !0, greedy: !0 },
            relationship: {
                pattern: /(-\[\s*(?:\w+\s*|`(?:[^`\\\r\n])*`\s*)?:\s*|\|\s*:\s*)(?:\w+|`(?:[^`\\\r\n])*`)/,
                lookbehind: !0,
                greedy: !0,
                alias: "property",
            },
            identifier: { pattern: /`(?:[^`\\\r\n])*`/, greedy: !0 },
            variable: /\$\w+/,
            keyword:
                /\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\b/i,
            function: /\b\w+\b(?=\s*\()/,
            boolean: /\b(?:false|null|true)\b/i,
            number: /\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:[eE][+-]?\d+)?)\b/,
            operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\.\.\.?/,
            punctuation: /[()[\]{},;.]/,
        };
    }
    return lc;
}
var sc, Wy;
function v8() {
    if (Wy) return sc;
    (Wy = 1), (sc = e), (e.displayName = "d"), (e.aliases = []);
    function e(t) {
        (t.languages.d = t.languages.extend("clike", {
            comment: [
                { pattern: /^\s*#!.+/, greedy: !0 },
                {
                    pattern: RegExp(
                        /(^|[^\\])/.source +
                            "(?:" +
                            [/\/\+(?:\/\+(?:[^+]|\+(?!\/))*\+\/|(?!\/\+)[\s\S])*?\+\//.source, /\/\/.*/.source, /\/\*[\s\S]*?\*\//.source].join("|") +
                            ")",
                    ),
                    lookbehind: !0,
                    greedy: !0,
                },
            ],
            string: [
                {
                    pattern: RegExp(
                        [
                            /\b[rx]"(?:\\[\s\S]|[^\\"])*"[cwd]?/.source,
                            /\bq"(?:\[[\s\S]*?\]|\([\s\S]*?\)|<[\s\S]*?>|\{[\s\S]*?\})"/.source,
                            /\bq"((?!\d)\w+)$[\s\S]*?^\1"/.source,
                            /\bq"(.)[\s\S]*?\2"/.source,
                            /(["`])(?:\\[\s\S]|(?!\3)[^\\])*\3[cwd]?/.source,
                        ].join("|"),
                        "m",
                    ),
                    greedy: !0,
                },
                { pattern: /\bq\{(?:\{[^{}]*\}|[^{}])*\}/, greedy: !0, alias: "token-string" },
            ],
            keyword:
                /\$|\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\b/,
            number: [
                /\b0x\.?[a-f\d_]+(?:(?!\.\.)\.[a-f\d_]*)?(?:p[+-]?[a-f\d_]+)?[ulfi]{0,4}/i,
                { pattern: /((?:\.\.)?)(?:\b0b\.?|\b|\.)\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:e[+-]?\d[\d_]*)?[ulfi]{0,4}/i, lookbehind: !0 },
            ],
            operator: /\|[|=]?|&[&=]?|\+[+=]?|-[-=]?|\.?\.\.|=[>=]?|!(?:i[ns]\b|<>?=?|>=?|=)?|\bi[ns]\b|(?:<[<>]?|>>?>?|\^\^|[*\/%^~])=?/,
        })),
            t.languages.insertBefore("d", "string", { char: /'(?:\\(?:\W|\w+)|[^\\])'/ }),
            t.languages.insertBefore("d", "keyword", { property: /\B@\w*/ }),
            t.languages.insertBefore("d", "function", {
                register: {
                    pattern:
                        /\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\d))\b|\bST(?:\([0-7]\)|\b)/,
                    alias: "variable",
                },
            });
    }
    return sc;
}
var uc, Yy;
function E8() {
    if (Yy) return uc;
    (Yy = 1), (uc = e), (e.displayName = "dart"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = [
                    /\b(?:async|sync|yield)\*/,
                    /\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\b/,
                ],
                a = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source,
                i = {
                    pattern: RegExp(a + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
                    lookbehind: !0,
                    inside: { namespace: { pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/, inside: { punctuation: /\./ } } },
                };
            (n.languages.dart = n.languages.extend("clike", {
                "class-name": [i, { pattern: RegExp(a + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source), lookbehind: !0, inside: i.inside }],
                keyword: r,
                operator: /\bis!|\b(?:as|is)\b|\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?/,
            })),
                n.languages.insertBefore("dart", "string", {
                    "string-literal": {
                        pattern: /r?(?:("""|''')[\s\S]*?\1|(["'])(?:\\.|(?!\2)[^\\\r\n])*\2(?!\2))/,
                        greedy: !0,
                        inside: {
                            interpolation: {
                                pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
                                lookbehind: !0,
                                inside: { punctuation: /^\$\{?|\}$/, expression: { pattern: /[\s\S]+/, inside: n.languages.dart } },
                            },
                            string: /[\s\S]+/,
                        },
                    },
                    string: void 0,
                }),
                n.languages.insertBefore("dart", "class-name", { metadata: { pattern: /@\w+/, alias: "function" } }),
                n.languages.insertBefore("dart", "class-name", {
                    generics: {
                        pattern: /<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/,
                        inside: { "class-name": i, keyword: r, punctuation: /[<>(),.:]/, operator: /[?&|]/ },
                    },
                });
        })(t);
    }
    return uc;
}
var cc, Ky;
function S8() {
    if (Ky) return cc;
    (Ky = 1), (cc = e), (e.displayName = "dataweave"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.dataweave = {
                url: /\b[A-Za-z]+:\/\/[\w/:.?=&-]+|\burn:[\w:.?=&-]+/,
                property: { pattern: /(?:\b\w+#)?(?:"(?:\\.|[^\\"\r\n])*"|\b\w+)(?=\s*[:@])/, greedy: !0 },
                string: { pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/, greedy: !0 },
                "mime-type": /\b(?:application|audio|image|multipart|text|video)\/[\w+-]+/,
                date: { pattern: /\|[\w:+-]+\|/, greedy: !0 },
                comment: [
                    { pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0, greedy: !0 },
                    { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 },
                ],
                regex: { pattern: /\/(?:[^\\\/\r\n]|\\[^\r\n])+\//, greedy: !0 },
                keyword: /\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\b/,
                function: /\b[A-Z_]\w*(?=\s*\()/i,
                number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
                punctuation: /[{}[\];(),.:@]/,
                operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\+\+?|!|\?/,
                boolean: /\b(?:false|true)\b/,
            };
        })(t);
    }
    return cc;
}
var dc, Xy;
function w8() {
    if (Xy) return dc;
    (Xy = 1), (dc = e), (e.displayName = "dax"), (e.aliases = []);
    function e(t) {
        t.languages.dax = {
            comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/).*)/, lookbehind: !0 },
            "data-field": { pattern: /'(?:[^']|'')*'(?!')(?:\[[ \w\xA0-\uFFFF]+\])?|\w+\[[ \w\xA0-\uFFFF]+\]/, alias: "symbol" },
            measure: { pattern: /\[[ \w\xA0-\uFFFF]+\]/, alias: "constant" },
            string: { pattern: /"(?:[^"]|"")*"(?!")/, greedy: !0 },
            function:
                /\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\.DIST|BETA\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\.DIST|CHISQ\.DIST\.RT|CHISQ\.INV|CHISQ\.INV\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\.NORM|CONFIDENCE\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\.DIST|NORM\.INV|NORM\.S\.DIST|NORM\.S\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\.EXC|PERCENTILE\.INC|PERCENTILEX\.EXC|PERCENTILEX\.INC|PERMUT|PI|POISSON\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\.P|STDEV\.S|STDEVX\.P|STDEVX\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\.DIST|T\.DIST\.2T|T\.DIST\.RT|T\.INV|T\.INV\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\.P|VAR\.S|VARX\.P|VARX\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\s*\()/i,
            keyword: /\b(?:DEFINE|EVALUATE|MEASURE|ORDER\s+BY|RETURN|VAR|START\s+AT|ASC|DESC)\b/i,
            boolean: { pattern: /\b(?:FALSE|NULL|TRUE)\b/i, alias: "constant" },
            number: /\b\d+(?:\.\d*)?|\B\.\d+\b/,
            operator: /:=|[-+*\/=^]|&&?|\|\||<(?:=>?|<|>)?|>[>=]?|\b(?:IN|NOT)\b/i,
            punctuation: /[;\[\](){}`,.]/,
        };
    }
    return dc;
}
var pc, Zy;
function k8() {
    if (Zy) return pc;
    (Zy = 1), (pc = e), (e.displayName = "dhall"), (e.aliases = []);
    function e(t) {
        (t.languages.dhall = {
            comment: /--.*|\{-(?:[^-{]|-(?!\})|\{(?!-)|\{-(?:[^-{]|-(?!\})|\{(?!-))*-\})*-\}/,
            string: {
                pattern: /"(?:[^"\\]|\\.)*"|''(?:[^']|'(?!')|'''|''\$\{)*''(?!'|\$)/,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /\$\{[^{}]*\}/,
                        inside: {
                            expression: { pattern: /(^\$\{)[\s\S]+(?=\}$)/, lookbehind: !0, alias: "language-dhall", inside: null },
                            punctuation: /\$\{|\}/,
                        },
                    },
                },
            },
            label: { pattern: /`[^`]*`/, greedy: !0 },
            url: { pattern: /\bhttps?:\/\/[\w.:%!$&'*+;=@~-]+(?:\/[\w.:%!$&'*+;=@~-]*)*(?:\?[/?\w.:%!$&'*+;=@~-]*)?/, greedy: !0 },
            env: { pattern: /\benv:(?:(?!\d)\w+|"(?:[^"\\=]|\\.)*")/, greedy: !0, inside: { function: /^env/, operator: /^:/, variable: /[\s\S]+/ } },
            hash: { pattern: /\bsha256:[\da-fA-F]{64}\b/, inside: { function: /sha256/, operator: /:/, number: /[\da-fA-F]{64}/ } },
            keyword: /\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\b|\u2200/,
            builtin: /\b(?:None|Some)\b/,
            boolean: /\b(?:False|True)\b/,
            number: /\bNaN\b|-?\bInfinity\b|[+-]?\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/,
            operator: /\/\\|\/\/\\\\|&&|\|\||===|[!=]=|\/\/|->|\+\+|::|[+*#@=:?<>|\\\u2227\u2a53\u2261\u2afd\u03bb\u2192]/,
            punctuation: /\.\.|[{}\[\](),./]/,
            "class-name": /\b[A-Z]\w*\b/,
        }),
            (t.languages.dhall.string.inside.interpolation.inside.expression.inside = t.languages.dhall);
    }
    return pc;
}
var fc, Qy;
function T8() {
    if (Qy) return fc;
    (Qy = 1), (fc = e), (e.displayName = "diff"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.diff = { coord: [/^(?:\*{3}|-{3}|\+{3}).*$/m, /^@@.*@@$/m, /^\d.*$/m] };
            var r = { "deleted-sign": "-", "deleted-arrow": "<", "inserted-sign": "+", "inserted-arrow": ">", unchanged: " ", diff: "!" };
            Object.keys(r).forEach(function (a) {
                var i = r[a],
                    o = [];
                /^\w+$/.test(a) || o.push(/\w+/.exec(a)[0]),
                    a === "diff" && o.push("bold"),
                    (n.languages.diff[a] = {
                        pattern: RegExp(
                            "^(?:[" +
                                i +
                                `].*(?:\r
?|
|(?![\\s\\S])))+`,
                            "m",
                        ),
                        alias: o,
                        inside: { line: { pattern: /(.)(?=[\s\S]).*(?:\r\n?|\n)?/, lookbehind: !0 }, prefix: { pattern: /[\s\S]/, alias: /\w+/.exec(a)[0] } },
                    });
            }),
                Object.defineProperty(n.languages.diff, "PREFIXES", { value: r });
        })(t);
    }
    return fc;
}
var mc, Jy;
function Ct() {
    if (Jy) return mc;
    (Jy = 1), (mc = e), (e.displayName = "markupTemplating"), (e.aliases = []);
    function e(t) {
        (function (n) {
            function r(a, i) {
                return "___" + a.toUpperCase() + i + "___";
            }
            Object.defineProperties((n.languages["markup-templating"] = {}), {
                buildPlaceholders: {
                    value: function (a, i, o, l) {
                        if (a.language === i) {
                            var s = (a.tokenStack = []);
                            (a.code = a.code.replace(o, function (u) {
                                if (typeof l == "function" && !l(u)) return u;
                                for (var c = s.length, d; a.code.indexOf((d = r(i, c))) !== -1; ) ++c;
                                return (s[c] = u), d;
                            })),
                                (a.grammar = n.languages.markup);
                        }
                    },
                },
                tokenizePlaceholders: {
                    value: function (a, i) {
                        if (a.language !== i || !a.tokenStack) return;
                        a.grammar = n.languages[i];
                        var o = 0,
                            l = Object.keys(a.tokenStack);
                        function s(u) {
                            for (var c = 0; c < u.length && !(o >= l.length); c++) {
                                var d = u[c];
                                if (typeof d == "string" || (d.content && typeof d.content == "string")) {
                                    var m = l[o],
                                        f = a.tokenStack[m],
                                        b = typeof d == "string" ? d : d.content,
                                        E = r(i, m),
                                        I = b.indexOf(E);
                                    if (I > -1) {
                                        ++o;
                                        var y = b.substring(0, I),
                                            g = new n.Token(i, n.tokenize(f, a.grammar), "language-" + i, f),
                                            v = b.substring(I + E.length),
                                            T = [];
                                        y && T.push.apply(T, s([y])),
                                            T.push(g),
                                            v && T.push.apply(T, s([v])),
                                            typeof d == "string" ? u.splice.apply(u, [c, 1].concat(T)) : (d.content = T);
                                    }
                                } else d.content && s(d.content);
                            }
                            return u;
                        }
                        s(a.tokens);
                    },
                },
            });
        })(t);
    }
    return mc;
}
var hc, ev;
function A8() {
    if (ev) return hc;
    ev = 1;
    var e = Ct();
    (hc = t), (t.displayName = "django"), (t.aliases = ["jinja2"]);
    function t(n) {
        n.register(e),
            (function (r) {
                r.languages.django = {
                    comment: /^\{#[\s\S]*?#\}$/,
                    tag: { pattern: /(^\{%[+-]?\s*)\w+/, lookbehind: !0, alias: "keyword" },
                    delimiter: { pattern: /^\{[{%][+-]?|[+-]?[}%]\}$/, alias: "punctuation" },
                    string: { pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
                    filter: { pattern: /(\|)\w+/, lookbehind: !0, alias: "function" },
                    test: { pattern: /(\bis\s+(?:not\s+)?)(?!not\b)\w+/, lookbehind: !0, alias: "function" },
                    function: /\b[a-z_]\w+(?=\s*\()/i,
                    keyword: /\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\b/,
                    operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
                    number: /\b\d+(?:\.\d+)?\b/,
                    boolean: /[Ff]alse|[Nn]one|[Tt]rue/,
                    variable: /\b\w+\b/,
                    punctuation: /[{}[\](),.:;]/,
                };
                var a = /\{\{[\s\S]*?\}\}|\{%[\s\S]*?%\}|\{#[\s\S]*?#\}/g,
                    i = r.languages["markup-templating"];
                r.hooks.add("before-tokenize", function (o) {
                    i.buildPlaceholders(o, "django", a);
                }),
                    r.hooks.add("after-tokenize", function (o) {
                        i.tokenizePlaceholders(o, "django");
                    }),
                    (r.languages.jinja2 = r.languages.django),
                    r.hooks.add("before-tokenize", function (o) {
                        i.buildPlaceholders(o, "jinja2", a);
                    }),
                    r.hooks.add("after-tokenize", function (o) {
                        i.tokenizePlaceholders(o, "jinja2");
                    });
            })(n);
    }
    return hc;
}
var gc, tv;
function x8() {
    if (tv) return gc;
    (tv = 1), (gc = e), (e.displayName = "dnsZoneFile"), (e.aliases = []);
    function e(t) {
        (t.languages["dns-zone-file"] = {
            comment: /;.*/,
            string: { pattern: /"(?:\\.|[^"\\\r\n])*"/, greedy: !0 },
            variable: [
                { pattern: /(^\$ORIGIN[ \t]+)\S+/m, lookbehind: !0 },
                { pattern: /(^|\s)@(?=\s|$)/, lookbehind: !0 },
            ],
            keyword: /^\$(?:INCLUDE|ORIGIN|TTL)(?=\s|$)/m,
            class: { pattern: /(^|\s)(?:CH|CS|HS|IN)(?=\s|$)/, lookbehind: !0, alias: "keyword" },
            type: {
                pattern:
                    /(^|\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\s|$)/,
                lookbehind: !0,
                alias: "keyword",
            },
            punctuation: /[()]/,
        }),
            (t.languages["dns-zone"] = t.languages["dns-zone-file"]);
    }
    return gc;
}
var bc, nv;
function R8() {
    if (nv) return bc;
    (nv = 1), (bc = e), (e.displayName = "docker"), (e.aliases = ["dockerfile"]);
    function e(t) {
        (function (n) {
            var r = /\\[\r\n](?:\s|\\[\r\n]|#.*(?!.))*(?![\s#]|\\[\r\n])/.source,
                a = /(?:[ \t]+(?![ \t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(/<SP_BS>/g, function () {
                    return r;
                }),
                i = /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"|'(?:[^'\\\r\n]|\\(?:\r\n|[\s\S]))*'/.source,
                o = /--[\w-]+=(?:<STR>|(?!["'])(?:[^\s\\]|\\.)+)/.source.replace(/<STR>/g, function () {
                    return i;
                }),
                l = { pattern: RegExp(i), greedy: !0 },
                s = { pattern: /(^[ \t]*)#.*/m, lookbehind: !0, greedy: !0 };
            function u(c, d) {
                return (
                    (c = c
                        .replace(/<OPT>/g, function () {
                            return o;
                        })
                        .replace(/<SP>/g, function () {
                            return a;
                        })),
                    RegExp(c, d)
                );
            }
            (n.languages.docker = {
                instruction: {
                    pattern:
                        /(^[ \t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\s)(?:\\.|[^\r\n\\])*(?:\\$(?:\s|#.*$)*(?![\s#])(?:\\.|[^\r\n\\])*)*/im,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        options: {
                            pattern: u(/(^(?:ONBUILD<SP>)?\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, "i"),
                            lookbehind: !0,
                            greedy: !0,
                            inside: {
                                property: { pattern: /(^|\s)--[\w-]+/, lookbehind: !0 },
                                string: [l, { pattern: /(=)(?!["'])(?:[^\s\\]|\\.)+/, lookbehind: !0 }],
                                operator: /\\$/m,
                                punctuation: /=/,
                            },
                        },
                        keyword: [
                            { pattern: u(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\b/.source, "i"), lookbehind: !0, greedy: !0 },
                            { pattern: u(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \t\\]+<SP>)AS/.source, "i"), lookbehind: !0, greedy: !0 },
                            { pattern: u(/(^ONBUILD<SP>)\w+/.source, "i"), lookbehind: !0, greedy: !0 },
                            { pattern: /^\w+/, greedy: !0 },
                        ],
                        comment: s,
                        string: l,
                        variable: /\$(?:\w+|\{[^{}"'\\]*\})/,
                        operator: /\\$/m,
                    },
                },
                comment: s,
            }),
                (n.languages.dockerfile = n.languages.docker);
        })(t);
    }
    return bc;
}
var yc, rv;
function I8() {
    if (rv) return yc;
    (rv = 1), (yc = e), (e.displayName = "dot"), (e.aliases = ["gv"]);
    function e(t) {
        (function (n) {
            var r =
                    "(?:" +
                    [
                        /[a-zA-Z_\x80-\uFFFF][\w\x80-\uFFFF]*/.source,
                        /-?(?:\.\d+|\d+(?:\.\d*)?)/.source,
                        /"[^"\\]*(?:\\[\s\S][^"\\]*)*"/.source,
                        /<(?:[^<>]|(?!<!--)<(?:[^<>"']|"[^"]*"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source,
                    ].join("|") +
                    ")",
                a = {
                    markup: {
                        pattern: /(^<)[\s\S]+(?=>$)/,
                        lookbehind: !0,
                        alias: ["language-markup", "language-html", "language-xml"],
                        inside: n.languages.markup,
                    },
                };
            function i(o, l) {
                return RegExp(
                    o.replace(/<ID>/g, function () {
                        return r;
                    }),
                    l,
                );
            }
            (n.languages.dot = {
                comment: { pattern: /\/\/.*|\/\*[\s\S]*?\*\/|^#.*/m, greedy: !0 },
                "graph-name": {
                    pattern: i(/(\b(?:digraph|graph|subgraph)[ \t\r\n]+)<ID>/.source, "i"),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "class-name",
                    inside: a,
                },
                "attr-value": { pattern: i(/(=[ \t\r\n]*)<ID>/.source), lookbehind: !0, greedy: !0, inside: a },
                "attr-name": { pattern: i(/([\[;, \t\r\n])<ID>(?=[ \t\r\n]*=)/.source), lookbehind: !0, greedy: !0, inside: a },
                keyword: /\b(?:digraph|edge|graph|node|strict|subgraph)\b/i,
                "compass-point": { pattern: /(:[ \t\r\n]*)(?:[ewc_]|[ns][ew]?)(?![\w\x80-\uFFFF])/, lookbehind: !0, alias: "builtin" },
                node: { pattern: i(/(^|[^-.\w\x80-\uFFFF\\])<ID>/.source), lookbehind: !0, greedy: !0, inside: a },
                operator: /[=:]|-[->]/,
                punctuation: /[\[\]{};,]/,
            }),
                (n.languages.gv = n.languages.dot);
        })(t);
    }
    return yc;
}
var vc, av;
function N8() {
    if (av) return vc;
    (av = 1), (vc = e), (e.displayName = "ebnf"), (e.aliases = []);
    function e(t) {
        t.languages.ebnf = {
            comment: /\(\*[\s\S]*?\*\)/,
            string: { pattern: /"[^"\r\n]*"|'[^'\r\n]*'/, greedy: !0 },
            special: { pattern: /\?[^?\r\n]*\?/, greedy: !0, alias: "class-name" },
            definition: { pattern: /^([\t ]*)[a-z]\w*(?:[ \t]+[a-z]\w*)*(?=\s*=)/im, lookbehind: !0, alias: ["rule", "keyword"] },
            rule: /\b[a-z]\w*(?:[ \t]+[a-z]\w*)*\b/i,
            punctuation: /\([:/]|[:/]\)|[.,;()[\]{}]/,
            operator: /[-=|*/!]/,
        };
    }
    return vc;
}
var Ec, iv;
function _8() {
    if (iv) return Ec;
    (iv = 1), (Ec = e), (e.displayName = "editorconfig"), (e.aliases = []);
    function e(t) {
        t.languages.editorconfig = {
            comment: /[;#].*/,
            section: {
                pattern: /(^[ \t]*)\[.+\]/m,
                lookbehind: !0,
                alias: "selector",
                inside: { regex: /\\\\[\[\]{},!?.*]/, operator: /[!?]|\.\.|\*{1,2}/, punctuation: /[\[\]{},]/ },
            },
            key: { pattern: /(^[ \t]*)[^\s=]+(?=[ \t]*=)/m, lookbehind: !0, alias: "attr-name" },
            value: { pattern: /=.*/, alias: "attr-value", inside: { punctuation: /^=/ } },
        };
    }
    return Ec;
}
var Sc, ov;
function C8() {
    if (ov) return Sc;
    (ov = 1), (Sc = e), (e.displayName = "eiffel"), (e.aliases = []);
    function e(t) {
        t.languages.eiffel = {
            comment: /--.*/,
            string: [
                { pattern: /"([^[]*)\[[\s\S]*?\]\1"/, greedy: !0 },
                { pattern: /"([^{]*)\{[\s\S]*?\}\1"/, greedy: !0 },
                { pattern: /"(?:%(?:(?!\n)\s)*\n\s*%|%\S|[^%"\r\n])*"/, greedy: !0 },
            ],
            char: /'(?:%.|[^%'\r\n])+'/,
            keyword:
                /\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\b/i,
            boolean: /\b(?:False|True)\b/i,
            "class-name": /\b[A-Z][\dA-Z_]*\b/,
            number: [/\b0[xcb][\da-f](?:_*[\da-f])*\b/i, /(?:\b\d(?:_*\d)*)?\.(?:(?:\d(?:_*\d)*)?e[+-]?)?\d(?:_*\d)*\b|\b\d(?:_*\d)*\b\.?/i],
            punctuation: /:=|<<|>>|\(\||\|\)|->|\.(?=\w)|[{}[\];(),:?]/,
            operator: /\\\\|\|\.\.\||\.\.|\/[~\/=]?|[><]=?|[-+*^=~]/,
        };
    }
    return Sc;
}
var wc, lv;
function O8() {
    if (lv) return wc;
    lv = 1;
    var e = Ct();
    (wc = t), (t.displayName = "ejs"), (t.aliases = ["eta"]);
    function t(n) {
        n.register(e),
            (function (r) {
                (r.languages.ejs = {
                    delimiter: { pattern: /^<%[-_=]?|[-_]?%>$/, alias: "punctuation" },
                    comment: /^#[\s\S]*/,
                    "language-javascript": { pattern: /[\s\S]+/, inside: r.languages.javascript },
                }),
                    r.hooks.add("before-tokenize", function (a) {
                        var i = /<%(?!%)[\s\S]+?%>/g;
                        r.languages["markup-templating"].buildPlaceholders(a, "ejs", i);
                    }),
                    r.hooks.add("after-tokenize", function (a) {
                        r.languages["markup-templating"].tokenizePlaceholders(a, "ejs");
                    }),
                    (r.languages.eta = r.languages.ejs);
            })(n);
    }
    return wc;
}
var kc, sv;
function L8() {
    if (sv) return kc;
    (sv = 1), (kc = e), (e.displayName = "elixir"), (e.aliases = []);
    function e(t) {
        (t.languages.elixir = {
            doc: {
                pattern: /@(?:doc|moduledoc)\s+(?:("""|''')[\s\S]*?\1|("|')(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2)/,
                inside: { attribute: /^@\w+/, string: /['"][\s\S]+/ },
            },
            comment: { pattern: /#.*/, greedy: !0 },
            regex: {
                pattern:
                    /~[rR](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|[^\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[uismxfr]*/,
                greedy: !0,
            },
            string: [
                {
                    pattern:
                        /~[cCsSwW](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|#\{[^}]+\}|#(?!\{)|[^#\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[csa]?/,
                    greedy: !0,
                    inside: {},
                },
                { pattern: /("""|''')[\s\S]*?\1/, greedy: !0, inside: {} },
                { pattern: /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0, inside: {} },
            ],
            atom: { pattern: /(^|[^:]):\w+/, lookbehind: !0, alias: "symbol" },
            module: { pattern: /\b[A-Z]\w*\b/, alias: "class-name" },
            "attr-name": /\b\w+\??:(?!:)/,
            argument: { pattern: /(^|[^&])&\d+/, lookbehind: !0, alias: "variable" },
            attribute: { pattern: /@\w+/, alias: "variable" },
            function: /\b[_a-zA-Z]\w*[?!]?(?:(?=\s*(?:\.\s*)?\()|(?=\/\d))/,
            number: /\b(?:0[box][a-f\d_]+|\d[\d_]*)(?:\.[\d_]+)?(?:e[+-]?[\d_]+)?\b/i,
            keyword:
                /\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\b/,
            boolean: /\b(?:false|nil|true)\b/,
            operator: [
                /\bin\b|&&?|\|[|>]?|\\\\|::|\.\.\.?|\+\+?|-[->]?|<[-=>]|>=|!==?|\B!|=(?:==?|[>~])?|[*\/^]/,
                { pattern: /([^<])<(?!<)/, lookbehind: !0 },
                { pattern: /([^>])>(?!>)/, lookbehind: !0 },
            ],
            punctuation: /<<|>>|[.,%\[\]{}()]/,
        }),
            t.languages.elixir.string.forEach(function (n) {
                n.inside = {
                    interpolation: { pattern: /#\{[^}]+\}/, inside: { delimiter: { pattern: /^#\{|\}$/, alias: "punctuation" }, rest: t.languages.elixir } },
                };
            });
    }
    return kc;
}
var Tc, uv;
function D8() {
    if (uv) return Tc;
    (uv = 1), (Tc = e), (e.displayName = "elm"), (e.aliases = []);
    function e(t) {
        t.languages.elm = {
            comment: /--.*|\{-[\s\S]*?-\}/,
            char: { pattern: /'(?:[^\\'\r\n]|\\(?:[abfnrtv\\']|\d+|x[0-9a-fA-F]+|u\{[0-9a-fA-F]+\}))'/, greedy: !0 },
            string: [
                { pattern: /"""[\s\S]*?"""/, greedy: !0 },
                { pattern: /"(?:[^\\"\r\n]|\\.)*"/, greedy: !0 },
            ],
            "import-statement": {
                pattern: /(^[\t ]*)import\s+[A-Z]\w*(?:\.[A-Z]\w*)*(?:\s+as\s+(?:[A-Z]\w*)(?:\.[A-Z]\w*)*)?(?:\s+exposing\s+)?/m,
                lookbehind: !0,
                inside: { keyword: /\b(?:as|exposing|import)\b/ },
            },
            keyword: /\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\b/,
            builtin:
                /\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\b/,
            number: /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0x[0-9a-f]+)\b/i,
            operator: /\s\.\s|[+\-/*=.$<>:&|^?%#@~!]{2,}|[+\-/*=$<>:&|^?%#@~!]/,
            hvariable: /\b(?:[A-Z]\w*\.)*[a-z]\w*\b/,
            constant: /\b(?:[A-Z]\w*\.)*[A-Z]\w*\b/,
            punctuation: /[{}[\]|(),.:]/,
        };
    }
    return Tc;
}
var Ac, cv;
function M8() {
    if (cv) return Ac;
    cv = 1;
    var e = hs(),
        t = Ct();
    (Ac = n), (n.displayName = "erb"), (n.aliases = []);
    function n(r) {
        r.register(e),
            r.register(t),
            (function (a) {
                (a.languages.erb = {
                    delimiter: { pattern: /^(\s*)<%=?|%>(?=\s*$)/, lookbehind: !0, alias: "punctuation" },
                    ruby: { pattern: /\s*\S[\s\S]*/, alias: "language-ruby", inside: a.languages.ruby },
                }),
                    a.hooks.add("before-tokenize", function (i) {
                        var o = /<%=?(?:[^\r\n]|[\r\n](?!=begin)|[\r\n]=begin\s(?:[^\r\n]|[\r\n](?!=end))*[\r\n]=end)+?%>/g;
                        a.languages["markup-templating"].buildPlaceholders(i, "erb", o);
                    }),
                    a.hooks.add("after-tokenize", function (i) {
                        a.languages["markup-templating"].tokenizePlaceholders(i, "erb");
                    });
            })(r);
    }
    return Ac;
}
var xc, dv;
function F8() {
    if (dv) return xc;
    (dv = 1), (xc = e), (e.displayName = "erlang"), (e.aliases = []);
    function e(t) {
        t.languages.erlang = {
            comment: /%.+/,
            string: { pattern: /"(?:\\.|[^\\"\r\n])*"/, greedy: !0 },
            "quoted-function": { pattern: /'(?:\\.|[^\\'\r\n])+'(?=\()/, alias: "function" },
            "quoted-atom": { pattern: /'(?:\\.|[^\\'\r\n])+'/, alias: "atom" },
            boolean: /\b(?:false|true)\b/,
            keyword: /\b(?:after|case|catch|end|fun|if|of|receive|try|when)\b/,
            number: [/\$\\?./, /\b\d+#[a-z0-9]+/i, /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i],
            function: /\b[a-z][\w@]*(?=\()/,
            variable: { pattern: /(^|[^@])(?:\b|\?)[A-Z_][\w@]*/, lookbehind: !0 },
            operator: [
                /[=\/<>:]=|=[:\/]=|\+\+?|--?|[=*\/!]|\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\b/,
                { pattern: /(^|[^<])<(?!<)/, lookbehind: !0 },
                { pattern: /(^|[^>])>(?!>)/, lookbehind: !0 },
            ],
            atom: /\b[a-z][\w@]*/,
            punctuation: /[()[\]{}:;,.#|]|<<|>>/,
        };
    }
    return xc;
}
var Rc, pv;
function PT() {
    if (pv) return Rc;
    (pv = 1), (Rc = e), (e.displayName = "lua"), (e.aliases = []);
    function e(t) {
        t.languages.lua = {
            comment: /^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m,
            string: { pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[^z]))*\1|\[(=*)\[[\s\S]*?\]\2\]/, greedy: !0 },
            number: /\b0x[a-f\d]+(?:\.[a-f\d]*)?(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|(?:\.\d*)?(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i,
            keyword: /\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/,
            function: /(?!\d)\w+(?=\s*(?:[({]))/,
            operator: [/[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/, { pattern: /(^|[^.])\.\.(?!\.)/, lookbehind: !0 }],
            punctuation: /[\[\](){},;]|\.+|:+/,
        };
    }
    return Rc;
}
var Ic, fv;
function P8() {
    if (fv) return Ic;
    fv = 1;
    var e = PT(),
        t = Ct();
    (Ic = n), (n.displayName = "etlua"), (n.aliases = []);
    function n(r) {
        r.register(e),
            r.register(t),
            (function (a) {
                (a.languages.etlua = {
                    delimiter: { pattern: /^<%[-=]?|-?%>$/, alias: "punctuation" },
                    "language-lua": { pattern: /[\s\S]+/, inside: a.languages.lua },
                }),
                    a.hooks.add("before-tokenize", function (i) {
                        var o = /<%[\s\S]+?%>/g;
                        a.languages["markup-templating"].buildPlaceholders(i, "etlua", o);
                    }),
                    a.hooks.add("after-tokenize", function (i) {
                        a.languages["markup-templating"].tokenizePlaceholders(i, "etlua");
                    });
            })(r);
    }
    return Ic;
}
var Nc, mv;
function B8() {
    if (mv) return Nc;
    (mv = 1), (Nc = e), (e.displayName = "excelFormula"), (e.aliases = []);
    function e(t) {
        (t.languages["excel-formula"] = {
            comment: { pattern: /(\bN\(\s*)"(?:[^"]|"")*"(?=\s*\))/i, lookbehind: !0, greedy: !0 },
            string: { pattern: /"(?:[^"]|"")*"(?!")/, greedy: !0 },
            reference: {
                pattern: /(?:'[^']*'|(?:[^\s()[\]{}<>*?"';,$&]*\[[^^\s()[\]{}<>*?"']+\])?\w+)!/,
                greedy: !0,
                alias: "string",
                inside: {
                    operator: /!$/,
                    punctuation: /'/,
                    sheet: { pattern: /[^[\]]+$/, alias: "function" },
                    file: { pattern: /\[[^[\]]+\]$/, inside: { punctuation: /[[\]]/ } },
                    path: /[\s\S]+/,
                },
            },
            "function-name": { pattern: /\b[A-Z]\w*(?=\()/i, alias: "keyword" },
            range: {
                pattern: /\$?\b(?:[A-Z]+\$?\d+:\$?[A-Z]+\$?\d+|[A-Z]+:\$?[A-Z]+|\d+:\$?\d+)\b/i,
                alias: "property",
                inside: { operator: /:/, cell: /\$?[A-Z]+\$?\d+/i, column: /\$?[A-Z]+/i, row: /\$?\d+/ },
            },
            cell: { pattern: /\b[A-Z]+\d+\b|\$[A-Za-z]+\$?\d+\b|\b[A-Za-z]+\$\d+\b/, alias: "property" },
            number: /(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?\b/i,
            boolean: /\b(?:FALSE|TRUE)\b/i,
            operator: /[-+*/^%=&,]|<[=>]?|>=?/,
            punctuation: /[[\]();{}|]/,
        }),
            (t.languages.xlsx = t.languages.xls = t.languages["excel-formula"]);
    }
    return Nc;
}
var _c, hv;
function U8() {
    if (hv) return _c;
    (hv = 1), (_c = e), (e.displayName = "factor"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = { function: /\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\?{2,}|!{2,})\b/ },
                a = { number: /\\[^\s']|%\w/ },
                i = {
                    comment: [
                        { pattern: /(^|\s)(?:! .*|!$)/, lookbehind: !0, inside: r },
                        { pattern: /(^|\s)\/\*\s[\s\S]*?\*\/(?=\s|$)/, lookbehind: !0, greedy: !0, inside: r },
                        { pattern: /(^|\s)!\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/, lookbehind: !0, greedy: !0, inside: r },
                    ],
                    number: [
                        { pattern: /(^|\s)[+-]?\d+(?=\s|$)/, lookbehind: !0 },
                        { pattern: /(^|\s)[+-]?0(?:b[01]+|o[0-7]+|d\d+|x[\dA-F]+)(?=\s|$)/i, lookbehind: !0 },
                        { pattern: /(^|\s)[+-]?\d+\/\d+\.?(?=\s|$)/, lookbehind: !0 },
                        { pattern: /(^|\s)\+?\d+\+\d+\/\d+(?=\s|$)/, lookbehind: !0 },
                        { pattern: /(^|\s)-\d+-\d+\/\d+(?=\s|$)/, lookbehind: !0 },
                        { pattern: /(^|\s)[+-]?(?:\d*\.\d+|\d+\.\d*|\d+)(?:e[+-]?\d+)?(?=\s|$)/i, lookbehind: !0 },
                        { pattern: /(^|\s)NAN:\s+[\da-fA-F]+(?=\s|$)/, lookbehind: !0 },
                        { pattern: /(^|\s)[+-]?0(?:b1\.[01]*|o1\.[0-7]*|d1\.\d*|x1\.[\dA-F]*)p\d+(?=\s|$)/i, lookbehind: !0 },
                    ],
                    regexp: {
                        pattern: /(^|\s)R\/\s(?:\\\S|[^\\/])*\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\s|$)/,
                        lookbehind: !0,
                        alias: "number",
                        inside: { variable: /\\\S/, keyword: /[+?*\[\]^$(){}.|]/, operator: { pattern: /(\/)[idmsr]+(?:-[idmsr]+)?/, lookbehind: !0 } },
                    },
                    boolean: { pattern: /(^|\s)[tf](?=\s|$)/, lookbehind: !0 },
                    "custom-string": {
                        pattern: /(^|\s)[A-Z0-9\-]+"\s(?:\\\S|[^"\\])*"/,
                        lookbehind: !0,
                        greedy: !0,
                        alias: "string",
                        inside: { number: /\\\S|%\w|\// },
                    },
                    "multiline-string": [
                        {
                            pattern: /(^|\s)STRING:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*;(?=\s|$)/,
                            lookbehind: !0,
                            greedy: !0,
                            alias: "string",
                            inside: { number: a.number, "semicolon-or-setlocal": { pattern: /([\r\n][ \t]*);(?=\s|$)/, lookbehind: !0, alias: "function" } },
                        },
                        { pattern: /(^|\s)HEREDOC:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*\S+(?=\s|$)/, lookbehind: !0, greedy: !0, alias: "string", inside: a },
                        { pattern: /(^|\s)\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/, lookbehind: !0, greedy: !0, alias: "string", inside: a },
                    ],
                    "special-using": {
                        pattern: /(^|\s)USING:(?:\s\S+)*(?=\s+;(?:\s|$))/,
                        lookbehind: !0,
                        alias: "function",
                        inside: { string: { pattern: /(\s)[^:\s]+/, lookbehind: !0 } },
                    },
                    "stack-effect-delimiter": [
                        { pattern: /(^|\s)(?:call|eval|execute)?\((?=\s)/, lookbehind: !0, alias: "operator" },
                        { pattern: /(\s)--(?=\s)/, lookbehind: !0, alias: "operator" },
                        { pattern: /(\s)\)(?=\s|$)/, lookbehind: !0, alias: "operator" },
                    ],
                    combinators: { pattern: null, lookbehind: !0, alias: "keyword" },
                    "kernel-builtin": { pattern: null, lookbehind: !0, alias: "variable" },
                    "sequences-builtin": { pattern: null, lookbehind: !0, alias: "variable" },
                    "math-builtin": { pattern: null, lookbehind: !0, alias: "variable" },
                    "constructor-word": { pattern: /(^|\s)<(?!=+>|-+>)\S+>(?=\s|$)/, lookbehind: !0, alias: "keyword" },
                    "other-builtin-syntax": { pattern: null, lookbehind: !0, alias: "operator" },
                    "conventionally-named-word": {
                        pattern:
                            /(^|\s)(?!")(?:(?:change|new|set|with)-\S+|\$\S+|>[^>\s]+|[^:>\s]+>|[^>\s]+>[^>\s]+|\+[^+\s]+\+|[^?\s]+\?|\?[^?\s]+|[^>\s]+>>|>>[^>\s]+|[^<\s]+<<|\([^()\s]+\)|[^!\s]+!|[^*\s]\S*\*|[^.\s]\S*\.)(?=\s|$)/,
                        lookbehind: !0,
                        alias: "keyword",
                    },
                    "colon-syntax": { pattern: /(^|\s)(?:[A-Z0-9\-]+#?)?:{1,2}\s+(?:;\S+|(?!;)\S+)(?=\s|$)/, lookbehind: !0, greedy: !0, alias: "function" },
                    "semicolon-or-setlocal": { pattern: /(\s)(?:;|:>)(?=\s|$)/, lookbehind: !0, alias: "function" },
                    "curly-brace-literal-delimiter": [
                        { pattern: /(^|\s)[a-z]*\{(?=\s)/i, lookbehind: !0, alias: "operator" },
                        { pattern: /(\s)\}(?=\s|$)/, lookbehind: !0, alias: "operator" },
                    ],
                    "quotation-delimiter": [
                        { pattern: /(^|\s)\[(?=\s)/, lookbehind: !0, alias: "operator" },
                        { pattern: /(\s)\](?=\s|$)/, lookbehind: !0, alias: "operator" },
                    ],
                    "normal-word": { pattern: /(^|\s)[^"\s]\S*(?=\s|$)/, lookbehind: !0 },
                    string: { pattern: /"(?:\\\S|[^"\\])*"/, greedy: !0, inside: a },
                },
                o = function (c) {
                    return (c + "").replace(/([.?*+\^$\[\]\\(){}|\-])/g, "\\$1");
                },
                l = function (c) {
                    return new RegExp("(^|\\s)(?:" + c.map(o).join("|") + ")(?=\\s|$)");
                },
                s = {
                    "kernel-builtin": [
                        "or",
                        "2nipd",
                        "4drop",
                        "tuck",
                        "wrapper",
                        "nip",
                        "wrapper?",
                        "callstack>array",
                        "die",
                        "dupd",
                        "callstack",
                        "callstack?",
                        "3dup",
                        "hashcode",
                        "pick",
                        "4nip",
                        "build",
                        ">boolean",
                        "nipd",
                        "clone",
                        "5nip",
                        "eq?",
                        "?",
                        "=",
                        "swapd",
                        "2over",
                        "clear",
                        "2dup",
                        "get-retainstack",
                        "not",
                        "tuple?",
                        "dup",
                        "3nipd",
                        "call",
                        "-rotd",
                        "object",
                        "drop",
                        "assert=",
                        "assert?",
                        "-rot",
                        "execute",
                        "boa",
                        "get-callstack",
                        "curried?",
                        "3drop",
                        "pickd",
                        "overd",
                        "over",
                        "roll",
                        "3nip",
                        "swap",
                        "and",
                        "2nip",
                        "rotd",
                        "throw",
                        "(clone)",
                        "hashcode*",
                        "spin",
                        "reach",
                        "4dup",
                        "equal?",
                        "get-datastack",
                        "assert",
                        "2drop",
                        "<wrapper>",
                        "boolean?",
                        "identity-hashcode",
                        "identity-tuple?",
                        "null",
                        "composed?",
                        "new",
                        "5drop",
                        "rot",
                        "-roll",
                        "xor",
                        "identity-tuple",
                        "boolean",
                    ],
                    "other-builtin-syntax": [
                        "=======",
                        "recursive",
                        "flushable",
                        ">>",
                        "<<<<<<",
                        "M\\",
                        "B",
                        "PRIVATE>",
                        "\\",
                        "======",
                        "final",
                        "inline",
                        "delimiter",
                        "deprecated",
                        "<PRIVATE",
                        ">>>>>>",
                        "<<<<<<<",
                        "parse-complex",
                        "malformed-complex",
                        "read-only",
                        ">>>>>>>",
                        "call-next-method",
                        "<<",
                        "foldable",
                        "$",
                        "$[",
                        "${",
                    ],
                    "sequences-builtin": [
                        "member-eq?",
                        "mismatch",
                        "append",
                        "assert-sequence=",
                        "longer",
                        "repetition",
                        "clone-like",
                        "3sequence",
                        "assert-sequence?",
                        "last-index-from",
                        "reversed",
                        "index-from",
                        "cut*",
                        "pad-tail",
                        "join-as",
                        "remove-eq!",
                        "concat-as",
                        "but-last",
                        "snip",
                        "nths",
                        "nth",
                        "sequence",
                        "longest",
                        "slice?",
                        "<slice>",
                        "remove-nth",
                        "tail-slice",
                        "empty?",
                        "tail*",
                        "member?",
                        "virtual-sequence?",
                        "set-length",
                        "drop-prefix",
                        "iota",
                        "unclip",
                        "bounds-error?",
                        "unclip-last-slice",
                        "non-negative-integer-expected",
                        "non-negative-integer-expected?",
                        "midpoint@",
                        "longer?",
                        "?set-nth",
                        "?first",
                        "rest-slice",
                        "prepend-as",
                        "prepend",
                        "fourth",
                        "sift",
                        "subseq-start",
                        "new-sequence",
                        "?last",
                        "like",
                        "first4",
                        "1sequence",
                        "reverse",
                        "slice",
                        "virtual@",
                        "repetition?",
                        "set-last",
                        "index",
                        "4sequence",
                        "max-length",
                        "set-second",
                        "immutable-sequence",
                        "first2",
                        "first3",
                        "supremum",
                        "unclip-slice",
                        "suffix!",
                        "insert-nth",
                        "tail",
                        "3append",
                        "short",
                        "suffix",
                        "concat",
                        "flip",
                        "immutable?",
                        "reverse!",
                        "2sequence",
                        "sum",
                        "delete-all",
                        "indices",
                        "snip-slice",
                        "<iota>",
                        "check-slice",
                        "sequence?",
                        "head",
                        "append-as",
                        "halves",
                        "sequence=",
                        "collapse-slice",
                        "?second",
                        "slice-error?",
                        "product",
                        "bounds-check?",
                        "bounds-check",
                        "immutable",
                        "virtual-exemplar",
                        "harvest",
                        "remove",
                        "pad-head",
                        "last",
                        "set-fourth",
                        "cartesian-product",
                        "remove-eq",
                        "shorten",
                        "shorter",
                        "reversed?",
                        "shorter?",
                        "shortest",
                        "head-slice",
                        "pop*",
                        "tail-slice*",
                        "but-last-slice",
                        "iota?",
                        "append!",
                        "cut-slice",
                        "new-resizable",
                        "head-slice*",
                        "sequence-hashcode",
                        "pop",
                        "set-nth",
                        "?nth",
                        "second",
                        "join",
                        "immutable-sequence?",
                        "<reversed>",
                        "3append-as",
                        "virtual-sequence",
                        "subseq?",
                        "remove-nth!",
                        "length",
                        "last-index",
                        "lengthen",
                        "assert-sequence",
                        "copy",
                        "move",
                        "third",
                        "first",
                        "tail?",
                        "set-first",
                        "prefix",
                        "bounds-error",
                        "<repetition>",
                        "exchange",
                        "surround",
                        "cut",
                        "min-length",
                        "set-third",
                        "push-all",
                        "head?",
                        "subseq-start-from",
                        "delete-slice",
                        "rest",
                        "sum-lengths",
                        "head*",
                        "infimum",
                        "remove!",
                        "glue",
                        "slice-error",
                        "subseq",
                        "push",
                        "replace-slice",
                        "subseq-as",
                        "unclip-last",
                    ],
                    "math-builtin": [
                        "number=",
                        "next-power-of-2",
                        "?1+",
                        "fp-special?",
                        "imaginary-part",
                        "float>bits",
                        "number?",
                        "fp-infinity?",
                        "bignum?",
                        "fp-snan?",
                        "denominator",
                        "gcd",
                        "*",
                        "+",
                        "fp-bitwise=",
                        "-",
                        "u>=",
                        "/",
                        ">=",
                        "bitand",
                        "power-of-2?",
                        "log2-expects-positive",
                        "neg?",
                        "<",
                        "log2",
                        ">",
                        "integer?",
                        "number",
                        "bits>double",
                        "2/",
                        "zero?",
                        "bits>float",
                        "float?",
                        "shift",
                        "ratio?",
                        "rect>",
                        "even?",
                        "ratio",
                        "fp-sign",
                        "bitnot",
                        ">fixnum",
                        "complex?",
                        "/i",
                        "integer>fixnum",
                        "/f",
                        "sgn",
                        ">bignum",
                        "next-float",
                        "u<",
                        "u>",
                        "mod",
                        "recip",
                        "rational",
                        ">float",
                        "2^",
                        "integer",
                        "fixnum?",
                        "neg",
                        "fixnum",
                        "sq",
                        "bignum",
                        ">rect",
                        "bit?",
                        "fp-qnan?",
                        "simple-gcd",
                        "complex",
                        "<fp-nan>",
                        "real",
                        ">fraction",
                        "double>bits",
                        "bitor",
                        "rem",
                        "fp-nan-payload",
                        "real-part",
                        "log2-expects-positive?",
                        "prev-float",
                        "align",
                        "unordered?",
                        "float",
                        "fp-nan?",
                        "abs",
                        "bitxor",
                        "integer>fixnum-strict",
                        "u<=",
                        "odd?",
                        "<=",
                        "/mod",
                        ">integer",
                        "real?",
                        "rational?",
                        "numerator",
                    ],
                };
            Object.keys(s).forEach(function (c) {
                i[c].pattern = l(s[c]);
            });
            var u = [
                "2bi",
                "while",
                "2tri",
                "bi*",
                "4dip",
                "both?",
                "same?",
                "tri@",
                "curry",
                "prepose",
                "3bi",
                "?if",
                "tri*",
                "2keep",
                "3keep",
                "curried",
                "2keepd",
                "when",
                "2bi*",
                "2tri*",
                "4keep",
                "bi@",
                "keepdd",
                "do",
                "unless*",
                "tri-curry",
                "if*",
                "loop",
                "bi-curry*",
                "when*",
                "2bi@",
                "2tri@",
                "with",
                "2with",
                "either?",
                "bi",
                "until",
                "3dip",
                "3curry",
                "tri-curry*",
                "tri-curry@",
                "bi-curry",
                "keepd",
                "compose",
                "2dip",
                "if",
                "3tri",
                "unless",
                "tuple",
                "keep",
                "2curry",
                "tri",
                "most",
                "while*",
                "dip",
                "composed",
                "bi-curry@",
                "find-last-from",
                "trim-head-slice",
                "map-as",
                "each-from",
                "none?",
                "trim-tail",
                "partition",
                "if-empty",
                "accumulate*",
                "reject!",
                "find-from",
                "accumulate-as",
                "collector-for-as",
                "reject",
                "map",
                "map-sum",
                "accumulate!",
                "2each-from",
                "follow",
                "supremum-by",
                "map!",
                "unless-empty",
                "collector",
                "padding",
                "reduce-index",
                "replicate-as",
                "infimum-by",
                "trim-tail-slice",
                "count",
                "find-index",
                "filter",
                "accumulate*!",
                "reject-as",
                "map-integers",
                "map-find",
                "reduce",
                "selector",
                "interleave",
                "2map",
                "filter-as",
                "binary-reduce",
                "map-index-as",
                "find",
                "produce",
                "filter!",
                "replicate",
                "cartesian-map",
                "cartesian-each",
                "find-index-from",
                "map-find-last",
                "3map-as",
                "3map",
                "find-last",
                "selector-as",
                "2map-as",
                "2map-reduce",
                "accumulate",
                "each",
                "each-index",
                "accumulate*-as",
                "when-empty",
                "all?",
                "collector-as",
                "push-either",
                "new-like",
                "collector-for",
                "2selector",
                "push-if",
                "2all?",
                "map-reduce",
                "3each",
                "any?",
                "trim-slice",
                "2reduce",
                "change-nth",
                "produce-as",
                "2each",
                "trim",
                "trim-head",
                "cartesian-find",
                "map-index",
                "if-zero",
                "each-integer",
                "unless-zero",
                "(find-integer)",
                "when-zero",
                "find-last-integer",
                "(all-integers?)",
                "times",
                "(each-integer)",
                "find-integer",
                "all-integers?",
                "unless-negative",
                "if-positive",
                "when-positive",
                "when-negative",
                "unless-positive",
                "if-negative",
                "case",
                "2cleave",
                "cond>quot",
                "case>quot",
                "3cleave",
                "wrong-values",
                "to-fixed-point",
                "alist>quot",
                "cond",
                "cleave",
                "call-effect",
                "recursive-hashcode",
                "spread",
                "deep-spread>quot",
                "2||",
                "0||",
                "n||",
                "0&&",
                "2&&",
                "3||",
                "1||",
                "1&&",
                "n&&",
                "3&&",
                "smart-unless*",
                "keep-inputs",
                "reduce-outputs",
                "smart-when*",
                "cleave>array",
                "smart-with",
                "smart-apply",
                "smart-if",
                "inputs/outputs",
                "output>sequence-n",
                "map-outputs",
                "map-reduce-outputs",
                "dropping",
                "output>array",
                "smart-map-reduce",
                "smart-2map-reduce",
                "output>array-n",
                "nullary",
                "input<sequence",
                "append-outputs",
                "drop-inputs",
                "inputs",
                "smart-2reduce",
                "drop-outputs",
                "smart-reduce",
                "preserving",
                "smart-when",
                "outputs",
                "append-outputs-as",
                "smart-unless",
                "smart-if*",
                "sum-outputs",
                "input<sequence-unsafe",
                "output>sequence",
            ];
            (i.combinators.pattern = l(u)), (n.languages.factor = i);
        })(t);
    }
    return _c;
}
var Cc, gv;
function z8() {
    if (gv) return Cc;
    (gv = 1), (Cc = e), (e.displayName = "$false"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.false = {
                comment: { pattern: /\{[^}]*\}/ },
                string: { pattern: /"[^"]*"/, greedy: !0 },
                "character-code": { pattern: /'(?:[^\r]|\r\n?)/, alias: "number" },
                "assembler-code": { pattern: /\d+`/, alias: "important" },
                number: /\d+/,
                operator: /[-!#$%&'*+,./:;=>?@\\^_`|~ßø]/,
                punctuation: /\[|\]/,
                variable: /[a-z]/,
                "non-standard": { pattern: /[()<BDO®]/, alias: "bold" },
            };
        })(t);
    }
    return Cc;
}
var Oc, bv;
function $8() {
    if (bv) return Oc;
    (bv = 1), (Oc = e), (e.displayName = "firestoreSecurityRules"), (e.aliases = []);
    function e(t) {
        (t.languages["firestore-security-rules"] = t.languages.extend("clike", {
            comment: /\/\/.*/,
            keyword: /\b(?:allow|function|if|match|null|return|rules_version|service)\b/,
            operator: /&&|\|\||[<>!=]=?|[-+*/%]|\b(?:in|is)\b/,
        })),
            delete t.languages["firestore-security-rules"]["class-name"],
            t.languages.insertBefore("firestore-security-rules", "keyword", {
                path: {
                    pattern: /(^|[\s(),])(?:\/(?:[\w\xA0-\uFFFF]+|\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)))+/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        variable: {
                            pattern: /\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)/,
                            inside: { operator: /=/, keyword: /\*\*/, punctuation: /[.$(){}]/ },
                        },
                        punctuation: /\//,
                    },
                },
                method: { pattern: /(\ballow\s+)[a-z]+(?:\s*,\s*[a-z]+)*(?=\s*[:;])/, lookbehind: !0, alias: "builtin", inside: { punctuation: /,/ } },
            });
    }
    return Oc;
}
var Lc, yv;
function q8() {
    if (yv) return Lc;
    (yv = 1), (Lc = e), (e.displayName = "flow"), (e.aliases = []);
    function e(t) {
        (function (n) {
            (n.languages.flow = n.languages.extend("javascript", {})),
                n.languages.insertBefore("flow", "keyword", {
                    type: [{ pattern: /\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\b/, alias: "tag" }],
                }),
                (n.languages.flow["function-variable"].pattern =
                    /(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/i),
                delete n.languages.flow.parameter,
                n.languages.insertBefore("flow", "operator", { "flow-punctuation": { pattern: /\{\||\|\}/, alias: "punctuation" } }),
                Array.isArray(n.languages.flow.keyword) || (n.languages.flow.keyword = [n.languages.flow.keyword]),
                n.languages.flow.keyword.unshift(
                    { pattern: /(^|[^$]\b)(?:Class|declare|opaque|type)\b(?!\$)/, lookbehind: !0 },
                    { pattern: /(^|[^$]\B)\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\b(?!\$)/, lookbehind: !0 },
                );
        })(t);
    }
    return Lc;
}
var Dc, vv;
function G8() {
    if (vv) return Dc;
    (vv = 1), (Dc = e), (e.displayName = "fortran"), (e.aliases = []);
    function e(t) {
        t.languages.fortran = {
            "quoted-number": { pattern: /[BOZ](['"])[A-F0-9]+\1/i, alias: "number" },
            string: {
                pattern: /(?:\b\w+_)?(['"])(?:\1\1|&(?:\r\n?|\n)(?:[ \t]*!.*(?:\r\n?|\n)|(?![ \t]*!))|(?!\1).)*(?:\1|&)/,
                inside: { comment: { pattern: /(&(?:\r\n?|\n)\s*)!.*/, lookbehind: !0 } },
            },
            comment: { pattern: /!.*/, greedy: !0 },
            boolean: /\.(?:FALSE|TRUE)\.(?:_\w+)?/i,
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[ED][+-]?\d+)?(?:_\w+)?/i,
            keyword: [
                /\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\b/i,
                /\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\b/i,
                /\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\b/i,
                /\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\b/i,
            ],
            operator: [/\*\*|\/\/|=>|[=\/]=|[<>]=?|::|[+\-*=%]|\.[A-Z]+\./i, { pattern: /(^|(?!\().)\/(?!\))/, lookbehind: !0 }],
            punctuation: /\(\/|\/\)|[(),;:&]/,
        };
    }
    return Dc;
}
var Mc, Ev;
function H8() {
    if (Ev) return Mc;
    (Ev = 1), (Mc = e), (e.displayName = "fsharp"), (e.aliases = []);
    function e(t) {
        (t.languages.fsharp = t.languages.extend("clike", {
            comment: [
                { pattern: /(^|[^\\])\(\*(?!\))[\s\S]*?\*\)/, lookbehind: !0, greedy: !0 },
                { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 },
            ],
            string: { pattern: /(?:"""[\s\S]*?"""|@"(?:""|[^"])*"|"(?:\\[\s\S]|[^\\"])*")B?/, greedy: !0 },
            "class-name": {
                pattern: /(\b(?:exception|inherit|interface|new|of|type)\s+|\w\s*:\s*|\s:\??>\s*)[.\w]+\b(?:\s*(?:->|\*)\s*[.\w]+\b)*(?!\s*[:.])/,
                lookbehind: !0,
                inside: { operator: /->|\*/, punctuation: /\./ },
            },
            keyword:
                /\b(?:let|return|use|yield)(?:!\B|\b)|\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\b/,
            number: [
                /\b0x[\da-fA-F]+(?:LF|lf|un)?\b/,
                /\b0b[01]+(?:uy|y)?\b/,
                /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[fm]|e[+-]?\d+)?\b/i,
                /\b\d+(?:[IlLsy]|UL|u[lsy]?)?\b/,
            ],
            operator: /([<>~&^])\1\1|([*.:<>&])\2|<-|->|[!=:]=|<?\|{1,3}>?|\??(?:<=|>=|<>|[-+*/%=<>])\??|[!?^&]|~[+~-]|:>|:\?>?/,
        })),
            t.languages.insertBefore("fsharp", "keyword", {
                preprocessor: {
                    pattern: /(^[\t ]*)#.*/m,
                    lookbehind: !0,
                    alias: "property",
                    inside: { directive: { pattern: /(^#)\b(?:else|endif|if|light|line|nowarn)\b/, lookbehind: !0, alias: "keyword" } },
                },
            }),
            t.languages.insertBefore("fsharp", "punctuation", { "computation-expression": { pattern: /\b[_a-z]\w*(?=\s*\{)/i, alias: "keyword" } }),
            t.languages.insertBefore("fsharp", "string", {
                annotation: {
                    pattern: /\[<.+?>\]/,
                    greedy: !0,
                    inside: {
                        punctuation: /^\[<|>\]$/,
                        "class-name": { pattern: /^\w+$|(^|;\s*)[A-Z]\w*(?=\()/, lookbehind: !0 },
                        "annotation-content": { pattern: /[\s\S]+/, inside: t.languages.fsharp },
                    },
                },
                char: { pattern: /'(?:[^\\']|\\(?:.|\d{3}|x[a-fA-F\d]{2}|u[a-fA-F\d]{4}|U[a-fA-F\d]{8}))'B?/, greedy: !0 },
            });
    }
    return Mc;
}
var Fc, Sv;
function j8() {
    if (Sv) return Fc;
    Sv = 1;
    var e = Ct();
    (Fc = t), (t.displayName = "ftl"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                for (var a = /[^<()"']|\((?:<expr>)*\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|"(?:[^\\"]|\\.)*"|'(?:[^\\']|\\.)*'/.source, i = 0; i < 2; i++)
                    a = a.replace(/<expr>/g, function () {
                        return a;
                    });
                a = a.replace(/<expr>/g, /[^\s\S]/.source);
                var o = {
                    comment: /<#--[\s\S]*?-->/,
                    string: [
                        { pattern: /\br("|')(?:(?!\1)[^\\]|\\.)*\1/, greedy: !0 },
                        {
                            pattern: RegExp(
                                /("|')(?:(?!\1|\$\{)[^\\]|\\.|\$\{(?:(?!\})(?:<expr>))*\})*\1/.source.replace(/<expr>/g, function () {
                                    return a;
                                }),
                            ),
                            greedy: !0,
                            inside: {
                                interpolation: {
                                    pattern: RegExp(
                                        /((?:^|[^\\])(?:\\\\)*)\$\{(?:(?!\})(?:<expr>))*\}/.source.replace(/<expr>/g, function () {
                                            return a;
                                        }),
                                    ),
                                    lookbehind: !0,
                                    inside: { "interpolation-punctuation": { pattern: /^\$\{|\}$/, alias: "punctuation" }, rest: null },
                                },
                            },
                        },
                    ],
                    keyword: /\b(?:as)\b/,
                    boolean: /\b(?:false|true)\b/,
                    "builtin-function": { pattern: /((?:^|[^?])\?\s*)\w+/, lookbehind: !0, alias: "function" },
                    function: /\b\w+(?=\s*\()/,
                    number: /\b\d+(?:\.\d+)?\b/,
                    operator: /\.\.[<*!]?|->|--|\+\+|&&|\|\||\?{1,2}|[-+*/%!=<>]=?|\b(?:gt|gte|lt|lte)\b/,
                    punctuation: /[,;.:()[\]{}]/,
                };
                (o.string[1].inside.interpolation.inside.rest = o),
                    (r.languages.ftl = {
                        "ftl-comment": { pattern: /^<#--[\s\S]*/, alias: "comment" },
                        "ftl-directive": {
                            pattern: /^<[\s\S]+>$/,
                            inside: {
                                directive: { pattern: /(^<\/?)[#@][a-z]\w*/i, lookbehind: !0, alias: "keyword" },
                                punctuation: /^<\/?|\/?>$/,
                                content: { pattern: /\s*\S[\s\S]*/, alias: "ftl", inside: o },
                            },
                        },
                        "ftl-interpolation": {
                            pattern: /^\$\{[\s\S]*\}$/,
                            inside: { punctuation: /^\$\{|\}$/, content: { pattern: /\s*\S[\s\S]*/, alias: "ftl", inside: o } },
                        },
                    }),
                    r.hooks.add("before-tokenize", function (l) {
                        var s = RegExp(
                            /<#--[\s\S]*?-->|<\/?[#@][a-zA-Z](?:<expr>)*?>|\$\{(?:<expr>)*?\}/.source.replace(/<expr>/g, function () {
                                return a;
                            }),
                            "gi",
                        );
                        r.languages["markup-templating"].buildPlaceholders(l, "ftl", s);
                    }),
                    r.hooks.add("after-tokenize", function (l) {
                        r.languages["markup-templating"].tokenizePlaceholders(l, "ftl");
                    });
            })(n);
    }
    return Fc;
}
var Pc, wv;
function V8() {
    if (wv) return Pc;
    (wv = 1), (Pc = e), (e.displayName = "gap"), (e.aliases = []);
    function e(t) {
        (t.languages.gap = {
            shell: {
                pattern: /^gap>[\s\S]*?(?=^gap>|$(?![\s\S]))/m,
                greedy: !0,
                inside: { gap: { pattern: /^(gap>).+(?:(?:\r(?:\n|(?!\n))|\n)>.*)*/, lookbehind: !0, inside: null }, punctuation: /^gap>/ },
            },
            comment: { pattern: /#.*/, greedy: !0 },
            string: {
                pattern: /(^|[^\\'"])(?:'(?:[^\r\n\\']|\\.){1,10}'|"(?:[^\r\n\\"]|\\.)*"(?!")|"""[\s\S]*?""")/,
                lookbehind: !0,
                greedy: !0,
                inside: { continuation: { pattern: /([\r\n])>/, lookbehind: !0, alias: "punctuation" } },
            },
            keyword:
                /\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\b/,
            boolean: /\b(?:false|true)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            number: { pattern: /(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/, lookbehind: !0 },
            continuation: { pattern: /([\r\n])>/, lookbehind: !0, alias: "punctuation" },
            operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\.\./,
            punctuation: /[()[\]{},;.:]/,
        }),
            (t.languages.gap.shell.inside.gap.inside = t.languages.gap);
    }
    return Pc;
}
var Bc, kv;
function W8() {
    if (kv) return Bc;
    (kv = 1), (Bc = e), (e.displayName = "gcode"), (e.aliases = []);
    function e(t) {
        t.languages.gcode = {
            comment: /;.*|\B\(.*?\)\B/,
            string: { pattern: /"(?:""|[^"])*"/, greedy: !0 },
            keyword: /\b[GM]\d+(?:\.\d+)?\b/,
            property: /\b[A-Z]/,
            checksum: { pattern: /(\*)\d+/, lookbehind: !0, alias: "number" },
            punctuation: /[:*]/,
        };
    }
    return Bc;
}
var Uc, Tv;
function Y8() {
    if (Tv) return Uc;
    (Tv = 1), (Uc = e), (e.displayName = "gdscript"), (e.aliases = []);
    function e(t) {
        t.languages.gdscript = {
            comment: /#.*/,
            string: { pattern: /@?(?:("|')(?:(?!\1)[^\n\\]|\\[\s\S])*\1(?!"|')|"""(?:[^\\]|\\[\s\S])*?""")/, greedy: !0 },
            "class-name": {
                pattern:
                    /(^(?:class|class_name|extends)[ \t]+|^export\([ \t]*|\bas[ \t]+|(?:\b(?:const|var)[ \t]|[,(])[ \t]*\w+[ \t]*:[ \t]*|->[ \t]*)[a-zA-Z_]\w*/m,
                lookbehind: !0,
            },
            keyword:
                /\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\b/,
            function: /\b[a-z_]\w*(?=[ \t]*\()/i,
            variable: /\$\w+/,
            number: [/\b0b[01_]+\b|\b0x[\da-fA-F_]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.[\d_]+)(?:e[+-]?[\d_]+)?\b/, /\b(?:INF|NAN|PI|TAU)\b/],
            constant: /\b[A-Z][A-Z_\d]*\b/,
            boolean: /\b(?:false|true)\b/,
            operator: /->|:=|&&|\|\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,
            punctuation: /[.:,;()[\]{}]/,
        };
    }
    return Uc;
}
var zc, Av;
function K8() {
    if (Av) return zc;
    (Av = 1), (zc = e), (e.displayName = "gedcom"), (e.aliases = []);
    function e(t) {
        t.languages.gedcom = {
            "line-value": {
                pattern: /(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?\w+ ).+/m,
                lookbehind: !0,
                inside: { pointer: { pattern: /^@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@$/, alias: "variable" } },
            },
            tag: { pattern: /(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?)\w+/m, lookbehind: !0, alias: "string" },
            level: { pattern: /(^[\t ]*)\d+/m, lookbehind: !0, alias: "number" },
            pointer: { pattern: /@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@/, alias: "variable" },
        };
    }
    return zc;
}
var $c, xv;
function X8() {
    if (xv) return $c;
    (xv = 1), ($c = e), (e.displayName = "gherkin"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /(?:\r?\n|\r)[ \t]*\|.+\|(?:(?!\|).)*/.source;
            n.languages.gherkin = {
                pystring: { pattern: /("""|''')[\s\S]+?\1/, alias: "string" },
                comment: { pattern: /(^[ \t]*)#.*/m, lookbehind: !0 },
                tag: { pattern: /(^[ \t]*)@\S*/m, lookbehind: !0 },
                feature: {
                    pattern:
                        /((?:^|\r?\n|\r)[ \t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\r\n]+(?:\r?\n|\r|$))*/,
                    lookbehind: !0,
                    inside: { important: { pattern: /(:)[^\r\n]+/, lookbehind: !0 }, keyword: /[^:\r\n]+:/ },
                },
                scenario: {
                    pattern:
                        /(^[ \t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\r\n]*/m,
                    lookbehind: !0,
                    inside: { important: { pattern: /(:)[^\r\n]*/, lookbehind: !0 }, keyword: /[^:\r\n]+:/ },
                },
                "table-body": {
                    pattern: RegExp("(" + r + ")(?:" + r + ")+"),
                    lookbehind: !0,
                    inside: { outline: { pattern: /<[^>]+>/, alias: "variable" }, td: { pattern: /\s*[^\s|][^|]*/, alias: "string" }, punctuation: /\|/ },
                },
                "table-head": { pattern: RegExp(r), inside: { th: { pattern: /\s*[^\s|][^|]*/, alias: "variable" }, punctuation: /\|/ } },
                atrule: {
                    pattern:
                        /(^[ \t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \t])/m,
                    lookbehind: !0,
                },
                string: { pattern: /"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/, inside: { outline: { pattern: /<[^>]+>/, alias: "variable" } } },
                outline: { pattern: /<[^>]+>/, alias: "variable" },
            };
        })(t);
    }
    return $c;
}
var qc, Rv;
function Z8() {
    if (Rv) return qc;
    (Rv = 1), (qc = e), (e.displayName = "git"), (e.aliases = []);
    function e(t) {
        t.languages.git = {
            comment: /^#.*/m,
            deleted: /^[-–].*/m,
            inserted: /^\+.*/m,
            string: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
            command: { pattern: /^.*\$ git .*$/m, inside: { parameter: /\s--?\w+/ } },
            coord: /^@@.*@@$/m,
            "commit-sha1": /^commit \w{40}$/m,
        };
    }
    return qc;
}
var Gc, Iv;
function Q8() {
    if (Iv) return Gc;
    Iv = 1;
    var e = ra();
    (Gc = t), (t.displayName = "glsl"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.glsl = n.languages.extend("c", {
                keyword:
                    /\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\b/,
            }));
    }
    return Gc;
}
var Hc, Nv;
function J8() {
    if (Nv) return Hc;
    (Nv = 1), (Hc = e), (e.displayName = "gml"), (e.aliases = []);
    function e(t) {
        t.languages.gamemakerlanguage = t.languages.gml = t.languages.extend("clike", {
            keyword: /\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\b/,
            number: /(?:\b0x[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ulf]{0,4}/i,
            operator: /--|\+\+|[-+%/=]=?|!=|\*\*?=?|<[<=>]?|>[=>]?|&&?|\^\^?|\|\|?|~|\b(?:and|at|not|or|with|xor)\b/,
            constant:
                /\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\d|numpad\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\w+)\b/,
            variable:
                /\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\d)|argument|global|local|other|self)\b/,
        });
    }
    return Hc;
}
var jc, _v;
function e9() {
    if (_v) return jc;
    (_v = 1), (jc = e), (e.displayName = "gn"), (e.aliases = ["gni"]);
    function e(t) {
        (t.languages.gn = {
            comment: { pattern: /#.*/, greedy: !0 },
            "string-literal": {
                pattern: /(^|[^\\"])"(?:[^\r\n"\\]|\\.)*"/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\{[\s\S]*?\}|[a-zA-Z_]\w*|0x[a-fA-F0-9]{2})/,
                        lookbehind: !0,
                        inside: {
                            number: /^\$0x[\s\S]{2}$/,
                            variable: /^\$\w+$/,
                            "interpolation-punctuation": { pattern: /^\$\{|\}$/, alias: "punctuation" },
                            expression: { pattern: /[\s\S]+/, inside: null },
                        },
                    },
                    string: /[\s\S]+/,
                },
            },
            keyword: /\b(?:else|if)\b/,
            boolean: /\b(?:false|true)\b/,
            "builtin-function": { pattern: /\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\s*\()/i, alias: "keyword" },
            function: /\b[a-z_]\w*(?=\s*\()/i,
            constant:
                /\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\b/,
            number: /-?\b\d+\b/,
            operator: /[-+!=<>]=?|&&|\|\|/,
            punctuation: /[(){}[\],.]/,
        }),
            (t.languages.gn["string-literal"].inside.interpolation.inside.expression.inside = t.languages.gn),
            (t.languages.gni = t.languages.gn);
    }
    return jc;
}
var Vc, Cv;
function t9() {
    if (Cv) return Vc;
    (Cv = 1), (Vc = e), (e.displayName = "goModule"), (e.aliases = []);
    function e(t) {
        t.languages["go-mod"] = t.languages["go-module"] = {
            comment: { pattern: /\/\/.*/, greedy: !0 },
            version: { pattern: /(^|[\s()[\],])v\d+\.\d+\.\d+(?:[+-][-+.\w]*)?(?![^\s()[\],])/, lookbehind: !0, alias: "number" },
            "go-version": { pattern: /((?:^|\s)go\s+)\d+(?:\.\d+){1,2}/, lookbehind: !0, alias: "number" },
            keyword: { pattern: /^([ \t]*)(?:exclude|go|module|replace|require|retract)\b/m, lookbehind: !0 },
            operator: /=>/,
            punctuation: /[()[\],]/,
        };
    }
    return Vc;
}
var Wc, Ov;
function n9() {
    if (Ov) return Wc;
    (Ov = 1), (Wc = e), (e.displayName = "go"), (e.aliases = []);
    function e(t) {
        (t.languages.go = t.languages.extend("clike", {
            string: { pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/, lookbehind: !0, greedy: !0 },
            keyword:
                /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
            boolean: /\b(?:_|false|iota|nil|true)\b/,
            number: [
                /\b0(?:b[01_]+|o[0-7_]+)i?\b/i,
                /\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
                /(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i,
            ],
            operator: /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
            builtin:
                /\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/,
        })),
            t.languages.insertBefore("go", "string", { char: { pattern: /'(?:\\.|[^'\\\r\n]){0,10}'/, greedy: !0 } }),
            delete t.languages.go["class-name"];
    }
    return Wc;
}
var Yc, Lv;
function r9() {
    if (Lv) return Yc;
    (Lv = 1), (Yc = e), (e.displayName = "graphql"), (e.aliases = []);
    function e(t) {
        (t.languages.graphql = {
            comment: /#.*/,
            description: {
                pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,
                greedy: !0,
                alias: "string",
                inside: { "language-markdown": { pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/, lookbehind: !0, inside: t.languages.markdown } },
            },
            string: { pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/, greedy: !0 },
            number: /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
            boolean: /\b(?:false|true)\b/,
            variable: /\$[a-z_]\w*/i,
            directive: { pattern: /@[a-z_]\w*/i, alias: "function" },
            "attr-name": { pattern: /\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i, greedy: !0 },
            "atom-input": { pattern: /\b[A-Z]\w*Input\b/, alias: "class-name" },
            scalar: /\b(?:Boolean|Float|ID|Int|String)\b/,
            constant: /\b[A-Z][A-Z_\d]*\b/,
            "class-name": { pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/, lookbehind: !0 },
            fragment: { pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/, lookbehind: !0, alias: "function" },
            "definition-mutation": { pattern: /(\bmutation\s+)[a-zA-Z_]\w*/, lookbehind: !0, alias: "function" },
            "definition-query": { pattern: /(\bquery\s+)[a-zA-Z_]\w*/, lookbehind: !0, alias: "function" },
            keyword: /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,
            operator: /[!=|&]|\.{3}/,
            "property-query": /\w+(?=\s*\()/,
            object: /\w+(?=\s*\{)/,
            punctuation: /[!(){}\[\]:=,]/,
            property: /\w+/,
        }),
            t.hooks.add("after-tokenize", function (r) {
                if (r.language !== "graphql") return;
                var a = r.tokens.filter(function (y) {
                        return typeof y != "string" && y.type !== "comment" && y.type !== "scalar";
                    }),
                    i = 0;
                function o(y) {
                    return a[i + y];
                }
                function l(y, g) {
                    g = g || 0;
                    for (var v = 0; v < y.length; v++) {
                        var T = o(v + g);
                        if (!T || T.type !== y[v]) return !1;
                    }
                    return !0;
                }
                function s(y, g) {
                    for (var v = 1, T = i; T < a.length; T++) {
                        var R = a[T],
                            k = R.content;
                        if (R.type === "punctuation" && typeof k == "string") {
                            if (y.test(k)) v++;
                            else if (g.test(k) && (v--, v === 0)) return T;
                        }
                    }
                    return -1;
                }
                function u(y, g) {
                    var v = y.alias;
                    v ? Array.isArray(v) || (y.alias = v = [v]) : (y.alias = v = []), v.push(g);
                }
                for (; i < a.length; ) {
                    var c = a[i++];
                    if (c.type === "keyword" && c.content === "mutation") {
                        var d = [];
                        if (l(["definition-mutation", "punctuation"]) && o(1).content === "(") {
                            i += 2;
                            var m = s(/^\($/, /^\)$/);
                            if (m === -1) continue;
                            for (; i < m; i++) {
                                var f = o(0);
                                f.type === "variable" && (u(f, "variable-input"), d.push(f.content));
                            }
                            i = m + 1;
                        }
                        if (l(["punctuation", "property-query"]) && o(0).content === "{" && (i++, u(o(0), "property-mutation"), d.length > 0)) {
                            var b = s(/^\{$/, /^\}$/);
                            if (b === -1) continue;
                            for (var E = i; E < b; E++) {
                                var I = a[E];
                                I.type === "variable" && d.indexOf(I.content) >= 0 && u(I, "variable-input");
                            }
                        }
                    }
                }
            });
    }
    return Yc;
}
var Kc, Dv;
function a9() {
    if (Dv) return Kc;
    (Dv = 1), (Kc = e), (e.displayName = "groovy"), (e.aliases = []);
    function e(t) {
        (t.languages.groovy = t.languages.extend("clike", {
            string: [
                { pattern: /("""|''')(?:[^\\]|\\[\s\S])*?\1|\$\/(?:[^/$]|\$(?:[/$]|(?![/$]))|\/(?!\$))*\/\$/, greedy: !0 },
                { pattern: /(["'/])(?:\\.|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            ],
            keyword:
                /\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\b/,
            number: /\b(?:0b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?)[glidf]?\b/i,
            operator: {
                pattern:
                    /(^|[^.])(?:~|==?~?|\?[.:]?|\*(?:[.=]|\*=?)?|\.[@&]|\.\.<|\.\.(?!\.)|-[-=>]?|\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\|[|=]?|\/=?|\^=?|%=?)/,
                lookbehind: !0,
            },
            punctuation: /\.+|[{}[\];(),:$]/,
        })),
            t.languages.insertBefore("groovy", "string", { shebang: { pattern: /#!.+/, alias: "comment" } }),
            t.languages.insertBefore("groovy", "punctuation", { "spock-block": /\b(?:and|cleanup|expect|given|setup|then|when|where):/ }),
            t.languages.insertBefore("groovy", "function", { annotation: { pattern: /(^|[^.])@\w+/, lookbehind: !0, alias: "punctuation" } }),
            t.hooks.add("wrap", function (n) {
                if (n.language === "groovy" && n.type === "string") {
                    var r = n.content.value[0];
                    if (r != "'") {
                        var a = /([^\\])(?:\$(?:\{.*?\}|[\w.]+))/;
                        r === "$" && (a = /([^\$])(?:\$(?:\{.*?\}|[\w.]+))/),
                            (n.content.value = n.content.value.replace(/&lt;/g, "<").replace(/&amp;/g, "&")),
                            (n.content = t.highlight(n.content.value, { expression: { pattern: a, lookbehind: !0, inside: t.languages.groovy } })),
                            n.classes.push(r === "/" ? "regex" : "gstring");
                    }
                }
            });
    }
    return Kc;
}
var Xc, Mv;
function i9() {
    if (Mv) return Xc;
    Mv = 1;
    var e = hs();
    (Xc = t), (t.displayName = "haml"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                r.languages.haml = {
                    "multiline-comment": { pattern: /((?:^|\r?\n|\r)([\t ]*))(?:\/|-#).*(?:(?:\r?\n|\r)\2[\t ].+)*/, lookbehind: !0, alias: "comment" },
                    "multiline-code": [
                        {
                            pattern: /((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*,[\t ]*(?:(?:\r?\n|\r)\2[\t ].*,[\t ]*)*(?:(?:\r?\n|\r)\2[\t ].+)/,
                            lookbehind: !0,
                            inside: r.languages.ruby,
                        },
                        {
                            pattern: /((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*\|[\t ]*(?:(?:\r?\n|\r)\2[\t ].*\|[\t ]*)*/,
                            lookbehind: !0,
                            inside: r.languages.ruby,
                        },
                    ],
                    filter: {
                        pattern: /((?:^|\r?\n|\r)([\t ]*)):[\w-]+(?:(?:\r?\n|\r)(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/,
                        lookbehind: !0,
                        inside: { "filter-name": { pattern: /^:[\w-]+/, alias: "symbol" } },
                    },
                    markup: { pattern: /((?:^|\r?\n|\r)[\t ]*)<.+/, lookbehind: !0, inside: r.languages.markup },
                    doctype: { pattern: /((?:^|\r?\n|\r)[\t ]*)!!!(?: .+)?/, lookbehind: !0 },
                    tag: {
                        pattern: /((?:^|\r?\n|\r)[\t ]*)[%.#][\w\-#.]*[\w\-](?:\([^)]+\)|\{(?:\{[^}]+\}|[^{}])+\}|\[[^\]]+\])*[\/<>]*/,
                        lookbehind: !0,
                        inside: {
                            attributes: [
                                { pattern: /(^|[^#])\{(?:\{[^}]+\}|[^{}])+\}/, lookbehind: !0, inside: r.languages.ruby },
                                {
                                    pattern: /\([^)]+\)/,
                                    inside: {
                                        "attr-value": { pattern: /(=\s*)(?:"(?:\\.|[^\\"\r\n])*"|[^)\s]+)/, lookbehind: !0 },
                                        "attr-name": /[\w:-]+(?=\s*!?=|\s*[,)])/,
                                        punctuation: /[=(),]/,
                                    },
                                },
                                { pattern: /\[[^\]]+\]/, inside: r.languages.ruby },
                            ],
                            punctuation: /[<>]/,
                        },
                    },
                    code: { pattern: /((?:^|\r?\n|\r)[\t ]*(?:[~-]|[&!]?=)).+/, lookbehind: !0, inside: r.languages.ruby },
                    interpolation: {
                        pattern: /#\{[^}]+\}/,
                        inside: { delimiter: { pattern: /^#\{|\}$/, alias: "punctuation" }, ruby: { pattern: /[\s\S]+/, inside: r.languages.ruby } },
                    },
                    punctuation: { pattern: /((?:^|\r?\n|\r)[\t ]*)[~=\-&!]+/, lookbehind: !0 },
                };
                for (
                    var a = "((?:^|\\r?\\n|\\r)([\\t ]*)):{{filter_name}}(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+",
                        i = ["css", { filter: "coffee", language: "coffeescript" }, "erb", "javascript", "less", "markdown", "ruby", "scss", "textile"],
                        o = {},
                        l = 0,
                        s = i.length;
                    l < s;
                    l++
                ) {
                    var u = i[l];
                    (u = typeof u == "string" ? { filter: u, language: u } : u),
                        r.languages[u.language] &&
                            (o["filter-" + u.filter] = {
                                pattern: RegExp(
                                    a.replace("{{filter_name}}", function () {
                                        return u.filter;
                                    }),
                                ),
                                lookbehind: !0,
                                inside: {
                                    "filter-name": { pattern: /^:[\w-]+/, alias: "symbol" },
                                    text: { pattern: /[\s\S]+/, alias: [u.language, "language-" + u.language], inside: r.languages[u.language] },
                                },
                            });
                }
                r.languages.insertBefore("haml", "filter", o);
            })(n);
    }
    return Xc;
}
var Zc, Fv;
function o9() {
    if (Fv) return Zc;
    Fv = 1;
    var e = Ct();
    (Zc = t), (t.displayName = "handlebars"), (t.aliases = ["hbs"]);
    function t(n) {
        n.register(e),
            (function (r) {
                (r.languages.handlebars = {
                    comment: /\{\{![\s\S]*?\}\}/,
                    delimiter: { pattern: /^\{\{\{?|\}\}\}?$/, alias: "punctuation" },
                    string: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
                    number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,
                    boolean: /\b(?:false|true)\b/,
                    block: { pattern: /^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/, lookbehind: !0, alias: "keyword" },
                    brackets: { pattern: /\[[^\]]+\]/, inside: { punctuation: /\[|\]/, variable: /[\s\S]+/ } },
                    punctuation: /[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,
                    variable: /[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/,
                }),
                    r.hooks.add("before-tokenize", function (a) {
                        var i = /\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;
                        r.languages["markup-templating"].buildPlaceholders(a, "handlebars", i);
                    }),
                    r.hooks.add("after-tokenize", function (a) {
                        r.languages["markup-templating"].tokenizePlaceholders(a, "handlebars");
                    }),
                    (r.languages.hbs = r.languages.handlebars);
            })(n);
    }
    return Zc;
}
var Qc, Pv;
function Rg() {
    if (Pv) return Qc;
    (Pv = 1), (Qc = e), (e.displayName = "haskell"), (e.aliases = ["hs"]);
    function e(t) {
        (t.languages.haskell = {
            comment: { pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\/].*|$)|\{-[\s\S]*?-\})/m, lookbehind: !0 },
            char: {
                pattern:
                    /'(?:[^\\']|\\(?:[abfnrtv\\"'&]|\^[A-Z@[\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\d+|o[0-7]+|x[0-9a-fA-F]+))'/,
                alias: "string",
            },
            string: { pattern: /"(?:[^\\"]|\\(?:\S|\s+\\))*"/, greedy: !0 },
            keyword: /\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b/,
            "import-statement": {
                pattern: /(^[\t ]*)import\s+(?:qualified\s+)?(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*(?:\s+as\s+(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
                lookbehind: !0,
                inside: { keyword: /\b(?:as|hiding|import|qualified)\b/, punctuation: /\./ },
            },
            builtin:
                /\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\b/,
            number: /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0o[0-7]+|0x[0-9a-f]+)\b/i,
            operator: [
                { pattern: /`(?:[A-Z][\w']*\.)*[_a-z][\w']*`/, greedy: !0 },
                { pattern: /(\s)\.(?=\s)/, lookbehind: !0 },
                /[-!#$%*+=?&@|~:<>^\\\/][-!#$%*+=?&@|~.:<>^\\\/]*|\.[-!#$%*+=?&@|~.:<>^\\\/]+/,
            ],
            hvariable: { pattern: /\b(?:[A-Z][\w']*\.)*[_a-z][\w']*/, inside: { punctuation: /\./ } },
            constant: { pattern: /\b(?:[A-Z][\w']*\.)*[A-Z][\w']*/, inside: { punctuation: /\./ } },
            punctuation: /[{}[\];(),.:]/,
        }),
            (t.languages.hs = t.languages.haskell);
    }
    return Qc;
}
var Jc, Bv;
function l9() {
    if (Bv) return Jc;
    (Bv = 1), (Jc = e), (e.displayName = "haxe"), (e.aliases = []);
    function e(t) {
        (t.languages.haxe = t.languages.extend("clike", {
            string: { pattern: /"(?:[^"\\]|\\[\s\S])*"/, greedy: !0 },
            "class-name": [{ pattern: /(\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\s+)[A-Z_]\w*/, lookbehind: !0 }, /\b[A-Z]\w*/],
            keyword:
                /\bthis\b|\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\.)\b/,
            function: { pattern: /\b[a-z_]\w*(?=\s*(?:<[^<>]*>\s*)?\()/i, greedy: !0 },
            operator: /\.{3}|\+\+|--|&&|\|\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/,
        })),
            t.languages.insertBefore("haxe", "string", {
                "string-interpolation": {
                    pattern: /'(?:[^'\\]|\\[\s\S])*'/,
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /(^|[^\\])\$(?:\w+|\{[^{}]+\})/,
                            lookbehind: !0,
                            inside: {
                                "interpolation-punctuation": { pattern: /^\$\{?|\}$/, alias: "punctuation" },
                                expression: { pattern: /[\s\S]+/, inside: t.languages.haxe },
                            },
                        },
                        string: /[\s\S]+/,
                    },
                },
            }),
            t.languages.insertBefore("haxe", "class-name", {
                regex: {
                    pattern: /~\/(?:[^\/\\\r\n]|\\.)+\/[a-z]*/,
                    greedy: !0,
                    inside: {
                        "regex-flags": /\b[a-z]+$/,
                        "regex-source": { pattern: /^(~\/)[\s\S]+(?=\/$)/, lookbehind: !0, alias: "language-regex", inside: t.languages.regex },
                        "regex-delimiter": /^~\/|\/$/,
                    },
                },
            }),
            t.languages.insertBefore("haxe", "keyword", {
                preprocessor: { pattern: /#(?:else|elseif|end|if)\b.*/, alias: "property" },
                metadata: { pattern: /@:?[\w.]+/, alias: "symbol" },
                reification: { pattern: /\$(?:\w+|(?=\{))/, alias: "important" },
            });
    }
    return Jc;
}
var ed, Uv;
function s9() {
    if (Uv) return ed;
    (Uv = 1), (ed = e), (e.displayName = "hcl"), (e.aliases = []);
    function e(t) {
        t.languages.hcl = {
            comment: /(?:\/\/|#).*|\/\*[\s\S]*?(?:\*\/|$)/,
            heredoc: { pattern: /<<-?(\w+\b)[\s\S]*?^[ \t]*\1/m, greedy: !0, alias: "string" },
            keyword: [
                {
                    pattern: /(?:data|resource)\s+(?:"(?:\\[\s\S]|[^\\"])*")(?=\s+"[\w-]+"\s+\{)/i,
                    inside: { type: { pattern: /(resource|data|\s+)(?:"(?:\\[\s\S]|[^\\"])*")/i, lookbehind: !0, alias: "variable" } },
                },
                {
                    pattern: /(?:backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+(?=\{)/i,
                    inside: {
                        type: {
                            pattern: /(backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+/i,
                            lookbehind: !0,
                            alias: "variable",
                        },
                    },
                },
                /[\w-]+(?=\s+\{)/,
            ],
            property: [/[-\w\.]+(?=\s*=(?!=))/, /"(?:\\[\s\S]|[^\\"])+"(?=\s*[:=])/],
            string: {
                pattern: /"(?:[^\\$"]|\\[\s\S]|\$(?:(?=")|\$+(?!\$)|[^"${])|\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\})*"/,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /(^|[^$])\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\}/,
                        lookbehind: !0,
                        inside: {
                            type: { pattern: /(\b(?:count|data|local|module|path|self|terraform|var)\b\.)[\w\*]+/i, lookbehind: !0, alias: "variable" },
                            keyword: /\b(?:count|data|local|module|path|self|terraform|var)\b/i,
                            function: /\w+(?=\()/,
                            string: { pattern: /"(?:\\[\s\S]|[^\\"])*"/, greedy: !0 },
                            number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
                            punctuation: /[!\$#%&'()*+,.\/;<=>@\[\\\]^`{|}~?:]/,
                        },
                    },
                },
            },
            number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
            boolean: /\b(?:false|true)\b/i,
            punctuation: /[=\[\]{}]/,
        };
    }
    return ed;
}
var td, zv;
function u9() {
    if (zv) return td;
    zv = 1;
    var e = ra();
    (td = t), (t.displayName = "hlsl"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.hlsl = n.languages.extend("c", {
                "class-name": [
                    n.languages.c["class-name"],
                    /\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\b/,
                ],
                keyword: [
                    /\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\b/,
                    /\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\b/,
                ],
                number: /(?:(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?|\b0x[\da-fA-F]+)[fFhHlLuU]?\b/,
                boolean: /\b(?:false|true)\b/,
            }));
    }
    return td;
}
var nd, $v;
function c9() {
    if ($v) return nd;
    ($v = 1), (nd = e), (e.displayName = "hoon"), (e.aliases = []);
    function e(t) {
        t.languages.hoon = {
            comment: { pattern: /::.*/, greedy: !0 },
            string: { pattern: /"[^"]*"|'[^']*'/, greedy: !0 },
            constant: /%(?:\.[ny]|[\w-]+)/,
            "class-name": /@(?:[a-z0-9-]*[a-z0-9])?|\*/i,
            function: /(?:\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,
            keyword:
                /\.[\^\+\*=\?]|![><:\.=\?!]|=[>|:,\.\-\^<+;/~\*\?]|\?[>|:\.\-\^<\+&~=@!]|\|[\$_%:\.\-\^~\*=@\?]|\+[|\$\+\*]|:[_\-\^\+~\*]|%[_:\.\-\^\+~\*=]|\^[|:\.\-\+&~\*=\?]|\$[|_%:<>\-\^&~@=\?]|;[:<\+;\/~\*=]|~[>|\$_%<\+\/&=\?!]|--|==/,
        };
    }
    return nd;
}
var rd, qv;
function d9() {
    if (qv) return rd;
    (qv = 1), (rd = e), (e.displayName = "hpkp"), (e.aliases = []);
    function e(t) {
        t.languages.hpkp = {
            directive: { pattern: /\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\s;=]|$)/i, alias: "property" },
            operator: /=/,
            punctuation: /;/,
        };
    }
    return rd;
}
var ad, Gv;
function p9() {
    if (Gv) return ad;
    (Gv = 1), (ad = e), (e.displayName = "hsts"), (e.aliases = []);
    function e(t) {
        t.languages.hsts = {
            directive: { pattern: /\b(?:includeSubDomains|max-age|preload)(?=[\s;=]|$)/i, alias: "property" },
            operator: /=/,
            punctuation: /;/,
        };
    }
    return ad;
}
var id, Hv;
function f9() {
    if (Hv) return id;
    (Hv = 1), (id = e), (e.displayName = "http"), (e.aliases = []);
    function e(t) {
        (function (n) {
            function r(d) {
                return RegExp("(^(?:" + d + "):[ 	]*(?![ 	]))[^]+", "i");
            }
            n.languages.http = {
                "request-line": {
                    pattern: /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\s(?:https?:\/\/|\/)\S*\sHTTP\/[\d.]+/m,
                    inside: {
                        method: { pattern: /^[A-Z]+\b/, alias: "property" },
                        "request-target": { pattern: /^(\s)(?:https?:\/\/|\/)\S*(?=\s)/, lookbehind: !0, alias: "url", inside: n.languages.uri },
                        "http-version": { pattern: /^(\s)HTTP\/[\d.]+/, lookbehind: !0, alias: "property" },
                    },
                },
                "response-status": {
                    pattern: /^HTTP\/[\d.]+ \d+ .+/m,
                    inside: {
                        "http-version": { pattern: /^HTTP\/[\d.]+/, alias: "property" },
                        "status-code": { pattern: /^(\s)\d+(?=\s)/, lookbehind: !0, alias: "number" },
                        "reason-phrase": { pattern: /^(\s).+/, lookbehind: !0, alias: "string" },
                    },
                },
                header: {
                    pattern: /^[\w-]+:.+(?:(?:\r\n?|\n)[ \t].+)*/m,
                    inside: {
                        "header-value": [
                            { pattern: r(/Content-Security-Policy/.source), lookbehind: !0, alias: ["csp", "languages-csp"], inside: n.languages.csp },
                            {
                                pattern: r(/Public-Key-Pins(?:-Report-Only)?/.source),
                                lookbehind: !0,
                                alias: ["hpkp", "languages-hpkp"],
                                inside: n.languages.hpkp,
                            },
                            { pattern: r(/Strict-Transport-Security/.source), lookbehind: !0, alias: ["hsts", "languages-hsts"], inside: n.languages.hsts },
                            { pattern: r(/[^:]+/.source), lookbehind: !0 },
                        ],
                        "header-name": { pattern: /^[^:]+/, alias: "keyword" },
                        punctuation: /^:/,
                    },
                },
            };
            var a = n.languages,
                i = {
                    "application/javascript": a.javascript,
                    "application/json": a.json || a.javascript,
                    "application/xml": a.xml,
                    "text/xml": a.xml,
                    "text/html": a.html,
                    "text/css": a.css,
                    "text/plain": a.plain,
                },
                o = { "application/json": !0, "application/xml": !0 };
            function l(d) {
                var m = d.replace(/^[a-z]+\//, ""),
                    f = "\\w+/(?:[\\w.-]+\\+)+" + m + "(?![+\\w.-])";
                return "(?:" + d + "|" + f + ")";
            }
            var s;
            for (var u in i)
                if (i[u]) {
                    s = s || {};
                    var c = o[u] ? l(u) : u;
                    s[u.replace(/\//g, "-")] = {
                        pattern: RegExp(
                            "(" + /content-type:\s*/.source + c + /(?:(?:\r\n?|\n)[\w-].*)*(?:\r(?:\n|(?!\n))|\n)/.source + ")" + /[^ \t\w-][\s\S]*/.source,
                            "i",
                        ),
                        lookbehind: !0,
                        inside: i[u],
                    };
                }
            s && n.languages.insertBefore("http", "header", s);
        })(t);
    }
    return id;
}
var od, jv;
function m9() {
    if (jv) return od;
    (jv = 1), (od = e), (e.displayName = "ichigojam"), (e.aliases = []);
    function e(t) {
        t.languages.ichigojam = {
            comment: /(?:\B'|REM)(?:[^\n\r]*)/i,
            string: { pattern: /"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/, greedy: !0 },
            number: /\B#[0-9A-F]+|\B`[01]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
            keyword:
                /\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\$|\b)/i,
            function: /\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\$|\b)/i,
            label: /(?:\B@\S+)/,
            operator: /<[=>]?|>=?|\|\||&&|[+\-*\/=|&^~!]|\b(?:AND|NOT|OR)\b/i,
            punctuation: /[\[,;:()\]]/,
        };
    }
    return od;
}
var ld, Vv;
function h9() {
    if (Vv) return ld;
    (Vv = 1), (ld = e), (e.displayName = "icon"), (e.aliases = []);
    function e(t) {
        t.languages.icon = {
            comment: /#.*/,
            string: { pattern: /(["'])(?:(?!\1)[^\\\r\n_]|\\.|_(?!\1)(?:\r\n|[\s\S]))*\1/, greedy: !0 },
            number: /\b(?:\d+r[a-z\d]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b|\.\d+\b/i,
            "builtin-keyword": {
                pattern:
                    /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\b/,
                alias: "variable",
            },
            directive: { pattern: /\$\w+/, alias: "builtin" },
            keyword:
                /\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\b/,
            function: /\b(?!\d)\w+(?=\s*[({]|\s*!\s*\[)/,
            operator: /[+-]:(?!=)|(?:[\/?@^%&]|\+\+?|--?|==?=?|~==?=?|\*\*?|\|\|\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\|~]/,
            punctuation: /[\[\](){},;]/,
        };
    }
    return ld;
}
var sd, Wv;
function g9() {
    if (Wv) return sd;
    (Wv = 1), (sd = e), (e.displayName = "icuMessageFormat"), (e.aliases = []);
    function e(t) {
        (function (n) {
            function r(u, c) {
                return c <= 0
                    ? /[]/.source
                    : u.replace(/<SELF>/g, function () {
                          return r(u, c - 1);
                      });
            }
            var a = /'[{}:=,](?:[^']|'')*'(?!')/,
                i = { pattern: /''/, greedy: !0, alias: "operator" },
                o = { pattern: a, greedy: !0, inside: { escape: i } },
                l = r(
                    /\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\}/.source.replace(/<STR>/g, function () {
                        return a.source;
                    }),
                    8,
                ),
                s = {
                    pattern: RegExp(l),
                    inside: {
                        message: { pattern: /^(\{)[\s\S]+(?=\}$)/, lookbehind: !0, inside: null },
                        "message-delimiter": { pattern: /./, alias: "punctuation" },
                    },
                };
            (n.languages["icu-message-format"] = {
                argument: {
                    pattern: RegExp(l),
                    greedy: !0,
                    inside: {
                        content: {
                            pattern: /^(\{)[\s\S]+(?=\}$)/,
                            lookbehind: !0,
                            inside: {
                                "argument-name": { pattern: /^(\s*)[^{}:=,\s]+/, lookbehind: !0 },
                                "choice-style": {
                                    pattern: /^(\s*,\s*choice\s*,\s*)\S(?:[\s\S]*\S)?/,
                                    lookbehind: !0,
                                    inside: {
                                        punctuation: /\|/,
                                        range: {
                                            pattern: /^(\s*)[+-]?(?:\d+(?:\.\d*)?|\u221e)\s*[<#\u2264]/,
                                            lookbehind: !0,
                                            inside: { operator: /[<#\u2264]/, number: /\S+/ },
                                        },
                                        rest: null,
                                    },
                                },
                                "plural-style": {
                                    pattern: /^(\s*,\s*(?:plural|selectordinal)\s*,\s*)\S(?:[\s\S]*\S)?/,
                                    lookbehind: !0,
                                    inside: {
                                        offset: /^offset:\s*\d+/,
                                        "nested-message": s,
                                        selector: { pattern: /=\d+|[^{}:=,\s]+/, inside: { keyword: /^(?:few|many|one|other|two|zero)$/ } },
                                    },
                                },
                                "select-style": {
                                    pattern: /^(\s*,\s*select\s*,\s*)\S(?:[\s\S]*\S)?/,
                                    lookbehind: !0,
                                    inside: { "nested-message": s, selector: { pattern: /[^{}:=,\s]+/, inside: { keyword: /^other$/ } } },
                                },
                                keyword: /\b(?:choice|plural|select|selectordinal)\b/,
                                "arg-type": { pattern: /\b(?:date|duration|number|ordinal|spellout|time)\b/, alias: "keyword" },
                                "arg-skeleton": { pattern: /(,\s*)::[^{}:=,\s]+/, lookbehind: !0 },
                                "arg-style": { pattern: /(,\s*)(?:currency|full|integer|long|medium|percent|short)(?=\s*$)/, lookbehind: !0 },
                                "arg-style-text": {
                                    pattern: RegExp(/(^\s*,\s*(?=\S))/.source + r(/(?:[^{}']|'[^']*'|\{(?:<SELF>)?\})+/.source, 8) + "$"),
                                    lookbehind: !0,
                                    alias: "string",
                                },
                                punctuation: /,/,
                            },
                        },
                        "argument-delimiter": { pattern: /./, alias: "operator" },
                    },
                },
                escape: i,
                string: o,
            }),
                (s.inside.message.inside = n.languages["icu-message-format"]),
                (n.languages["icu-message-format"].argument.inside.content.inside["choice-style"].inside.rest = n.languages["icu-message-format"]);
        })(t);
    }
    return sd;
}
var ud, Yv;
function b9() {
    if (Yv) return ud;
    Yv = 1;
    var e = Rg();
    (ud = t), (t.displayName = "idris"), (t.aliases = ["idr"]);
    function t(n) {
        n.register(e),
            (n.languages.idris = n.languages.extend("haskell", {
                comment: { pattern: /(?:(?:--|\|\|\|).*$|\{-[\s\S]*?-\})/m },
                keyword:
                    /\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\b/,
                builtin: void 0,
            })),
            n.languages.insertBefore("idris", "keyword", {
                "import-statement": { pattern: /(^\s*import\s+)(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*/m, lookbehind: !0, inside: { punctuation: /\./ } },
            }),
            (n.languages.idr = n.languages.idris);
    }
    return ud;
}
var cd, Kv;
function y9() {
    if (Kv) return cd;
    (Kv = 1), (cd = e), (e.displayName = "iecst"), (e.aliases = []);
    function e(t) {
        t.languages.iecst = {
            comment: [
                { pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\(\*[\s\S]*?(?:\*\)|$)|\{[\s\S]*?(?:\}|$))/, lookbehind: !0, greedy: !0 },
                { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 },
            ],
            string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            keyword: [
                /\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\b/i,
                /\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\b/,
            ],
            "class-name": /\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\b/,
            address: { pattern: /%[IQM][XBWDL][\d.]*|%[IQ][\d.]*/, alias: "symbol" },
            number: /\b(?:16#[\da-f]+|2#[01_]+|0x[\da-f]+)\b|\b(?:D|DT|T|TOD)#[\d_shmd:]*|\b[A-Z]*#[\d.,_]*|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
            boolean: /\b(?:FALSE|NULL|TRUE)\b/,
            operator: /S?R?:?=>?|&&?|\*\*?|<[=>]?|>=?|[-:^/+#]|\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            punctuation: /[()[\].,;]/,
        };
    }
    return cd;
}
var dd, Xv;
function v9() {
    if (Xv) return dd;
    (Xv = 1), (dd = e), (e.displayName = "ignore"), (e.aliases = ["gitignore", "hgignore", "npmignore"]);
    function e(t) {
        (function (n) {
            (n.languages.ignore = {
                comment: /^#.*/m,
                entry: {
                    pattern: /\S(?:.*(?:(?:\\ )|\S))?/,
                    alias: "string",
                    inside: { operator: /^!|\*\*?|\?/, regex: { pattern: /(^|[^\\])\[[^\[\]]*\]/, lookbehind: !0 }, punctuation: /\// },
                },
            }),
                (n.languages.gitignore = n.languages.ignore),
                (n.languages.hgignore = n.languages.ignore),
                (n.languages.npmignore = n.languages.ignore);
        })(t);
    }
    return dd;
}
var pd, Zv;
function E9() {
    if (Zv) return pd;
    (Zv = 1), (pd = e), (e.displayName = "inform7"), (e.aliases = []);
    function e(t) {
        (t.languages.inform7 = {
            string: {
                pattern: /"[^"]*"/,
                inside: { substitution: { pattern: /\[[^\[\]]+\]/, inside: { delimiter: { pattern: /\[|\]/, alias: "punctuation" } } } },
            },
            comment: { pattern: /\[[^\[\]]+\]/, greedy: !0 },
            title: { pattern: /^[ \t]*(?:book|chapter|part(?! of)|section|table|volume)\b.+/im, alias: "important" },
            number: {
                pattern: /(^|[^-])(?:\b\d+(?:\.\d+)?(?:\^\d+)?(?:(?!\d)\w+)?|\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\b(?!-)/i,
                lookbehind: !0,
            },
            verb: {
                pattern:
                    /(^|[^-])\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\b(?!-)/i,
                lookbehind: !0,
                alias: "operator",
            },
            keyword: {
                pattern:
                    /(^|[^-])\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\b(?!-)/i,
                lookbehind: !0,
            },
            property: {
                pattern:
                    /(^|[^-])\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\b(?!-)/i,
                lookbehind: !0,
                alias: "symbol",
            },
            position: {
                pattern:
                    /(^|[^-])\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\b(?!-)/i,
                lookbehind: !0,
                alias: "keyword",
            },
            type: {
                pattern:
                    /(^|[^-])\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\b(?!-)/i,
                lookbehind: !0,
                alias: "variable",
            },
            punctuation: /[.,:;(){}]/,
        }),
            (t.languages.inform7.string.inside.substitution.inside.rest = t.languages.inform7),
            (t.languages.inform7.string.inside.substitution.inside.rest.text = { pattern: /\S(?:\s*\S)*/, alias: "comment" });
    }
    return pd;
}
var fd, Qv;
function S9() {
    if (Qv) return fd;
    (Qv = 1), (fd = e), (e.displayName = "ini"), (e.aliases = []);
    function e(t) {
        t.languages.ini = {
            comment: { pattern: /(^[ \f\t\v]*)[#;][^\n\r]*/m, lookbehind: !0 },
            section: {
                pattern: /(^[ \f\t\v]*)\[[^\n\r\]]*\]?/m,
                lookbehind: !0,
                inside: {
                    "section-name": { pattern: /(^\[[ \f\t\v]*)[^ \f\t\v\]]+(?:[ \f\t\v]+[^ \f\t\v\]]+)*/, lookbehind: !0, alias: "selector" },
                    punctuation: /\[|\]/,
                },
            },
            key: { pattern: /(^[ \f\t\v]*)[^ \f\n\r\t\v=]+(?:[ \f\t\v]+[^ \f\n\r\t\v=]+)*(?=[ \f\t\v]*=)/m, lookbehind: !0, alias: "attr-name" },
            value: {
                pattern: /(=[ \f\t\v]*)[^ \f\n\r\t\v]+(?:[ \f\t\v]+[^ \f\n\r\t\v]+)*/,
                lookbehind: !0,
                alias: "attr-value",
                inside: { "inner-value": { pattern: /^("|').+(?=\1$)/, lookbehind: !0 } },
            },
            punctuation: /=/,
        };
    }
    return fd;
}
var md, Jv;
function w9() {
    if (Jv) return md;
    (Jv = 1), (md = e), (e.displayName = "io"), (e.aliases = []);
    function e(t) {
        t.languages.io = {
            comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*|#.*)/, lookbehind: !0, greedy: !0 },
            "triple-quoted-string": { pattern: /"""(?:\\[\s\S]|(?!""")[^\\])*"""/, greedy: !0, alias: "string" },
            string: { pattern: /"(?:\\.|[^\\\r\n"])*"/, greedy: !0 },
            keyword:
                /\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\b/,
            builtin:
                /\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\b/,
            boolean: /\b(?:false|nil|true)\b/,
            number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?/i,
            operator: /[=!*/%+\-^&|]=|>>?=?|<<?=?|:?:?=|\+\+?|--?|\*\*?|\/\/?|%|\|\|?|&&?|\b(?:and|not|or|return)\b|@@?|\?\??|\.\./,
            punctuation: /[{}[\];(),.:]/,
        };
    }
    return md;
}
var hd, eE;
function k9() {
    if (eE) return hd;
    (eE = 1), (hd = e), (e.displayName = "j"), (e.aliases = []);
    function e(t) {
        t.languages.j = {
            comment: { pattern: /\bNB\..*/, greedy: !0 },
            string: { pattern: /'(?:''|[^'\r\n])*'/, greedy: !0 },
            keyword:
                /\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\w+|goto_\w+|if|label_\w+|return|select|throw|try|while|whilst)\.)/,
            verb: {
                pattern:
                    /(?!\^:|;\.|[=!][.:])(?:\{(?:\.|::?)?|p(?:\.\.?|:)|[=!\]]|[<>+*\-%$|,#][.:]?|[?^]\.?|[;\[]:?|[~}"i][.:]|[ACeEIjLor]\.|(?:[_\/\\qsux]|_?\d):)/,
                alias: "keyword",
            },
            number: /\b_?(?:(?!\d:)\d+(?:\.\d+)?(?:(?:ad|ar|[ejpx])_?\d+(?:\.\d+)?)*(?:b_?[\da-z]+(?:\.[\da-z]+)?)?|_\b(?!\.))/,
            adverb: { pattern: /[~}]|[\/\\]\.?|[bfM]\.|t[.:]/, alias: "builtin" },
            operator: /[=a][.:]|_\./,
            conjunction: { pattern: /&(?:\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\.|`:?|[\^LS]:|"/, alias: "variable" },
            punctuation: /[()]/,
        };
    }
    return hd;
}
var gd, tE;
function Ig() {
    if (tE) return gd;
    (tE = 1), (gd = e), (e.displayName = "java"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r =
                    /\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/,
                a = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source,
                i = {
                    pattern: RegExp(a + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
                    lookbehind: !0,
                    inside: { namespace: { pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/, inside: { punctuation: /\./ } }, punctuation: /\./ },
                };
            (n.languages.java = n.languages.extend("clike", {
                string: { pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"/, lookbehind: !0, greedy: !0 },
                "class-name": [i, { pattern: RegExp(a + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source), lookbehind: !0, inside: i.inside }],
                keyword: r,
                function: [n.languages.clike.function, { pattern: /(::\s*)[a-z_]\w*/, lookbehind: !0 }],
                number: /\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,
                operator: { pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m, lookbehind: !0 },
            })),
                n.languages.insertBefore("java", "string", {
                    "triple-quoted-string": { pattern: /"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/, greedy: !0, alias: "string" },
                    char: { pattern: /'(?:\\.|[^'\\\r\n]){1,6}'/, greedy: !0 },
                }),
                n.languages.insertBefore("java", "class-name", {
                    annotation: { pattern: /(^|[^.])@\w+(?:\s*\.\s*\w+)*/, lookbehind: !0, alias: "punctuation" },
                    generics: {
                        pattern: /<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,
                        inside: { "class-name": i, keyword: r, punctuation: /[<>(),.:]/, operator: /[?&|]/ },
                    },
                    namespace: {
                        pattern: RegExp(
                            /(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(
                                /<keyword>/g,
                                function () {
                                    return r.source;
                                },
                            ),
                        ),
                        lookbehind: !0,
                        inside: { punctuation: /\./ },
                    },
                });
        })(t);
    }
    return gd;
}
var bd, nE;
function gs() {
    if (nE) return bd;
    (nE = 1), (bd = e), (e.displayName = "javadoclike"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = (n.languages.javadoclike = {
                parameter: { pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m, lookbehind: !0 },
                keyword: { pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m, lookbehind: !0 },
                punctuation: /[{}]/,
            });
            function a(o, l) {
                var s = "doc-comment",
                    u = n.languages[o];
                if (u) {
                    var c = u[s];
                    if (!c) {
                        var d = {};
                        (d[s] = { pattern: /(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/, lookbehind: !0, alias: "comment" }),
                            (u = n.languages.insertBefore(o, "comment", d)),
                            (c = u[s]);
                    }
                    if ((c instanceof RegExp && (c = u[s] = { pattern: c }), Array.isArray(c)))
                        for (var m = 0, f = c.length; m < f; m++) c[m] instanceof RegExp && (c[m] = { pattern: c[m] }), l(c[m]);
                    else l(c);
                }
            }
            function i(o, l) {
                typeof o == "string" && (o = [o]),
                    o.forEach(function (s) {
                        a(s, function (u) {
                            u.inside || (u.inside = {}), (u.inside.rest = l);
                        });
                    });
            }
            Object.defineProperty(r, "addSupport", { value: i }), r.addSupport(["java", "javascript", "php"], r);
        })(t);
    }
    return bd;
}
var yd, rE;
function T9() {
    if (rE) return yd;
    rE = 1;
    var e = Ig(),
        t = gs();
    (yd = n), (n.displayName = "javadoc"), (n.aliases = []);
    function n(r) {
        r.register(e),
            r.register(t),
            (function (a) {
                var i = /(^(?:[\t ]*(?:\*\s*)*))[^*\s].*$/m,
                    o = /#\s*\w+(?:\s*\([^()]*\))?/.source,
                    l = /(?:\b[a-zA-Z]\w+\s*\.\s*)*\b[A-Z]\w*(?:\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function () {
                        return o;
                    });
                (a.languages.javadoc = a.languages.extend("javadoclike", {})),
                    a.languages.insertBefore("javadoc", "keyword", {
                        reference: {
                            pattern: RegExp(/(@(?:exception|link|linkplain|see|throws|value)\s+(?:\*\s*)?)/.source + "(?:" + l + ")"),
                            lookbehind: !0,
                            inside: {
                                function: { pattern: /(#\s*)\w+(?=\s*\()/, lookbehind: !0 },
                                field: { pattern: /(#\s*)\w+/, lookbehind: !0 },
                                namespace: { pattern: /\b(?:[a-z]\w*\s*\.\s*)+/, inside: { punctuation: /\./ } },
                                "class-name": /\b[A-Z]\w*/,
                                keyword: a.languages.java.keyword,
                                punctuation: /[#()[\],.]/,
                            },
                        },
                        "class-name": { pattern: /(@param\s+)<[A-Z]\w*>/, lookbehind: !0, inside: { punctuation: /[.<>]/ } },
                        "code-section": [
                            {
                                pattern: /(\{@code\s+(?!\s))(?:[^\s{}]|\s+(?![\s}])|\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\})+(?=\s*\})/,
                                lookbehind: !0,
                                inside: { code: { pattern: i, lookbehind: !0, inside: a.languages.java, alias: "language-java" } },
                            },
                            {
                                pattern: /(<(code|pre|tt)>(?!<code>)\s*)\S(?:\S|\s+\S)*?(?=\s*<\/\2>)/,
                                lookbehind: !0,
                                inside: {
                                    line: {
                                        pattern: i,
                                        lookbehind: !0,
                                        inside: {
                                            tag: a.languages.markup.tag,
                                            entity: a.languages.markup.entity,
                                            code: { pattern: /.+/, inside: a.languages.java, alias: "language-java" },
                                        },
                                    },
                                },
                            },
                        ],
                        tag: a.languages.markup.tag,
                        entity: a.languages.markup.entity,
                    }),
                    a.languages.javadoclike.addSupport("java", a.languages.javadoc);
            })(r);
    }
    return yd;
}
var vd, aE;
function A9() {
    if (aE) return vd;
    (aE = 1), (vd = e), (e.displayName = "javastacktrace"), (e.aliases = []);
    function e(t) {
        t.languages.javastacktrace = {
            summary: {
                pattern: /^([\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread "[^"]*")[\t ]+)?[\w$.]+(?::.*)?$/m,
                lookbehind: !0,
                inside: {
                    keyword: { pattern: /^([\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m, lookbehind: !0 },
                    string: { pattern: /^(\s*)"[^"]*"/, lookbehind: !0 },
                    exceptions: {
                        pattern: /^(:?\s*)[\w$.]+(?=:|$)/,
                        lookbehind: !0,
                        inside: { "class-name": /[\w$]+$/, namespace: /\b[a-z]\w*\b/, punctuation: /\./ },
                    },
                    message: { pattern: /(:\s*)\S.*/, lookbehind: !0, alias: "string" },
                    punctuation: /:/,
                },
            },
            "stack-frame": {
                pattern: /^([\t ]*)at (?:[\w$./]|@[\w$.+-]*\/)+(?:<init>)?\([^()]*\)/m,
                lookbehind: !0,
                inside: {
                    keyword: { pattern: /^(\s*)at(?= )/, lookbehind: !0 },
                    source: [
                        {
                            pattern: /(\()\w+\.\w+:\d+(?=\))/,
                            lookbehind: !0,
                            inside: { file: /^\w+\.\w+/, punctuation: /:/, "line-number": { pattern: /\b\d+\b/, alias: "number" } },
                        },
                        { pattern: /(\()[^()]*(?=\))/, lookbehind: !0, inside: { keyword: /^(?:Native Method|Unknown Source)$/ } },
                    ],
                    "class-name": /[\w$]+(?=\.(?:<init>|[\w$]+)\()/,
                    function: /(?:<init>|[\w$]+)(?=\()/,
                    "class-loader": {
                        pattern: /(\s)[a-z]\w*(?:\.[a-z]\w*)*(?=\/[\w@$.]*\/)/,
                        lookbehind: !0,
                        alias: "namespace",
                        inside: { punctuation: /\./ },
                    },
                    module: {
                        pattern: /([\s/])[a-z]\w*(?:\.[a-z]\w*)*(?:@[\w$.+-]*)?(?=\/)/,
                        lookbehind: !0,
                        inside: { version: { pattern: /(@)[\s\S]+/, lookbehind: !0, alias: "number" }, punctuation: /[@.]/ },
                    },
                    namespace: { pattern: /(?:\b[a-z]\w*\.)+/, inside: { punctuation: /\./ } },
                    punctuation: /[()/.]/,
                },
            },
            more: {
                pattern: /^([\t ]*)\.{3} \d+ [a-z]+(?: [a-z]+)*/m,
                lookbehind: !0,
                inside: { punctuation: /\.{3}/, number: /\d+/, keyword: /\b[a-z]+(?: [a-z]+)*\b/ },
            },
        };
    }
    return vd;
}
var Ed, iE;
function x9() {
    if (iE) return Ed;
    (iE = 1), (Ed = e), (e.displayName = "jexl"), (e.aliases = []);
    function e(t) {
        t.languages.jexl = {
            string: /(["'])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
            transform: {
                pattern: /(\|\s*)[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*/,
                alias: "function",
                lookbehind: !0,
            },
            function: /[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*\s*(?=\()/,
            number: /\b\d+(?:\.\d+)?\b|\B\.\d+\b/,
            operator: /[<>!]=?|-|\+|&&|==|\|\|?|\/\/?|[?:*^%]/,
            boolean: /\b(?:false|true)\b/,
            keyword: /\bin\b/,
            punctuation: /[{}[\](),.]/,
        };
    }
    return Ed;
}
var Sd, oE;
function R9() {
    if (oE) return Sd;
    (oE = 1), (Sd = e), (e.displayName = "jolie"), (e.aliases = []);
    function e(t) {
        (t.languages.jolie = t.languages.extend("clike", {
            string: { pattern: /(^|[^\\])"(?:\\[\s\S]|[^"\\])*"/, lookbehind: !0, greedy: !0 },
            "class-name": { pattern: /((?:\b(?:as|courier|embed|in|inputPort|outputPort|service)\b|@)[ \t]*)\w+/, lookbehind: !0 },
            keyword:
                /\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\b/,
            function: /\b[a-z_]\w*(?=[ \t]*[@(])/i,
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?l?/i,
            operator: /-[-=>]?|\+[+=]?|<[<=]?|[>=*!]=?|&&|\|\||[?\/%^@|]/,
            punctuation: /[()[\]{},;.:]/,
            builtin: /\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\b/,
        })),
            t.languages.insertBefore("jolie", "keyword", {
                aggregates: {
                    pattern: /(\bAggregates\s*:\s*)(?:\w+(?:\s+with\s+\w+)?\s*,\s*)*\w+(?:\s+with\s+\w+)?/,
                    lookbehind: !0,
                    inside: { keyword: /\bwith\b/, "class-name": /\w+/, punctuation: /,/ },
                },
                redirects: {
                    pattern: /(\bRedirects\s*:\s*)(?:\w+\s*=>\s*\w+\s*,\s*)*(?:\w+\s*=>\s*\w+)/,
                    lookbehind: !0,
                    inside: { punctuation: /,/, "class-name": /\w+/, operator: /=>/ },
                },
                property: {
                    pattern: /\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\b(?=[ \t]*:)/,
                },
            });
    }
    return Sd;
}
var wd, lE;
function I9() {
    if (lE) return wd;
    (lE = 1), (wd = e), (e.displayName = "jq"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /\\\((?:[^()]|\([^()]*\))*\)/.source,
                a = RegExp(
                    /(^|[^\\])"(?:[^"\r\n\\]|\\[^\r\n(]|__)*"/.source.replace(/__/g, function () {
                        return r;
                    }),
                ),
                i = {
                    interpolation: {
                        pattern: RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + r),
                        lookbehind: !0,
                        inside: { content: { pattern: /^(\\\()[\s\S]+(?=\)$)/, lookbehind: !0, inside: null }, punctuation: /^\\\(|\)$/ },
                    },
                },
                o = (n.languages.jq = {
                    comment: /#.*/,
                    property: { pattern: RegExp(a.source + /(?=\s*:(?!:))/.source), lookbehind: !0, greedy: !0, inside: i },
                    string: { pattern: a, lookbehind: !0, greedy: !0, inside: i },
                    function: { pattern: /(\bdef\s+)[a-z_]\w+/i, lookbehind: !0 },
                    variable: /\B\$\w+/,
                    "property-literal": { pattern: /\b[a-z_]\w*(?=\s*:(?!:))/i, alias: "property" },
                    keyword: /\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\b/,
                    boolean: /\b(?:false|true)\b/,
                    number: /(?:\b\d+\.|\B\.)?\b\d+(?:[eE][+-]?\d+)?\b/,
                    operator: [{ pattern: /\|=?/, alias: "pipe" }, /\.\.|[!=<>]?=|\?\/\/|\/\/=?|[-+*/%]=?|[<>?]|\b(?:and|not|or)\b/],
                    "c-style-function": { pattern: /\b[a-z_]\w*(?=\s*\()/i, alias: "function" },
                    punctuation: /::|[()\[\]{},:;]|\.(?=\s*[\[\w$])/,
                    dot: { pattern: /\./, alias: "important" },
                });
            i.interpolation.inside.content.inside = o;
        })(t);
    }
    return wd;
}
var kd, sE;
function N9() {
    if (sE) return kd;
    (sE = 1), (kd = e), (e.displayName = "jsExtras"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.insertBefore("javascript", "function-variable", {
                "method-variable": {
                    pattern: RegExp("(\\.\\s*)" + n.languages.javascript["function-variable"].pattern.source),
                    lookbehind: !0,
                    alias: ["function-variable", "method", "function", "property-access"],
                },
            }),
                n.languages.insertBefore("javascript", "function", {
                    method: { pattern: RegExp("(\\.\\s*)" + n.languages.javascript.function.source), lookbehind: !0, alias: ["function", "property-access"] },
                }),
                n.languages.insertBefore("javascript", "constant", {
                    "known-class-name": [
                        {
                            pattern:
                                /\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,
                            alias: "class-name",
                        },
                        { pattern: /\b(?:[A-Z]\w*)Error\b/, alias: "class-name" },
                    ],
                });
            function r(u, c) {
                return RegExp(
                    u.replace(/<ID>/g, function () {
                        return /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source;
                    }),
                    c,
                );
            }
            n.languages.insertBefore("javascript", "keyword", {
                imports: {
                    pattern: r(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),
                    lookbehind: !0,
                    inside: n.languages.javascript,
                },
                exports: {
                    pattern: r(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),
                    lookbehind: !0,
                    inside: n.languages.javascript,
                },
            }),
                n.languages.javascript.keyword.unshift(
                    { pattern: /\b(?:as|default|export|from|import)\b/, alias: "module" },
                    { pattern: /\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/, alias: "control-flow" },
                    { pattern: /\bnull\b/, alias: ["null", "nil"] },
                    { pattern: /\bundefined\b/, alias: "nil" },
                ),
                n.languages.insertBefore("javascript", "operator", {
                    spread: { pattern: /\.{3}/, alias: "operator" },
                    arrow: { pattern: /=>/, alias: "operator" },
                }),
                n.languages.insertBefore("javascript", "punctuation", {
                    "property-access": { pattern: r(/(\.\s*)#?<ID>/.source), lookbehind: !0 },
                    "maybe-class-name": { pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/, lookbehind: !0 },
                    dom: { pattern: /\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/, alias: "variable" },
                    console: { pattern: /\bconsole(?=\s*\.)/, alias: "class-name" },
                });
            for (var a = ["function", "function-variable", "method", "method-variable", "property-access"], i = 0; i < a.length; i++) {
                var o = a[i],
                    l = n.languages.javascript[o];
                n.util.type(l) === "RegExp" && (l = n.languages.javascript[o] = { pattern: l });
                var s = l.inside || {};
                (l.inside = s), (s["maybe-class-name"] = /^[A-Z][\s\S]*/);
            }
        })(t);
    }
    return kd;
}
var Td, uE;
function _9() {
    if (uE) return Td;
    (uE = 1), (Td = e), (e.displayName = "jsTemplates"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = n.languages.javascript["template-string"],
                a = r.pattern.source,
                i = r.inside.interpolation,
                o = i.inside["interpolation-punctuation"],
                l = i.pattern.source;
            function s(E, I) {
                if (n.languages[E])
                    return {
                        pattern: RegExp("((?:" + I + ")\\s*)" + a),
                        lookbehind: !0,
                        greedy: !0,
                        inside: { "template-punctuation": { pattern: /^`|`$/, alias: "string" }, "embedded-code": { pattern: /[\s\S]+/, alias: E } },
                    };
            }
            n.languages.javascript["template-string"] = [
                s("css", /\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),
                s("html", /\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),
                s("svg", /\bsvg/.source),
                s("markdown", /\b(?:markdown|md)/.source),
                s("graphql", /\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),
                s("sql", /\bsql/.source),
                r,
            ].filter(Boolean);
            function u(E, I) {
                return "___" + I.toUpperCase() + "_" + E + "___";
            }
            function c(E, I, y) {
                var g = { code: E, grammar: I, language: y };
                return n.hooks.run("before-tokenize", g), (g.tokens = n.tokenize(g.code, g.grammar)), n.hooks.run("after-tokenize", g), g.tokens;
            }
            function d(E) {
                var I = {};
                I["interpolation-punctuation"] = o;
                var y = n.tokenize(E, I);
                if (y.length === 3) {
                    var g = [1, 1];
                    g.push.apply(g, c(y[1], n.languages.javascript, "javascript")), y.splice.apply(y, g);
                }
                return new n.Token("interpolation", y, i.alias, E);
            }
            function m(E, I, y) {
                var g = n.tokenize(E, { interpolation: { pattern: RegExp(l), lookbehind: !0 } }),
                    v = 0,
                    T = {},
                    R = g
                        .map(function (M) {
                            if (typeof M == "string") return M;
                            for (var O = M.content, B; E.indexOf((B = u(v++, y))) !== -1; );
                            return (T[B] = O), B;
                        })
                        .join(""),
                    k = c(R, I, y),
                    L = Object.keys(T);
                v = 0;
                function F(M) {
                    for (var O = 0; O < M.length; O++) {
                        if (v >= L.length) return;
                        var B = M[O];
                        if (typeof B == "string" || typeof B.content == "string") {
                            var $ = L[v],
                                ne = typeof B == "string" ? B : B.content,
                                re = ne.indexOf($);
                            if (re !== -1) {
                                ++v;
                                var J = ne.substring(0, re),
                                    se = d(T[$]),
                                    ce = ne.substring(re + $.length),
                                    U = [];
                                if ((J && U.push(J), U.push(se), ce)) {
                                    var W = [ce];
                                    F(W), U.push.apply(U, W);
                                }
                                typeof B == "string" ? (M.splice.apply(M, [O, 1].concat(U)), (O += U.length - 1)) : (B.content = U);
                            }
                        } else {
                            var A = B.content;
                            Array.isArray(A) ? F(A) : F([A]);
                        }
                    }
                }
                return F(k), new n.Token(y, k, "language-" + y, E);
            }
            var f = { javascript: !0, js: !0, typescript: !0, ts: !0, jsx: !0, tsx: !0 };
            n.hooks.add("after-tokenize", function (E) {
                if (!(E.language in f)) return;
                function I(y) {
                    for (var g = 0, v = y.length; g < v; g++) {
                        var T = y[g];
                        if (typeof T != "string") {
                            var R = T.content;
                            if (!Array.isArray(R)) {
                                typeof R != "string" && I([R]);
                                continue;
                            }
                            if (T.type === "template-string") {
                                var k = R[1];
                                if (R.length === 3 && typeof k != "string" && k.type === "embedded-code") {
                                    var L = b(k),
                                        F = k.alias,
                                        M = Array.isArray(F) ? F[0] : F,
                                        O = n.languages[M];
                                    if (!O) continue;
                                    R[1] = m(L, O, M);
                                }
                            } else I(R);
                        }
                    }
                }
                I(E.tokens);
            });
            function b(E) {
                return typeof E == "string" ? E : Array.isArray(E) ? E.map(b).join("") : b(E.content);
            }
        })(t);
    }
    return Td;
}
var Ad, cE;
function Ng() {
    if (cE) return Ad;
    (cE = 1), (Ad = e), (e.displayName = "typescript"), (e.aliases = ["ts"]);
    function e(t) {
        (function (n) {
            (n.languages.typescript = n.languages.extend("javascript", {
                "class-name": {
                    pattern:
                        /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: null,
                },
                builtin: /\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/,
            })),
                n.languages.typescript.keyword.push(
                    /\b(?:abstract|declare|is|keyof|readonly|require)\b/,
                    /\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,
                    /\btype\b(?=\s*(?:[\{*]|$))/,
                ),
                delete n.languages.typescript.parameter,
                delete n.languages.typescript["literal-property"];
            var r = n.languages.extend("typescript", {});
            delete r["class-name"],
                (n.languages.typescript["class-name"].inside = r),
                n.languages.insertBefore("typescript", "function", {
                    decorator: { pattern: /@[$\w\xA0-\uFFFF]+/, inside: { at: { pattern: /^@/, alias: "operator" }, function: /^[\s\S]+/ } },
                    "generic-function": {
                        pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,
                        greedy: !0,
                        inside: {
                            function: /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,
                            generic: { pattern: /<[\s\S]+/, alias: "class-name", inside: r },
                        },
                    },
                }),
                (n.languages.ts = n.languages.typescript);
        })(t);
    }
    return Ad;
}
var xd, dE;
function C9() {
    if (dE) return xd;
    dE = 1;
    var e = gs(),
        t = Ng();
    (xd = n), (n.displayName = "jsdoc"), (n.aliases = []);
    function n(r) {
        r.register(e),
            r.register(t),
            (function (a) {
                var i = a.languages.javascript,
                    o = /\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}/.source,
                    l = "(@(?:arg|argument|param|property)\\s+(?:" + o + "\\s+)?)";
                (a.languages.jsdoc = a.languages.extend("javadoclike", {
                    parameter: { pattern: RegExp(l + /(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)/.source), lookbehind: !0, inside: { punctuation: /\./ } },
                })),
                    a.languages.insertBefore("jsdoc", "keyword", {
                        "optional-parameter": {
                            pattern: RegExp(l + /\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)/.source),
                            lookbehind: !0,
                            inside: {
                                parameter: { pattern: /(^\[)[$\w\xA0-\uFFFF\.]+/, lookbehind: !0, inside: { punctuation: /\./ } },
                                code: { pattern: /(=)[\s\S]*(?=\]$)/, lookbehind: !0, inside: i, alias: "language-javascript" },
                                punctuation: /[=[\]]/,
                            },
                        },
                        "class-name": [
                            {
                                pattern: RegExp(
                                    /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:<TYPE>\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*/.source.replace(
                                        /<TYPE>/g,
                                        function () {
                                            return o;
                                        },
                                    ),
                                ),
                                lookbehind: !0,
                                inside: { punctuation: /\./ },
                            },
                            {
                                pattern: RegExp("(@[a-z]+\\s+)" + o),
                                lookbehind: !0,
                                inside: {
                                    string: i.string,
                                    number: i.number,
                                    boolean: i.boolean,
                                    keyword: a.languages.typescript.keyword,
                                    operator: /=>|\.\.\.|[&|?:*]/,
                                    punctuation: /[.,;=<>{}()[\]]/,
                                },
                            },
                        ],
                        example: {
                            pattern: /(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,
                            lookbehind: !0,
                            inside: { code: { pattern: /^([\t ]*(?:\*\s*)?)\S.*$/m, lookbehind: !0, inside: i, alias: "language-javascript" } },
                        },
                    }),
                    a.languages.javadoclike.addSupport("javascript", a.languages.jsdoc);
            })(r);
    }
    return xd;
}
var Rd, pE;
function _g() {
    if (pE) return Rd;
    (pE = 1), (Rd = e), (e.displayName = "json"), (e.aliases = ["webmanifest"]);
    function e(t) {
        (t.languages.json = {
            property: { pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/, lookbehind: !0, greedy: !0 },
            string: { pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/, lookbehind: !0, greedy: !0 },
            comment: { pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/, greedy: !0 },
            number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
            punctuation: /[{}[\],]/,
            operator: /:/,
            boolean: /\b(?:false|true)\b/,
            null: { pattern: /\bnull\b/, alias: "keyword" },
        }),
            (t.languages.webmanifest = t.languages.json);
    }
    return Rd;
}
var Id, fE;
function O9() {
    if (fE) return Id;
    fE = 1;
    var e = _g();
    (Id = t), (t.displayName = "json5"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                var a = /("|')(?:\\(?:\r\n?|\n|.)|(?!\1)[^\\\r\n])*\1/;
                r.languages.json5 = r.languages.extend("json", {
                    property: [
                        { pattern: RegExp(a.source + "(?=\\s*:)"), greedy: !0 },
                        { pattern: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/, alias: "unquoted" },
                    ],
                    string: { pattern: a, greedy: !0 },
                    number: /[+-]?\b(?:NaN|Infinity|0x[a-fA-F\d]+)\b|[+-]?(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+\b)?/,
                });
            })(n);
    }
    return Id;
}
var Nd, mE;
function L9() {
    if (mE) return Nd;
    mE = 1;
    var e = _g();
    (Nd = t), (t.displayName = "jsonp"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.jsonp = n.languages.extend("json", { punctuation: /[{}[\]();,.]/ })),
            n.languages.insertBefore("jsonp", "punctuation", { function: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*\()/ });
    }
    return Nd;
}
var _d, hE;
function D9() {
    if (hE) return _d;
    (hE = 1), (_d = e), (e.displayName = "jsstacktrace"), (e.aliases = []);
    function e(t) {
        t.languages.jsstacktrace = {
            "error-message": { pattern: /^\S.*/m, alias: "string" },
            "stack-frame": {
                pattern: /(^[ \t]+)at[ \t].*/m,
                lookbehind: !0,
                inside: {
                    "not-my-code": {
                        pattern: /^at[ \t]+(?!\s)(?:node\.js|<unknown>|.*(?:node_modules|\(<anonymous>\)|\(<unknown>|<anonymous>$|\(internal\/|\(node\.js)).*/m,
                        alias: "comment",
                    },
                    filename: { pattern: /(\bat\s+(?!\s)|\()(?:[a-zA-Z]:)?[^():]+(?=:)/, lookbehind: !0, alias: "url" },
                    function: {
                        pattern: /(\bat\s+(?:new\s+)?)(?!\s)[_$a-zA-Z\xA0-\uFFFF<][.$\w\xA0-\uFFFF<>]*/,
                        lookbehind: !0,
                        inside: { punctuation: /\./ },
                    },
                    punctuation: /[()]/,
                    keyword: /\b(?:at|new)\b/,
                    alias: { pattern: /\[(?:as\s+)?(?!\s)[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\]/, alias: "variable" },
                    "line-number": { pattern: /:\d+(?::\d+)?\b/, alias: "number", inside: { punctuation: /:/ } },
                },
            },
        };
    }
    return _d;
}
var Cd, gE;
function BT() {
    if (gE) return Cd;
    (gE = 1), (Cd = e), (e.displayName = "jsx"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = n.util.clone(n.languages.javascript),
                a = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,
                i = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,
                o = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;
            function l(c, d) {
                return (
                    (c = c
                        .replace(/<S>/g, function () {
                            return a;
                        })
                        .replace(/<BRACES>/g, function () {
                            return i;
                        })
                        .replace(/<SPREAD>/g, function () {
                            return o;
                        })),
                    RegExp(c, d)
                );
            }
            (o = l(o).source),
                (n.languages.jsx = n.languages.extend("markup", r)),
                (n.languages.jsx.tag.pattern = l(
                    /<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/
                        .source,
                )),
                (n.languages.jsx.tag.inside.tag.pattern = /^<\/?[^\s>\/]*/),
                (n.languages.jsx.tag.inside["attr-value"].pattern = /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/),
                (n.languages.jsx.tag.inside.tag.inside["class-name"] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/),
                (n.languages.jsx.tag.inside.comment = r.comment),
                n.languages.insertBefore("inside", "attr-name", { spread: { pattern: l(/<SPREAD>/.source), inside: n.languages.jsx } }, n.languages.jsx.tag),
                n.languages.insertBefore(
                    "inside",
                    "special-attr",
                    {
                        script: {
                            pattern: l(/=<BRACES>/.source),
                            alias: "language-javascript",
                            inside: { "script-punctuation": { pattern: /^=(?=\{)/, alias: "punctuation" }, rest: n.languages.jsx },
                        },
                    },
                    n.languages.jsx.tag,
                );
            var s = function (c) {
                    return c ? (typeof c == "string" ? c : typeof c.content == "string" ? c.content : c.content.map(s).join("")) : "";
                },
                u = function (c) {
                    for (var d = [], m = 0; m < c.length; m++) {
                        var f = c[m],
                            b = !1;
                        if (
                            (typeof f != "string" &&
                                (f.type === "tag" && f.content[0] && f.content[0].type === "tag"
                                    ? f.content[0].content[0].content === "</"
                                        ? d.length > 0 && d[d.length - 1].tagName === s(f.content[0].content[1]) && d.pop()
                                        : f.content[f.content.length - 1].content === "/>" || d.push({ tagName: s(f.content[0].content[1]), openedBraces: 0 })
                                    : d.length > 0 && f.type === "punctuation" && f.content === "{"
                                      ? d[d.length - 1].openedBraces++
                                      : d.length > 0 && d[d.length - 1].openedBraces > 0 && f.type === "punctuation" && f.content === "}"
                                        ? d[d.length - 1].openedBraces--
                                        : (b = !0)),
                            (b || typeof f == "string") && d.length > 0 && d[d.length - 1].openedBraces === 0)
                        ) {
                            var E = s(f);
                            m < c.length - 1 && (typeof c[m + 1] == "string" || c[m + 1].type === "plain-text") && ((E += s(c[m + 1])), c.splice(m + 1, 1)),
                                m > 0 && (typeof c[m - 1] == "string" || c[m - 1].type === "plain-text") && ((E = s(c[m - 1]) + E), c.splice(m - 1, 1), m--),
                                (c[m] = new n.Token("plain-text", E, null, E));
                        }
                        f.content && typeof f.content != "string" && u(f.content);
                    }
                };
            n.hooks.add("after-tokenize", function (c) {
                (c.language !== "jsx" && c.language !== "tsx") || u(c.tokens);
            });
        })(t);
    }
    return Cd;
}
var Od, bE;
function M9() {
    if (bE) return Od;
    (bE = 1), (Od = e), (e.displayName = "julia"), (e.aliases = []);
    function e(t) {
        t.languages.julia = {
            comment: { pattern: /(^|[^\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/, lookbehind: !0 },
            regex: { pattern: /r"(?:\\.|[^"\\\r\n])*"[imsx]{0,4}/, greedy: !0 },
            string: { pattern: /"""[\s\S]+?"""|(?:\b\w+)?"(?:\\.|[^"\\\r\n])*"|`(?:[^\\`\r\n]|\\.)*`/, greedy: !0 },
            char: { pattern: /(^|[^\w'])'(?:\\[^\r\n][^'\r\n]*|[^\\\r\n])'/, lookbehind: !0, greedy: !0 },
            keyword:
                /\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\b/,
            boolean: /\b(?:false|true)\b/,
            number: /(?:\b(?=\d)|\B(?=\.))(?:0[box])?(?:[\da-f]+(?:_[\da-f]+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[efp][+-]?\d+(?:_\d+)*)?j?/i,
            operator: /&&|\|\||[-+*^%÷⊻&$\\]=?|\/[\/=]?|!=?=?|\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,
            punctuation: /::?|[{}[\]();,.?]/,
            constant: /\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\b|[πℯ]/,
        };
    }
    return Od;
}
var Ld, yE;
function F9() {
    if (yE) return Ld;
    (yE = 1), (Ld = e), (e.displayName = "keepalived"), (e.aliases = []);
    function e(t) {
        t.languages.keepalived = {
            comment: { pattern: /[#!].*/, greedy: !0 },
            string: { pattern: /(^|[^\\])(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/, lookbehind: !0, greedy: !0 },
            ip: {
                pattern: RegExp(
                    /\b(?:(?:(?:[\da-f]{1,4}:){7}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}:[\da-f]{1,4}|(?:[\da-f]{1,4}:){5}:(?:[\da-f]{1,4}:)?[\da-f]{1,4}|(?:[\da-f]{1,4}:){4}:(?:[\da-f]{1,4}:){0,2}[\da-f]{1,4}|(?:[\da-f]{1,4}:){3}:(?:[\da-f]{1,4}:){0,3}[\da-f]{1,4}|(?:[\da-f]{1,4}:){2}:(?:[\da-f]{1,4}:){0,4}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}<ipv4>|(?:[\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\da-f]{1,4}:){0,5}<ipv4>|[\da-f]{1,4}::(?:[\da-f]{1,4}:){0,5}[\da-f]{1,4}|::(?:[\da-f]{1,4}:){0,6}[\da-f]{1,4}|(?:[\da-f]{1,4}:){1,7}:)(?:\/\d{1,3})?|<ipv4>(?:\/\d{1,2})?)\b/.source.replace(
                        /<ipv4>/g,
                        function () {
                            return /(?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d))/.source;
                        },
                    ),
                    "i",
                ),
                alias: "number",
            },
            path: { pattern: /(\s)\/(?:[^\/\s]+\/)*[^\/\s]*|\b[a-zA-Z]:\\(?:[^\\\s]+\\)*[^\\\s]*/, lookbehind: !0, alias: "string" },
            variable: /\$\{?\w+\}?/,
            email: { pattern: /[\w-]+@[\w-]+(?:\.[\w-]{2,3}){1,2}/, alias: "string" },
            "conditional-configuration": { pattern: /@\^?[\w-]+/, alias: "variable" },
            operator: /=/,
            property:
                /\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\b/,
            constant: /\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\b/,
            number: { pattern: /(^|[^\w.-])-?\d+(?:\.\d+)?/, lookbehind: !0 },
            boolean: /\b(?:false|no|off|on|true|yes)\b/,
            punctuation: /[\{\}]/,
        };
    }
    return Ld;
}
var Dd, vE;
function P9() {
    if (vE) return Dd;
    (vE = 1), (Dd = e), (e.displayName = "keyman"), (e.aliases = []);
    function e(t) {
        t.languages.keyman = {
            comment: { pattern: /\bc .*/i, greedy: !0 },
            string: { pattern: /"[^"\r\n]*"|'[^'\r\n]*'/, greedy: !0 },
            "virtual-key": {
                pattern: /\[\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\s+)*(?:[TKU]_[\w?]+|[A-E]\d\d?|"[^"\r\n]*"|'[^'\r\n]*')\s*\]/i,
                greedy: !0,
                alias: "function",
            },
            "header-keyword": { pattern: /&\w+/, alias: "bold" },
            "header-statement": {
                pattern: /\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\b/i,
                alias: "bold",
            },
            "rule-keyword": {
                pattern: /\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\b/i,
                alias: "keyword",
            },
            "structural-keyword": { pattern: /\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\b/i, alias: "keyword" },
            "compile-target": { pattern: /\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i, alias: "property" },
            number: /\b(?:U\+[\dA-F]+|d\d+|x[\da-f]+|\d+)\b/i,
            operator: /[+>\\$]|\.\./,
            punctuation: /[()=,]/,
        };
    }
    return Dd;
}
var Md, EE;
function B9() {
    if (EE) return Md;
    (EE = 1), (Md = e), (e.displayName = "kotlin"), (e.aliases = ["kt", "kts"]);
    function e(t) {
        (function (n) {
            (n.languages.kotlin = n.languages.extend("clike", {
                keyword: {
                    pattern:
                        /(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,
                    lookbehind: !0,
                },
                function: [
                    { pattern: /(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/, greedy: !0 },
                    { pattern: /(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/, lookbehind: !0, greedy: !0 },
                ],
                number: /\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,
                operator: /\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/,
            })),
                delete n.languages.kotlin["class-name"];
            var r = {
                "interpolation-punctuation": { pattern: /^\$\{?|\}$/, alias: "punctuation" },
                expression: { pattern: /[\s\S]+/, inside: n.languages.kotlin },
            };
            n.languages.insertBefore("kotlin", "string", {
                "string-literal": [
                    {
                        pattern: /"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/,
                        alias: "multiline",
                        inside: { interpolation: { pattern: /\$(?:[a-z_]\w*|\{[^{}]*\})/i, inside: r }, string: /[\s\S]+/ },
                    },
                    {
                        pattern: /"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/,
                        alias: "singleline",
                        inside: {
                            interpolation: { pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i, lookbehind: !0, inside: r },
                            string: /[\s\S]+/,
                        },
                    },
                ],
                char: { pattern: /'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/, greedy: !0 },
            }),
                delete n.languages.kotlin.string,
                n.languages.insertBefore("kotlin", "keyword", { annotation: { pattern: /\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/, alias: "builtin" } }),
                n.languages.insertBefore("kotlin", "function", { label: { pattern: /\b\w+@|@\w+\b/, alias: "symbol" } }),
                (n.languages.kt = n.languages.kotlin),
                (n.languages.kts = n.languages.kotlin);
        })(t);
    }
    return Md;
}
var Fd, SE;
function U9() {
    if (SE) return Fd;
    (SE = 1), (Fd = e), (e.displayName = "kumir"), (e.aliases = ["kum"]);
    function e(t) {
        (function (n) {
            var r = /\s\x00-\x1f\x22-\x2f\x3a-\x3f\x5b-\x5e\x60\x7b-\x7e/.source;
            function a(i, o) {
                return RegExp(i.replace(/<nonId>/g, r), o);
            }
            (n.languages.kumir = {
                comment: { pattern: /\|.*/ },
                prolog: { pattern: /#.*/, greedy: !0 },
                string: { pattern: /"[^\n\r"]*"|'[^\n\r']*'/, greedy: !0 },
                boolean: { pattern: a(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source), lookbehind: !0 },
                "operator-word": { pattern: a(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source), lookbehind: !0, alias: "keyword" },
                "system-variable": { pattern: a(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source), lookbehind: !0, alias: "keyword" },
                type: [
                    { pattern: a(/(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\x20*таб)?(?=[<nonId>]|$)/.source), lookbehind: !0, alias: "builtin" },
                    { pattern: a(/(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source), lookbehind: !0, alias: "important" },
                ],
                keyword: {
                    pattern: a(
                        /(^|[<nonId>])(?:алг|арг(?:\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\x20+|_)исп)?|кц(?:(?:\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/
                            .source,
                    ),
                    lookbehind: !0,
                },
                name: { pattern: a(/(^|[<nonId>])[^\d<nonId>][^<nonId>]*(?:\x20+[^<nonId>]+)*(?=[<nonId>]|$)/.source), lookbehind: !0 },
                number: { pattern: a(/(^|[<nonId>])(?:\B\$[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?=[<nonId>]|$)/.source, "i"), lookbehind: !0 },
                punctuation: /:=|[(),:;\[\]]/,
                "operator-char": { pattern: /\*\*?|<[=>]?|>=?|[-+/=]/, alias: "operator" },
            }),
                (n.languages.kum = n.languages.kumir);
        })(t);
    }
    return Fd;
}
var Pd, wE;
function z9() {
    if (wE) return Pd;
    (wE = 1), (Pd = e), (e.displayName = "kusto"), (e.aliases = []);
    function e(t) {
        t.languages.kusto = {
            comment: { pattern: /\/\/.*/, greedy: !0 },
            string: { pattern: /```[\s\S]*?```|[hH]?(?:"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\.)*'|@(?:"[^\r\n"]*"|'[^\r\n']*'))/, greedy: !0 },
            verb: { pattern: /(\|\s*)[a-z][\w-]*/i, lookbehind: !0, alias: "keyword" },
            command: { pattern: /\.[a-z][a-z\d-]*\b/, alias: "keyword" },
            "class-name": /\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\b/,
            keyword:
                /\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\s+regex|nulls\s+(?:first|last))(?![\w-])/,
            boolean: /\b(?:false|null|true)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/,
            datetime: [
                {
                    pattern:
                        /\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\s*,\s*)?\d{1,2}(?:\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\s+|-)\d{2}\s+\d{2}:\d{2}(?::\d{2})?(?:\s*(?:\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\d{4}))?\b/,
                    alias: "number",
                },
                { pattern: /[+-]?\b(?:\d{4}-\d{2}-\d{2}(?:[ T]\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)?|\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)Z?/, alias: "number" },
            ],
            number: /\b(?:0x[0-9A-Fa-f]+|\d+(?:\.\d+)?(?:[Ee][+-]?\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\b)?|[+-]?\binf\b/,
            operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\.\./,
            punctuation: /[()\[\]{},;.:]/,
        };
    }
    return Pd;
}
var Bd, kE;
function $9() {
    if (kE) return Bd;
    (kE = 1), (Bd = e), (e.displayName = "latex"), (e.aliases = ["tex", "context"]);
    function e(t) {
        (function (n) {
            var r = /\\(?:[^a-z()[\]]|[a-z*]+)/i,
                a = { "equation-command": { pattern: r, alias: "regex" } };
            (n.languages.latex = {
                comment: /%.*/,
                cdata: { pattern: /(\\begin\{((?:lstlisting|verbatim)\*?)\})[\s\S]*?(?=\\end\{\2\})/, lookbehind: !0 },
                equation: [
                    { pattern: /\$\$(?:\\[\s\S]|[^\\$])+\$\$|\$(?:\\[\s\S]|[^\\$])+\$|\\\([\s\S]*?\\\)|\\\[[\s\S]*?\\\]/, inside: a, alias: "string" },
                    {
                        pattern: /(\\begin\{((?:align|eqnarray|equation|gather|math|multline)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
                        lookbehind: !0,
                        inside: a,
                        alias: "string",
                    },
                ],
                keyword: { pattern: /(\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\[[^\]]+\])?\{)[^}]+(?=\})/, lookbehind: !0 },
                url: { pattern: /(\\url\{)[^}]+(?=\})/, lookbehind: !0 },
                headline: {
                    pattern:
                        /(\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\*?(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
                    lookbehind: !0,
                    alias: "class-name",
                },
                function: { pattern: r, alias: "selector" },
                punctuation: /[[\]{}&]/,
            }),
                (n.languages.tex = n.languages.latex),
                (n.languages.context = n.languages.latex);
        })(t);
    }
    return Bd;
}
var Ud, TE;
function bs() {
    if (TE) return Ud;
    TE = 1;
    var e = Ct();
    (Ud = t), (t.displayName = "php"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                var a = /\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/,
                    i = [
                        { pattern: /\b(?:false|true)\b/i, alias: "boolean" },
                        { pattern: /(::\s*)\b[a-z_]\w*\b(?!\s*\()/i, greedy: !0, lookbehind: !0 },
                        { pattern: /(\b(?:case|const)\s+)\b[a-z_]\w*(?=\s*[;=])/i, greedy: !0, lookbehind: !0 },
                        /\b(?:null)\b/i,
                        /\b[A-Z_][A-Z0-9_]*\b(?!\s*\()/,
                    ],
                    o =
                        /\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
                    l = /<?=>|\?\?=?|\.{3}|\??->|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||<<|>>|[?~]|[/^|%*&<>.+-]=?/,
                    s = /[{}\[\](),:;]/;
                r.languages.php = {
                    delimiter: { pattern: /\?>$|^<\?(?:php(?=\s)|=)?/i, alias: "important" },
                    comment: a,
                    variable: /\$+(?:\w+\b|(?=\{))/,
                    package: { pattern: /(namespace\s+|use\s+(?:function\s+)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i, lookbehind: !0, inside: { punctuation: /\\/ } },
                    "class-name-definition": { pattern: /(\b(?:class|enum|interface|trait)\s+)\b[a-z_]\w*(?!\\)\b/i, lookbehind: !0, alias: "class-name" },
                    "function-definition": { pattern: /(\bfunction\s+)[a-z_]\w*(?=\s*\()/i, lookbehind: !0, alias: "function" },
                    keyword: [
                        {
                            pattern: /(\(\s*)\b(?:array|bool|boolean|float|int|integer|object|string)\b(?=\s*\))/i,
                            alias: "type-casting",
                            greedy: !0,
                            lookbehind: !0,
                        },
                        {
                            pattern:
                                /([(,?]\s*)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string)\b(?=\s*\$)/i,
                            alias: "type-hint",
                            greedy: !0,
                            lookbehind: !0,
                        },
                        {
                            pattern:
                                /(\)\s*:\s*(?:\?\s*)?)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string|void)\b/i,
                            alias: "return-type",
                            greedy: !0,
                            lookbehind: !0,
                        },
                        { pattern: /\b(?:array(?!\s*\()|bool|float|int|iterable|mixed|object|string|void)\b/i, alias: "type-declaration", greedy: !0 },
                        { pattern: /(\|\s*)(?:false|null)\b|\b(?:false|null)(?=\s*\|)/i, alias: "type-declaration", greedy: !0, lookbehind: !0 },
                        { pattern: /\b(?:parent|self|static)(?=\s*::)/i, alias: "static-context", greedy: !0 },
                        { pattern: /(\byield\s+)from\b/i, lookbehind: !0 },
                        /\bclass\b/i,
                        {
                            pattern:
                                /((?:^|[^\s>:]|(?:^|[^-])>|(?:^|[^:]):)\s*)\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\b/i,
                            lookbehind: !0,
                        },
                    ],
                    "argument-name": { pattern: /([(,]\s+)\b[a-z_]\w*(?=\s*:(?!:))/i, lookbehind: !0 },
                    "class-name": [
                        {
                            pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self|\s+static))\s+|\bcatch\s*\()\b[a-z_]\w*(?!\\)\b/i,
                            greedy: !0,
                            lookbehind: !0,
                        },
                        { pattern: /(\|\s*)\b[a-z_]\w*(?!\\)\b/i, greedy: !0, lookbehind: !0 },
                        { pattern: /\b[a-z_]\w*(?!\\)\b(?=\s*\|)/i, greedy: !0 },
                        {
                            pattern: /(\|\s*)(?:\\?\b[a-z_]\w*)+\b/i,
                            alias: "class-name-fully-qualified",
                            greedy: !0,
                            lookbehind: !0,
                            inside: { punctuation: /\\/ },
                        },
                        { pattern: /(?:\\?\b[a-z_]\w*)+\b(?=\s*\|)/i, alias: "class-name-fully-qualified", greedy: !0, inside: { punctuation: /\\/ } },
                        {
                            pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self\b|\s+static\b))\s+|\bcatch\s*\()(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
                            alias: "class-name-fully-qualified",
                            greedy: !0,
                            lookbehind: !0,
                            inside: { punctuation: /\\/ },
                        },
                        { pattern: /\b[a-z_]\w*(?=\s*\$)/i, alias: "type-declaration", greedy: !0 },
                        {
                            pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
                            alias: ["class-name-fully-qualified", "type-declaration"],
                            greedy: !0,
                            inside: { punctuation: /\\/ },
                        },
                        { pattern: /\b[a-z_]\w*(?=\s*::)/i, alias: "static-context", greedy: !0 },
                        {
                            pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*::)/i,
                            alias: ["class-name-fully-qualified", "static-context"],
                            greedy: !0,
                            inside: { punctuation: /\\/ },
                        },
                        { pattern: /([(,?]\s*)[a-z_]\w*(?=\s*\$)/i, alias: "type-hint", greedy: !0, lookbehind: !0 },
                        {
                            pattern: /([(,?]\s*)(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
                            alias: ["class-name-fully-qualified", "type-hint"],
                            greedy: !0,
                            lookbehind: !0,
                            inside: { punctuation: /\\/ },
                        },
                        { pattern: /(\)\s*:\s*(?:\?\s*)?)\b[a-z_]\w*(?!\\)\b/i, alias: "return-type", greedy: !0, lookbehind: !0 },
                        {
                            pattern: /(\)\s*:\s*(?:\?\s*)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
                            alias: ["class-name-fully-qualified", "return-type"],
                            greedy: !0,
                            lookbehind: !0,
                            inside: { punctuation: /\\/ },
                        },
                    ],
                    constant: i,
                    function: { pattern: /(^|[^\\\w])\\?[a-z_](?:[\w\\]*\w)?(?=\s*\()/i, lookbehind: !0, inside: { punctuation: /\\/ } },
                    property: { pattern: /(->\s*)\w+/, lookbehind: !0 },
                    number: o,
                    operator: l,
                    punctuation: s,
                };
                var u = {
                        pattern: /\{\$(?:\{(?:\{[^{}]+\}|[^{}]+)\}|[^{}])+\}|(^|[^\\{])\$+(?:\w+(?:\[[^\r\n\[\]]+\]|->\w+)?)/,
                        lookbehind: !0,
                        inside: r.languages.php,
                    },
                    c = [
                        {
                            pattern: /<<<'([^']+)'[\r\n](?:.*[\r\n])*?\1;/,
                            alias: "nowdoc-string",
                            greedy: !0,
                            inside: { delimiter: { pattern: /^<<<'[^']+'|[a-z_]\w*;$/i, alias: "symbol", inside: { punctuation: /^<<<'?|[';]$/ } } },
                        },
                        {
                            pattern: /<<<(?:"([^"]+)"[\r\n](?:.*[\r\n])*?\1;|([a-z_]\w*)[\r\n](?:.*[\r\n])*?\2;)/i,
                            alias: "heredoc-string",
                            greedy: !0,
                            inside: {
                                delimiter: { pattern: /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i, alias: "symbol", inside: { punctuation: /^<<<"?|[";]$/ } },
                                interpolation: u,
                            },
                        },
                        { pattern: /`(?:\\[\s\S]|[^\\`])*`/, alias: "backtick-quoted-string", greedy: !0 },
                        { pattern: /'(?:\\[\s\S]|[^\\'])*'/, alias: "single-quoted-string", greedy: !0 },
                        { pattern: /"(?:\\[\s\S]|[^\\"])*"/, alias: "double-quoted-string", greedy: !0, inside: { interpolation: u } },
                    ];
                r.languages.insertBefore("php", "variable", {
                    string: c,
                    attribute: {
                        pattern:
                            /#\[(?:[^"'\/#]|\/(?![*/])|\/\/.*$|#(?!\[).*$|\/\*(?:[^*]|\*(?!\/))*\*\/|"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*')+\](?=\s*[a-z$#])/im,
                        greedy: !0,
                        inside: {
                            "attribute-content": {
                                pattern: /^(#\[)[\s\S]+(?=\]$)/,
                                lookbehind: !0,
                                inside: {
                                    comment: a,
                                    string: c,
                                    "attribute-class-name": [
                                        { pattern: /([^:]|^)\b[a-z_]\w*(?!\\)\b/i, alias: "class-name", greedy: !0, lookbehind: !0 },
                                        {
                                            pattern: /([^:]|^)(?:\\?\b[a-z_]\w*)+/i,
                                            alias: ["class-name", "class-name-fully-qualified"],
                                            greedy: !0,
                                            lookbehind: !0,
                                            inside: { punctuation: /\\/ },
                                        },
                                    ],
                                    constant: i,
                                    number: o,
                                    operator: l,
                                    punctuation: s,
                                },
                            },
                            delimiter: { pattern: /^#\[|\]$/, alias: "punctuation" },
                        },
                    },
                }),
                    r.hooks.add("before-tokenize", function (d) {
                        if (/<\?/.test(d.code)) {
                            var m =
                                /<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#(?!\[))(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|#\[|\/\*(?:[^*]|\*(?!\/))*(?:\*\/|$))*?(?:\?>|$)/g;
                            r.languages["markup-templating"].buildPlaceholders(d, "php", m);
                        }
                    }),
                    r.hooks.add("after-tokenize", function (d) {
                        r.languages["markup-templating"].tokenizePlaceholders(d, "php");
                    });
            })(n);
    }
    return Ud;
}
var zd, AE;
function q9() {
    if (AE) return zd;
    AE = 1;
    var e = Ct(),
        t = bs();
    (zd = n), (n.displayName = "latte"), (n.aliases = []);
    function n(r) {
        r.register(e),
            r.register(t),
            (function (a) {
                a.languages.latte = {
                    comment: /^\{\*[\s\S]*/,
                    "latte-tag": { pattern: /(^\{(?:\/(?=[a-z]))?)(?:[=_]|[a-z]\w*\b(?!\())/i, lookbehind: !0, alias: "important" },
                    delimiter: { pattern: /^\{\/?|\}$/, alias: "punctuation" },
                    php: { pattern: /\S(?:[\s\S]*\S)?/, alias: "language-php", inside: a.languages.php },
                };
                var i = a.languages.extend("markup", {});
                a.languages.insertBefore(
                    "inside",
                    "attr-value",
                    {
                        "n-attr": {
                            pattern: /n:[\w-]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+))?/,
                            inside: {
                                "attr-name": { pattern: /^[^\s=]+/, alias: "important" },
                                "attr-value": {
                                    pattern: /=[\s\S]+/,
                                    inside: {
                                        punctuation: [/^=/, { pattern: /^(\s*)["']|["']$/, lookbehind: !0 }],
                                        php: { pattern: /\S(?:[\s\S]*\S)?/, inside: a.languages.php },
                                    },
                                },
                            },
                        },
                    },
                    i.tag,
                ),
                    a.hooks.add("before-tokenize", function (o) {
                        if (o.language === "latte") {
                            var l = /\{\*[\s\S]*?\*\}|\{[^'"\s{}*](?:[^"'/{}]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|\/\*(?:[^*]|\*(?!\/))*\*\/)*\}/g;
                            a.languages["markup-templating"].buildPlaceholders(o, "latte", l), (o.grammar = i);
                        }
                    }),
                    a.hooks.add("after-tokenize", function (o) {
                        a.languages["markup-templating"].tokenizePlaceholders(o, "latte");
                    });
            })(r);
    }
    return zd;
}
var $d, xE;
function G9() {
    if (xE) return $d;
    (xE = 1), ($d = e), (e.displayName = "less"), (e.aliases = []);
    function e(t) {
        (t.languages.less = t.languages.extend("css", {
            comment: [/\/\*[\s\S]*?\*\//, { pattern: /(^|[^\\])\/\/.*/, lookbehind: !0 }],
            atrule: { pattern: /@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/, inside: { punctuation: /[:()]/ } },
            selector: {
                pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,
                inside: { variable: /@+[\w-]+/ },
            },
            property: /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,
            operator: /[+\-*\/]/,
        })),
            t.languages.insertBefore("less", "property", {
                variable: [{ pattern: /@[\w-]+\s*:/, inside: { punctuation: /:/ } }, /@@?[\w-]+/],
                "mixin-usage": { pattern: /([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/, lookbehind: !0, alias: "function" },
            });
    }
    return $d;
}
var qd, RE;
function Cg() {
    if (RE) return qd;
    (RE = 1), (qd = e), (e.displayName = "scheme"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.scheme = {
                comment:
                    /;.*|#;\s*(?:\((?:[^()]|\([^()]*\))*\)|\[(?:[^\[\]]|\[[^\[\]]*\])*\])|#\|(?:[^#|]|#(?!\|)|\|(?!#)|#\|(?:[^#|]|#(?!\|)|\|(?!#))*\|#)*\|#/,
                string: { pattern: /"(?:[^"\\]|\\.)*"/, greedy: !0 },
                symbol: { pattern: /'[^()\[\]#'\s]+/, greedy: !0 },
                char: { pattern: /#\\(?:[ux][a-fA-F\d]+\b|[-a-zA-Z]+\b|[\uD800-\uDBFF][\uDC00-\uDFFF]|\S)/, greedy: !0 },
                "lambda-parameter": [
                    { pattern: /((?:^|[^'`#])[(\[]lambda\s+)(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)/, lookbehind: !0 },
                    { pattern: /((?:^|[^'`#])[(\[]lambda\s+[(\[])[^()\[\]']+/, lookbehind: !0 },
                ],
                keyword: {
                    pattern:
                        /((?:^|[^'`#])[(\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\*)?|let\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\[\]\s]|$)/,
                    lookbehind: !0,
                },
                builtin: {
                    pattern:
                        /((?:^|[^'`#])[(\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\?|boolean=?\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\?|\?|<\?|<=\?|=\?|>\?|>=\?)|close-(?:input-port|output-port|port)|complex\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\??|eq\?|equal\?|eqv\?|error|error-object(?:-irritants|-message|\?)|eval|even\?|exact(?:-integer-sqrt|-integer\?|\?)?|expt|features|file-error\?|floor(?:-quotient|-remainder|\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\??|input-port(?:-open\?|\?)|integer(?:->char|\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\?|newline|not|null\?|number(?:->string|\?)|numerator|odd\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\?|\?)|pair\?|peek-char|peek-u8|port\?|positive\?|procedure\?|quotient|raise|raise-continuable|rational\?|rationalize|read-(?:bytevector|bytevector!|char|error\?|line|string|u8)|real\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?|<\?|<=\?|=\?|>\?|>=\?)?|substring|symbol(?:->string|\?|=\?)|syntax-error|textual-port\?|truncate(?:-quotient|-remainder|\/)?|u8-ready\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\?)(?=[()\[\]\s]|$)/,
                    lookbehind: !0,
                },
                operator: { pattern: /((?:^|[^'`#])[(\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\[\]\s]|$)/, lookbehind: !0 },
                number: {
                    pattern: RegExp(
                        r({
                            "<ureal dec>": /\d+(?:\/\d+)|(?:\d+(?:\.\d*)?|\.\d+)(?:[esfdl][+-]?\d+)?/.source,
                            "<real dec>": /[+-]?<ureal dec>|[+-](?:inf|nan)\.0/.source,
                            "<imaginary dec>": /[+-](?:<ureal dec>|(?:inf|nan)\.0)?i/.source,
                            "<complex dec>": /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,
                            "<num dec>": /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,
                            "<ureal box>": /[0-9a-f]+(?:\/[0-9a-f]+)?/.source,
                            "<real box>": /[+-]?<ureal box>|[+-](?:inf|nan)\.0/.source,
                            "<imaginary box>": /[+-](?:<ureal box>|(?:inf|nan)\.0)?i/.source,
                            "<complex box>": /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,
                            "<num box>": /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,
                            "<number>": /(^|[()\[\]\s])(?:<num dec>|<num box>)(?=[()\[\]\s]|$)/.source,
                        }),
                        "i",
                    ),
                    lookbehind: !0,
                },
                boolean: { pattern: /(^|[()\[\]\s])#(?:[ft]|false|true)(?=[()\[\]\s]|$)/, lookbehind: !0 },
                function: { pattern: /((?:^|[^'`#])[(\[])(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)(?=[()\[\]\s]|$)/, lookbehind: !0 },
                identifier: { pattern: /(^|[()\[\]\s])\|(?:[^\\|]|\\.)*\|(?=[()\[\]\s]|$)/, lookbehind: !0, greedy: !0 },
                punctuation: /[()\[\]']/,
            };
            function r(a) {
                for (var i in a)
                    a[i] = a[i].replace(/<[\w\s]+>/g, function (o) {
                        return "(?:" + a[o].trim() + ")";
                    });
                return a[i];
            }
        })(t);
    }
    return qd;
}
var Gd, IE;
function H9() {
    if (IE) return Gd;
    IE = 1;
    var e = Cg();
    (Gd = t), (t.displayName = "lilypond"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                for (
                    var a = /\((?:[^();"#\\]|\\[\s\S]|;.*(?!.)|"(?:[^"\\]|\\.)*"|#(?:\{(?:(?!#\})[\s\S])*#\}|[^{])|<expr>)*\)/.source, i = 5, o = 0;
                    o < i;
                    o++
                )
                    a = a.replace(/<expr>/g, function () {
                        return a;
                    });
                a = a.replace(/<expr>/g, /[^\s\S]/.source);
                var l = (r.languages.lilypond = {
                    comment: /%(?:(?!\{).*|\{[\s\S]*?%\})/,
                    "embedded-scheme": {
                        pattern: RegExp(
                            /(^|[=\s])#(?:"(?:[^"\\]|\\.)*"|[^\s()"]*(?:[^\s()]|<expr>))/.source.replace(/<expr>/g, function () {
                                return a;
                            }),
                            "m",
                        ),
                        lookbehind: !0,
                        greedy: !0,
                        inside: {
                            scheme: {
                                pattern: /^(#)[\s\S]+$/,
                                lookbehind: !0,
                                alias: "language-scheme",
                                inside: {
                                    "embedded-lilypond": {
                                        pattern: /#\{[\s\S]*?#\}/,
                                        greedy: !0,
                                        inside: { punctuation: /^#\{|#\}$/, lilypond: { pattern: /[\s\S]+/, alias: "language-lilypond", inside: null } },
                                    },
                                    rest: r.languages.scheme,
                                },
                            },
                            punctuation: /#/,
                        },
                    },
                    string: { pattern: /"(?:[^"\\]|\\.)*"/, greedy: !0 },
                    "class-name": { pattern: /(\\new\s+)[\w-]+/, lookbehind: !0 },
                    keyword: { pattern: /\\[a-z][-\w]*/i, inside: { punctuation: /^\\/ } },
                    operator: /[=|]|<<|>>/,
                    punctuation: {
                        pattern: /(^|[a-z\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\d))|[_^]\.?|[.!])|[{}()[\]<>^~]|\\[()[\]<>\\!]|--|__/,
                        lookbehind: !0,
                    },
                    number: /\b\d+(?:\/\d+)?\b/,
                });
                (l["embedded-scheme"].inside.scheme.inside["embedded-lilypond"].inside.lilypond.inside = l), (r.languages.ly = l);
            })(n);
    }
    return Gd;
}
var Hd, NE;
function j9() {
    if (NE) return Hd;
    NE = 1;
    var e = Ct();
    (Hd = t), (t.displayName = "liquid"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.liquid = {
                comment: { pattern: /(^\{%\s*comment\s*%\})[\s\S]+(?=\{%\s*endcomment\s*%\}$)/, lookbehind: !0 },
                delimiter: { pattern: /^\{(?:\{\{|[%\{])-?|-?(?:\}\}|[%\}])\}$/, alias: "punctuation" },
                string: { pattern: /"[^"]*"|'[^']*'/, greedy: !0 },
                keyword:
                    /\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\b/,
                object: /\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\b/,
                function: [
                    { pattern: /(\|\s*)\w+/, lookbehind: !0, alias: "filter" },
                    { pattern: /(\.\s*)(?:first|last|size)/, lookbehind: !0 },
                ],
                boolean: /\b(?:false|nil|true)\b/,
                range: { pattern: /\.\./, alias: "operator" },
                number: /\b\d+(?:\.\d+)?\b/,
                operator: /[!=]=|<>|[<>]=?|[|?:=-]|\b(?:and|contains(?=\s)|or)\b/,
                punctuation: /[.,\[\]()]/,
                empty: { pattern: /\bempty\b/, alias: "keyword" },
            }),
            n.hooks.add("before-tokenize", function (r) {
                var a = /\{%\s*comment\s*%\}[\s\S]*?\{%\s*endcomment\s*%\}|\{(?:%[\s\S]*?%|\{\{[\s\S]*?\}\}|\{[\s\S]*?\})\}/g,
                    i = !1;
                n.languages["markup-templating"].buildPlaceholders(r, "liquid", a, function (o) {
                    var l = /^\{%-?\s*(\w+)/.exec(o);
                    if (l) {
                        var s = l[1];
                        if (s === "raw" && !i) return (i = !0), !0;
                        if (s === "endraw") return (i = !1), !0;
                    }
                    return !i;
                });
            }),
            n.hooks.add("after-tokenize", function (r) {
                n.languages["markup-templating"].tokenizePlaceholders(r, "liquid");
            });
    }
    return Hd;
}
var jd, _E;
function V9() {
    if (_E) return jd;
    (_E = 1), (jd = e), (e.displayName = "lisp"), (e.aliases = []);
    function e(t) {
        (function (n) {
            function r(E) {
                return RegExp(/(\()/.source + "(?:" + E + ")" + /(?=[\s\)])/.source);
            }
            function a(E) {
                return RegExp(/([\s([])/.source + "(?:" + E + ")" + /(?=[\s)])/.source);
            }
            var i = /(?!\d)[-+*/~!@$%^=<>{}\w]+/.source,
                o = "&" + i,
                l = "(\\()",
                s = "(?=\\))",
                u = "(?=\\s)",
                c = /(?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\))*\))*\))*/.source,
                d = {
                    heading: { pattern: /;;;.*/, alias: ["comment", "title"] },
                    comment: /;.*/,
                    string: { pattern: /"(?:[^"\\]|\\.)*"/, greedy: !0, inside: { argument: /[-A-Z]+(?=[.,\s])/, symbol: RegExp("`" + i + "'") } },
                    "quoted-symbol": { pattern: RegExp("#?'" + i), alias: ["variable", "symbol"] },
                    "lisp-property": { pattern: RegExp(":" + i), alias: "property" },
                    splice: { pattern: RegExp(",@?" + i), alias: ["symbol", "variable"] },
                    keyword: [
                        {
                            pattern: RegExp(
                                l +
                                    "(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)" +
                                    u,
                            ),
                            lookbehind: !0,
                        },
                        { pattern: RegExp(l + "(?:append|by|collect|concat|do|finally|for|in|return)" + u), lookbehind: !0 },
                    ],
                    declare: { pattern: r(/declare/.source), lookbehind: !0, alias: "keyword" },
                    interactive: { pattern: r(/interactive/.source), lookbehind: !0, alias: "keyword" },
                    boolean: { pattern: a(/nil|t/.source), lookbehind: !0 },
                    number: { pattern: a(/[-+]?\d+(?:\.\d*)?/.source), lookbehind: !0 },
                    defvar: {
                        pattern: RegExp(l + "def(?:const|custom|group|var)\\s+" + i),
                        lookbehind: !0,
                        inside: { keyword: /^def[a-z]+/, variable: RegExp(i) },
                    },
                    defun: {
                        pattern: RegExp(l + /(?:cl-)?(?:defmacro|defun\*?)\s+/.source + i + /\s+\(/.source + c + /\)/.source),
                        lookbehind: !0,
                        greedy: !0,
                        inside: {
                            keyword: /^(?:cl-)?def\S+/,
                            arguments: null,
                            function: { pattern: RegExp("(^\\s)" + i), lookbehind: !0 },
                            punctuation: /[()]/,
                        },
                    },
                    lambda: {
                        pattern: RegExp(l + "lambda\\s+\\(\\s*(?:&?" + i + "(?:\\s+&?" + i + ")*\\s*)?\\)"),
                        lookbehind: !0,
                        greedy: !0,
                        inside: { keyword: /^lambda/, arguments: null, punctuation: /[()]/ },
                    },
                    car: { pattern: RegExp(l + i), lookbehind: !0 },
                    punctuation: [/(?:['`,]?\(|[)\[\]])/, { pattern: /(\s)\.(?=\s)/, lookbehind: !0 }],
                },
                m = {
                    "lisp-marker": RegExp(o),
                    varform: { pattern: RegExp(/\(/.source + i + /\s+(?=\S)/.source + c + /\)/.source), inside: d },
                    argument: { pattern: RegExp(/(^|[\s(])/.source + i), lookbehind: !0, alias: "variable" },
                    rest: d,
                },
                f = "\\S+(?:\\s+\\S+)*",
                b = {
                    pattern: RegExp(l + c + s),
                    lookbehind: !0,
                    inside: {
                        "rest-vars": { pattern: RegExp("&(?:body|rest)\\s+" + f), inside: m },
                        "other-marker-vars": { pattern: RegExp("&(?:aux|optional)\\s+" + f), inside: m },
                        keys: { pattern: RegExp("&key\\s+" + f + "(?:\\s+&allow-other-keys)?"), inside: m },
                        argument: { pattern: RegExp(i), alias: "variable" },
                        punctuation: /[()]/,
                    },
                };
            (d.lambda.inside.arguments = b),
                (d.defun.inside.arguments = n.util.clone(b)),
                (d.defun.inside.arguments.inside.sublist = b),
                (n.languages.lisp = d),
                (n.languages.elisp = d),
                (n.languages.emacs = d),
                (n.languages["emacs-lisp"] = d);
        })(t);
    }
    return jd;
}
var Vd, CE;
function W9() {
    if (CE) return Vd;
    (CE = 1), (Vd = e), (e.displayName = "livescript"), (e.aliases = []);
    function e(t) {
        (t.languages.livescript = {
            comment: [
                { pattern: /(^|[^\\])\/\*[\s\S]*?\*\//, lookbehind: !0 },
                { pattern: /(^|[^\\])#.*/, lookbehind: !0 },
            ],
            "interpolated-string": {
                pattern: /(^|[^"])("""|")(?:\\[\s\S]|(?!\2)[^\\])*\2(?!")/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    variable: { pattern: /(^|[^\\])#[a-z_](?:-?[a-z]|[\d_])*/m, lookbehind: !0 },
                    interpolation: {
                        pattern: /(^|[^\\])#\{[^}]+\}/m,
                        lookbehind: !0,
                        inside: { "interpolation-punctuation": { pattern: /^#\{|\}$/, alias: "variable" } },
                    },
                    string: /[\s\S]+/,
                },
            },
            string: [{ pattern: /('''|')(?:\\[\s\S]|(?!\1)[^\\])*\1/, greedy: !0 }, { pattern: /<\[[\s\S]*?\]>/, greedy: !0 }, /\\[^\s,;\])}]+/],
            regex: [
                {
                    pattern: /\/\/(?:\[[^\r\n\]]*\]|\\.|(?!\/\/)[^\\\[])+\/\/[gimyu]{0,5}/,
                    greedy: !0,
                    inside: { comment: { pattern: /(^|[^\\])#.*/, lookbehind: !0 } },
                },
                { pattern: /\/(?:\[[^\r\n\]]*\]|\\.|[^/\\\r\n\[])+\/[gimyu]{0,5}/, greedy: !0 },
            ],
            keyword: {
                pattern:
                    /(^|(?!-).)\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\b/m,
                lookbehind: !0,
            },
            "keyword-operator": {
                pattern:
                    /(^|[^-])\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\b)/m,
                lookbehind: !0,
                alias: "operator",
            },
            boolean: { pattern: /(^|[^-])\b(?:false|no|off|on|true|yes)(?!-)\b/m, lookbehind: !0 },
            argument: { pattern: /(^|(?!\.&\.)[^&])&(?!&)\d*/m, lookbehind: !0, alias: "variable" },
            number: /\b(?:\d+~[\da-z]+|\d[\d_]*(?:\.\d[\d_]*)?(?:[a-z]\w*)?)/i,
            identifier: /[a-z_](?:-?[a-z]|[\d_])*/i,
            operator: [
                { pattern: /( )\.(?= )/, lookbehind: !0 },
                /\.(?:[=~]|\.\.?)|\.(?:[&|^]|<<|>>>?)\.|:(?:=|:=?)|&&|\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\+\+?|@@?|%%?|\*\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\^\^?|[\/?]/,
            ],
            punctuation: /[(){}\[\]|.,:;`]/,
        }),
            (t.languages.livescript["interpolated-string"].inside.interpolation.inside.rest = t.languages.livescript);
    }
    return Vd;
}
var Wd, OE;
function Y9() {
    if (OE) return Wd;
    (OE = 1), (Wd = e), (e.displayName = "llvm"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.llvm = {
                comment: /;.*/,
                string: { pattern: /"[^"]*"/, greedy: !0 },
                boolean: /\b(?:false|true)\b/,
                variable: /[%@!#](?:(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+|\d+)/i,
                label: /(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+:/i,
                type: { pattern: /\b(?:double|float|fp128|half|i[1-9]\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\b/, alias: "class-name" },
                keyword: /\b[a-z_][a-z_0-9]*\b/,
                number: /[+-]?\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-Fa-f]+\b|\b0xK[\dA-Fa-f]{20}\b|\b0x[ML][\dA-Fa-f]{32}\b|\b0xH[\dA-Fa-f]{4}\b/,
                punctuation: /[{}[\];(),.!*=<>]/,
            };
        })(t);
    }
    return Wd;
}
var Yd, LE;
function K9() {
    if (LE) return Yd;
    (LE = 1), (Yd = e), (e.displayName = "log"), (e.aliases = []);
    function e(t) {
        t.languages.log = {
            string: { pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?![st] | \w)(?:[^'\\\r\n]|\\.)*'/, greedy: !0 },
            exception: {
                pattern: /(^|[^\w.])[a-z][\w.]*(?:Error|Exception):.*(?:(?:\r\n?|\n)[ \t]*(?:at[ \t].+|\.{3}.*|Caused by:.*))+(?:(?:\r\n?|\n)[ \t]*\.\.\. .*)?/,
                lookbehind: !0,
                greedy: !0,
                alias: ["javastacktrace", "language-javastacktrace"],
                inside: t.languages.javastacktrace || { keyword: /\bat\b/, function: /[a-z_][\w$]*(?=\()/, punctuation: /[.:()]/ },
            },
            level: [
                { pattern: /\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\b/, alias: ["error", "important"] },
                { pattern: /\b(?:WARN|WARNING|WRN)\b/, alias: ["warning", "important"] },
                { pattern: /\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\b/, alias: ["info", "keyword"] },
                { pattern: /\b(?:DBG|DEBUG|FINE)\b/, alias: ["debug", "keyword"] },
                { pattern: /\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\b/, alias: ["trace", "comment"] },
            ],
            property: { pattern: /((?:^|[\]|])[ \t]*)[a-z_](?:[\w-]|\b\/\b)*(?:[. ]\(?\w(?:[\w-]|\b\/\b)*\)?)*:(?=\s)/im, lookbehind: !0 },
            separator: { pattern: /(^|[^-+])-{3,}|={3,}|\*{3,}|- - /m, lookbehind: !0, alias: "comment" },
            url: /\b(?:file|ftp|https?):\/\/[^\s|,;'"]*[^\s|,;'">.]/,
            email: { pattern: /(^|\s)[-\w+.]+@[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)+(?=\s)/, lookbehind: !0, alias: "url" },
            "ip-address": { pattern: /\b(?:\d{1,3}(?:\.\d{1,3}){3})\b/, alias: "constant" },
            "mac-address": { pattern: /\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\b/i, alias: "constant" },
            domain: { pattern: /(^|\s)[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)*\.[a-z][a-z0-9-]+(?=\s)/, lookbehind: !0, alias: "constant" },
            uuid: { pattern: /\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\b/i, alias: "constant" },
            hash: { pattern: /\b(?:[a-f0-9]{32}){1,2}\b/i, alias: "constant" },
            "file-path": {
                pattern: /\b[a-z]:[\\/][^\s|,;:(){}\[\]"']+|(^|[\s:\[\](>|])\.{0,2}\/\w[^\s|,;:(){}\[\]"']*/i,
                lookbehind: !0,
                greedy: !0,
                alias: "string",
            },
            date: {
                pattern: RegExp(
                    /\b\d{4}[-/]\d{2}[-/]\d{2}(?:T(?=\d{1,2}:)|(?=\s\d{1,2}:))/.source +
                        "|" +
                        /\b\d{1,4}[-/ ](?:\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\d{2,4}T?\b/.source +
                        "|" +
                        /\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\s{1,2}\d{1,2}\b/
                            .source,
                    "i",
                ),
                alias: "number",
            },
            time: { pattern: /\b\d{1,2}:\d{1,2}:\d{1,2}(?:[.,:]\d+)?(?:\s?[+-]\d{2}:?\d{2}|Z)?\b/, alias: "number" },
            boolean: /\b(?:false|null|true)\b/i,
            number: { pattern: /(^|[^.\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\d[\da-f]*(?:\.\d+)*(?:e[+-]?\d+)?[a-z]{0,3}\b)\b(?!\.\w)/i, lookbehind: !0 },
            operator: /[;:?<=>~/@!$%&+\-|^(){}*#]/,
            punctuation: /[\[\].,]/,
        };
    }
    return Yd;
}
var Kd, DE;
function X9() {
    if (DE) return Kd;
    (DE = 1), (Kd = e), (e.displayName = "lolcode"), (e.aliases = []);
    function e(t) {
        t.languages.lolcode = {
            comment: [/\bOBTW\s[\s\S]*?\sTLDR\b/, /\bBTW.+/],
            string: { pattern: /"(?::.|[^":])*"/, inside: { variable: /:\{[^}]+\}/, symbol: [/:\([a-f\d]+\)/i, /:\[[^\]]+\]/, /:[)>o":]/] }, greedy: !0 },
            number: /(?:\B-)?(?:\b\d+(?:\.\d*)?|\B\.\d+)/,
            symbol: { pattern: /(^|\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\s|,|$)/, lookbehind: !0, inside: { keyword: /A(?=\s)/ } },
            label: { pattern: /((?:^|\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\w*/, lookbehind: !0, alias: "string" },
            function: { pattern: /((?:^|\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\w*/, lookbehind: !0 },
            keyword: [
                {
                    pattern:
                        /(^|\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\?|YA RLY|YR)(?=\s|,|$)/,
                    lookbehind: !0,
                },
                /'Z(?=\s|,|$)/,
            ],
            boolean: { pattern: /(^|\s)(?:FAIL|WIN)(?=\s|,|$)/, lookbehind: !0 },
            variable: { pattern: /(^|\s)IT(?=\s|,|$)/, lookbehind: !0 },
            operator: {
                pattern: /(^|\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\s|,|$)/,
                lookbehind: !0,
            },
            punctuation: /\.{3}|…|,|!/,
        };
    }
    return Kd;
}
var Xd, ME;
function Z9() {
    if (ME) return Xd;
    (ME = 1), (Xd = e), (e.displayName = "magma"), (e.aliases = []);
    function e(t) {
        t.languages.magma = {
            output: {
                pattern: /^(>.*(?:\r(?:\n|(?!\n))|\n))(?!>)(?:.+|(?:\r(?:\n|(?!\n))|\n)(?!>).*)(?:(?:\r(?:\n|(?!\n))|\n)(?!>).*)*/m,
                lookbehind: !0,
                greedy: !0,
            },
            comment: { pattern: /\/\/.*|\/\*[\s\S]*?\*\//, greedy: !0 },
            string: { pattern: /(^|[^\\"])"(?:[^\r\n\\"]|\\.)*"/, lookbehind: !0, greedy: !0 },
            keyword:
                /\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\b/,
            boolean: /\b(?:false|true)\b/,
            generator: { pattern: /\b[a-z_]\w*(?=\s*<)/i, alias: "class-name" },
            function: /\b[a-z_]\w*(?=\s*\()/i,
            number: { pattern: /(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/, lookbehind: !0 },
            operator: /->|[-+*/^~!|#=]|:=|\.\./,
            punctuation: /[()[\]{}<>,;.:]/,
        };
    }
    return Xd;
}
var Zd, FE;
function Q9() {
    if (FE) return Zd;
    (FE = 1), (Zd = e), (e.displayName = "makefile"), (e.aliases = []);
    function e(t) {
        t.languages.makefile = {
            comment: { pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/, lookbehind: !0 },
            string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            "builtin-target": { pattern: /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/, alias: "builtin" },
            target: { pattern: /^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m, alias: "symbol", inside: { variable: /\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/ } },
            variable: /\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
            keyword: /-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,
            function: {
                pattern:
                    /(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,
                lookbehind: !0,
            },
            operator: /(?:::|[?:+!])?=|[|@]/,
            punctuation: /[:;(){}]/,
        };
    }
    return Zd;
}
var Qd, PE;
function J9() {
    if (PE) return Qd;
    (PE = 1), (Qd = e), (e.displayName = "markdown"), (e.aliases = ["md"]);
    function e(t) {
        (function (n) {
            var r = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;
            function a(m) {
                return (
                    (m = m.replace(/<inner>/g, function () {
                        return r;
                    })),
                    RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + "(?:" + m + ")")
                );
            }
            var i = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,
                o = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g, function () {
                    return i;
                }),
                l = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;
            (n.languages.markdown = n.languages.extend("markup", {})),
                n.languages.insertBefore("markdown", "prolog", {
                    "front-matter-block": {
                        pattern: /(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: {
                            punctuation: /^---|---$/,
                            "front-matter": { pattern: /\S+(?:\s+\S+)*/, alias: ["yaml", "language-yaml"], inside: n.languages.yaml },
                        },
                    },
                    blockquote: { pattern: /^>(?:[\t ]*>)*/m, alias: "punctuation" },
                    table: {
                        pattern: RegExp("^" + o + l + "(?:" + o + ")*", "m"),
                        inside: {
                            "table-data-rows": {
                                pattern: RegExp("^(" + o + l + ")(?:" + o + ")*$"),
                                lookbehind: !0,
                                inside: { "table-data": { pattern: RegExp(i), inside: n.languages.markdown }, punctuation: /\|/ },
                            },
                            "table-line": { pattern: RegExp("^(" + o + ")" + l + "$"), lookbehind: !0, inside: { punctuation: /\||:?-{3,}:?/ } },
                            "table-header-row": {
                                pattern: RegExp("^" + o + "$"),
                                inside: { "table-header": { pattern: RegExp(i), alias: "important", inside: n.languages.markdown }, punctuation: /\|/ },
                            },
                        },
                    },
                    code: [
                        { pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/, lookbehind: !0, alias: "keyword" },
                        {
                            pattern: /^```[\s\S]*?^```$/m,
                            greedy: !0,
                            inside: {
                                "code-block": { pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m, lookbehind: !0 },
                                "code-language": { pattern: /^(```).+/, lookbehind: !0 },
                                punctuation: /```/,
                            },
                        },
                    ],
                    title: [
                        { pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m, alias: "important", inside: { punctuation: /==+$|--+$/ } },
                        { pattern: /(^\s*)#.+/m, lookbehind: !0, alias: "important", inside: { punctuation: /^#+|#+$/ } },
                    ],
                    hr: { pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m, lookbehind: !0, alias: "punctuation" },
                    list: { pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m, lookbehind: !0, alias: "punctuation" },
                    "url-reference": {
                        pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
                        inside: {
                            variable: { pattern: /^(!?\[)[^\]]+/, lookbehind: !0 },
                            string: /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
                            punctuation: /^[\[\]!:]|[<>]/,
                        },
                        alias: "url",
                    },
                    bold: {
                        pattern: a(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),
                        lookbehind: !0,
                        greedy: !0,
                        inside: { content: { pattern: /(^..)[\s\S]+(?=..$)/, lookbehind: !0, inside: {} }, punctuation: /\*\*|__/ },
                    },
                    italic: {
                        pattern: a(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),
                        lookbehind: !0,
                        greedy: !0,
                        inside: { content: { pattern: /(^.)[\s\S]+(?=.$)/, lookbehind: !0, inside: {} }, punctuation: /[*_]/ },
                    },
                    strike: {
                        pattern: a(/(~~?)(?:(?!~)<inner>)+\2/.source),
                        lookbehind: !0,
                        greedy: !0,
                        inside: { content: { pattern: /(^~~?)[\s\S]+(?=\1$)/, lookbehind: !0, inside: {} }, punctuation: /~~?/ },
                    },
                    "code-snippet": {
                        pattern: /(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,
                        lookbehind: !0,
                        greedy: !0,
                        alias: ["code", "keyword"],
                    },
                    url: {
                        pattern: a(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),
                        lookbehind: !0,
                        greedy: !0,
                        inside: {
                            operator: /^!/,
                            content: { pattern: /(^\[)[^\]]+(?=\])/, lookbehind: !0, inside: {} },
                            variable: { pattern: /(^\][ \t]?\[)[^\]]+(?=\]$)/, lookbehind: !0 },
                            url: { pattern: /(^\]\()[^\s)]+/, lookbehind: !0 },
                            string: { pattern: /(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/, lookbehind: !0 },
                        },
                    },
                }),
                ["url", "bold", "italic", "strike"].forEach(function (m) {
                    ["url", "bold", "italic", "strike", "code-snippet"].forEach(function (f) {
                        m !== f && (n.languages.markdown[m].inside.content.inside[f] = n.languages.markdown[f]);
                    });
                }),
                n.hooks.add("after-tokenize", function (m) {
                    if (m.language !== "markdown" && m.language !== "md") return;
                    function f(b) {
                        if (!(!b || typeof b == "string"))
                            for (var E = 0, I = b.length; E < I; E++) {
                                var y = b[E];
                                if (y.type !== "code") {
                                    f(y.content);
                                    continue;
                                }
                                var g = y.content[1],
                                    v = y.content[3];
                                if (g && v && g.type === "code-language" && v.type === "code-block" && typeof g.content == "string") {
                                    var T = g.content.replace(/\b#/g, "sharp").replace(/\b\+\+/g, "pp");
                                    T = (/[a-z][\w-]*/i.exec(T) || [""])[0].toLowerCase();
                                    var R = "language-" + T;
                                    v.alias ? (typeof v.alias == "string" ? (v.alias = [v.alias, R]) : v.alias.push(R)) : (v.alias = [R]);
                                }
                            }
                    }
                    f(m.tokens);
                }),
                n.hooks.add("wrap", function (m) {
                    if (m.type === "code-block") {
                        for (var f = "", b = 0, E = m.classes.length; b < E; b++) {
                            var I = m.classes[b],
                                y = /language-(.+)/.exec(I);
                            if (y) {
                                f = y[1];
                                break;
                            }
                        }
                        var g = n.languages[f];
                        if (g) m.content = n.highlight(d(m.content.value), g, f);
                        else if (f && f !== "none" && n.plugins.autoloader) {
                            var v = "md-" + new Date().valueOf() + "-" + Math.floor(Math.random() * 1e16);
                            (m.attributes.id = v),
                                n.plugins.autoloader.loadLanguages(f, function () {
                                    var T = document.getElementById(v);
                                    T && (T.innerHTML = n.highlight(T.textContent, n.languages[f], f));
                                });
                        }
                    }
                });
            var s = RegExp(n.languages.markup.tag.pattern.source, "gi"),
                u = { amp: "&", lt: "<", gt: ">", quot: '"' },
                c = String.fromCodePoint || String.fromCharCode;
            function d(m) {
                var f = m.replace(s, "");
                return (
                    (f = f.replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi, function (b, E) {
                        if (((E = E.toLowerCase()), E[0] === "#")) {
                            var I;
                            return E[1] === "x" ? (I = parseInt(E.slice(2), 16)) : (I = Number(E.slice(1))), c(I);
                        } else {
                            var y = u[E];
                            return y || b;
                        }
                    })),
                    f
                );
            }
            n.languages.md = n.languages.markdown;
        })(t);
    }
    return Qd;
}
var Jd, BE;
function eO() {
    if (BE) return Jd;
    (BE = 1), (Jd = e), (e.displayName = "matlab"), (e.aliases = []);
    function e(t) {
        t.languages.matlab = {
            comment: [/%\{[\s\S]*?\}%/, /%.+/],
            string: { pattern: /\B'(?:''|[^'\r\n])*'/, greedy: !0 },
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?(?:[ij])?|\b[ij]\b/,
            keyword: /\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\b/,
            function: /\b(?!\d)\w+(?=\s*\()/,
            operator: /\.?[*^\/\\']|[+\-:@]|[<>=~]=?|&&?|\|\|?/,
            punctuation: /\.{3}|[.,;\[\](){}!]/,
        };
    }
    return Jd;
}
var ep, UE;
function tO() {
    if (UE) return ep;
    (UE = 1), (ep = e), (e.displayName = "maxscript"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r =
                /\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\b/i;
            n.languages.maxscript = {
                comment: { pattern: /\/\*[\s\S]*?(?:\*\/|$)|--.*/, greedy: !0 },
                string: { pattern: /(^|[^"\\@])(?:"(?:[^"\\]|\\[\s\S])*"|@"[^"]*")/, lookbehind: !0, greedy: !0 },
                path: { pattern: /\$(?:[\w/\\.*?]|'[^']*')*/, greedy: !0, alias: "string" },
                "function-call": {
                    pattern: RegExp(
                        "((?:" +
                            (/^/.source +
                                "|" +
                                /[;=<>+\-*/^({\[]/.source +
                                "|" +
                                /\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\b/.source) +
                            ")[ 	]*)(?!" +
                            r.source +
                            ")" +
                            /[a-z_]\w*\b/.source +
                            "(?=[ 	]*(?:" +
                            ("(?!" + r.source + ")" + /[a-z_]/.source + "|" + /\d|-\.?\d/.source + "|" + /[({'"$@#?]/.source) +
                            "))",
                        "im",
                    ),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "function",
                },
                "function-definition": { pattern: /(\b(?:fn|function)\s+)\w+\b/i, lookbehind: !0, alias: "function" },
                argument: { pattern: /\b[a-z_]\w*(?=:)/i, alias: "attr-name" },
                keyword: r,
                boolean: /\b(?:false|true)\b/,
                time: {
                    pattern: /(^|[^\w.])(?:(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?[msft])+|\d+:\d+(?:\.\d*)?)(?![\w.:])/,
                    lookbehind: !0,
                    alias: "number",
                },
                number: [{ pattern: /(^|[^\w.])(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?|0x[a-fA-F0-9]+)(?![\w.:])/, lookbehind: !0 }, /\b(?:e|pi)\b/],
                constant: /\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\b/,
                color: { pattern: /\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\b/i, alias: "constant" },
                operator: /[-+*/<>=!]=?|[&^?]|#(?!\()/,
                punctuation: /[()\[\]{}.:,;]|#(?=\()|\\$/m,
            };
        })(t);
    }
    return ep;
}
var tp, zE;
function nO() {
    if (zE) return tp;
    (zE = 1), (tp = e), (e.displayName = "mel"), (e.aliases = []);
    function e(t) {
        (t.languages.mel = {
            comment: /\/\/.*/,
            code: { pattern: /`(?:\\.|[^\\`\r\n])*`/, greedy: !0, alias: "italic", inside: { delimiter: { pattern: /^`|`$/, alias: "punctuation" } } },
            string: { pattern: /"(?:\\.|[^\\"\r\n])*"/, greedy: !0 },
            variable: /\$\w+/,
            number: /\b0x[\da-fA-F]+\b|\b\d+(?:\.\d*)?|\B\.\d+/,
            flag: { pattern: /-[^\d\W]\w*/, alias: "operator" },
            keyword: /\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\b/,
            function:
                /\b\w+(?=\()|\b(?:CBG|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|Mayatomr|about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\b/,
            operator: [
                /\+[+=]?|-[-=]?|&&|\|\||[<>]=|[*\/!=]=?|[%^]/,
                { pattern: /(^|[^<])<(?!<)/, lookbehind: !0 },
                { pattern: /(^|[^>])>(?!>)/, lookbehind: !0 },
            ],
            punctuation: /<<|>>|[.,:;?\[\](){}]/,
        }),
            (t.languages.mel.code.inside.rest = t.languages.mel);
    }
    return tp;
}
var np, $E;
function rO() {
    if ($E) return np;
    ($E = 1), (np = e), (e.displayName = "mermaid"), (e.aliases = []);
    function e(t) {
        t.languages.mermaid = {
            comment: { pattern: /%%.*/, greedy: !0 },
            style: {
                pattern: /^([ \t]*(?:classDef|linkStyle|style)[ \t]+[\w$-]+[ \t]+)\w.*[^\s;]/m,
                lookbehind: !0,
                inside: { property: /\b\w[\w-]*(?=[ \t]*:)/, operator: /:/, punctuation: /,/ },
            },
            "inter-arrow-label": {
                pattern:
                    /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \t]*(?:"[^"\r\n]*"|[^\s".=-](?:[^\r\n.=-]*[^\s.=-])?)[ \t]*(?:\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    arrow: { pattern: /(?:\.+->?|--+[->]|==+[=>])$/, alias: "operator" },
                    label: { pattern: /^([\s\S]{2}[ \t]*)\S(?:[\s\S]*\S)?/, lookbehind: !0, alias: "property" },
                    "arrow-head": { pattern: /^\S+/, alias: ["arrow", "operator"] },
                },
            },
            arrow: [
                { pattern: /(^|[^{}|o.-])[|}][|o](?:--|\.\.)[|o][|{](?![{}|o.-])/, lookbehind: !0, alias: "operator" },
                {
                    pattern: /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\.*-)[>ox]?|(?:==+|--+|-\.*-)[>ox]|===+|---+|-\.+-)(?![<>ox.=-])/,
                    lookbehind: !0,
                    alias: "operator",
                },
                { pattern: /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/, lookbehind: !0, alias: "operator" },
                { pattern: /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\|?(?:--|\.\.)|(?:--|\.\.)\|?>|--|\.\.)(?![<>|*o.-])/, lookbehind: !0, alias: "operator" },
            ],
            label: { pattern: /(^|[^|<])\|(?:[^\r\n"|]|"[^"\r\n]*")+\|/, lookbehind: !0, greedy: !0, alias: "property" },
            text: { pattern: /(?:[(\[{]+|\b>)(?:[^\r\n"()\[\]{}]|"[^"\r\n]*")+(?:[)\]}]+|>)/, alias: "string" },
            string: { pattern: /"[^"\r\n]*"/, greedy: !0 },
            annotation: { pattern: /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\[\[(?:choice|fork|join)\]\]/i, alias: "important" },
            keyword: [
                {
                    pattern:
                        /(^[ \t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\w$-])/m,
                    lookbehind: !0,
                    greedy: !0,
                },
                {
                    pattern:
                        /(^[ \t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \t]+note)?|loop|opt|par|participant|rect|state|note[ \t]+(?:over|(?:left|right)[ \t]+of))(?![\w$-])/im,
                    lookbehind: !0,
                    greedy: !0,
                },
            ],
            entity: /#[a-z0-9]+;/,
            operator: { pattern: /(\w[ \t]*)&(?=[ \t]*\w)|:::|:/, lookbehind: !0 },
            punctuation: /[(){};]/,
        };
    }
    return np;
}
var rp, qE;
function aO() {
    if (qE) return rp;
    (qE = 1), (rp = e), (e.displayName = "mizar"), (e.aliases = []);
    function e(t) {
        t.languages.mizar = {
            comment: /::.+/,
            keyword:
                /@proof\b|\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\b/,
            parameter: { pattern: /\$(?:10|\d)/, alias: "variable" },
            variable: /\b\w+(?=:)/,
            number: /(?:\b|-)\d+\b/,
            operator: /\.\.\.|->|&|\.?=/,
            punctuation: /\(#|#\)|[,:;\[\](){}]/,
        };
    }
    return rp;
}
var ap, GE;
function iO() {
    if (GE) return ap;
    (GE = 1), (ap = e), (e.displayName = "mongodb"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = [
                    "$eq",
                    "$gt",
                    "$gte",
                    "$in",
                    "$lt",
                    "$lte",
                    "$ne",
                    "$nin",
                    "$and",
                    "$not",
                    "$nor",
                    "$or",
                    "$exists",
                    "$type",
                    "$expr",
                    "$jsonSchema",
                    "$mod",
                    "$regex",
                    "$text",
                    "$where",
                    "$geoIntersects",
                    "$geoWithin",
                    "$near",
                    "$nearSphere",
                    "$all",
                    "$elemMatch",
                    "$size",
                    "$bitsAllClear",
                    "$bitsAllSet",
                    "$bitsAnyClear",
                    "$bitsAnySet",
                    "$comment",
                    "$elemMatch",
                    "$meta",
                    "$slice",
                    "$currentDate",
                    "$inc",
                    "$min",
                    "$max",
                    "$mul",
                    "$rename",
                    "$set",
                    "$setOnInsert",
                    "$unset",
                    "$addToSet",
                    "$pop",
                    "$pull",
                    "$push",
                    "$pullAll",
                    "$each",
                    "$position",
                    "$slice",
                    "$sort",
                    "$bit",
                    "$addFields",
                    "$bucket",
                    "$bucketAuto",
                    "$collStats",
                    "$count",
                    "$currentOp",
                    "$facet",
                    "$geoNear",
                    "$graphLookup",
                    "$group",
                    "$indexStats",
                    "$limit",
                    "$listLocalSessions",
                    "$listSessions",
                    "$lookup",
                    "$match",
                    "$merge",
                    "$out",
                    "$planCacheStats",
                    "$project",
                    "$redact",
                    "$replaceRoot",
                    "$replaceWith",
                    "$sample",
                    "$set",
                    "$skip",
                    "$sort",
                    "$sortByCount",
                    "$unionWith",
                    "$unset",
                    "$unwind",
                    "$setWindowFields",
                    "$abs",
                    "$accumulator",
                    "$acos",
                    "$acosh",
                    "$add",
                    "$addToSet",
                    "$allElementsTrue",
                    "$and",
                    "$anyElementTrue",
                    "$arrayElemAt",
                    "$arrayToObject",
                    "$asin",
                    "$asinh",
                    "$atan",
                    "$atan2",
                    "$atanh",
                    "$avg",
                    "$binarySize",
                    "$bsonSize",
                    "$ceil",
                    "$cmp",
                    "$concat",
                    "$concatArrays",
                    "$cond",
                    "$convert",
                    "$cos",
                    "$dateFromParts",
                    "$dateToParts",
                    "$dateFromString",
                    "$dateToString",
                    "$dayOfMonth",
                    "$dayOfWeek",
                    "$dayOfYear",
                    "$degreesToRadians",
                    "$divide",
                    "$eq",
                    "$exp",
                    "$filter",
                    "$first",
                    "$floor",
                    "$function",
                    "$gt",
                    "$gte",
                    "$hour",
                    "$ifNull",
                    "$in",
                    "$indexOfArray",
                    "$indexOfBytes",
                    "$indexOfCP",
                    "$isArray",
                    "$isNumber",
                    "$isoDayOfWeek",
                    "$isoWeek",
                    "$isoWeekYear",
                    "$last",
                    "$last",
                    "$let",
                    "$literal",
                    "$ln",
                    "$log",
                    "$log10",
                    "$lt",
                    "$lte",
                    "$ltrim",
                    "$map",
                    "$max",
                    "$mergeObjects",
                    "$meta",
                    "$min",
                    "$millisecond",
                    "$minute",
                    "$mod",
                    "$month",
                    "$multiply",
                    "$ne",
                    "$not",
                    "$objectToArray",
                    "$or",
                    "$pow",
                    "$push",
                    "$radiansToDegrees",
                    "$range",
                    "$reduce",
                    "$regexFind",
                    "$regexFindAll",
                    "$regexMatch",
                    "$replaceOne",
                    "$replaceAll",
                    "$reverseArray",
                    "$round",
                    "$rtrim",
                    "$second",
                    "$setDifference",
                    "$setEquals",
                    "$setIntersection",
                    "$setIsSubset",
                    "$setUnion",
                    "$size",
                    "$sin",
                    "$slice",
                    "$split",
                    "$sqrt",
                    "$stdDevPop",
                    "$stdDevSamp",
                    "$strcasecmp",
                    "$strLenBytes",
                    "$strLenCP",
                    "$substr",
                    "$substrBytes",
                    "$substrCP",
                    "$subtract",
                    "$sum",
                    "$switch",
                    "$tan",
                    "$toBool",
                    "$toDate",
                    "$toDecimal",
                    "$toDouble",
                    "$toInt",
                    "$toLong",
                    "$toObjectId",
                    "$toString",
                    "$toLower",
                    "$toUpper",
                    "$trim",
                    "$trunc",
                    "$type",
                    "$week",
                    "$year",
                    "$zip",
                    "$count",
                    "$dateAdd",
                    "$dateDiff",
                    "$dateSubtract",
                    "$dateTrunc",
                    "$getField",
                    "$rand",
                    "$sampleRate",
                    "$setField",
                    "$unsetField",
                    "$comment",
                    "$explain",
                    "$hint",
                    "$max",
                    "$maxTimeMS",
                    "$min",
                    "$orderby",
                    "$query",
                    "$returnKey",
                    "$showDiskLoc",
                    "$natural",
                ],
                a = ["ObjectId", "Code", "BinData", "DBRef", "Timestamp", "NumberLong", "NumberDecimal", "MaxKey", "MinKey", "RegExp", "ISODate", "UUID"];
            r = r.map(function (o) {
                return o.replace("$", "\\$");
            });
            var i = "(?:" + r.join("|") + ")\\b";
            (n.languages.mongodb = n.languages.extend("javascript", {})),
                n.languages.insertBefore("mongodb", "string", {
                    property: {
                        pattern: /(?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)(?=\s*:)/,
                        greedy: !0,
                        inside: { keyword: RegExp(`^(['"])?` + i + "(?:\\1)?$") },
                    },
                }),
                (n.languages.mongodb.string.inside = {
                    url: { pattern: /https?:\/\/[-\w@:%.+~#=]{1,256}\.[a-z0-9()]{1,6}\b[-\w()@:%+.~#?&/=]*/i, greedy: !0 },
                    entity: { pattern: /\b(?:(?:[01]?\d\d?|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d\d?|2[0-4]\d|25[0-5])\b/, greedy: !0 },
                }),
                n.languages.insertBefore("mongodb", "constant", { builtin: { pattern: RegExp("\\b(?:" + a.join("|") + ")\\b"), alias: "keyword" } });
        })(t);
    }
    return ap;
}
var ip, HE;
function oO() {
    if (HE) return ip;
    (HE = 1), (ip = e), (e.displayName = "monkey"), (e.aliases = []);
    function e(t) {
        t.languages.monkey = {
            comment: { pattern: /^#Rem\s[\s\S]*?^#End|'.+/im, greedy: !0 },
            string: { pattern: /"[^"\r\n]*"/, greedy: !0 },
            preprocessor: { pattern: /(^[ \t]*)#.+/m, lookbehind: !0, greedy: !0, alias: "property" },
            function: /\b\w+(?=\()/,
            "type-char": { pattern: /\b[?%#$]/, alias: "class-name" },
            number: { pattern: /((?:\.\.)?)(?:(?:\b|\B-\.?|\B\.)\d+(?:(?!\.\.)\.\d*)?|\$[\da-f]+)/i, lookbehind: !0 },
            keyword:
                /\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\b/i,
            operator: /\.\.|<[=>]?|>=?|:?=|(?:[+\-*\/&~|]|\b(?:Mod|Shl|Shr)\b)=?|\b(?:And|Not|Or)\b/i,
            punctuation: /[.,:;()\[\]]/,
        };
    }
    return ip;
}
var op, jE;
function lO() {
    if (jE) return op;
    (jE = 1), (op = e), (e.displayName = "moonscript"), (e.aliases = ["moon"]);
    function e(t) {
        (t.languages.moonscript = {
            comment: /--.*/,
            string: [
                { pattern: /'[^']*'|\[(=*)\[[\s\S]*?\]\1\]/, greedy: !0 },
                {
                    pattern: /"[^"]*"/,
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /#\{[^{}]*\}/,
                            inside: {
                                moonscript: { pattern: /(^#\{)[\s\S]+(?=\})/, lookbehind: !0, inside: null },
                                "interpolation-punctuation": { pattern: /#\{|\}/, alias: "punctuation" },
                            },
                        },
                    },
                },
            ],
            "class-name": [{ pattern: /(\b(?:class|extends)[ \t]+)\w+/, lookbehind: !0 }, /\b[A-Z]\w*/],
            keyword:
                /\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\b/,
            variable: /@@?\w*/,
            property: { pattern: /\b(?!\d)\w+(?=:)|(:)(?!\d)\w+/, lookbehind: !0 },
            function: {
                pattern:
                    /\b(?:_G|_VERSION|assert|collectgarbage|coroutine\.(?:create|resume|running|status|wrap|yield)|debug\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\b/,
                inside: { punctuation: /\./ },
            },
            boolean: /\b(?:false|true)\b/,
            number: /(?:\B\.\d+|\b\d+\.\d+|\b\d+(?=[eE]))(?:[eE][-+]?\d+)?\b|\b(?:0x[a-fA-F\d]+|\d+)(?:U?LL)?\b/,
            operator: /\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\.\.)=?|[:#^]|\b(?:and|or)\b=?|\b(?:not)\b/,
            punctuation: /[.,()[\]{}\\]/,
        }),
            (t.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside = t.languages.moonscript),
            (t.languages.moon = t.languages.moonscript);
    }
    return op;
}
var lp, VE;
function sO() {
    if (VE) return lp;
    (VE = 1), (lp = e), (e.displayName = "n1ql"), (e.aliases = []);
    function e(t) {
        t.languages.n1ql = {
            comment: { pattern: /\/\*[\s\S]*?(?:$|\*\/)|--.*/, greedy: !0 },
            string: { pattern: /(["'])(?:\\[\s\S]|(?!\1)[^\\]|\1\1)*\1/, greedy: !0 },
            identifier: { pattern: /`(?:\\[\s\S]|[^\\`]|``)*`/, greedy: !0 },
            parameter: /\$[\w.]+/,
            keyword:
                /\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\b/i,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            boolean: /\b(?:FALSE|TRUE)\b/i,
            number: /(?:\b\d+\.|\B\.)\d+e[+\-]?\d+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
            operator: /[-+*\/%]|!=|==?|\|\||<[>=]?|>=?|\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\b/i,
            punctuation: /[;[\](),.{}:]/,
        };
    }
    return lp;
}
var sp, WE;
function uO() {
    if (WE) return sp;
    (WE = 1), (sp = e), (e.displayName = "n4js"), (e.aliases = ["n4jsd"]);
    function e(t) {
        (t.languages.n4js = t.languages.extend("javascript", {
            keyword:
                /\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/,
        })),
            t.languages.insertBefore("n4js", "constant", { annotation: { pattern: /@+\w+/, alias: "operator" } }),
            (t.languages.n4jsd = t.languages.n4js);
    }
    return sp;
}
var up, YE;
function cO() {
    if (YE) return up;
    (YE = 1), (up = e), (e.displayName = "nand2tetrisHdl"), (e.aliases = []);
    function e(t) {
        t.languages["nand2tetris-hdl"] = {
            comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
            keyword: /\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\b/,
            boolean: /\b(?:false|true)\b/,
            function: /\b[A-Za-z][A-Za-z0-9]*(?=\()/,
            number: /\b\d+\b/,
            operator: /=|\.\./,
            punctuation: /[{}[\];(),:]/,
        };
    }
    return up;
}
var cp, KE;
function dO() {
    if (KE) return cp;
    (KE = 1), (cp = e), (e.displayName = "naniscript"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /\{[^\r\n\[\]{}]*\}/,
                a = {
                    "quoted-string": { pattern: /"(?:[^"\\]|\\.)*"/, alias: "operator" },
                    "command-param-id": { pattern: /(\s)\w+:/, lookbehind: !0, alias: "property" },
                    "command-param-value": [
                        { pattern: r, alias: "selector" },
                        { pattern: /([\t ])\S+/, lookbehind: !0, greedy: !0, alias: "operator" },
                        { pattern: /\S(?:.*\S)?/, alias: "operator" },
                    ],
                };
            (n.languages.naniscript = {
                comment: { pattern: /^([\t ]*);.*/m, lookbehind: !0 },
                define: {
                    pattern: /^>.+/m,
                    alias: "tag",
                    inside: {
                        value: { pattern: /(^>\w+[\t ]+)(?!\s)[^{}\r\n]+/, lookbehind: !0, alias: "operator" },
                        key: { pattern: /(^>)\w+/, lookbehind: !0 },
                    },
                },
                label: { pattern: /^([\t ]*)#[\t ]*\w+[\t ]*$/m, lookbehind: !0, alias: "regex" },
                command: {
                    pattern: /^([\t ]*)@\w+(?=[\t ]|$).*/m,
                    lookbehind: !0,
                    alias: "function",
                    inside: {
                        "command-name": /^@\w+/,
                        expression: { pattern: r, greedy: !0, alias: "selector" },
                        "command-params": { pattern: /\s*\S[\s\S]*/, inside: a },
                    },
                },
                "generic-text": {
                    pattern: /(^[ \t]*)[^#@>;\s].*/m,
                    lookbehind: !0,
                    alias: "punctuation",
                    inside: {
                        "escaped-char": /\\[{}\[\]"]/,
                        expression: { pattern: r, greedy: !0, alias: "selector" },
                        "inline-command": {
                            pattern: /\[[\t ]*\w[^\r\n\[\]]*\]/,
                            greedy: !0,
                            alias: "function",
                            inside: {
                                "command-params": { pattern: /(^\[[\t ]*\w+\b)[\s\S]+(?=\]$)/, lookbehind: !0, inside: a },
                                "command-param-name": { pattern: /^(\[[\t ]*)\w+/, lookbehind: !0, alias: "name" },
                                "start-stop-char": /[\[\]]/,
                            },
                        },
                    },
                },
            }),
                (n.languages.nani = n.languages.naniscript),
                n.hooks.add("after-tokenize", function (l) {
                    var s = l.tokens;
                    s.forEach(function (u) {
                        if (typeof u != "string" && u.type === "generic-text") {
                            var c = o(u);
                            i(c) || ((u.type = "bad-line"), (u.content = c));
                        }
                    });
                });
            function i(l) {
                for (var s = "[]{}", u = [], c = 0; c < l.length; c++) {
                    var d = l[c],
                        m = s.indexOf(d);
                    if (m !== -1) {
                        if (m % 2 === 0) u.push(m + 1);
                        else if (u.pop() !== m) return !1;
                    }
                }
                return u.length === 0;
            }
            function o(l) {
                return typeof l == "string" ? l : Array.isArray(l) ? l.map(o).join("") : o(l.content);
            }
        })(t);
    }
    return cp;
}
var dp, XE;
function pO() {
    if (XE) return dp;
    (XE = 1), (dp = e), (e.displayName = "nasm"), (e.aliases = []);
    function e(t) {
        t.languages.nasm = {
            comment: /;.*$/m,
            string: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
            label: { pattern: /(^\s*)[A-Za-z._?$][\w.?$@~#]*:/m, lookbehind: !0, alias: "function" },
            keyword: [
                /\[?BITS (?:16|32|64)\]?/,
                { pattern: /(^\s*)section\s*[a-z.]+:?/im, lookbehind: !0 },
                /(?:extern|global)[^;\r\n]*/i,
                /(?:CPU|DEFAULT|FLOAT).*$/m,
            ],
            register: { pattern: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\b/i, alias: "variable" },
            number: /(?:\b|(?=\$))(?:0[hx](?:\.[\da-f]+|[\da-f]+(?:\.[\da-f]+)?)(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,
            operator: /[\[\]*+\-\/%<>=&|$!]/,
        };
    }
    return dp;
}
var pp, ZE;
function fO() {
    if (ZE) return pp;
    (ZE = 1), (pp = e), (e.displayName = "neon"), (e.aliases = []);
    function e(t) {
        t.languages.neon = {
            comment: { pattern: /#.*/, greedy: !0 },
            datetime: {
                pattern: /(^|[[{(=:,\s])\d\d\d\d-\d\d?-\d\d?(?:(?:[Tt]| +)\d\d?:\d\d:\d\d(?:\.\d*)? *(?:Z|[-+]\d\d?(?::?\d\d)?)?)?(?=$|[\]}),\s])/,
                lookbehind: !0,
                alias: "number",
            },
            key: { pattern: /(^|[[{(,\s])[^,:=[\]{}()'"\s]+(?=\s*:(?:$|[\]}),\s])|\s*=)/, lookbehind: !0, alias: "atrule" },
            number: {
                pattern: /(^|[[{(=:,\s])[+-]?(?:0x[\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\d+(?:\.\d*)?|\.?\d+)(?:[eE][+-]?\d+)?)(?=$|[\]}),:=\s])/,
                lookbehind: !0,
            },
            boolean: { pattern: /(^|[[{(=:,\s])(?:false|no|true|yes)(?=$|[\]}),:=\s])/i, lookbehind: !0 },
            null: { pattern: /(^|[[{(=:,\s])(?:null)(?=$|[\]}),:=\s])/i, lookbehind: !0, alias: "keyword" },
            string: {
                pattern: /(^|[[{(=:,\s])(?:('''|""")\r?\n(?:(?:[^\r\n]|\r?\n(?![\t ]*\2))*\r?\n)?[\t ]*\2|'[^'\r\n]*'|"(?:\\.|[^\\"\r\n])*")/,
                lookbehind: !0,
                greedy: !0,
            },
            literal: {
                pattern: /(^|[[{(=:,\s])(?:[^#"',:=[\]{}()\s`-]|[:-][^"',=[\]{}()\s])(?:[^,:=\]})(\s]|:(?![\s,\]})]|$)|[ \t]+[^#,:=\]})(\s])*/,
                lookbehind: !0,
                alias: "string",
            },
            punctuation: /[,:=[\]{}()-]/,
        };
    }
    return pp;
}
var fp, QE;
function mO() {
    if (QE) return fp;
    (QE = 1), (fp = e), (e.displayName = "nevod"), (e.aliases = []);
    function e(t) {
        t.languages.nevod = {
            comment: /\/\/.*|(?:\/\*[\s\S]*?(?:\*\/|$))/,
            string: { pattern: /(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))!?\*?/, greedy: !0, inside: { "string-attrs": /!$|!\*$|\*$/ } },
            namespace: { pattern: /(@namespace\s+)[a-zA-Z0-9\-.]+(?=\s*\{)/, lookbehind: !0 },
            pattern: {
                pattern: /(@pattern\s+)?#?[a-zA-Z0-9\-.]+(?:\s*\(\s*(?:~\s*)?[a-zA-Z0-9\-.]+\s*(?:,\s*(?:~\s*)?[a-zA-Z0-9\-.]*)*\))?(?=\s*=)/,
                lookbehind: !0,
                inside: {
                    "pattern-name": { pattern: /^#?[a-zA-Z0-9\-.]+/, alias: "class-name" },
                    fields: {
                        pattern: /\(.*\)/,
                        inside: {
                            "field-name": { pattern: /[a-zA-Z0-9\-.]+/, alias: "variable" },
                            punctuation: /[,()]/,
                            operator: { pattern: /~/, alias: "field-hidden-mark" },
                        },
                    },
                },
            },
            search: { pattern: /(@search\s+|#)[a-zA-Z0-9\-.]+(?:\.\*)?(?=\s*;)/, alias: "function", lookbehind: !0 },
            keyword: /@(?:having|inside|namespace|outside|pattern|require|search|where)\b/,
            "standard-pattern": {
                pattern: /\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\b(?:\([a-zA-Z0-9\-.,\s+]*\))?/,
                inside: {
                    "standard-pattern-name": { pattern: /^[a-zA-Z0-9\-.]+/, alias: "builtin" },
                    quantifier: { pattern: /\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/, alias: "number" },
                    "standard-pattern-attr": { pattern: /[a-zA-Z0-9\-.]+/, alias: "builtin" },
                    punctuation: /[,()]/,
                },
            },
            quantifier: { pattern: /\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/, alias: "number" },
            operator: [
                { pattern: /=/, alias: "pattern-def" },
                { pattern: /&/, alias: "conjunction" },
                { pattern: /~/, alias: "exception" },
                { pattern: /\?/, alias: "optionality" },
                { pattern: /[[\]]/, alias: "repetition" },
                { pattern: /[{}]/, alias: "variation" },
                { pattern: /[+_]/, alias: "sequence" },
                { pattern: /\.{2,3}/, alias: "span" },
            ],
            "field-capture": [
                {
                    pattern: /([a-zA-Z0-9\-.]+\s*\()\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+(?:\s*,\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+)*(?=\s*\))/,
                    lookbehind: !0,
                    inside: { "field-name": { pattern: /[a-zA-Z0-9\-.]+/, alias: "variable" }, colon: /:/ },
                },
                { pattern: /[a-zA-Z0-9\-.]+\s*:/, inside: { "field-name": { pattern: /[a-zA-Z0-9\-.]+/, alias: "variable" }, colon: /:/ } },
            ],
            punctuation: /[:;,()]/,
            name: /[a-zA-Z0-9\-.]+/,
        };
    }
    return fp;
}
var mp, JE;
function hO() {
    if (JE) return mp;
    (JE = 1), (mp = e), (e.displayName = "nginx"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /\$(?:\w[a-z\d]*(?:_[^\x00-\x1F\s"'\\()$]*)?|\{[^}\s"'\\]+\})/i;
            n.languages.nginx = {
                comment: { pattern: /(^|[\s{};])#.*/, lookbehind: !0, greedy: !0 },
                directive: {
                    pattern: /(^|\s)\w(?:[^;{}"'\\\s]|\\.|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\s+(?:#.*(?!.)|(?![#\s])))*?(?=\s*[;{])/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        string: {
                            pattern: /((?:^|[^\\])(?:\\\\)*)(?:"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*')/,
                            lookbehind: !0,
                            greedy: !0,
                            inside: { escape: { pattern: /\\["'\\nrt]/, alias: "entity" }, variable: r },
                        },
                        comment: { pattern: /(\s)#.*/, lookbehind: !0, greedy: !0 },
                        keyword: { pattern: /^\S+/, greedy: !0 },
                        boolean: { pattern: /(\s)(?:off|on)(?!\S)/, lookbehind: !0 },
                        number: { pattern: /(\s)\d+[a-z]*(?!\S)/i, lookbehind: !0 },
                        variable: r,
                    },
                },
                punctuation: /[{};]/,
            };
        })(t);
    }
    return mp;
}
var hp, eS;
function gO() {
    if (eS) return hp;
    (eS = 1), (hp = e), (e.displayName = "nim"), (e.aliases = []);
    function e(t) {
        t.languages.nim = {
            comment: { pattern: /#.*/, greedy: !0 },
            string: { pattern: /(?:\b(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+)?(?:"""[\s\S]*?"""(?!")|"(?:\\[\s\S]|""|[^"\\])*")/, greedy: !0 },
            char: { pattern: /'(?:\\(?:\d+|x[\da-fA-F]{0,2}|.)|[^'])'/, greedy: !0 },
            function: { pattern: /(?:(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+|`[^`\r\n]+`)\*?(?:\[[^\]]+\])?(?=\s*\()/, greedy: !0, inside: { operator: /\*$/ } },
            identifier: { pattern: /`[^`\r\n]+`/, greedy: !0, inside: { punctuation: /`/ } },
            number: /\b(?:0[xXoObB][\da-fA-F_]+|\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:[eE][+-]?\d[\d_]*)?)(?:'?[iuf]\d*)?/,
            keyword:
                /\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\b/,
            operator: {
                pattern:
                    /(^|[({\[](?=\.\.)|(?![({\[]\.).)(?:(?:[=+\-*\/<>@$~&%|!?^:\\]|\.\.|\.(?![)}\]]))+|\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\b)/m,
                lookbehind: !0,
            },
            punctuation: /[({\[]\.|\.[)}\]]|[`(){}\[\],:]/,
        };
    }
    return hp;
}
var gp, tS;
function bO() {
    if (tS) return gp;
    (tS = 1), (gp = e), (e.displayName = "nix"), (e.aliases = []);
    function e(t) {
        (t.languages.nix = {
            comment: { pattern: /\/\*[\s\S]*?\*\/|#.*/, greedy: !0 },
            string: {
                pattern: /"(?:[^"\\]|\\[\s\S])*"|''(?:(?!'')[\s\S]|''(?:'|\\|\$\{))*''/,
                greedy: !0,
                inside: { interpolation: { pattern: /(^|(?:^|(?!'').)[^\\])\$\{(?:[^{}]|\{[^}]*\})*\}/, lookbehind: !0, inside: null } },
            },
            url: [
                /\b(?:[a-z]{3,7}:\/\/)[\w\-+%~\/.:#=?&]+/,
                { pattern: /([^\/])(?:[\w\-+%~.:#=?&]*(?!\/\/)[\w\-+%~\/.:#=?&])?(?!\/\/)\/[\w\-+%~\/.:#=?&]*/, lookbehind: !0 },
            ],
            antiquotation: { pattern: /\$(?=\{)/, alias: "important" },
            number: /\b\d+\b/,
            keyword: /\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\b/,
            function:
                /\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\b|\bfoldl'\B/,
            boolean: /\b(?:false|true)\b/,
            operator: /[=!<>]=?|\+\+?|\|\||&&|\/\/|->?|[?@]/,
            punctuation: /[{}()[\].,:;]/,
        }),
            (t.languages.nix.string.inside.interpolation.inside = t.languages.nix);
    }
    return gp;
}
var bp, nS;
function yO() {
    if (nS) return bp;
    (nS = 1), (bp = e), (e.displayName = "nsis"), (e.aliases = []);
    function e(t) {
        t.languages.nsis = {
            comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|[#;].*)/, lookbehind: !0, greedy: !0 },
            string: { pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            keyword: {
                pattern:
                    /(^[\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\b/m,
                lookbehind: !0,
            },
            property:
                /\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\b/,
            constant: /\$\{[!\w\.:\^-]+\}|\$\([!\w\.:\^-]+\)/,
            variable: /\$\w[\w\.]*/,
            number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
            operator: /--?|\+\+?|<=?|>=?|==?=?|&&?|\|\|?|[?*\/~^%]/,
            punctuation: /[{}[\];(),.:]/,
            important: {
                pattern:
                    /(^[\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\b/im,
                lookbehind: !0,
            },
        };
    }
    return bp;
}
var yp, rS;
function vO() {
    if (rS) return yp;
    rS = 1;
    var e = ra();
    (yp = t), (t.displayName = "objectivec"), (t.aliases = ["objc"]);
    function t(n) {
        n.register(e),
            (n.languages.objectivec = n.languages.extend("c", {
                string: { pattern: /@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/, greedy: !0 },
                keyword:
                    /\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
                operator: /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/,
            })),
            delete n.languages.objectivec["class-name"],
            (n.languages.objc = n.languages.objectivec);
    }
    return yp;
}
var vp, aS;
function EO() {
    if (aS) return vp;
    (aS = 1), (vp = e), (e.displayName = "ocaml"), (e.aliases = []);
    function e(t) {
        t.languages.ocaml = {
            comment: { pattern: /\(\*[\s\S]*?\*\)/, greedy: !0 },
            char: { pattern: /'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i, greedy: !0 },
            string: [
                { pattern: /"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/, greedy: !0 },
                { pattern: /\{([a-z_]*)\|[\s\S]*?\|\1\}/, greedy: !0 },
            ],
            number: [
                /\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,
                /\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,
                /\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i,
            ],
            directive: { pattern: /\B#\w+/, alias: "property" },
            label: { pattern: /\B~\w+/, alias: "property" },
            "type-variable": { pattern: /\B'\w+/, alias: "function" },
            variant: { pattern: /`\w+/, alias: "symbol" },
            keyword:
                /\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,
            boolean: /\b(?:false|true)\b/,
            "operator-like-punctuation": { pattern: /\[[<>|]|[>|]\]|\{<|>\}/, alias: "punctuation" },
            operator: /\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,
            punctuation: /;;|::|[(){}\[\].,:;#]|\b_\b/,
        };
    }
    return vp;
}
var Ep, iS;
function SO() {
    if (iS) return Ep;
    iS = 1;
    var e = ra();
    (Ep = t), (t.displayName = "opencl"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                (r.languages.opencl = r.languages.extend("c", {
                    keyword:
                        /\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\b/,
                    number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[fuhl]{0,4}/i,
                    boolean: /\b(?:false|true)\b/,
                    "constant-opencl-kernel": {
                        pattern:
                            /\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\b/,
                        alias: "constant",
                    },
                })),
                    r.languages.insertBefore("opencl", "class-name", {
                        "builtin-type": {
                            pattern:
                                /\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\b/,
                            alias: "keyword",
                        },
                    });
                var a = {
                    "type-opencl-host": {
                        pattern:
                            /\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\b/,
                        alias: "keyword",
                    },
                    "boolean-opencl-host": { pattern: /\bCL_(?:FALSE|TRUE)\b/, alias: "boolean" },
                    "constant-opencl-host": {
                        pattern:
                            /\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\b/,
                        alias: "constant",
                    },
                    "function-opencl-host": {
                        pattern:
                            /\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\b/,
                        alias: "function",
                    },
                };
                r.languages.insertBefore("c", "keyword", a),
                    r.languages.cpp &&
                        ((a["type-opencl-host-cpp"] = {
                            pattern:
                                /\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\b/,
                            alias: "keyword",
                        }),
                        r.languages.insertBefore("cpp", "keyword", a));
            })(n);
    }
    return Ep;
}
var Sp, oS;
function wO() {
    if (oS) return Sp;
    (oS = 1), (Sp = e), (e.displayName = "openqasm"), (e.aliases = ["qasm"]);
    function e(t) {
        (t.languages.openqasm = {
            comment: /\/\*[\s\S]*?\*\/|\/\/.*/,
            string: { pattern: /"[^"\r\n\t]*"|'[^'\r\n\t]*'/, greedy: !0 },
            keyword:
                /\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\b|#pragma\b/,
            "class-name": /\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\b/,
            function: /\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\b(?=\s*\()/,
            constant: /\b(?:euler|pi|tau)\b|π|𝜏|ℇ/,
            number: { pattern: /(^|[^.\w$])(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?(?:dt|ns|us|µs|ms|s)?/i, lookbehind: !0 },
            operator: /->|>>=?|<<=?|&&|\|\||\+\+|--|[!=<>&|~^+\-*/%]=?|@/,
            punctuation: /[(){}\[\];,:.]/,
        }),
            (t.languages.qasm = t.languages.openqasm);
    }
    return Sp;
}
var wp, lS;
function kO() {
    if (lS) return wp;
    (lS = 1), (wp = e), (e.displayName = "oz"), (e.aliases = []);
    function e(t) {
        t.languages.oz = {
            comment: { pattern: /\/\*[\s\S]*?\*\/|%.*/, greedy: !0 },
            string: { pattern: /"(?:[^"\\]|\\[\s\S])*"/, greedy: !0 },
            atom: { pattern: /'(?:[^'\\]|\\[\s\S])*'/, greedy: !0, alias: "builtin" },
            keyword:
                /\$|\[\]|\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\b/,
            function: [/\b[a-z][A-Za-z\d]*(?=\()/, { pattern: /(\{)[A-Z][A-Za-z\d]*\b/, lookbehind: !0 }],
            number: /\b(?:0[bx][\da-f]+|\d+(?:\.\d*)?(?:e~?\d+)?)\b|&(?:[^\\]|\\(?:\d{3}|.))/i,
            variable: /`(?:[^`\\]|\\.)+`/,
            "attr-name": /\b\w+(?=[ \t]*:(?![:=]))/,
            operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\=:?|!!?|[|#+\-*\/,~^@]|\b(?:andthen|div|mod|orelse)\b/,
            punctuation: /[\[\](){}.:;?]/,
        };
    }
    return wp;
}
var kp, sS;
function TO() {
    if (sS) return kp;
    (sS = 1), (kp = e), (e.displayName = "parigp"), (e.aliases = []);
    function e(t) {
        t.languages.parigp = {
            comment: /\/\*[\s\S]*?\*\/|\\\\.*/,
            string: { pattern: /"(?:[^"\\\r\n]|\\.)*"/, greedy: !0 },
            keyword: (function () {
                var n = [
                    "breakpoint",
                    "break",
                    "dbg_down",
                    "dbg_err",
                    "dbg_up",
                    "dbg_x",
                    "forcomposite",
                    "fordiv",
                    "forell",
                    "forpart",
                    "forprime",
                    "forstep",
                    "forsubgroup",
                    "forvec",
                    "for",
                    "iferr",
                    "if",
                    "local",
                    "my",
                    "next",
                    "return",
                    "until",
                    "while",
                ];
                return (
                    (n = n
                        .map(function (r) {
                            return r.split("").join(" *");
                        })
                        .join("|")),
                    RegExp("\\b(?:" + n + ")\\b")
                );
            })(),
            function: /\b\w(?:[\w ]*\w)?(?= *\()/,
            number: {
                pattern: /((?:\. *\. *)?)(?:\b\d(?: *\d)*(?: *(?!\. *\.)\.(?: *\d)*)?|\. *\d(?: *\d)*)(?: *e *(?:[+-] *)?\d(?: *\d)*)?/i,
                lookbehind: !0,
            },
            operator:
                /\. *\.|[*\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\(?: *\/)?(?: *=)?|&(?: *&)?|\| *\||['#~^]/,
            punctuation: /[\[\]{}().,:;|]/,
        };
    }
    return kp;
}
var Tp, uS;
function AO() {
    if (uS) return Tp;
    (uS = 1), (Tp = e), (e.displayName = "parser"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = (n.languages.parser = n.languages.extend("markup", {
                keyword: {
                    pattern: /(^|[^^])(?:\^(?:case|eval|for|if|switch|throw)\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\b)/,
                    lookbehind: !0,
                },
                variable: { pattern: /(^|[^^])\B\$(?:\w+|(?=[.{]))(?:(?:\.|::?)\w+)*(?:\.|::?)?/, lookbehind: !0, inside: { punctuation: /\.|:+/ } },
                function: {
                    pattern: /(^|[^^])\B[@^]\w+(?:(?:\.|::?)\w+)*(?:\.|::?)?/,
                    lookbehind: !0,
                    inside: { keyword: { pattern: /(^@)(?:GET_|SET_)/, lookbehind: !0 }, punctuation: /\.|:+/ },
                },
                escape: { pattern: /\^(?:[$^;@()\[\]{}"':]|#[a-f\d]*)/i, alias: "builtin" },
                punctuation: /[\[\](){};]/,
            }));
            (r = n.languages.insertBefore("parser", "keyword", {
                "parser-comment": { pattern: /(\s)#.*/, lookbehind: !0, alias: "comment" },
                expression: {
                    pattern: /(^|[^^])\((?:[^()]|\((?:[^()]|\((?:[^()])*\))*\))*\)/,
                    greedy: !0,
                    lookbehind: !0,
                    inside: {
                        string: { pattern: /(^|[^^])(["'])(?:(?!\2)[^^]|\^[\s\S])*\2/, lookbehind: !0 },
                        keyword: r.keyword,
                        variable: r.variable,
                        function: r.function,
                        boolean: /\b(?:false|true)\b/,
                        number: /\b(?:0x[a-f\d]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?)\b/i,
                        escape: r.escape,
                        operator: /[~+*\/\\%]|!(?:\|\|?|=)?|&&?|\|\|?|==|<[<=]?|>[>=]?|-[fd]?|\b(?:def|eq|ge|gt|in|is|le|lt|ne)\b/,
                        punctuation: r.punctuation,
                    },
                },
            })),
                n.languages.insertBefore(
                    "inside",
                    "punctuation",
                    {
                        expression: r.expression,
                        keyword: r.keyword,
                        variable: r.variable,
                        function: r.function,
                        escape: r.escape,
                        "parser-punctuation": { pattern: r.punctuation, alias: "punctuation" },
                    },
                    r.tag.inside["attr-value"],
                );
        })(t);
    }
    return Tp;
}
var Ap, cS;
function xO() {
    if (cS) return Ap;
    (cS = 1), (Ap = e), (e.displayName = "pascal"), (e.aliases = ["objectpascal"]);
    function e(t) {
        (t.languages.pascal = {
            directive: { pattern: /\{\$[\s\S]*?\}/, greedy: !0, alias: ["marco", "property"] },
            comment: { pattern: /\(\*[\s\S]*?\*\)|\{[\s\S]*?\}|\/\/.*/, greedy: !0 },
            string: { pattern: /(?:'(?:''|[^'\r\n])*'(?!')|#[&$%]?[a-f\d]+)+|\^[a-z]/i, greedy: !0 },
            asm: { pattern: /(\basm\b)[\s\S]+?(?=\bend\s*[;[])/i, lookbehind: !0, greedy: !0, inside: null },
            keyword: [
                {
                    pattern:
                        /(^|[^&])\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\b/i,
                    lookbehind: !0,
                },
                { pattern: /(^|[^&])\b(?:dispose|exit|false|new|true)\b/i, lookbehind: !0 },
                {
                    pattern:
                        /(^|[^&])\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\b/i,
                    lookbehind: !0,
                },
                {
                    pattern:
                        /(^|[^&])\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\b/i,
                    lookbehind: !0,
                },
            ],
            number: [/(?:[&%]\d+|\$[a-f\d]+)/i, /\b\d+(?:\.\d+)?(?:e[+-]?\d+)?/i],
            operator: [
                /\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=]/,
                { pattern: /(^|[^&])\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\b/, lookbehind: !0 },
            ],
            punctuation: /\(\.|\.\)|[()\[\]:;,.]/,
        }),
            (t.languages.pascal.asm.inside = t.languages.extend("pascal", { asm: void 0, keyword: void 0, operator: void 0 })),
            (t.languages.objectpascal = t.languages.pascal);
    }
    return Ap;
}
var xp, dS;
function RO() {
    if (dS) return xp;
    (dS = 1), (xp = e), (e.displayName = "pascaligo"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\)/.source,
                a = /(?:\b\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g, function () {
                    return r;
                }),
                i = (n.languages.pascaligo = {
                    comment: /\(\*[\s\S]+?\*\)|\/\/.*/,
                    string: { pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1|\^[a-z]/i, greedy: !0 },
                    "class-name": [
                        {
                            pattern: RegExp(
                                /(\btype\s+\w+\s+is\s+)<type>/.source.replace(/<type>/g, function () {
                                    return a;
                                }),
                                "i",
                            ),
                            lookbehind: !0,
                            inside: null,
                        },
                        {
                            pattern: RegExp(
                                /<type>(?=\s+is\b)/.source.replace(/<type>/g, function () {
                                    return a;
                                }),
                                "i",
                            ),
                            inside: null,
                        },
                        {
                            pattern: RegExp(
                                /(:\s*)<type>/.source.replace(/<type>/g, function () {
                                    return a;
                                }),
                            ),
                            lookbehind: !0,
                            inside: null,
                        },
                    ],
                    keyword: {
                        pattern:
                            /(^|[^&])\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\b/i,
                        lookbehind: !0,
                    },
                    boolean: { pattern: /(^|[^&])\b(?:False|True)\b/i, lookbehind: !0 },
                    builtin: { pattern: /(^|[^&])\b(?:bool|int|list|map|nat|record|string|unit)\b/i, lookbehind: !0 },
                    function: /\b\w+(?=\s*\()/,
                    number: [/%[01]+|&[0-7]+|\$[a-f\d]+/i, /\b\d+(?:\.\d+)?(?:e[+-]?\d+)?(?:mtz|n)?/i],
                    operator: /->|=\/=|\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=|]|\b(?:and|mod|or)\b/,
                    punctuation: /\(\.|\.\)|[()\[\]:;,.{}]/,
                }),
                o = ["comment", "keyword", "builtin", "operator", "punctuation"].reduce(function (l, s) {
                    return (l[s] = i[s]), l;
                }, {});
            i["class-name"].forEach(function (l) {
                l.inside = o;
            });
        })(t);
    }
    return xp;
}
var Rp, pS;
function IO() {
    if (pS) return Rp;
    (pS = 1), (Rp = e), (e.displayName = "pcaxis"), (e.aliases = ["px"]);
    function e(t) {
        (t.languages.pcaxis = {
            string: /"[^"]*"/,
            keyword: {
                pattern: /((?:^|;)\s*)[-A-Z\d]+(?:\s*\[[-\w]+\])?(?:\s*\("[^"]*"(?:,\s*"[^"]*")*\))?(?=\s*=)/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    keyword: /^[-A-Z\d]+/,
                    language: { pattern: /^(\s*)\[[-\w]+\]/, lookbehind: !0, inside: { punctuation: /^\[|\]$/, property: /[-\w]+/ } },
                    "sub-key": {
                        pattern: /^(\s*)\S[\s\S]*/,
                        lookbehind: !0,
                        inside: { parameter: { pattern: /"[^"]*"/, alias: "property" }, punctuation: /^\(|\)$|,/ },
                    },
                },
            },
            operator: /=/,
            tlist: {
                pattern: /TLIST\s*\(\s*\w+(?:(?:\s*,\s*"[^"]*")+|\s*,\s*"[^"]*"-"[^"]*")?\s*\)/,
                greedy: !0,
                inside: { function: /^TLIST/, property: { pattern: /^(\s*\(\s*)\w+/, lookbehind: !0 }, string: /"[^"]*"/, punctuation: /[(),]/, operator: /-/ },
            },
            punctuation: /[;,]/,
            number: { pattern: /(^|\s)\d+(?:\.\d+)?(?!\S)/, lookbehind: !0 },
            boolean: /NO|YES/,
        }),
            (t.languages.px = t.languages.pcaxis);
    }
    return Rp;
}
var Ip, fS;
function NO() {
    if (fS) return Ip;
    (fS = 1), (Ip = e), (e.displayName = "peoplecode"), (e.aliases = ["pcode"]);
    function e(t) {
        (t.languages.peoplecode = {
            comment: RegExp(
                [
                    /\/\*[\s\S]*?\*\//.source,
                    /\bREM[^;]*;/.source,
                    /<\*(?:[^<*]|\*(?!>)|<(?!\*)|<\*(?:(?!\*>)[\s\S])*\*>)*\*>/.source,
                    /\/\+[\s\S]*?\+\//.source,
                ].join("|"),
            ),
            string: { pattern: /'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/, greedy: !0 },
            variable: /%\w+/,
            "function-definition": { pattern: /((?:^|[^\w-])(?:function|method)\s+)\w+/i, lookbehind: !0, alias: "function" },
            "class-name": {
                pattern: /((?:^|[^-\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\s+)\w+(?::\w+)*/i,
                lookbehind: !0,
                inside: { punctuation: /:/ },
            },
            keyword:
                /\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\b/i,
            "operator-keyword": { pattern: /\b(?:and|not|or)\b/i, alias: "operator" },
            function: /[_a-z]\w*(?=\s*\()/i,
            boolean: /\b(?:false|true)\b/i,
            number: /\b\d+(?:\.\d+)?\b/,
            operator: /<>|[<>]=?|!=|\*\*|[-+*/|=@]/,
            punctuation: /[:.;,()[\]]/,
        }),
            (t.languages.pcode = t.languages.peoplecode);
    }
    return Ip;
}
var Np, mS;
function _O() {
    if (mS) return Np;
    (mS = 1), (Np = e), (e.displayName = "perl"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /(?:\((?:[^()\\]|\\[\s\S])*\)|\{(?:[^{}\\]|\\[\s\S])*\}|\[(?:[^[\]\\]|\\[\s\S])*\]|<(?:[^<>\\]|\\[\s\S])*>)/.source;
            n.languages.perl = {
                comment: [
                    { pattern: /(^\s*)=\w[\s\S]*?=cut.*/m, lookbehind: !0, greedy: !0 },
                    { pattern: /(^|[^\\$])#.*/, lookbehind: !0, greedy: !0 },
                ],
                string: [
                    {
                        pattern: RegExp(
                            /\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\s*/.source +
                                "(?:" +
                                [/([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source, /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source, r].join("|") +
                                ")",
                        ),
                        greedy: !0,
                    },
                    { pattern: /("|`)(?:(?!\1)[^\\]|\\[\s\S])*\1/, greedy: !0 },
                    { pattern: /'(?:[^'\\\r\n]|\\.)*'/, greedy: !0 },
                ],
                regex: [
                    {
                        pattern: RegExp(
                            /\b(?:m|qr)(?![a-zA-Z0-9])\s*/.source +
                                "(?:" +
                                [/([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source, /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source, r].join("|") +
                                ")" +
                                /[msixpodualngc]*/.source,
                        ),
                        greedy: !0,
                    },
                    {
                        pattern: RegExp(
                            /(^|[^-])\b(?:s|tr|y)(?![a-zA-Z0-9])\s*/.source +
                                "(?:" +
                                [
                                    /([^a-zA-Z0-9\s{(\[<])(?:(?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                                    /([a-zA-Z0-9])(?:(?!\3)[^\\]|\\[\s\S])*\3(?:(?!\3)[^\\]|\\[\s\S])*\3/.source,
                                    r + /\s*/.source + r,
                                ].join("|") +
                                ")" +
                                /[msixpodualngcer]*/.source,
                        ),
                        lookbehind: !0,
                        greedy: !0,
                    },
                    {
                        pattern: /\/(?:[^\/\\\r\n]|\\.)*\/[msixpodualngc]*(?=\s*(?:$|[\r\n,.;})&|\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\b))/,
                        greedy: !0,
                    },
                ],
                variable: [
                    /[&*$@%]\{\^[A-Z]+\}/,
                    /[&*$@%]\^[A-Z_]/,
                    /[&*$@%]#?(?=\{)/,
                    /[&*$@%]#?(?:(?:::)*'?(?!\d)[\w$]+(?![\w$]))+(?:::)*/,
                    /[&*$@%]\d+/,
                    /(?!%=)[$@%][!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~]/,
                ],
                filehandle: { pattern: /<(?![<=])\S*?>|\b_\b/, alias: "symbol" },
                "v-string": { pattern: /v\d+(?:\.\d+)*|\d+(?:\.\d+){2,}/, alias: "string" },
                function: { pattern: /(\bsub[ \t]+)\w+/, lookbehind: !0 },
                keyword:
                    /\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\b/,
                number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)\b/,
                operator:
                    /-[rwxoRWXOezsfdlpSbctugkTBMAC]\b|\+[+=]?|-[-=>]?|\*\*?=?|\/\/?=?|=[=~>]?|~[~=]?|\|\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\.(?:=|\.\.?)?|[\\?]|\bx(?:=|\b)|\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\b/,
                punctuation: /[{}[\];(),:]/,
            };
        })(t);
    }
    return Np;
}
var _p, hS;
function CO() {
    if (hS) return _p;
    hS = 1;
    var e = bs();
    (_p = t), (t.displayName = "phpExtras"), (t.aliases = []);
    function t(n) {
        n.register(e),
            n.languages.insertBefore("php", "variable", {
                this: { pattern: /\$this\b/, alias: "keyword" },
                global: /\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\b/,
                scope: { pattern: /\b[\w\\]+::/, inside: { keyword: /\b(?:parent|self|static)\b/, punctuation: /::|\\/ } },
            });
    }
    return _p;
}
var Cp, gS;
function OO() {
    if (gS) return Cp;
    gS = 1;
    var e = bs(),
        t = gs();
    (Cp = n), (n.displayName = "phpdoc"), (n.aliases = []);
    function n(r) {
        r.register(e),
            r.register(t),
            (function (a) {
                var i = /(?:\b[a-zA-Z]\w*|[|\\[\]])+/.source;
                (a.languages.phpdoc = a.languages.extend("javadoclike", {
                    parameter: { pattern: RegExp("(@(?:global|param|property(?:-read|-write)?|var)\\s+(?:" + i + "\\s+)?)\\$\\w+"), lookbehind: !0 },
                })),
                    a.languages.insertBefore("phpdoc", "keyword", {
                        "class-name": [
                            {
                                pattern: RegExp("(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\s+)" + i),
                                lookbehind: !0,
                                inside: {
                                    keyword:
                                        /\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\b/,
                                    punctuation: /[|\\[\]()]/,
                                },
                            },
                        ],
                    }),
                    a.languages.javadoclike.addSupport("php", a.languages.phpdoc);
            })(r);
    }
    return Cp;
}
var Op, bS;
function LO() {
    if (bS) return Op;
    bS = 1;
    var e = Ag();
    (Op = t), (t.displayName = "plsql"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.plsql = n.languages.extend("sql", {
                comment: { pattern: /\/\*[\s\S]*?\*\/|--.*/, greedy: !0 },
                keyword:
                    /\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\b/i,
                operator: /:=?|=>|[<>^~!]=|\.\.|\|\||\*\*|[-+*/%<>=@]/,
            })),
            n.languages.insertBefore("plsql", "operator", { label: { pattern: /<<\s*\w+\s*>>/, alias: "symbol" } });
    }
    return Op;
}
var Lp, yS;
function DO() {
    if (yS) return Lp;
    (yS = 1), (Lp = e), (e.displayName = "powerquery"), (e.aliases = []);
    function e(t) {
        (t.languages.powerquery = {
            comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/, lookbehind: !0, greedy: !0 },
            "quoted-identifier": { pattern: /#"(?:[^"\r\n]|"")*"(?!")/, greedy: !0 },
            string: { pattern: /(?:#!)?"(?:[^"\r\n]|"")*"(?!")/, greedy: !0 },
            constant: [
                /\bDay\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\b/,
                /\bTraceLevel\.(?:Critical|Error|Information|Verbose|Warning)\b/,
                /\bOccurrence\.(?:All|First|Last)\b/,
                /\bOrder\.(?:Ascending|Descending)\b/,
                /\bRoundingMode\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\b/,
                /\bMissingField\.(?:Error|Ignore|UseNull)\b/,
                /\bQuoteStyle\.(?:Csv|None)\b/,
                /\bJoinKind\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\b/,
                /\bGroupKind\.(?:Global|Local)\b/,
                /\bExtraValues\.(?:Error|Ignore|List)\b/,
                /\bJoinAlgorithm\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\b/,
                /\bJoinSide\.(?:Left|Right)\b/,
                /\bPrecision\.(?:Decimal|Double)\b/,
                /\bRelativePosition\.From(?:End|Start)\b/,
                /\bTextEncoding\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\b/,
                /\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\.Type\b/,
                /\bnull\b/,
            ],
            boolean: /\b(?:false|true)\b/,
            keyword:
                /\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\b/,
            function: { pattern: /(^|[^#\w.])[a-z_][\w.]*(?=\s*\()/i, lookbehind: !0 },
            "data-type": {
                pattern: /\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\b/,
                alias: "class-name",
            },
            number: { pattern: /\b0x[\da-f]+\b|(?:[+-]?(?:\b\d+\.)?\b\d+|[+-]\.\d+|(^|[^.])\B\.\d+)(?:e[+-]?\d+)?\b/i, lookbehind: !0 },
            operator: /[-+*\/&?@^]|<(?:=>?|>)?|>=?|=>?|\.\.\.?/,
            punctuation: /[,;\[\](){}]/,
        }),
            (t.languages.pq = t.languages.powerquery),
            (t.languages.mscript = t.languages.powerquery);
    }
    return Lp;
}
var Dp, vS;
function MO() {
    if (vS) return Dp;
    (vS = 1), (Dp = e), (e.displayName = "powershell"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = (n.languages.powershell = {
                comment: [
                    { pattern: /(^|[^`])<#[\s\S]*?#>/, lookbehind: !0 },
                    { pattern: /(^|[^`])#.*/, lookbehind: !0 },
                ],
                string: [
                    { pattern: /"(?:`[\s\S]|[^`"])*"/, greedy: !0, inside: null },
                    { pattern: /'(?:[^']|'')*'/, greedy: !0 },
                ],
                namespace: /\[[a-z](?:\[(?:\[[^\]]*\]|[^\[\]])*\]|[^\[\]])*\]/i,
                boolean: /\$(?:false|true)\b/i,
                variable: /\$\w+\b/,
                function: [
                    /\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\b/i,
                    /\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\b/i,
                ],
                keyword:
                    /\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\b/i,
                operator: {
                    pattern:
                        /(^|\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\b|-[-=]?|\+[+=]?|[*\/%]=?)/i,
                    lookbehind: !0,
                },
                punctuation: /[|{}[\];(),.]/,
            });
            r.string[0].inside = {
                function: { pattern: /(^|[^`])\$\((?:\$\([^\r\n()]*\)|(?!\$\()[^\r\n)])*\)/, lookbehind: !0, inside: r },
                boolean: r.boolean,
                variable: r.variable,
            };
        })(t);
    }
    return Dp;
}
var Mp, ES;
function FO() {
    if (ES) return Mp;
    (ES = 1), (Mp = e), (e.displayName = "processing"), (e.aliases = []);
    function e(t) {
        (t.languages.processing = t.languages.extend("clike", {
            keyword:
                /\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\b/,
            function: /\b\w+(?=\s*\()/,
            operator: /<[<=]?|>[>=]?|&&?|\|\|?|[%?]|[!=+\-*\/]=?/,
        })),
            t.languages.insertBefore("processing", "number", {
                constant: /\b(?!XML\b)[A-Z][A-Z\d_]+\b/,
                type: { pattern: /\b(?:boolean|byte|char|color|double|float|int|[A-Z]\w*)\b/, alias: "class-name" },
            });
    }
    return Mp;
}
var Fp, SS;
function PO() {
    if (SS) return Fp;
    (SS = 1), (Fp = e), (e.displayName = "prolog"), (e.aliases = []);
    function e(t) {
        t.languages.prolog = {
            comment: { pattern: /\/\*[\s\S]*?\*\/|%.*/, greedy: !0 },
            string: { pattern: /(["'])(?:\1\1|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1(?!\1)/, greedy: !0 },
            builtin: /\b(?:fx|fy|xf[xy]?|yfx?)\b/,
            function: /\b[a-z]\w*(?:(?=\()|\/\d+)/,
            number: /\b\d+(?:\.\d*)?/,
            operator: /[:\\=><\-?*@\/;+^|!$.]+|\b(?:is|mod|not|xor)\b/,
            punctuation: /[(){}\[\],]/,
        };
    }
    return Fp;
}
var Pp, wS;
function BO() {
    if (wS) return Pp;
    (wS = 1), (Pp = e), (e.displayName = "promql"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = ["sum", "min", "max", "avg", "group", "stddev", "stdvar", "count", "count_values", "bottomk", "topk", "quantile"],
                a = ["on", "ignoring", "group_right", "group_left", "by", "without"],
                i = ["offset"],
                o = r.concat(a, i);
            n.languages.promql = {
                comment: { pattern: /(^[ \t]*)#.*/m, lookbehind: !0 },
                "vector-match": {
                    pattern: new RegExp("((?:" + a.join("|") + ")\\s*)\\([^)]*\\)"),
                    lookbehind: !0,
                    inside: { "label-key": { pattern: /\b[^,]+\b/, alias: "attr-name" }, punctuation: /[(),]/ },
                },
                "context-labels": {
                    pattern: /\{[^{}]*\}/,
                    inside: {
                        "label-key": { pattern: /\b[a-z_]\w*(?=\s*(?:=|![=~]))/, alias: "attr-name" },
                        "label-value": { pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/, greedy: !0, alias: "attr-value" },
                        punctuation: /\{|\}|=~?|![=~]|,/,
                    },
                },
                "context-range": [
                    {
                        pattern: /\[[\w\s:]+\]/,
                        inside: { punctuation: /\[|\]|:/, "range-duration": { pattern: /\b(?:\d+(?:[smhdwy]|ms))+\b/i, alias: "number" } },
                    },
                    { pattern: /(\boffset\s+)\w+/, lookbehind: !0, inside: { "range-duration": { pattern: /\b(?:\d+(?:[smhdwy]|ms))+\b/i, alias: "number" } } },
                ],
                keyword: new RegExp("\\b(?:" + o.join("|") + ")\\b", "i"),
                function: /\b[a-z_]\w*(?=\s*\()/i,
                number: /[-+]?(?:(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[-+]?\d+)?\b|\b(?:0x[0-9a-f]+|nan|inf)\b)/i,
                operator: /[\^*/%+-]|==|!=|<=|<|>=|>|\b(?:and|or|unless)\b/i,
                punctuation: /[{};()`,.[\]]/,
            };
        })(t);
    }
    return Pp;
}
var Bp, kS;
function UO() {
    if (kS) return Bp;
    (kS = 1), (Bp = e), (e.displayName = "properties"), (e.aliases = []);
    function e(t) {
        t.languages.properties = {
            comment: /^[ \t]*[#!].*$/m,
            "attr-value": { pattern: /(^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?: *[=:] *(?! )| ))(?:\\(?:\r\n|[\s\S])|[^\\\r\n])+/m, lookbehind: !0 },
            "attr-name": /^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?= *[=:]| )/m,
            punctuation: /[=:]/,
        };
    }
    return Bp;
}
var Up, TS;
function zO() {
    if (TS) return Up;
    (TS = 1), (Up = e), (e.displayName = "protobuf"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\b/;
            (n.languages.protobuf = n.languages.extend("clike", {
                "class-name": [
                    { pattern: /(\b(?:enum|extend|message|service)\s+)[A-Za-z_]\w*(?=\s*\{)/, lookbehind: !0 },
                    { pattern: /(\b(?:rpc\s+\w+|returns)\s*\(\s*(?:stream\s+)?)\.?[A-Za-z_]\w*(?:\.[A-Za-z_]\w*)*(?=\s*\))/, lookbehind: !0 },
                ],
                keyword:
                    /\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\s+\w)|service|stream|syntax|to)\b(?!\s*=\s*\d)/,
                function: /\b[a-z_]\w*(?=\s*\()/i,
            })),
                n.languages.insertBefore("protobuf", "operator", {
                    map: {
                        pattern: /\bmap<\s*[\w.]+\s*,\s*[\w.]+\s*>(?=\s+[a-z_]\w*\s*[=;])/i,
                        alias: "class-name",
                        inside: { punctuation: /[<>.,]/, builtin: r },
                    },
                    builtin: r,
                    "positional-class-name": {
                        pattern: /(?:\b|\B\.)[a-z_]\w*(?:\.[a-z_]\w*)*(?=\s+[a-z_]\w*\s*[=;])/i,
                        alias: "class-name",
                        inside: { punctuation: /\./ },
                    },
                    annotation: { pattern: /(\[\s*)[a-z_]\w*(?=\s*=)/i, lookbehind: !0 },
                });
        })(t);
    }
    return Up;
}
var zp, AS;
function $O() {
    if (AS) return zp;
    (AS = 1), (zp = e), (e.displayName = "psl"), (e.aliases = []);
    function e(t) {
        t.languages.psl = {
            comment: { pattern: /#.*/, greedy: !0 },
            string: { pattern: /"(?:\\.|[^\\"])*"/, greedy: !0, inside: { symbol: /\\[ntrbA-Z"\\]/ } },
            "heredoc-string": { pattern: /<<<([a-zA-Z_]\w*)[\r\n](?:.*[\r\n])*?\1\b/, alias: "string", greedy: !0 },
            keyword:
                /\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\b/,
            constant:
                /\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\b/,
            boolean: /\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\b/,
            variable: /\b(?:PslDebug|errno|exit_status)\b/,
            builtin: {
                pattern:
                    /\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\b/,
                alias: "builtin-function",
            },
            "foreach-variable": { pattern: /(\bforeach\s+(?:(?:\w+\b|"(?:\\.|[^\\"])*")\s+){0,2})[_a-zA-Z]\w*(?=\s*\()/, lookbehind: !0, greedy: !0 },
            function: /\b[_a-z]\w*\b(?=\s*\()/i,
            number: /\b(?:0x[0-9a-f]+|\d+(?:\.\d+)?)\b/i,
            operator: /--|\+\+|&&=?|\|\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\.|[:?]/,
            punctuation: /[(){}\[\];,]/,
        };
    }
    return zp;
}
var $p, xS;
function qO() {
    if (xS) return $p;
    (xS = 1), ($p = e), (e.displayName = "pug"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.pug = {
                comment: { pattern: /(^([\t ]*))\/\/.*(?:(?:\r?\n|\r)\2[\t ].+)*/m, lookbehind: !0 },
                "multiline-script": {
                    pattern: /(^([\t ]*)script\b.*\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
                    lookbehind: !0,
                    inside: n.languages.javascript,
                },
                filter: {
                    pattern: /(^([\t ]*)):.+(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
                    lookbehind: !0,
                    inside: { "filter-name": { pattern: /^:[\w-]+/, alias: "variable" }, text: /\S[\s\S]*/ },
                },
                "multiline-plain-text": { pattern: /(^([\t ]*)[\w\-#.]+\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m, lookbehind: !0 },
                markup: { pattern: /(^[\t ]*)<.+/m, lookbehind: !0, inside: n.languages.markup },
                doctype: { pattern: /((?:^|\n)[\t ]*)doctype(?: .+)?/, lookbehind: !0 },
                "flow-control": {
                    pattern: /(^[\t ]*)(?:case|default|each|else|if|unless|when|while)\b(?: .+)?/m,
                    lookbehind: !0,
                    inside: {
                        each: { pattern: /^each .+? in\b/, inside: { keyword: /\b(?:each|in)\b/, punctuation: /,/ } },
                        branch: { pattern: /^(?:case|default|else|if|unless|when|while)\b/, alias: "keyword" },
                        rest: n.languages.javascript,
                    },
                },
                keyword: { pattern: /(^[\t ]*)(?:append|block|extends|include|prepend)\b.+/m, lookbehind: !0 },
                mixin: [
                    { pattern: /(^[\t ]*)mixin .+/m, lookbehind: !0, inside: { keyword: /^mixin/, function: /\w+(?=\s*\(|\s*$)/, punctuation: /[(),.]/ } },
                    { pattern: /(^[\t ]*)\+.+/m, lookbehind: !0, inside: { name: { pattern: /^\+\w+/, alias: "function" }, rest: n.languages.javascript } },
                ],
                script: { pattern: /(^[\t ]*script(?:(?:&[^(]+)?\([^)]+\))*[\t ]).+/m, lookbehind: !0, inside: n.languages.javascript },
                "plain-text": { pattern: /(^[\t ]*(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?[\t ]).+/m, lookbehind: !0 },
                tag: {
                    pattern: /(^[\t ]*)(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?:?/m,
                    lookbehind: !0,
                    inside: {
                        attributes: [
                            { pattern: /&[^(]+\([^)]+\)/, inside: n.languages.javascript },
                            {
                                pattern: /\([^)]+\)/,
                                inside: {
                                    "attr-value": { pattern: /(=\s*(?!\s))(?:\{[^}]*\}|[^,)\r\n]+)/, lookbehind: !0, inside: n.languages.javascript },
                                    "attr-name": /[\w-]+(?=\s*!?=|\s*[,)])/,
                                    punctuation: /[!=(),]+/,
                                },
                            },
                        ],
                        punctuation: /:/,
                        "attr-id": /#[\w\-]+/,
                        "attr-class": /\.[\w\-]+/,
                    },
                },
                code: [{ pattern: /(^[\t ]*(?:-|!?=)).+/m, lookbehind: !0, inside: n.languages.javascript }],
                punctuation: /[.\-!=|]+/,
            };
            for (
                var r = /(^([\t ]*)):<filter_name>(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/.source,
                    a = [
                        { filter: "atpl", language: "twig" },
                        { filter: "coffee", language: "coffeescript" },
                        "ejs",
                        "handlebars",
                        "less",
                        "livescript",
                        "markdown",
                        { filter: "sass", language: "scss" },
                        "stylus",
                    ],
                    i = {},
                    o = 0,
                    l = a.length;
                o < l;
                o++
            ) {
                var s = a[o];
                (s = typeof s == "string" ? { filter: s, language: s } : s),
                    n.languages[s.language] &&
                        (i["filter-" + s.filter] = {
                            pattern: RegExp(
                                r.replace("<filter_name>", function () {
                                    return s.filter;
                                }),
                                "m",
                            ),
                            lookbehind: !0,
                            inside: {
                                "filter-name": { pattern: /^:[\w-]+/, alias: "variable" },
                                text: { pattern: /\S[\s\S]*/, alias: [s.language, "language-" + s.language], inside: n.languages[s.language] },
                            },
                        });
            }
            n.languages.insertBefore("pug", "filter", i);
        })(t);
    }
    return $p;
}
var qp, RS;
function GO() {
    if (RS) return qp;
    (RS = 1), (qp = e), (e.displayName = "puppet"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.puppet = {
                heredoc: [
                    {
                        pattern: /(@\("([^"\r\n\/):]+)"(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,
                        lookbehind: !0,
                        alias: "string",
                        inside: { punctuation: /(?=\S).*\S(?= *$)/ },
                    },
                    {
                        pattern: /(@\(([^"\r\n\/):]+)(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,
                        lookbehind: !0,
                        greedy: !0,
                        alias: "string",
                        inside: { punctuation: /(?=\S).*\S(?= *$)/ },
                    },
                    {
                        pattern: /@\("?(?:[^"\r\n\/):]+)"?(?:\/[nrts$uL]*)?\)/,
                        alias: "string",
                        inside: { punctuation: { pattern: /(\().+?(?=\))/, lookbehind: !0 } },
                    },
                ],
                "multiline-comment": { pattern: /(^|[^\\])\/\*[\s\S]*?\*\//, lookbehind: !0, greedy: !0, alias: "comment" },
                regex: {
                    pattern: /((?:\bnode\s+|[~=\(\[\{,]\s*|[=+]>\s*|^\s*))\/(?:[^\/\\]|\\[\s\S])+\/(?:[imx]+\b|\B)/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: { "extended-regex": { pattern: /^\/(?:[^\/\\]|\\[\s\S])+\/[im]*x[im]*$/, inside: { comment: /#.*/ } } },
                },
                comment: { pattern: /(^|[^\\])#.*/, lookbehind: !0, greedy: !0 },
                string: {
                    pattern: /(["'])(?:\$\{(?:[^'"}]|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}|\$(?!\{)|(?!\1)[^\\$]|\\[\s\S])*\1/,
                    greedy: !0,
                    inside: { "double-quoted": { pattern: /^"[\s\S]*"$/, inside: {} } },
                },
                variable: { pattern: /\$(?:::)?\w+(?:::\w+)*/, inside: { punctuation: /::/ } },
                "attr-name": /(?:\b\w+|\*)(?=\s*=>)/,
                function: [
                    { pattern: /(\.)(?!\d)\w+/, lookbehind: !0 },
                    /\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\b|\b(?!\d)\w+(?=\()/,
                ],
                number: /\b(?:0x[a-f\d]+|\d+(?:\.\d+)?(?:e-?\d+)?)\b/i,
                boolean: /\b(?:false|true)\b/,
                keyword:
                    /\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\b/,
                datatype: {
                    pattern:
                        /\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\b/,
                    alias: "symbol",
                },
                operator: /=[=~>]?|![=~]?|<(?:<\|?|[=~|-])?|>[>=]?|->?|~>|\|>?>?|[*\/%+?]|\b(?:and|in|or)\b/,
                punctuation: /[\[\]{}().,;]|:+/,
            };
            var r = [
                {
                    pattern: /(^|[^\\])\$\{(?:[^'"{}]|\{[^}]*\}|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}/,
                    lookbehind: !0,
                    inside: {
                        "short-variable": { pattern: /(^\$\{)(?!\w+\()(?:::)?\w+(?:::\w+)*/, lookbehind: !0, alias: "variable", inside: { punctuation: /::/ } },
                        delimiter: { pattern: /^\$/, alias: "variable" },
                        rest: n.languages.puppet,
                    },
                },
                { pattern: /(^|[^\\])\$(?:::)?\w+(?:::\w+)*/, lookbehind: !0, alias: "variable", inside: { punctuation: /::/ } },
            ];
            (n.languages.puppet.heredoc[0].inside.interpolation = r), (n.languages.puppet.string.inside["double-quoted"].inside.interpolation = r);
        })(t);
    }
    return qp;
}
var Gp, IS;
function HO() {
    if (IS) return Gp;
    (IS = 1), (Gp = e), (e.displayName = "pure"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.pure = {
                comment: [{ pattern: /(^|[^\\])\/\*[\s\S]*?\*\//, lookbehind: !0 }, { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0 }, /#!.+/],
                "inline-lang": {
                    pattern: /%<[\s\S]+?%>/,
                    greedy: !0,
                    inside: {
                        lang: { pattern: /(^%< *)-\*-.+?-\*-/, lookbehind: !0, alias: "comment" },
                        delimiter: { pattern: /^%<.*|%>$/, alias: "punctuation" },
                    },
                },
                string: { pattern: /"(?:\\.|[^"\\\r\n])*"/, greedy: !0 },
                number: { pattern: /((?:\.\.)?)(?:\b(?:inf|nan)\b|\b0x[\da-f]+|(?:\b(?:0b)?\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?L?)/i, lookbehind: !0 },
                keyword:
                    /\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\b/,
                function:
                    /\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\b/,
                special: { pattern: /\b__[a-z]+__\b/i, alias: "builtin" },
                operator: /(?:[!"#$%&'*+,\-.\/:<=>?@\\^`|~\u00a1-\u00bf\u00d7-\u00f7\u20d0-\u2bff]|\b_+\b)+|\b(?:and|div|mod|not|or)\b/,
                punctuation: /[(){}\[\];,|]/,
            };
            var r = ["c", { lang: "c++", alias: "cpp" }, "fortran"],
                a = /%< *-\*- *<lang>\d* *-\*-[\s\S]+?%>/.source;
            r.forEach(function (i) {
                var o = i;
                if ((typeof i != "string" && ((o = i.alias), (i = i.lang)), n.languages[o])) {
                    var l = {};
                    (l["inline-lang-" + o] = {
                        pattern: RegExp(a.replace("<lang>", i.replace(/([.+*?\/\\(){}\[\]])/g, "\\$1")), "i"),
                        inside: n.util.clone(n.languages.pure["inline-lang"].inside),
                    }),
                        (l["inline-lang-" + o].inside.rest = n.util.clone(n.languages[o])),
                        n.languages.insertBefore("pure", "inline-lang", l);
                }
            }),
                n.languages.c && (n.languages.pure["inline-lang"].inside.rest = n.util.clone(n.languages.c));
        })(t);
    }
    return Gp;
}
var Hp, NS;
function jO() {
    if (NS) return Hp;
    (NS = 1), (Hp = e), (e.displayName = "purebasic"), (e.aliases = []);
    function e(t) {
        (t.languages.purebasic = t.languages.extend("clike", {
            comment: /;.*/,
            keyword:
                /\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\b/i,
            function: /\b\w+(?:\.\w+)?\s*(?=\()/,
            number: /(?:\$[\da-f]+|\b-?(?:\d+(?:\.\d+)?|\.\d+)(?:e[+-]?\d+)?)\b/i,
            operator: /(?:@\*?|\?|\*)\w+|-[>-]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|?\||[~^%?*/@]/,
        })),
            t.languages.insertBefore("purebasic", "keyword", {
                tag: /#\w+\$?/,
                asm: {
                    pattern: /(^[\t ]*)!.*/m,
                    lookbehind: !0,
                    alias: "tag",
                    inside: {
                        comment: /;.*/,
                        string: { pattern: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
                        "label-reference-anonymous": { pattern: /(!\s*j[a-z]+\s+)@[fb]/i, lookbehind: !0, alias: "fasm-label" },
                        "label-reference-addressed": { pattern: /(!\s*j[a-z]+\s+)[A-Z._?$@][\w.?$@~#]*/i, lookbehind: !0, alias: "fasm-label" },
                        keyword: [/\b(?:extern|global)\b[^;\r\n]*/i, /\b(?:CPU|DEFAULT|FLOAT)\b.*/],
                        function: { pattern: /^([\t ]*!\s*)[\da-z]+(?=\s|$)/im, lookbehind: !0 },
                        "function-inline": { pattern: /(:\s*)[\da-z]+(?=\s)/i, lookbehind: !0, alias: "function" },
                        label: { pattern: /^([\t ]*!\s*)[A-Za-z._?$@][\w.?$@~#]*(?=:)/m, lookbehind: !0, alias: "fasm-label" },
                        register: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\d+)\b/i,
                        number: /(?:\b|-|(?=\$))(?:0[hx](?:[\da-f]*\.)?[\da-f]+(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,
                        operator: /[\[\]*+\-/%<>=&|$!,.:]/,
                    },
                },
            }),
            delete t.languages.purebasic["class-name"],
            delete t.languages.purebasic.boolean,
            (t.languages.pbfasm = t.languages.purebasic);
    }
    return Hp;
}
var jp, _S;
function VO() {
    if (_S) return jp;
    _S = 1;
    var e = Rg();
    (jp = t), (t.displayName = "purescript"), (t.aliases = ["purs"]);
    function t(n) {
        n.register(e),
            (n.languages.purescript = n.languages.extend("haskell", {
                keyword: /\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b|∀/,
                "import-statement": {
                    pattern: /(^[\t ]*)import\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*(?:\s+as\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
                    lookbehind: !0,
                    inside: { keyword: /\b(?:as|hiding|import)\b/, punctuation: /\./ },
                },
                builtin:
                    /\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\b/,
                operator: [
                    n.languages.haskell.operator[0],
                    n.languages.haskell.operator[2],
                    /[\xa2-\xa6\xa8\xa9\xac\xae-\xb1\xb4\xb8\xd7\xf7\u02c2-\u02c5\u02d2-\u02df\u02e5-\u02eb\u02ed\u02ef-\u02ff\u0375\u0384\u0385\u03f6\u0482\u058d-\u058f\u0606-\u0608\u060b\u060e\u060f\u06de\u06e9\u06fd\u06fe\u07f6\u07fe\u07ff\u09f2\u09f3\u09fa\u09fb\u0af1\u0b70\u0bf3-\u0bfa\u0c7f\u0d4f\u0d79\u0e3f\u0f01-\u0f03\u0f13\u0f15-\u0f17\u0f1a-\u0f1f\u0f34\u0f36\u0f38\u0fbe-\u0fc5\u0fc7-\u0fcc\u0fce\u0fcf\u0fd5-\u0fd8\u109e\u109f\u1390-\u1399\u166d\u17db\u1940\u19de-\u19ff\u1b61-\u1b6a\u1b74-\u1b7c\u1fbd\u1fbf-\u1fc1\u1fcd-\u1fcf\u1fdd-\u1fdf\u1fed-\u1fef\u1ffd\u1ffe\u2044\u2052\u207a-\u207c\u208a-\u208c\u20a0-\u20bf\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211e-\u2123\u2125\u2127\u2129\u212e\u213a\u213b\u2140-\u2144\u214a-\u214d\u214f\u218a\u218b\u2190-\u2307\u230c-\u2328\u232b-\u2426\u2440-\u244a\u249c-\u24e9\u2500-\u2767\u2794-\u27c4\u27c7-\u27e5\u27f0-\u2982\u2999-\u29d7\u29dc-\u29fb\u29fe-\u2b73\u2b76-\u2b95\u2b97-\u2bff\u2ce5-\u2cea\u2e50\u2e51\u2e80-\u2e99\u2e9b-\u2ef3\u2f00-\u2fd5\u2ff0-\u2ffb\u3004\u3012\u3013\u3020\u3036\u3037\u303e\u303f\u309b\u309c\u3190\u3191\u3196-\u319f\u31c0-\u31e3\u3200-\u321e\u322a-\u3247\u3250\u3260-\u327f\u328a-\u32b0\u32c0-\u33ff\u4dc0-\u4dff\ua490-\ua4c6\ua700-\ua716\ua720\ua721\ua789\ua78a\ua828-\ua82b\ua836-\ua839\uaa77-\uaa79\uab5b\uab6a\uab6b\ufb29\ufbb2-\ufbc1\ufdfc\ufdfd\ufe62\ufe64-\ufe66\ufe69\uff04\uff0b\uff1c-\uff1e\uff3e\uff40\uff5c\uff5e\uffe0-\uffe6\uffe8-\uffee\ufffc\ufffd]/,
                ],
            })),
            (n.languages.purs = n.languages.purescript);
    }
    return jp;
}
var Vp, CS;
function WO() {
    if (CS) return Vp;
    (CS = 1), (Vp = e), (e.displayName = "python"), (e.aliases = ["py"]);
    function e(t) {
        (t.languages.python = {
            comment: { pattern: /(^|[^\\])#.*/, lookbehind: !0, greedy: !0 },
            "string-interpolation": {
                pattern: /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,
                        lookbehind: !0,
                        inside: {
                            "format-spec": { pattern: /(:)[^:(){}]+(?=\}$)/, lookbehind: !0 },
                            "conversion-option": { pattern: /![sra](?=[:}]$)/, alias: "punctuation" },
                            rest: null,
                        },
                    },
                    string: /[\s\S]+/,
                },
            },
            "triple-quoted-string": { pattern: /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i, greedy: !0, alias: "string" },
            string: { pattern: /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i, greedy: !0 },
            function: { pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g, lookbehind: !0 },
            "class-name": { pattern: /(\bclass\s+)\w+/i, lookbehind: !0 },
            decorator: { pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m, lookbehind: !0, alias: ["annotation", "punctuation"], inside: { punctuation: /\./ } },
            keyword:
                /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
            builtin:
                /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
            boolean: /\b(?:False|None|True)\b/,
            number: /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,
            operator: /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
            punctuation: /[{}[\];(),.:]/,
        }),
            (t.languages.python["string-interpolation"].inside.interpolation.inside.rest = t.languages.python),
            (t.languages.py = t.languages.python);
    }
    return Vp;
}
var Wp, OS;
function YO() {
    if (OS) return Wp;
    (OS = 1), (Wp = e), (e.displayName = "q"), (e.aliases = []);
    function e(t) {
        t.languages.q = {
            string: /"(?:\\.|[^"\\\r\n])*"/,
            comment: [
                { pattern: /([\t )\]}])\/.*/, lookbehind: !0, greedy: !0 },
                { pattern: /(^|\r?\n|\r)\/[\t ]*(?:(?:\r?\n|\r)(?:.*(?:\r?\n|\r(?!\n)))*?(?:\\(?=[\t ]*(?:\r?\n|\r))|$)|\S.*)/, lookbehind: !0, greedy: !0 },
                { pattern: /^\\[\t ]*(?:\r?\n|\r)[\s\S]+/m, greedy: !0 },
                { pattern: /^#!.+/m, greedy: !0 },
            ],
            symbol: /`(?::\S+|[\w.]*)/,
            datetime: {
                pattern:
                    /0N[mdzuvt]|0W[dtz]|\d{4}\.\d\d(?:m|\.\d\d(?:T(?:\d\d(?::\d\d(?::\d\d(?:[.:]\d\d\d)?)?)?)?)?[dz]?)|\d\d:\d\d(?::\d\d(?:[.:]\d\d\d)?)?[uvt]?/,
                alias: "number",
            },
            number: /\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\da-fA-F]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?[hjfeb]?)/,
            keyword:
                /\\\w+\b|\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\b/,
            adverb: { pattern: /['\/\\]:?|\beach\b/, alias: "function" },
            verb: { pattern: /(?:\B\.\B|\b[01]:|<[=>]?|>=?|[:+\-*%,!?~=|$&#@^]):?|\b_\b:?/, alias: "operator" },
            punctuation: /[(){}\[\];.]/,
        };
    }
    return Wp;
}
var Yp, LS;
function KO() {
    if (LS) return Yp;
    (LS = 1), (Yp = e), (e.displayName = "qml"), (e.aliases = []);
    function e(t) {
        (function (n) {
            for (
                var r = /"(?:\\.|[^\\"\r\n])*"|'(?:\\.|[^\\'\r\n])*'/.source,
                    a = /\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))*\*\//.source,
                    i = /(?:[^\\()[\]{}"'/]|<string>|\/(?![*/])|<comment>|\(<expr>*\)|\[<expr>*\]|\{<expr>*\}|\\[\s\S])/.source
                        .replace(/<string>/g, function () {
                            return r;
                        })
                        .replace(/<comment>/g, function () {
                            return a;
                        }),
                    o = 0;
                o < 2;
                o++
            )
                i = i.replace(/<expr>/g, function () {
                    return i;
                });
            (i = i.replace(/<expr>/g, "[^\\s\\S]")),
                (n.languages.qml = {
                    comment: { pattern: /\/\/.*|\/\*[\s\S]*?\*\//, greedy: !0 },
                    "javascript-function": {
                        pattern: RegExp(
                            /((?:^|;)[ \t]*)function\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*\(<js>*\)\s*\{<js>*\}/.source.replace(
                                /<js>/g,
                                function () {
                                    return i;
                                },
                            ),
                            "m",
                        ),
                        lookbehind: !0,
                        greedy: !0,
                        alias: "language-javascript",
                        inside: n.languages.javascript,
                    },
                    "class-name": { pattern: /((?:^|[:;])[ \t]*)(?!\d)\w+(?=[ \t]*\{|[ \t]+on\b)/m, lookbehind: !0 },
                    property: [
                        { pattern: /((?:^|[;{])[ \t]*)(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m, lookbehind: !0 },
                        {
                            pattern: /((?:^|[;{])[ \t]*)property[ \t]+(?!\d)\w+(?:\.\w+)*[ \t]+(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
                            lookbehind: !0,
                            inside: { keyword: /^property/, property: /\w+(?:\.\w+)*/ },
                        },
                    ],
                    "javascript-expression": {
                        pattern: RegExp(
                            /(:[ \t]*)(?![\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function () {
                                return i;
                            }),
                            "m",
                        ),
                        lookbehind: !0,
                        greedy: !0,
                        alias: "language-javascript",
                        inside: n.languages.javascript,
                    },
                    string: { pattern: /"(?:\\.|[^\\"\r\n])*"/, greedy: !0 },
                    keyword: /\b(?:as|import|on)\b/,
                    punctuation: /[{}[\]:;,]/,
                });
        })(t);
    }
    return Yp;
}
var Kp, DS;
function XO() {
    if (DS) return Kp;
    (DS = 1), (Kp = e), (e.displayName = "qore"), (e.aliases = []);
    function e(t) {
        t.languages.qore = t.languages.extend("clike", {
            comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:\/\/|#).*)/, lookbehind: !0 },
            string: { pattern: /("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/, greedy: !0 },
            keyword:
                /\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\b/,
            boolean: /\b(?:false|true)\b/i,
            function: /\$?\b(?!\d)\w+(?=\()/,
            number: /\b(?:0b[01]+|0x(?:[\da-f]*\.)?[\da-fp\-]+|(?:\d+(?:\.\d+)?|\.\d+)(?:e\d+)?[df]|(?:\d+(?:\.\d+)?|\.\d+))\b/i,
            operator: { pattern: /(^|[^.])(?:\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\|[|=]?|[*\/%^]=?|[~?])/, lookbehind: !0 },
            variable: /\$(?!\d)\w+\b/,
        });
    }
    return Kp;
}
var Xp, MS;
function ZO() {
    if (MS) return Xp;
    (MS = 1), (Xp = e), (e.displayName = "qsharp"), (e.aliases = ["qs"]);
    function e(t) {
        (function (n) {
            function r(b, E) {
                return b.replace(/<<(\d+)>>/g, function (I, y) {
                    return "(?:" + E[+y] + ")";
                });
            }
            function a(b, E, I) {
                return RegExp(r(b, E), I || "");
            }
            function i(b, E) {
                for (var I = 0; I < E; I++)
                    b = b.replace(/<<self>>/g, function () {
                        return "(?:" + b + ")";
                    });
                return b.replace(/<<self>>/g, "[^\\s\\S]");
            }
            var o = {
                type: "Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero",
                other: "Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within",
            };
            function l(b) {
                return "\\b(?:" + b.trim().replace(/ /g, "|") + ")\\b";
            }
            var s = RegExp(l(o.type + " " + o.other)),
                u = /\b[A-Za-z_]\w*\b/.source,
                c = r(/<<0>>(?:\s*\.\s*<<0>>)*/.source, [u]),
                d = { keyword: s, punctuation: /[<>()?,.:[\]]/ },
                m = /"(?:\\.|[^\\"])*"/.source;
            (n.languages.qsharp = n.languages.extend("clike", {
                comment: /\/\/.*/,
                string: [{ pattern: a(/(^|[^$\\])<<0>>/.source, [m]), lookbehind: !0, greedy: !0 }],
                "class-name": [
                    { pattern: a(/(\b(?:as|open)\s+)<<0>>(?=\s*(?:;|as\b))/.source, [c]), lookbehind: !0, inside: d },
                    { pattern: a(/(\bnamespace\s+)<<0>>(?=\s*\{)/.source, [c]), lookbehind: !0, inside: d },
                ],
                keyword: s,
                number: /(?:\b0(?:x[\da-f]+|b[01]+|o[0-7]+)|(?:\B\.\d+|\b\d+(?:\.\d*)?)(?:e[-+]?\d+)?)l?\b/i,
                operator: /\band=|\bor=|\band\b|\bnot\b|\bor\b|<[-=]|[-=]>|>>>=?|<<<=?|\^\^\^=?|\|\|\|=?|&&&=?|w\/=?|~~~|[*\/+\-^=!%]=?/,
                punctuation: /::|[{}[\];(),.:]/,
            })),
                n.languages.insertBefore("qsharp", "number", { range: { pattern: /\.\./, alias: "operator" } });
            var f = i(r(/\{(?:[^"{}]|<<0>>|<<self>>)*\}/.source, [m]), 2);
            n.languages.insertBefore("qsharp", "string", {
                "interpolation-string": {
                    pattern: a(/\$"(?:\\.|<<0>>|[^\\"{])*"/.source, [f]),
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: a(/((?:^|[^\\])(?:\\\\)*)<<0>>/.source, [f]),
                            lookbehind: !0,
                            inside: { punctuation: /^\{|\}$/, expression: { pattern: /[\s\S]+/, alias: "language-qsharp", inside: n.languages.qsharp } },
                        },
                        string: /[\s\S]+/,
                    },
                },
            });
        })(t),
            (t.languages.qs = t.languages.qsharp);
    }
    return Xp;
}
var Zp, FS;
function QO() {
    if (FS) return Zp;
    (FS = 1), (Zp = e), (e.displayName = "r"), (e.aliases = []);
    function e(t) {
        t.languages.r = {
            comment: /#.*/,
            string: { pattern: /(['"])(?:\\.|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            "percent-operator": { pattern: /%[^%\s]*%/, alias: "operator" },
            boolean: /\b(?:FALSE|TRUE)\b/,
            ellipsis: /\.\.(?:\.|\d+)/,
            number: [/\b(?:Inf|NaN)\b/, /(?:\b0x[\dA-Fa-f]+(?:\.\d*)?|\b\d+(?:\.\d*)?|\B\.\d+)(?:[EePp][+-]?\d+)?[iL]?/],
            keyword: /\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\b/,
            operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\|\|?|[+*\/^$@~]/,
            punctuation: /[(){}\[\],;]/,
        };
    }
    return Zp;
}
var Qp, PS;
function JO() {
    if (PS) return Qp;
    PS = 1;
    var e = Cg();
    (Qp = t), (t.displayName = "racket"), (t.aliases = ["rkt"]);
    function t(n) {
        n.register(e),
            (n.languages.racket = n.languages.extend("scheme", { "lambda-parameter": { pattern: /([(\[]lambda\s+[(\[])[^()\[\]'\s]+/, lookbehind: !0 } })),
            n.languages.insertBefore("racket", "string", { lang: { pattern: /^#lang.+/m, greedy: !0, alias: "keyword" } }),
            (n.languages.rkt = n.languages.racket);
    }
    return Qp;
}
var Jp, BS;
function eL() {
    if (BS) return Jp;
    (BS = 1), (Jp = e), (e.displayName = "reason"), (e.aliases = []);
    function e(t) {
        (t.languages.reason = t.languages.extend("clike", {
            string: { pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/, greedy: !0 },
            "class-name": /\b[A-Z]\w*/,
            keyword:
                /\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,
            operator: /\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/,
        })),
            t.languages.insertBefore("reason", "class-name", {
                char: { pattern: /'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/, greedy: !0 },
                constructor: /\b[A-Z]\w*\b(?!\s*\.)/,
                label: { pattern: /\b[a-z]\w*(?=::)/, alias: "symbol" },
            }),
            delete t.languages.reason.function;
    }
    return Jp;
}
var e0, US;
function tL() {
    if (US) return e0;
    (US = 1), (e0 = e), (e.displayName = "regex"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = { pattern: /\\[\\(){}[\]^$+*?|.]/, alias: "escape" },
                a = /\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/,
                i = { pattern: /\.|\\[wsd]|\\p\{[^{}]+\}/i, alias: "class-name" },
                o = { pattern: /\\[wsd]|\\p\{[^{}]+\}/i, alias: "class-name" },
                l = "(?:[^\\\\-]|" + a.source + ")",
                s = RegExp(l + "-" + l),
                u = { pattern: /(<|')[^<>']+(?=[>']$)/, lookbehind: !0, alias: "variable" };
            n.languages.regex = {
                "char-class": {
                    pattern: /((?:^|[^\\])(?:\\\\)*)\[(?:[^\\\]]|\\[\s\S])*\]/,
                    lookbehind: !0,
                    inside: {
                        "char-class-negation": { pattern: /(^\[)\^/, lookbehind: !0, alias: "operator" },
                        "char-class-punctuation": { pattern: /^\[|\]$/, alias: "punctuation" },
                        range: { pattern: s, inside: { escape: a, "range-punctuation": { pattern: /-/, alias: "operator" } } },
                        "special-escape": r,
                        "char-set": o,
                        escape: a,
                    },
                },
                "special-escape": r,
                "char-set": i,
                backreference: [
                    { pattern: /\\(?![123][0-7]{2})[1-9]/, alias: "keyword" },
                    { pattern: /\\k<[^<>']+>/, alias: "keyword", inside: { "group-name": u } },
                ],
                anchor: { pattern: /[$^]|\\[ABbGZz]/, alias: "function" },
                escape: a,
                group: [
                    {
                        pattern: /\((?:\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,
                        alias: "punctuation",
                        inside: { "group-name": u },
                    },
                    { pattern: /\)/, alias: "punctuation" },
                ],
                quantifier: { pattern: /(?:[+*?]|\{\d+(?:,\d*)?\})[?+]?/, alias: "number" },
                alternation: { pattern: /\|/, alias: "keyword" },
            };
        })(t);
    }
    return e0;
}
var t0, zS;
function nL() {
    if (zS) return t0;
    (zS = 1), (t0 = e), (e.displayName = "rego"), (e.aliases = []);
    function e(t) {
        t.languages.rego = {
            comment: /#.*/,
            property: { pattern: /(^|[^\\.])(?:"(?:\\.|[^\\"\r\n])*"|`[^`]*`|\b[a-z_]\w*\b)(?=\s*:(?!=))/i, lookbehind: !0, greedy: !0 },
            string: { pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"|`[^`]*`/, lookbehind: !0, greedy: !0 },
            keyword: /\b(?:as|default|else|import|not|null|package|set(?=\s*\()|some|with)\b/,
            boolean: /\b(?:false|true)\b/,
            function: { pattern: /\b[a-z_]\w*\b(?:\s*\.\s*\b[a-z_]\w*\b)*(?=\s*\()/i, inside: { namespace: /\b\w+\b(?=\s*\.)/, punctuation: /\./ } },
            number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
            operator: /[-+*/%|&]|[<>:=]=?|!=|\b_\b/,
            punctuation: /[,;.\[\]{}()]/,
        };
    }
    return t0;
}
var n0, $S;
function rL() {
    if ($S) return n0;
    ($S = 1), (n0 = e), (e.displayName = "renpy"), (e.aliases = ["rpy"]);
    function e(t) {
        (t.languages.renpy = {
            comment: { pattern: /(^|[^\\])#.+/, lookbehind: !0 },
            string: { pattern: /("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\])*\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m, greedy: !0 },
            function: /\b[a-z_]\w*(?=\()/i,
            property:
                /\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\b/,
            tag: /\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\b|\$/,
            keyword:
                /\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\b/,
            boolean: /\b(?:[Ff]alse|[Tt]rue)\b/,
            number: /(?:\b(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?)|\B\.\d+)(?:e[+-]?\d+)?j?/i,
            operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]|\b(?:and|at|not|or|with)\b/,
            punctuation: /[{}[\];(),.:]/,
        }),
            (t.languages.rpy = t.languages.renpy);
    }
    return n0;
}
var r0, qS;
function aL() {
    if (qS) return r0;
    (qS = 1), (r0 = e), (e.displayName = "rest"), (e.aliases = []);
    function e(t) {
        t.languages.rest = {
            table: [
                {
                    pattern: /(^[\t ]*)(?:\+[=-]+)+\+(?:\r?\n|\r)(?:\1[+|].+[+|](?:\r?\n|\r))+\1(?:\+[=-]+)+\+/m,
                    lookbehind: !0,
                    inside: { punctuation: /\||(?:\+[=-]+)+\+/ },
                },
                {
                    pattern: /(^[\t ]*)=+ [ =]*=(?:(?:\r?\n|\r)\1.+)+(?:\r?\n|\r)\1=+ [ =]*=(?=(?:\r?\n|\r){2}|\s*$)/m,
                    lookbehind: !0,
                    inside: { punctuation: /[=-]+/ },
                },
            ],
            "substitution-def": {
                pattern: /(^[\t ]*\.\. )\|(?:[^|\s](?:[^|]*[^|\s])?)\| [^:]+::/m,
                lookbehind: !0,
                inside: {
                    substitution: { pattern: /^\|(?:[^|\s]|[^|\s][^|]*[^|\s])\|/, alias: "attr-value", inside: { punctuation: /^\||\|$/ } },
                    directive: { pattern: /( )(?! )[^:]+::/, lookbehind: !0, alias: "function", inside: { punctuation: /::$/ } },
                },
            },
            "link-target": [
                { pattern: /(^[\t ]*\.\. )\[[^\]]+\]/m, lookbehind: !0, alias: "string", inside: { punctuation: /^\[|\]$/ } },
                { pattern: /(^[\t ]*\.\. )_(?:`[^`]+`|(?:[^:\\]|\\.)+):/m, lookbehind: !0, alias: "string", inside: { punctuation: /^_|:$/ } },
            ],
            directive: { pattern: /(^[\t ]*\.\. )[^:]+::/m, lookbehind: !0, alias: "function", inside: { punctuation: /::$/ } },
            comment: { pattern: /(^[\t ]*\.\.)(?:(?: .+)?(?:(?:\r?\n|\r).+)+| .+)(?=(?:\r?\n|\r){2}|$)/m, lookbehind: !0 },
            title: [
                {
                    pattern: /^(([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+)(?:\r?\n|\r).+(?:\r?\n|\r)\1$/m,
                    inside: { punctuation: /^[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+|[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/, important: /.+/ },
                },
                {
                    pattern: /(^|(?:\r?\n|\r){2}).+(?:\r?\n|\r)([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+(?=\r?\n|\r|$)/,
                    lookbehind: !0,
                    inside: { punctuation: /[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/, important: /.+/ },
                },
            ],
            hr: { pattern: /((?:\r?\n|\r){2})([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2{3,}(?=(?:\r?\n|\r){2})/, lookbehind: !0, alias: "punctuation" },
            field: { pattern: /(^[\t ]*):[^:\r\n]+:(?= )/m, lookbehind: !0, alias: "attr-name" },
            "command-line-option": {
                pattern:
                    /(^[\t ]*)(?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?)*(?=(?:\r?\n|\r)? {2,}\S)/im,
                lookbehind: !0,
                alias: "symbol",
            },
            "literal-block": {
                pattern: /::(?:\r?\n|\r){2}([ \t]+)(?![ \t]).+(?:(?:\r?\n|\r)\1.+)*/,
                inside: { "literal-block-punctuation": { pattern: /^::/, alias: "punctuation" } },
            },
            "quoted-literal-block": {
                pattern: /::(?:\r?\n|\r){2}([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]).*(?:(?:\r?\n|\r)\1.*)*/,
                inside: { "literal-block-punctuation": { pattern: /^(?:::|([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\1*)/m, alias: "punctuation" } },
            },
            "list-bullet": {
                pattern: /(^[\t ]*)(?:[*+\-•‣⁃]|\(?(?:\d+|[a-z]|[ivxdclm]+)\)|(?:\d+|[a-z]|[ivxdclm]+)\.)(?= )/im,
                lookbehind: !0,
                alias: "punctuation",
            },
            "doctest-block": { pattern: /(^[\t ]*)>>> .+(?:(?:\r?\n|\r).+)*/m, lookbehind: !0, inside: { punctuation: /^>>>/ } },
            inline: [
                {
                    pattern: /(^|[\s\-:\/'"<(\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\*\*?|``?|\|)(?!\s)(?:(?!\2).)*\S\2(?=[\s\-.,:;!?\\\/'")\]}]|$))/m,
                    lookbehind: !0,
                    inside: {
                        bold: { pattern: /(^\*\*).+(?=\*\*$)/, lookbehind: !0 },
                        italic: { pattern: /(^\*).+(?=\*$)/, lookbehind: !0 },
                        "inline-literal": { pattern: /(^``).+(?=``$)/, lookbehind: !0, alias: "symbol" },
                        role: { pattern: /^:[^:]+:|:[^:]+:$/, alias: "function", inside: { punctuation: /^:|:$/ } },
                        "interpreted-text": { pattern: /(^`).+(?=`$)/, lookbehind: !0, alias: "attr-value" },
                        substitution: { pattern: /(^\|).+(?=\|$)/, lookbehind: !0, alias: "attr-value" },
                        punctuation: /\*\*?|``?|\|/,
                    },
                },
            ],
            link: [
                { pattern: /\[[^\[\]]+\]_(?=[\s\-.,:;!?\\\/'")\]}]|$)/, alias: "string", inside: { punctuation: /^\[|\]_$/ } },
                {
                    pattern: /(?:\b[a-z\d]+(?:[_.:+][a-z\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\s\-.,:;!?\\\/'")\]}]|$)/i,
                    alias: "string",
                    inside: { punctuation: /^_?`|`$|`?_?_$/ },
                },
            ],
            punctuation: { pattern: /(^[\t ]*)(?:\|(?= |$)|(?:---?|—|\.\.|__)(?= )|\.\.$)/m, lookbehind: !0 },
        };
    }
    return r0;
}
var a0, GS;
function iL() {
    if (GS) return a0;
    (GS = 1), (a0 = e), (e.displayName = "rip"), (e.aliases = []);
    function e(t) {
        t.languages.rip = {
            comment: { pattern: /#.*/, greedy: !0 },
            char: { pattern: /\B`[^\s`'",.:;#\/\\()<>\[\]{}]\b/, greedy: !0 },
            string: { pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            regex: { pattern: /(^|[^/])\/(?!\/)(?:\[[^\n\r\]]*\]|\\.|[^/\\\r\n\[])+\/(?=\s*(?:$|[\r\n,.;})]))/, lookbehind: !0, greedy: !0 },
            keyword: /(?:=>|->)|\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\b/,
            builtin: /@|\bSystem\b/,
            boolean: /\b(?:false|true)\b/,
            date: /\b\d{4}-\d{2}-\d{2}\b/,
            time: /\b\d{2}:\d{2}:\d{2}\b/,
            datetime: /\b\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\b/,
            symbol: /:[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/,
            number: /[+-]?\b(?:\d+\.\d+|\d+)\b/,
            punctuation: /(?:\.{2,3})|[`,.:;=\/\\()<>\[\]{}]/,
            reference: /[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/,
        };
    }
    return a0;
}
var i0, HS;
function oL() {
    if (HS) return i0;
    (HS = 1), (i0 = e), (e.displayName = "roboconf"), (e.aliases = []);
    function e(t) {
        t.languages.roboconf = {
            comment: /#.*/,
            keyword: { pattern: /(^|\s)(?:(?:external|import)\b|(?:facet|instance of)(?=[ \t]+[\w-]+[ \t]*\{))/, lookbehind: !0 },
            component: { pattern: /[\w-]+(?=[ \t]*\{)/, alias: "variable" },
            property: /[\w.-]+(?=[ \t]*:)/,
            value: { pattern: /(=[ \t]*(?![ \t]))[^,;]+/, lookbehind: !0, alias: "attr-value" },
            optional: { pattern: /\(optional\)/, alias: "builtin" },
            wildcard: { pattern: /(\.)\*/, lookbehind: !0, alias: "operator" },
            punctuation: /[{},.;:=]/,
        };
    }
    return i0;
}
var o0, jS;
function lL() {
    if (jS) return o0;
    (jS = 1), (o0 = e), (e.displayName = "robotframework"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = { pattern: /(^[ \t]*| {2}|\t)#.*/m, lookbehind: !0, greedy: !0 },
                a = { pattern: /((?:^|[^\\])(?:\\{2})*)[$@&%]\{(?:[^{}\r\n]|\{[^{}\r\n]*\})*\}/, lookbehind: !0, inside: { punctuation: /^[$@&%]\{|\}$/ } };
            function i(u, c) {
                var d = {};
                d["section-header"] = { pattern: /^ ?\*{3}.+?\*{3}/, alias: "keyword" };
                for (var m in c) d[m] = c[m];
                return (
                    (d.tag = { pattern: /([\r\n](?: {2}|\t)[ \t]*)\[[-\w]+\]/, lookbehind: !0, inside: { punctuation: /\[|\]/ } }),
                    (d.variable = a),
                    (d.comment = r),
                    {
                        pattern: RegExp(
                            /^ ?\*{3}[ \t]*<name>[ \t]*\*{3}(?:.|[\r\n](?!\*{3}))*/.source.replace(/<name>/g, function () {
                                return u;
                            }),
                            "im",
                        ),
                        alias: "section",
                        inside: d,
                    }
                );
            }
            var o = { pattern: /(\[Documentation\](?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/, lookbehind: !0, alias: "string" },
                l = { pattern: /([\r\n] ?)(?!#)(?:\S(?:[ \t]\S)*)+/, lookbehind: !0, alias: "function", inside: { variable: a } },
                s = { pattern: /([\r\n](?: {2}|\t)[ \t]*)(?!\[|\.{3}|#)(?:\S(?:[ \t]\S)*)+/, lookbehind: !0, inside: { variable: a } };
            (n.languages.robotframework = {
                settings: i("Settings", {
                    documentation: {
                        pattern: /([\r\n] ?Documentation(?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,
                        lookbehind: !0,
                        alias: "string",
                    },
                    property: { pattern: /([\r\n] ?)(?!\.{3}|#)(?:\S(?:[ \t]\S)*)+/, lookbehind: !0 },
                }),
                variables: i("Variables"),
                "test-cases": i("Test Cases", { "test-name": l, documentation: o, property: s }),
                keywords: i("Keywords", { "keyword-name": l, documentation: o, property: s }),
                tasks: i("Tasks", { "task-name": l, documentation: o, property: s }),
                comment: r,
            }),
                (n.languages.robot = n.languages.robotframework);
        })(t);
    }
    return o0;
}
var l0, VS;
function sL() {
    if (VS) return l0;
    (VS = 1), (l0 = e), (e.displayName = "rust"), (e.aliases = []);
    function e(t) {
        (function (n) {
            for (var r = /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\//.source, a = 0; a < 2; a++)
                r = r.replace(/<self>/g, function () {
                    return r;
                });
            (r = r.replace(/<self>/g, function () {
                return /[^\s\S]/.source;
            })),
                (n.languages.rust = {
                    comment: [
                        { pattern: RegExp(/(^|[^\\])/.source + r), lookbehind: !0, greedy: !0 },
                        { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 },
                    ],
                    string: { pattern: /b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/, greedy: !0 },
                    char: { pattern: /b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/, greedy: !0 },
                    attribute: { pattern: /#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/, greedy: !0, alias: "attr-name", inside: { string: null } },
                    "closure-params": {
                        pattern: /([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: { "closure-punctuation": { pattern: /^\||\|$/, alias: "punctuation" }, rest: null },
                    },
                    "lifetime-annotation": { pattern: /'\w+/, alias: "symbol" },
                    "fragment-specifier": { pattern: /(\$\w+:)[a-z]+/, lookbehind: !0, alias: "punctuation" },
                    variable: /\$\w+/,
                    "function-definition": { pattern: /(\bfn\s+)\w+/, lookbehind: !0, alias: "function" },
                    "type-definition": { pattern: /(\b(?:enum|struct|trait|type|union)\s+)\w+/, lookbehind: !0, alias: "class-name" },
                    "module-declaration": [
                        { pattern: /(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/, lookbehind: !0, alias: "namespace" },
                        {
                            pattern: /(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/,
                            lookbehind: !0,
                            alias: "namespace",
                            inside: { punctuation: /::/ },
                        },
                    ],
                    keyword: [
                        /\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/,
                        /\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/,
                    ],
                    function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())/,
                    macro: { pattern: /\b\w+!/, alias: "property" },
                    constant: /\b[A-Z_][A-Z_\d]+\b/,
                    "class-name": /\b[A-Z]\w*\b/,
                    namespace: { pattern: /(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/, inside: { punctuation: /::/ } },
                    number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/,
                    boolean: /\b(?:false|true)\b/,
                    punctuation: /->|\.\.=|\.{1,3}|::|[{}[\];(),:]/,
                    operator: /[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/,
                }),
                (n.languages.rust["closure-params"].inside.rest = n.languages.rust),
                (n.languages.rust.attribute.inside.string = n.languages.rust.string);
        })(t);
    }
    return l0;
}
var s0, WS;
function uL() {
    if (WS) return s0;
    (WS = 1), (s0 = e), (e.displayName = "sas"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))/.source,
                a = /\b(?:\d[\da-f]*x|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
                i = { pattern: RegExp(r + "[bx]"), alias: "number" },
                o = { pattern: /&[a-z_]\w*/i },
                l = {
                    pattern:
                        /((?:^|\s|=|\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\b/i,
                    lookbehind: !0,
                    alias: "keyword",
                },
                s = { pattern: /(^|\s)(?:proc\s+\w+|data(?!=)|quit|run)\b/i, alias: "keyword", lookbehind: !0 },
                u = [/\/\*[\s\S]*?\*\//, { pattern: /(^[ \t]*|;\s*)\*[^;]*;/m, lookbehind: !0 }],
                c = { pattern: RegExp(r), greedy: !0 },
                d = /[$%@.(){}\[\];,\\]/,
                m = { pattern: /%?\b\w+(?=\()/, alias: "keyword" },
                f = {
                    function: m,
                    "arg-value": { pattern: /(=\s*)[A-Z\.]+/i, lookbehind: !0 },
                    operator: /=/,
                    "macro-variable": o,
                    arg: { pattern: /[A-Z]+/i, alias: "keyword" },
                    number: a,
                    "numeric-constant": i,
                    punctuation: d,
                    string: c,
                },
                b = {
                    pattern: /\b(?:format|put)\b=?[\w'$.]+/i,
                    inside: { keyword: /^(?:format|put)(?==)/i, equals: /=/, format: { pattern: /(?:\w|\$\d)+\.\d?/, alias: "number" } },
                },
                E = {
                    pattern: /\b(?:format|put)\s+[\w']+(?:\s+[$.\w]+)+(?=;)/i,
                    inside: { keyword: /^(?:format|put)/i, format: { pattern: /[\w$]+\.\d?/, alias: "number" } },
                },
                I = {
                    pattern:
                        /((?:^|\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\d?)\b/i,
                    lookbehind: !0,
                    alias: "keyword",
                },
                y = { pattern: /(^|\s)(?:submit(?:\s+(?:load|norun|parseonly))?|endsubmit)\b/i, lookbehind: !0, alias: "keyword" },
                g =
                    /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/
                        .source,
                v = {
                    pattern: RegExp(
                        /(^|\s)(?:action\s+)?(?:<act>)\.[a-z]+\b[^;]+/.source.replace(/<act>/g, function () {
                            return g;
                        }),
                        "i",
                    ),
                    lookbehind: !0,
                    inside: {
                        keyword: RegExp(
                            /(?:<act>)\.[a-z]+\b/.source.replace(/<act>/g, function () {
                                return g;
                            }),
                            "i",
                        ),
                        action: { pattern: /(?:action)/i, alias: "keyword" },
                        comment: u,
                        function: m,
                        "arg-value": f["arg-value"],
                        operator: f.operator,
                        argument: f.arg,
                        number: a,
                        "numeric-constant": i,
                        punctuation: d,
                        string: c,
                    },
                },
                T = {
                    pattern:
                        /((?:^|\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\s+do|then|title\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\b/i,
                    lookbehind: !0,
                };
            n.languages.sas = {
                datalines: {
                    pattern: /^([ \t]*)(?:cards|(?:data)?lines);[\s\S]+?^[ \t]*;/im,
                    lookbehind: !0,
                    alias: "string",
                    inside: { keyword: { pattern: /^(?:cards|(?:data)?lines)/i }, punctuation: /;/ },
                },
                "proc-sql": {
                    pattern: /(^proc\s+(?:fed)?sql(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
                    lookbehind: !0,
                    inside: {
                        sql: {
                            pattern: RegExp(
                                /^[ \t]*(?:select|alter\s+table|(?:create|describe|drop)\s+(?:index|table(?:\s+constraints)?|view)|create\s+unique\s+index|insert\s+into|update)(?:<str>|[^;"'])+;/.source.replace(
                                    /<str>/g,
                                    function () {
                                        return r;
                                    },
                                ),
                                "im",
                            ),
                            alias: "language-sql",
                            inside: n.languages.sql,
                        },
                        "global-statements": I,
                        "sql-statements": {
                            pattern: /(^|\s)(?:disconnect\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\b/i,
                            lookbehind: !0,
                            alias: "keyword",
                        },
                        number: a,
                        "numeric-constant": i,
                        punctuation: d,
                        string: c,
                    },
                },
                "proc-groovy": {
                    pattern: /(^proc\s+groovy(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
                    lookbehind: !0,
                    inside: {
                        comment: u,
                        groovy: {
                            pattern: RegExp(
                                /(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () {
                                    return r;
                                }),
                                "im",
                            ),
                            lookbehind: !0,
                            alias: "language-groovy",
                            inside: n.languages.groovy,
                        },
                        keyword: T,
                        "submit-statement": y,
                        "global-statements": I,
                        number: a,
                        "numeric-constant": i,
                        punctuation: d,
                        string: c,
                    },
                },
                "proc-lua": {
                    pattern: /(^proc\s+lua(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
                    lookbehind: !0,
                    inside: {
                        comment: u,
                        lua: {
                            pattern: RegExp(
                                /(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () {
                                    return r;
                                }),
                                "im",
                            ),
                            lookbehind: !0,
                            alias: "language-lua",
                            inside: n.languages.lua,
                        },
                        keyword: T,
                        "submit-statement": y,
                        "global-statements": I,
                        number: a,
                        "numeric-constant": i,
                        punctuation: d,
                        string: c,
                    },
                },
                "proc-cas": {
                    pattern: /(^proc\s+cas(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|quit|data);|(?![\s\S]))/im,
                    lookbehind: !0,
                    inside: {
                        comment: u,
                        "statement-var": {
                            pattern: /((?:^|\s)=?)saveresult\s[^;]+/im,
                            lookbehind: !0,
                            inside: { statement: { pattern: /^saveresult\s+\S+/i, inside: { keyword: /^(?:saveresult)/i } }, rest: f },
                        },
                        "cas-actions": v,
                        statement: { pattern: /((?:^|\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im, lookbehind: !0, inside: f },
                        step: s,
                        keyword: T,
                        function: m,
                        format: b,
                        altformat: E,
                        "global-statements": I,
                        number: a,
                        "numeric-constant": i,
                        punctuation: d,
                        string: c,
                    },
                },
                "proc-args": {
                    pattern: RegExp(
                        /(^proc\s+\w+\s+)(?!\s)(?:[^;"']|<str>)+;/.source.replace(/<str>/g, function () {
                            return r;
                        }),
                        "im",
                    ),
                    lookbehind: !0,
                    inside: f,
                },
                "macro-keyword": l,
                "macro-variable": o,
                "macro-string-functions": {
                    pattern: /((?:^|\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\(.*?(?:[^%]\))/i,
                    lookbehind: !0,
                    inside: {
                        function: { pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i, alias: "keyword" },
                        "macro-keyword": l,
                        "macro-variable": o,
                        "escaped-char": { pattern: /%['"()<>=¬^~;,#]/ },
                        punctuation: d,
                    },
                },
                "macro-declaration": { pattern: /^%macro[^;]+(?=;)/im, inside: { keyword: /%macro/i } },
                "macro-end": { pattern: /^%mend[^;]+(?=;)/im, inside: { keyword: /%mend/i } },
                macro: { pattern: /%_\w+(?=\()/, alias: "keyword" },
                input: {
                    pattern: /\binput\s[-\w\s/*.$&]+;/i,
                    inside: { input: { alias: "keyword", pattern: /^input/i }, comment: u, number: a, "numeric-constant": i },
                },
                "options-args": { pattern: /(^options)[-'"|/\\<>*+=:()\w\s]*(?=;)/im, lookbehind: !0, inside: f },
                "cas-actions": v,
                comment: u,
                function: m,
                format: b,
                altformat: E,
                "numeric-constant": i,
                datetime: { pattern: RegExp(r + "(?:dt?|t)"), alias: "number" },
                string: c,
                step: s,
                keyword: T,
                "operator-keyword": { pattern: /\b(?:eq|ge|gt|in|le|lt|ne|not)\b/i, alias: "operator" },
                number: a,
                operator: /\*\*?|\|\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\/=&]|[~¬^]=?/,
                punctuation: d,
            };
        })(t);
    }
    return s0;
}
var u0, YS;
function cL() {
    if (YS) return u0;
    (YS = 1), (u0 = e), (e.displayName = "sass"), (e.aliases = []);
    function e(t) {
        (function (n) {
            (n.languages.sass = n.languages.extend("css", {
                comment: { pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m, lookbehind: !0, greedy: !0 },
            })),
                n.languages.insertBefore("sass", "atrule", {
                    "atrule-line": { pattern: /^(?:[ \t]*)[@+=].+/m, greedy: !0, inside: { atrule: /(?:@[\w-]+|[+=])/ } },
                }),
                delete n.languages.sass.atrule;
            var r = /\$[-\w]+|#\{\$[-\w]+\}/,
                a = [/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/, { pattern: /(\s)-(?=\s)/, lookbehind: !0 }];
            n.languages.insertBefore("sass", "property", {
                "variable-line": { pattern: /^[ \t]*\$.+/m, greedy: !0, inside: { punctuation: /:/, variable: r, operator: a } },
                "property-line": {
                    pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,
                    greedy: !0,
                    inside: {
                        property: [/[^:\s]+(?=\s*:)/, { pattern: /(:)[^:\s]+/, lookbehind: !0 }],
                        punctuation: /:/,
                        variable: r,
                        operator: a,
                        important: n.languages.sass.important,
                    },
                },
            }),
                delete n.languages.sass.property,
                delete n.languages.sass.important,
                n.languages.insertBefore("sass", "punctuation", {
                    selector: {
                        pattern: /^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,
                        lookbehind: !0,
                        greedy: !0,
                    },
                });
        })(t);
    }
    return u0;
}
var c0, KS;
function dL() {
    if (KS) return c0;
    KS = 1;
    var e = Ig();
    (c0 = t), (t.displayName = "scala"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.scala = n.languages.extend("java", {
                "triple-quoted-string": { pattern: /"""[\s\S]*?"""/, greedy: !0, alias: "string" },
                string: { pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
                keyword:
                    /<-|=>|\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\b/,
                number: /\b0x(?:[\da-f]*\.)?[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e\d+)?[dfl]?/i,
                builtin: /\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\b/,
                symbol: /'[^\d\s\\]\w*/,
            })),
            n.languages.insertBefore("scala", "triple-quoted-string", {
                "string-interpolation": {
                    pattern: /\b[a-z]\w*(?:"""(?:[^$]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*?"""|"(?:[^$"\r\n]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*")/i,
                    greedy: !0,
                    inside: {
                        id: { pattern: /^\w+/, greedy: !0, alias: "function" },
                        escape: { pattern: /\\\$"|\$[$"]/, greedy: !0, alias: "symbol" },
                        interpolation: {
                            pattern: /\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
                            greedy: !0,
                            inside: { punctuation: /^\$\{?|\}$/, expression: { pattern: /[\s\S]+/, inside: n.languages.scala } },
                        },
                        string: /[\s\S]+/,
                    },
                },
            }),
            delete n.languages.scala["class-name"],
            delete n.languages.scala.function;
    }
    return c0;
}
var d0, XS;
function pL() {
    if (XS) return d0;
    (XS = 1), (d0 = e), (e.displayName = "scss"), (e.aliases = []);
    function e(t) {
        (t.languages.scss = t.languages.extend("css", {
            comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/, lookbehind: !0 },
            atrule: { pattern: /@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/, inside: { rule: /@[\w-]+/ } },
            url: /(?:[-a-z]+-)?url(?=\()/i,
            selector: {
                pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,
                inside: { parent: { pattern: /&/, alias: "important" }, placeholder: /%[-\w]+/, variable: /\$[-\w]+|#\{\$[-\w]+\}/ },
            },
            property: { pattern: /(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/, inside: { variable: /\$[-\w]+|#\{\$[-\w]+\}/ } },
        })),
            t.languages.insertBefore("scss", "atrule", {
                keyword: [
                    /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,
                    { pattern: /( )(?:from|through)(?= )/, lookbehind: !0 },
                ],
            }),
            t.languages.insertBefore("scss", "important", { variable: /\$[-\w]+|#\{\$[-\w]+\}/ }),
            t.languages.insertBefore("scss", "function", {
                "module-modifier": { pattern: /\b(?:as|hide|show|with)\b/i, alias: "keyword" },
                placeholder: { pattern: /%[-\w]+/, alias: "selector" },
                statement: { pattern: /\B!(?:default|optional)\b/i, alias: "keyword" },
                boolean: /\b(?:false|true)\b/,
                null: { pattern: /\bnull\b/, alias: "keyword" },
                operator: { pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/, lookbehind: !0 },
            }),
            (t.languages.scss.atrule.inside.rest = t.languages.scss);
    }
    return d0;
}
var p0, ZS;
function fL() {
    if (ZS) return p0;
    ZS = 1;
    var e = MT();
    (p0 = t), (t.displayName = "shellSession"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                var a = [
                    /"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/.source,
                    /'[^']*'/.source,
                    /\$'(?:[^'\\]|\\[\s\S])*'/.source,
                    /<<-?\s*(["']?)(\w+)\1\s[\s\S]*?[\r\n]\2/.source,
                ].join("|");
                (r.languages["shell-session"] = {
                    command: {
                        pattern: RegExp(
                            /^/.source +
                                "(?:" +
                                (/[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+(?::[^\0-\x1F$#%*?"<>:;|]+)?/.source + "|" + /[/~.][^\0-\x1F$#%*?"<>@:;|]*/.source) +
                                ")?" +
                                /[$#%](?=\s)/.source +
                                /(?:[^\\\r\n \t'"<$]|[ \t](?:(?!#)|#.*$)|\\(?:[^\r]|\r\n?)|\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g, function () {
                                    return a;
                                }),
                            "m",
                        ),
                        greedy: !0,
                        inside: {
                            info: {
                                pattern: /^[^#$%]+/,
                                alias: "punctuation",
                                inside: { user: /^[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+/, punctuation: /:/, path: /[\s\S]+/ },
                            },
                            bash: { pattern: /(^[$#%]\s*)\S[\s\S]*/, lookbehind: !0, alias: "language-bash", inside: r.languages.bash },
                            "shell-symbol": { pattern: /^[$#%]/, alias: "important" },
                        },
                    },
                    output: /.(?:.*(?:[\r\n]|.$))*/,
                }),
                    (r.languages["sh-session"] = r.languages.shellsession = r.languages["shell-session"]);
            })(n);
    }
    return p0;
}
var f0, QS;
function mL() {
    if (QS) return f0;
    (QS = 1), (f0 = e), (e.displayName = "smali"), (e.aliases = []);
    function e(t) {
        t.languages.smali = {
            comment: /#.*/,
            string: { pattern: /"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\(?:.|u[\da-fA-F]{4}))'/, greedy: !0 },
            "class-name": {
                pattern: /(^|[^L])L(?:(?:\w+|`[^`\r\n]*`)\/)*(?:[\w$]+|`[^`\r\n]*`)(?=\s*;)/,
                lookbehind: !0,
                inside: {
                    "class-name": { pattern: /(^L|\/)(?:[\w$]+|`[^`\r\n]*`)$/, lookbehind: !0 },
                    namespace: { pattern: /^(L)(?:(?:\w+|`[^`\r\n]*`)\/)+/, lookbehind: !0, inside: { punctuation: /\// } },
                    builtin: /^L/,
                },
            },
            builtin: [
                { pattern: /([();\[])[BCDFIJSVZ]+/, lookbehind: !0 },
                { pattern: /([\w$>]:)[BCDFIJSVZ]/, lookbehind: !0 },
            ],
            keyword: [
                { pattern: /(\.end\s+)[\w-]+/, lookbehind: !0 },
                { pattern: /(^|[^\w.-])\.(?!\d)[\w-]+/, lookbehind: !0 },
                {
                    pattern:
                        /(^|[^\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\w.-])/,
                    lookbehind: !0,
                },
            ],
            function: { pattern: /(^|[^\w.-])(?:\w+|<[\w$-]+>)(?=\()/, lookbehind: !0 },
            field: { pattern: /[\w$]+(?=:)/, alias: "variable" },
            register: { pattern: /(^|[^\w.-])[vp]\d(?![\w.-])/, lookbehind: !0, alias: "variable" },
            boolean: { pattern: /(^|[^\w.-])(?:false|true)(?![\w.-])/, lookbehind: !0 },
            number: {
                pattern:
                    /(^|[^/\w.-])-?(?:NAN|INFINITY|0x(?:[\dA-F]+(?:\.[\dA-F]*)?|\.[\dA-F]+)(?:p[+-]?[\dA-F]+)?|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)[dflst]?(?![\w.-])/i,
                lookbehind: !0,
            },
            label: { pattern: /(:)\w+/, lookbehind: !0, alias: "property" },
            operator: /->|\.\.|[\[=]/,
            punctuation: /[{}(),;:]/,
        };
    }
    return f0;
}
var m0, JS;
function hL() {
    if (JS) return m0;
    (JS = 1), (m0 = e), (e.displayName = "smalltalk"), (e.aliases = []);
    function e(t) {
        t.languages.smalltalk = {
            comment: { pattern: /"(?:""|[^"])*"/, greedy: !0 },
            char: { pattern: /\$./, greedy: !0 },
            string: { pattern: /'(?:''|[^'])*'/, greedy: !0 },
            symbol: /#[\da-z]+|#(?:-|([+\/\\*~<>=@%|&?!])\1?)|#(?=\()/i,
            "block-arguments": { pattern: /(\[\s*):[^\[|]*\|/, lookbehind: !0, inside: { variable: /:[\da-z]+/i, punctuation: /\|/ } },
            "temporary-variables": { pattern: /\|[^|]+\|/, inside: { variable: /[\da-z]+/i, punctuation: /\|/ } },
            keyword: /\b(?:new|nil|self|super)\b/,
            boolean: /\b(?:false|true)\b/,
            number: [/\d+r-?[\dA-Z]+(?:\.[\dA-Z]+)?(?:e-?\d+)?/, /\b\d+(?:\.\d+)?(?:e-?\d+)?/],
            operator: /[<=]=?|:=|~[~=]|\/\/?|\\\\|>[>=]?|[!^+\-*&|,@]/,
            punctuation: /[.;:?\[\](){}]/,
        };
    }
    return m0;
}
var h0, e4;
function gL() {
    if (e4) return h0;
    e4 = 1;
    var e = Ct();
    (h0 = t), (t.displayName = "smarty"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                (r.languages.smarty = {
                    comment: { pattern: /^\{\*[\s\S]*?\*\}/, greedy: !0 },
                    "embedded-php": {
                        pattern: /^\{php\}[\s\S]*?\{\/php\}/,
                        greedy: !0,
                        inside: {
                            smarty: { pattern: /^\{php\}|\{\/php\}$/, inside: null },
                            php: { pattern: /[\s\S]+/, alias: "language-php", inside: r.languages.php },
                        },
                    },
                    string: [
                        {
                            pattern: /"(?:\\.|[^"\\\r\n])*"/,
                            greedy: !0,
                            inside: {
                                interpolation: {
                                    pattern: /\{[^{}]*\}|`[^`]*`/,
                                    inside: {
                                        "interpolation-punctuation": { pattern: /^[{`]|[`}]$/, alias: "punctuation" },
                                        expression: { pattern: /[\s\S]+/, inside: null },
                                    },
                                },
                                variable: /\$\w+/,
                            },
                        },
                        { pattern: /'(?:\\.|[^'\\\r\n])*'/, greedy: !0 },
                    ],
                    keyword: { pattern: /(^\{\/?)[a-z_]\w*\b(?!\()/i, lookbehind: !0, greedy: !0 },
                    delimiter: { pattern: /^\{\/?|\}$/, greedy: !0, alias: "punctuation" },
                    number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
                    variable: [
                        /\$(?!\d)\w+/,
                        /#(?!\d)\w+#/,
                        { pattern: /(\.|->|\w\s*=)(?!\d)\w+\b(?!\()/, lookbehind: !0 },
                        { pattern: /(\[)(?!\d)\w+(?=\])/, lookbehind: !0 },
                    ],
                    function: { pattern: /(\|\s*)@?[a-z_]\w*|\b[a-z_]\w*(?=\()/i, lookbehind: !0 },
                    "attr-name": /\b[a-z_]\w*(?=\s*=)/i,
                    boolean: /\b(?:false|no|off|on|true|yes)\b/,
                    punctuation: /[\[\](){}.,:`]|->/,
                    operator: [
                        /[+\-*\/%]|==?=?|[!<>]=?|&&|\|\|?/,
                        /\bis\s+(?:not\s+)?(?:div|even|odd)(?:\s+by)?\b/,
                        /\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\b/,
                    ],
                }),
                    (r.languages.smarty["embedded-php"].inside.smarty.inside = r.languages.smarty),
                    (r.languages.smarty.string[0].inside.interpolation.inside.expression.inside = r.languages.smarty);
                var a = /"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/,
                    i = RegExp(
                        /\{\*[\s\S]*?\*\}/.source +
                            "|" +
                            /\{php\}[\s\S]*?\{\/php\}/.source +
                            "|" +
                            /\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>)*\})*\})*\}/.source.replace(/<str>/g, function () {
                                return a.source;
                            }),
                        "g",
                    );
                r.hooks.add("before-tokenize", function (o) {
                    var l = "{literal}",
                        s = "{/literal}",
                        u = !1;
                    r.languages["markup-templating"].buildPlaceholders(o, "smarty", i, function (c) {
                        return c === s && (u = !1), u ? !1 : (c === l && (u = !0), !0);
                    });
                }),
                    r.hooks.add("after-tokenize", function (o) {
                        r.languages["markup-templating"].tokenizePlaceholders(o, "smarty");
                    });
            })(n);
    }
    return h0;
}
var g0, t4;
function bL() {
    if (t4) return g0;
    (t4 = 1), (g0 = e), (e.displayName = "sml"), (e.aliases = ["smlnj"]);
    function e(t) {
        (function (n) {
            var r =
                /\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\b/i;
            (n.languages.sml = {
                comment: /\(\*(?:[^*(]|\*(?!\))|\((?!\*)|\(\*(?:[^*(]|\*(?!\))|\((?!\*))*\*\))*\*\)/,
                string: { pattern: /#?"(?:[^"\\]|\\.)*"/, greedy: !0 },
                "class-name": [
                    {
                        pattern: RegExp(
                            /((?:^|[^:]):\s*)<TERMINAL>(?:\s*(?:(?:\*|->)\s*<TERMINAL>|,\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\s+<LONG-ID>)))*/.source
                                .replace(/<NOT-LAST>/g, function () {
                                    return /\s*(?:[*,]|->)/.source;
                                })
                                .replace(/<TERMINAL>/g, function () {
                                    return /(?:'[\w']*|<LONG-ID>|\((?:[^()]|\([^()]*\))*\)|\{(?:[^{}]|\{[^{}]*\})*\})(?:\s+<LONG-ID>)*/.source;
                                })
                                .replace(/<LONG-ID>/g, function () {
                                    return /(?!<KEYWORD>)[a-z\d_][\w'.]*/.source;
                                })
                                .replace(/<KEYWORD>/g, function () {
                                    return r.source;
                                }),
                            "i",
                        ),
                        lookbehind: !0,
                        greedy: !0,
                        inside: null,
                    },
                    { pattern: /((?:^|[^\w'])(?:datatype|exception|functor|signature|structure|type)\s+)[a-z_][\w'.]*/i, lookbehind: !0 },
                ],
                function: { pattern: /((?:^|[^\w'])fun\s+)[a-z_][\w'.]*/i, lookbehind: !0 },
                keyword: r,
                variable: { pattern: /(^|[^\w'])'[\w']*/, lookbehind: !0 },
                number: /~?\b(?:\d+(?:\.\d+)?(?:e~?\d+)?|0x[\da-f]+)\b/i,
                word: { pattern: /\b0w(?:\d+|x[\da-f]+)\b/i, alias: "constant" },
                boolean: /\b(?:false|true)\b/i,
                operator: /\.\.\.|:[>=:]|=>?|->|[<>]=?|[!+\-*/^#|@~]/,
                punctuation: /[(){}\[\].:,;]/,
            }),
                (n.languages.sml["class-name"][0].inside = n.languages.sml),
                (n.languages.smlnj = n.languages.sml);
        })(t);
    }
    return g0;
}
var b0, n4;
function yL() {
    if (n4) return b0;
    (n4 = 1), (b0 = e), (e.displayName = "solidity"), (e.aliases = ["sol"]);
    function e(t) {
        (t.languages.solidity = t.languages.extend("clike", {
            "class-name": { pattern: /(\b(?:contract|enum|interface|library|new|struct|using)\s+)(?!\d)[\w$]+/, lookbehind: !0 },
            keyword:
                /\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\b/,
            operator: /=>|->|:=|=:|\*\*|\+\+|--|\|\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/,
        })),
            t.languages.insertBefore("solidity", "keyword", {
                builtin:
                    /\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\d|3[0-2])?)\b/,
            }),
            t.languages.insertBefore("solidity", "number", { version: { pattern: /([<>]=?|\^)\d+\.\d+\.\d+\b/, lookbehind: !0, alias: "number" } }),
            (t.languages.sol = t.languages.solidity);
    }
    return b0;
}
var y0, r4;
function vL() {
    if (r4) return y0;
    (r4 = 1), (y0 = e), (e.displayName = "solutionFile"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = { pattern: /\{[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}\}/i, alias: "constant", inside: { punctuation: /[{}]/ } };
            (n.languages["solution-file"] = {
                comment: { pattern: /#.*/, greedy: !0 },
                string: { pattern: /"[^"\r\n]*"|'[^'\r\n]*'/, greedy: !0, inside: { guid: r } },
                object: {
                    pattern: /^([ \t]*)(?:([A-Z]\w*)\b(?=.*(?:\r\n?|\n)(?:\1[ \t].*(?:\r\n?|\n))*\1End\2(?=[ \t]*$))|End[A-Z]\w*(?=[ \t]*$))/m,
                    lookbehind: !0,
                    greedy: !0,
                    alias: "keyword",
                },
                property: { pattern: /^([ \t]*)(?!\s)[^\r\n"#=()]*[^\s"#=()](?=\s*=)/m, lookbehind: !0, inside: { guid: r } },
                guid: r,
                number: /\b\d+(?:\.\d+)*\b/,
                boolean: /\b(?:FALSE|TRUE)\b/,
                operator: /=/,
                punctuation: /[(),]/,
            }),
                (n.languages.sln = n.languages["solution-file"]);
        })(t);
    }
    return y0;
}
var v0, a4;
function EL() {
    if (a4) return v0;
    a4 = 1;
    var e = Ct();
    (v0 = t), (t.displayName = "soy"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                var a = /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                    i = /\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-F]+\b/;
                (r.languages.soy = {
                    comment: [/\/\*[\s\S]*?\*\//, { pattern: /(\s)\/\/.*/, lookbehind: !0, greedy: !0 }],
                    "command-arg": {
                        pattern: /(\{+\/?\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\s+)\.?[\w.]+/,
                        lookbehind: !0,
                        alias: "string",
                        inside: { punctuation: /\./ },
                    },
                    parameter: { pattern: /(\{+\/?\s*@?param\??\s+)\.?[\w.]+/, lookbehind: !0, alias: "variable" },
                    keyword: [
                        {
                            pattern:
                                /(\{+\/?[^\S\r\n]*)(?:\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\??|rb|sp|switch|template|xid)/,
                            lookbehind: !0,
                        },
                        /\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\b/,
                    ],
                    delimiter: { pattern: /^\{+\/?|\/?\}+$/, alias: "punctuation" },
                    property: /\w+(?==)/,
                    variable: {
                        pattern: /\$[^\W\d]\w*(?:\??(?:\.\w+|\[[^\]]+\]))*/,
                        inside: { string: { pattern: a, greedy: !0 }, number: i, punctuation: /[\[\].?]/ },
                    },
                    string: { pattern: a, greedy: !0 },
                    function: [/\w+(?=\()/, { pattern: /(\|[^\S\r\n]*)\w+/, lookbehind: !0 }],
                    boolean: /\b(?:false|true)\b/,
                    number: i,
                    operator: /\?:?|<=?|>=?|==?|!=|[+*/%-]|\b(?:and|not|or)\b/,
                    punctuation: /[{}()\[\]|.,:]/,
                }),
                    r.hooks.add("before-tokenize", function (o) {
                        var l = /\{\{.+?\}\}|\{.+?\}|\s\/\/.*|\/\*[\s\S]*?\*\//g,
                            s = "{literal}",
                            u = "{/literal}",
                            c = !1;
                        r.languages["markup-templating"].buildPlaceholders(o, "soy", l, function (d) {
                            return d === u && (c = !1), c ? !1 : (d === s && (c = !0), !0);
                        });
                    }),
                    r.hooks.add("after-tokenize", function (o) {
                        r.languages["markup-templating"].tokenizePlaceholders(o, "soy");
                    });
            })(n);
    }
    return v0;
}
var E0, i4;
function UT() {
    if (i4) return E0;
    (i4 = 1), (E0 = e), (e.displayName = "turtle"), (e.aliases = []);
    function e(t) {
        (t.languages.turtle = {
            comment: { pattern: /#.*/, greedy: !0 },
            "multiline-string": {
                pattern: /"""(?:(?:""?)?(?:[^"\\]|\\.))*"""|'''(?:(?:''?)?(?:[^'\\]|\\.))*'''/,
                greedy: !0,
                alias: "string",
                inside: { comment: /#.*/ },
            },
            string: { pattern: /"(?:[^\\"\r\n]|\\.)*"|'(?:[^\\'\r\n]|\\.)*'/, greedy: !0 },
            url: { pattern: /<(?:[^\x00-\x20<>"{}|^`\\]|\\(?:u[\da-fA-F]{4}|U[\da-fA-F]{8}))*>/, greedy: !0, inside: { punctuation: /[<>]/ } },
            function: {
                pattern: /(?:(?![-.\d\xB7])[-.\w\xB7\xC0-\uFFFD]+)?:(?:(?![-.])(?:[-.:\w\xC0-\uFFFD]|%[\da-f]{2}|\\.)+)?/i,
                inside: { "local-name": { pattern: /([^:]*:)[\s\S]+/, lookbehind: !0 }, prefix: { pattern: /[\s\S]+/, inside: { punctuation: /:/ } } },
            },
            number: /[+-]?\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
            punctuation: /[{}.,;()[\]]|\^\^/,
            boolean: /\b(?:false|true)\b/,
            keyword: [/(?:\ba|@prefix|@base)\b|=/, /\b(?:base|graph|prefix)\b/i],
            tag: { pattern: /@[a-z]+(?:-[a-z\d]+)*/i, inside: { punctuation: /@/ } },
        }),
            (t.languages.trig = t.languages.turtle);
    }
    return E0;
}
var S0, o4;
function SL() {
    if (o4) return S0;
    o4 = 1;
    var e = UT();
    (S0 = t), (t.displayName = "sparql"), (t.aliases = ["rq"]);
    function t(n) {
        n.register(e),
            (n.languages.sparql = n.languages.extend("turtle", { boolean: /\b(?:false|true)\b/i, variable: { pattern: /[?$]\w+/, greedy: !0 } })),
            n.languages.insertBefore("sparql", "punctuation", {
                keyword: [
                    /\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\b/i,
                    /\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\b(?=\s*\()/i,
                    /\b(?:BASE|GRAPH|PREFIX)\b/i,
                ],
            }),
            (n.languages.rq = n.languages.sparql);
    }
    return S0;
}
var w0, l4;
function wL() {
    if (l4) return w0;
    (l4 = 1), (w0 = e), (e.displayName = "splunkSpl"), (e.aliases = []);
    function e(t) {
        t.languages["splunk-spl"] = {
            comment: /`comment\("(?:\\.|[^\\"])*"\)`/,
            string: { pattern: /"(?:\\.|[^\\"])*"/, greedy: !0 },
            keyword:
                /\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\b/i,
            "operator-word": { pattern: /\b(?:and|as|by|not|or|xor)\b/i, alias: "operator" },
            function: /\b\w+(?=\s*\()/,
            property: /\b\w+(?=\s*=(?!=))/,
            date: { pattern: /\b\d{1,2}\/\d{1,2}\/\d{1,4}(?:(?::\d{1,2}){3})?\b/, alias: "number" },
            number: /\b\d+(?:\.\d+)?\b/,
            boolean: /\b(?:f|false|t|true)\b/i,
            operator: /[<>=]=?|[-+*/%|]/,
            punctuation: /[()[\],]/,
        };
    }
    return w0;
}
var k0, s4;
function kL() {
    if (s4) return k0;
    (s4 = 1), (k0 = e), (e.displayName = "sqf"), (e.aliases = []);
    function e(t) {
        (t.languages.sqf = t.languages.extend("clike", {
            string: { pattern: /"(?:(?:"")?[^"])*"(?!")|'(?:[^'])*'/, greedy: !0 },
            keyword:
                /\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\b/i,
            boolean: /\b(?:false|true)\b/i,
            function:
                /\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\b/i,
            number: /(?:\$|\b0x)[\da-f]+\b|(?:\B\.\d+|\b\d+(?:\.\d+)?)(?:e[+-]?\d+)?\b/i,
            operator: /##|>>|&&|\|\||[!=<>]=?|[-+*/%#^]|\b(?:and|mod|not|or)\b/i,
            "magic-variable": {
                pattern:
                    /\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\b/i,
                alias: "keyword",
            },
            constant: /\bDIK(?:_[a-z\d]+)+\b/i,
        })),
            t.languages.insertBefore("sqf", "string", {
                macro: {
                    pattern: /(^[ \t]*)#[a-z](?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,
                    lookbehind: !0,
                    greedy: !0,
                    alias: "property",
                    inside: { directive: { pattern: /#[a-z]+\b/i, alias: "keyword" }, comment: t.languages.sqf.comment },
                },
            }),
            delete t.languages.sqf["class-name"];
    }
    return k0;
}
var T0, u4;
function TL() {
    if (u4) return T0;
    (u4 = 1), (T0 = e), (e.displayName = "squirrel"), (e.aliases = []);
    function e(t) {
        (t.languages.squirrel = t.languages.extend("clike", {
            comment: [t.languages.clike.comment[0], { pattern: /(^|[^\\:])(?:\/\/|#).*/, lookbehind: !0, greedy: !0 }],
            string: { pattern: /(^|[^\\"'@])(?:@"(?:[^"]|"")*"(?!")|"(?:[^\\\r\n"]|\\.)*")/, lookbehind: !0, greedy: !0 },
            "class-name": { pattern: /(\b(?:class|enum|extends|instanceof)\s+)\w+(?:\.\w+)*/, lookbehind: !0, inside: { punctuation: /\./ } },
            keyword:
                /\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\b/,
            number: /\b(?:0x[0-9a-fA-F]+|\d+(?:\.(?:\d+|[eE][+-]?\d+))?)\b/,
            operator: /\+\+|--|<=>|<[-<]|>>>?|&&?|\|\|?|[-+*/%!=<>]=?|[~^]|::?/,
            punctuation: /[(){}\[\],;.]/,
        })),
            t.languages.insertBefore("squirrel", "string", {
                char: { pattern: /(^|[^\\"'])'(?:[^\\']|\\(?:[xuU][0-9a-fA-F]{0,8}|[\s\S]))'/, lookbehind: !0, greedy: !0 },
            }),
            t.languages.insertBefore("squirrel", "operator", {
                "attribute-punctuation": { pattern: /<\/|\/>/, alias: "important" },
                lambda: { pattern: /@(?=\()/, alias: "operator" },
            });
    }
    return T0;
}
var A0, c4;
function AL() {
    if (c4) return A0;
    (c4 = 1), (A0 = e), (e.displayName = "stan"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r =
                /\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\b/;
            (n.languages.stan = {
                comment: /\/\/.*|\/\*[\s\S]*?\*\/|#(?!include).*/,
                string: { pattern: /"[\x20\x21\x23-\x5B\x5D-\x7E]*"/, greedy: !0 },
                directive: { pattern: /^([ \t]*)#include\b.*/m, lookbehind: !0, alias: "property" },
                "function-arg": { pattern: RegExp("(" + r.source + /\s*\(\s*/.source + ")" + /[a-zA-Z]\w*/.source), lookbehind: !0, alias: "function" },
                constraint: {
                    pattern: /(\b(?:int|matrix|real|row_vector|vector)\s*)<[^<>]*>/,
                    lookbehind: !0,
                    inside: {
                        expression: { pattern: /(=\s*)\S(?:\S|\s+(?!\s))*?(?=\s*(?:>$|,\s*\w+\s*=))/, lookbehind: !0, inside: null },
                        property: /\b[a-z]\w*(?=\s*=)/i,
                        operator: /=/,
                        punctuation: /^<|>$|,/,
                    },
                },
                keyword: [
                    { pattern: /\bdata(?=\s*\{)|\b(?:functions|generated|model|parameters|quantities|transformed)\b/, alias: "program-block" },
                    /\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\b/,
                    r,
                ],
                function: /\b[a-z]\w*(?=\s*\()/i,
                number: /(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:E[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
                boolean: /\b(?:false|true)\b/,
                operator: /<-|\.[*/]=?|\|\|?|&&|[!=<>+\-*/]=?|['^%~?:]/,
                punctuation: /[()\[\]{},;]/,
            }),
                (n.languages.stan.constraint.inside.expression.inside = n.languages.stan);
        })(t);
    }
    return A0;
}
var x0, d4;
function xL() {
    if (d4) return x0;
    (d4 = 1), (x0 = e), (e.displayName = "stylus"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = { pattern: /(\b\d+)(?:%|[a-z]+)/, lookbehind: !0 },
                a = { pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/, lookbehind: !0 },
                i = {
                    comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/, lookbehind: !0 },
                    url: { pattern: /\burl\((["']?).*?\1\)/i, greedy: !0 },
                    string: { pattern: /("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/, greedy: !0 },
                    interpolation: null,
                    func: null,
                    important: /\B!(?:important|optional)\b/i,
                    keyword: { pattern: /(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/, lookbehind: !0 },
                    hexcode: /#[\da-f]{3,6}/i,
                    color: [
                        /\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,
                        {
                            pattern:
                                /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
                            inside: { unit: r, number: a, function: /[\w-]+(?=\()/, punctuation: /[(),]/ },
                        },
                    ],
                    entity: /\\[\da-f]{1,8}/i,
                    unit: r,
                    boolean: /\b(?:false|true)\b/,
                    operator: [/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],
                    number: a,
                    punctuation: /[{}()\[\];:,]/,
                };
            (i.interpolation = { pattern: /\{[^\r\n}:]+\}/, alias: "variable", inside: { delimiter: { pattern: /^\{|\}$/, alias: "punctuation" }, rest: i } }),
                (i.func = { pattern: /[\w-]+\([^)]*\).*/, inside: { function: /^[^(]+/, rest: i } }),
                (n.languages.stylus = {
                    "atrule-declaration": { pattern: /(^[ \t]*)@.+/m, lookbehind: !0, inside: { atrule: /^@[\w-]+/, rest: i } },
                    "variable-declaration": {
                        pattern: /(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,
                        lookbehind: !0,
                        inside: { variable: /^\S+/, rest: i },
                    },
                    statement: { pattern: /(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m, lookbehind: !0, inside: { keyword: /^\S+/, rest: i } },
                    "property-declaration": {
                        pattern: /((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,
                        lookbehind: !0,
                        inside: { property: { pattern: /^[^\s:]+/, inside: { interpolation: i.interpolation } }, rest: i },
                    },
                    selector: {
                        pattern:
                            /(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,
                        lookbehind: !0,
                        inside: { interpolation: i.interpolation, comment: i.comment, punctuation: /[{},]/ },
                    },
                    func: i.func,
                    string: i.string,
                    comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/, lookbehind: !0, greedy: !0 },
                    interpolation: i.interpolation,
                    punctuation: /[{}()\[\];:.]/,
                });
        })(t);
    }
    return x0;
}
var R0, p4;
function RL() {
    if (p4) return R0;
    (p4 = 1), (R0 = e), (e.displayName = "swift"), (e.aliases = []);
    function e(t) {
        (t.languages.swift = {
            comment: { pattern: /(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/, lookbehind: !0, greedy: !0 },
            "string-literal": [
                {
                    pattern: RegExp(
                        /(^|[^"#])/.source +
                            "(?:" +
                            /"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source +
                            "|" +
                            /"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source +
                            ")" +
                            /(?!["#])/.source,
                    ),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        interpolation: { pattern: /(\\\()(?:[^()]|\([^()]*\))*(?=\))/, lookbehind: !0, inside: null },
                        "interpolation-punctuation": { pattern: /^\)|\\\($/, alias: "punctuation" },
                        punctuation: /\\(?=[\r\n])/,
                        string: /[\s\S]+/,
                    },
                },
                {
                    pattern: RegExp(
                        /(^|[^"#])(#+)/.source +
                            "(?:" +
                            /"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source +
                            "|" +
                            /"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source +
                            ")\\2",
                    ),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        interpolation: { pattern: /(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/, lookbehind: !0, inside: null },
                        "interpolation-punctuation": { pattern: /^\)|\\#+\($/, alias: "punctuation" },
                        string: /[\s\S]+/,
                    },
                },
            ],
            directive: {
                pattern: RegExp(
                    /#/.source +
                        "(?:" +
                        (/(?:elseif|if)\b/.source +
                            "(?:[ 	]*" +
                            /(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source +
                            ")+") +
                        "|" +
                        /(?:else|endif)\b/.source +
                        ")",
                ),
                alias: "property",
                inside: {
                    "directive-name": /^#\w+/,
                    boolean: /\b(?:false|true)\b/,
                    number: /\b\d+(?:\.\d+)*\b/,
                    operator: /!|&&|\|\||[<>]=?/,
                    punctuation: /[(),]/,
                },
            },
            literal: { pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/, alias: "constant" },
            "other-directive": { pattern: /#\w+\b/, alias: "property" },
            attribute: { pattern: /@\w+/, alias: "atrule" },
            "function-definition": { pattern: /(\bfunc\s+)\w+/, lookbehind: !0, alias: "function" },
            label: { pattern: /\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/, lookbehind: !0, alias: "important" },
            keyword:
                /\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,
            boolean: /\b(?:false|true)\b/,
            nil: { pattern: /\bnil\b/, alias: "constant" },
            "short-argument": /\$\d+\b/,
            omit: { pattern: /\b_\b/, alias: "keyword" },
            number: /\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,
            "class-name": /\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            constant: /\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,
            operator: /[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,
            punctuation: /[{}[\]();,.:\\]/,
        }),
            t.languages.swift["string-literal"].forEach(function (n) {
                n.inside.interpolation.inside = t.languages.swift;
            });
    }
    return R0;
}
var I0, f4;
function IL() {
    if (f4) return I0;
    (f4 = 1), (I0 = e), (e.displayName = "systemd"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = { pattern: /^[;#].*/m, greedy: !0 },
                a = /"(?:[^\r\n"\\]|\\(?:[^\r]|\r\n?))*"(?!\S)/.source;
            n.languages.systemd = {
                comment: r,
                section: {
                    pattern: /^\[[^\n\r\[\]]*\](?=[ \t]*$)/m,
                    greedy: !0,
                    inside: { punctuation: /^\[|\]$/, "section-name": { pattern: /[\s\S]+/, alias: "selector" } },
                },
                key: { pattern: /^[^\s=]+(?=[ \t]*=)/m, greedy: !0, alias: "attr-name" },
                value: {
                    pattern: RegExp(
                        /(=[ \t]*(?!\s))/.source +
                            "(?:" +
                            a +
                            `|(?=[^"\r
]))(?:` +
                            (/[^\s\\]/.source + '|[ 	]+(?:(?![ 	"])|' + a + ")|" + /\\[\r\n]+(?:[#;].*[\r\n]+)*(?![#;])/.source) +
                            ")*",
                    ),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "attr-value",
                    inside: {
                        comment: r,
                        quoted: { pattern: RegExp(/(^|\s)/.source + a), lookbehind: !0, greedy: !0 },
                        punctuation: /\\$/m,
                        boolean: { pattern: /^(?:false|no|off|on|true|yes)$/, greedy: !0 },
                    },
                },
                punctuation: /=/,
            };
        })(t);
    }
    return I0;
}
var N0, m4;
function Og() {
    if (m4) return N0;
    (m4 = 1), (N0 = e), (e.displayName = "t4Templating"), (e.aliases = []);
    function e(t) {
        (function (n) {
            function r(i, o, l) {
                return {
                    pattern: RegExp("<#" + i + "[\\s\\S]*?#>"),
                    alias: "block",
                    inside: { delimiter: { pattern: RegExp("^<#" + i + "|#>$"), alias: "important" }, content: { pattern: /[\s\S]+/, inside: o, alias: l } },
                };
            }
            function a(i) {
                var o = n.languages[i],
                    l = "language-" + i;
                return {
                    block: {
                        pattern: /<#[\s\S]+?#>/,
                        inside: {
                            directive: r("@", {
                                "attr-value": { pattern: /=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/, inside: { punctuation: /^=|^["']|["']$/ } },
                                keyword: /\b\w+(?=\s)/,
                                "attr-name": /\b\w+/,
                            }),
                            expression: r("=", o, l),
                            "class-feature": r("\\+", o, l),
                            standard: r("", o, l),
                        },
                    },
                };
            }
            n.languages["t4-templating"] = Object.defineProperty({}, "createT4", { value: a });
        })(t);
    }
    return N0;
}
var _0, h4;
function NL() {
    if (h4) return _0;
    h4 = 1;
    var e = Og(),
        t = ms();
    (_0 = n), (n.displayName = "t4Cs"), (n.aliases = []);
    function n(r) {
        r.register(e), r.register(t), (r.languages.t4 = r.languages["t4-cs"] = r.languages["t4-templating"].createT4("csharp"));
    }
    return _0;
}
var C0, g4;
function zT() {
    if (g4) return C0;
    g4 = 1;
    var e = FT();
    (C0 = t), (t.displayName = "vbnet"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.vbnet = n.languages.extend("basic", {
                comment: [
                    { pattern: /(?:!|REM\b).+/i, inside: { keyword: /^REM/i } },
                    { pattern: /(^|[^\\:])'.*/, lookbehind: !0, greedy: !0 },
                ],
                string: { pattern: /(^|[^"])"(?:""|[^"])*"(?!")/, lookbehind: !0, greedy: !0 },
                keyword:
                    /(?:\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\$|\b)/i,
                punctuation: /[,;:(){}]/,
            }));
    }
    return C0;
}
var O0, b4;
function _L() {
    if (b4) return O0;
    b4 = 1;
    var e = Og(),
        t = zT();
    (O0 = n), (n.displayName = "t4Vb"), (n.aliases = []);
    function n(r) {
        r.register(e), r.register(t), (r.languages["t4-vb"] = r.languages["t4-templating"].createT4("vbnet"));
    }
    return O0;
}
var L0, y4;
function $T() {
    if (y4) return L0;
    (y4 = 1), (L0 = e), (e.displayName = "yaml"), (e.aliases = ["yml"]);
    function e(t) {
        (function (n) {
            var r = /[*&][^\s[\]{},]+/,
                a = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,
                i = "(?:" + a.source + "(?:[ 	]+" + r.source + ")?|" + r.source + "(?:[ 	]+" + a.source + ")?)",
                o =
                    /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(
                        /<PLAIN>/g,
                        function () {
                            return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
                        },
                    ),
                l = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
            function s(u, c) {
                c = (c || "").replace(/m/g, "") + "m";
                var d = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source
                    .replace(/<<prop>>/g, function () {
                        return i;
                    })
                    .replace(/<<value>>/g, function () {
                        return u;
                    });
                return RegExp(d, c);
            }
            (n.languages.yaml = {
                scalar: {
                    pattern: RegExp(
                        /([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g, function () {
                            return i;
                        }),
                    ),
                    lookbehind: !0,
                    alias: "string",
                },
                comment: /#.*/,
                key: {
                    pattern: RegExp(
                        /((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source
                            .replace(/<<prop>>/g, function () {
                                return i;
                            })
                            .replace(/<<key>>/g, function () {
                                return "(?:" + o + "|" + l + ")";
                            }),
                    ),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "atrule",
                },
                directive: { pattern: /(^[ \t]*)%.+/m, lookbehind: !0, alias: "important" },
                datetime: {
                    pattern: s(
                        /\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/
                            .source,
                    ),
                    lookbehind: !0,
                    alias: "number",
                },
                boolean: { pattern: s(/false|true/.source, "i"), lookbehind: !0, alias: "important" },
                null: { pattern: s(/null|~/.source, "i"), lookbehind: !0, alias: "important" },
                string: { pattern: s(l), lookbehind: !0, greedy: !0 },
                number: { pattern: s(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source, "i"), lookbehind: !0 },
                tag: a,
                important: r,
                punctuation: /---|[:[\]{}\-,|>?]|\.\.\./,
            }),
                (n.languages.yml = n.languages.yaml);
        })(t);
    }
    return L0;
}
var D0, v4;
function CL() {
    if (v4) return D0;
    v4 = 1;
    var e = $T();
    (D0 = t), (t.displayName = "tap"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.tap = {
                fail: /not ok[^#{\n\r]*/,
                pass: /ok[^#{\n\r]*/,
                pragma: /pragma [+-][a-z]+/,
                bailout: /bail out!.*/i,
                version: /TAP version \d+/i,
                plan: /\b\d+\.\.\d+(?: +#.*)?/,
                subtest: { pattern: /# Subtest(?:: .*)?/, greedy: !0 },
                punctuation: /[{}]/,
                directive: /#.*/,
                yamlish: { pattern: /(^[ \t]*)---[\s\S]*?[\r\n][ \t]*\.\.\.$/m, lookbehind: !0, inside: n.languages.yaml, alias: "language-yaml" },
            });
    }
    return D0;
}
var M0, E4;
function OL() {
    if (E4) return M0;
    (E4 = 1), (M0 = e), (e.displayName = "tcl"), (e.aliases = []);
    function e(t) {
        t.languages.tcl = {
            comment: { pattern: /(^|[^\\])#.*/, lookbehind: !0 },
            string: { pattern: /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"/, greedy: !0 },
            variable: [
                { pattern: /(\$)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/, lookbehind: !0 },
                { pattern: /(\$)\{[^}]+\}/, lookbehind: !0 },
                { pattern: /(^[\t ]*set[ \t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/m, lookbehind: !0 },
            ],
            function: { pattern: /(^[\t ]*proc[ \t]+)\S+/m, lookbehind: !0 },
            builtin: [
                { pattern: /(^[\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\b/m, lookbehind: !0 },
                /\b(?:else|elseif)\b/,
            ],
            scope: { pattern: /(^[\t ]*)(?:global|upvar|variable)\b/m, lookbehind: !0, alias: "constant" },
            keyword: {
                pattern:
                    /(^[\t ]*|\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\b/m,
                lookbehind: !0,
            },
            operator: /!=?|\*\*?|==|&&?|\|\|?|<[=<]?|>[=>]?|[-+~\/%?^]|\b(?:eq|in|ne|ni)\b/,
            punctuation: /[{}()\[\]]/,
        };
    }
    return M0;
}
var F0, S4;
function LL() {
    if (S4) return F0;
    (S4 = 1), (F0 = e), (e.displayName = "textile"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /\([^|()\n]+\)|\[[^\]\n]+\]|\{[^}\n]+\}/.source,
                a = /\)|\((?![^|()\n]+\))/.source;
            function i(m, f) {
                return RegExp(
                    m
                        .replace(/<MOD>/g, function () {
                            return "(?:" + r + ")";
                        })
                        .replace(/<PAR>/g, function () {
                            return "(?:" + a + ")";
                        }),
                    f || "",
                );
            }
            var o = {
                    css: { pattern: /\{[^{}]+\}/, inside: { rest: n.languages.css } },
                    "class-id": { pattern: /(\()[^()]+(?=\))/, lookbehind: !0, alias: "attr-value" },
                    lang: { pattern: /(\[)[^\[\]]+(?=\])/, lookbehind: !0, alias: "attr-value" },
                    punctuation: /[\\\/]\d+|\S/,
                },
                l = (n.languages.textile = n.languages.extend("markup", {
                    phrase: {
                        pattern: /(^|\r|\n)\S[\s\S]*?(?=$|\r?\n\r?\n|\r\r)/,
                        lookbehind: !0,
                        inside: {
                            "block-tag": {
                                pattern: i(/^[a-z]\w*(?:<MOD>|<PAR>|[<>=])*\./.source),
                                inside: {
                                    modifier: { pattern: i(/(^[a-z]\w*)(?:<MOD>|<PAR>|[<>=])+(?=\.)/.source), lookbehind: !0, inside: o },
                                    tag: /^[a-z]\w*/,
                                    punctuation: /\.$/,
                                },
                            },
                            list: {
                                pattern: i(/^[*#]+<MOD>*\s+\S.*/.source, "m"),
                                inside: { modifier: { pattern: i(/(^[*#]+)<MOD>+/.source), lookbehind: !0, inside: o }, punctuation: /^[*#]+/ },
                            },
                            table: {
                                pattern: i(
                                    /^(?:(?:<MOD>|<PAR>|[<>=^~])+\.\s*)?(?:\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.))[^|]*)+\|/
                                        .source,
                                    "m",
                                ),
                                inside: {
                                    modifier: { pattern: i(/(^|\|(?:\r?\n|\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+(?=\.)/.source), lookbehind: !0, inside: o },
                                    punctuation: /\||^\./,
                                },
                            },
                            inline: {
                                pattern: i(/(^|[^a-zA-Z\d])(\*\*|__|\?\?|[*_%@+\-^~])<MOD>*.+?\2(?![a-zA-Z\d])/.source),
                                lookbehind: !0,
                                inside: {
                                    bold: { pattern: i(/(^(\*\*?)<MOD>*).+?(?=\2)/.source), lookbehind: !0 },
                                    italic: { pattern: i(/(^(__?)<MOD>*).+?(?=\2)/.source), lookbehind: !0 },
                                    cite: { pattern: i(/(^\?\?<MOD>*).+?(?=\?\?)/.source), lookbehind: !0, alias: "string" },
                                    code: { pattern: i(/(^@<MOD>*).+?(?=@)/.source), lookbehind: !0, alias: "keyword" },
                                    inserted: { pattern: i(/(^\+<MOD>*).+?(?=\+)/.source), lookbehind: !0 },
                                    deleted: { pattern: i(/(^-<MOD>*).+?(?=-)/.source), lookbehind: !0 },
                                    span: { pattern: i(/(^%<MOD>*).+?(?=%)/.source), lookbehind: !0 },
                                    modifier: { pattern: i(/(^\*\*|__|\?\?|[*_%@+\-^~])<MOD>+/.source), lookbehind: !0, inside: o },
                                    punctuation: /[*_%?@+\-^~]+/,
                                },
                            },
                            "link-ref": {
                                pattern: /^\[[^\]]+\]\S+$/m,
                                inside: {
                                    string: { pattern: /(^\[)[^\]]+(?=\])/, lookbehind: !0 },
                                    url: { pattern: /(^\])\S+$/, lookbehind: !0 },
                                    punctuation: /[\[\]]/,
                                },
                            },
                            link: {
                                pattern: i(/"<MOD>*[^"]+":.+?(?=[^\w/]?(?:\s|$))/.source),
                                inside: {
                                    text: { pattern: i(/(^"<MOD>*)[^"]+(?=")/.source), lookbehind: !0 },
                                    modifier: { pattern: i(/(^")<MOD>+/.source), lookbehind: !0, inside: o },
                                    url: { pattern: /(:).+/, lookbehind: !0 },
                                    punctuation: /[":]/,
                                },
                            },
                            image: {
                                pattern: i(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\s()]+(?:\([^)]+\))?!(?::.+?(?=[^\w/]?(?:\s|$)))?/.source),
                                inside: {
                                    source: {
                                        pattern: i(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\s()]+(?:\([^)]+\))?(?=!)/.source),
                                        lookbehind: !0,
                                        alias: "url",
                                    },
                                    modifier: { pattern: i(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source), lookbehind: !0, inside: o },
                                    url: { pattern: /(:).+/, lookbehind: !0 },
                                    punctuation: /[!:]/,
                                },
                            },
                            footnote: { pattern: /\b\[\d+\]/, alias: "comment", inside: { punctuation: /\[|\]/ } },
                            acronym: {
                                pattern: /\b[A-Z\d]+\([^)]+\)/,
                                inside: { comment: { pattern: /(\()[^()]+(?=\))/, lookbehind: !0 }, punctuation: /[()]/ },
                            },
                            mark: { pattern: /\b\((?:C|R|TM)\)/, alias: "comment", inside: { punctuation: /[()]/ } },
                        },
                    },
                })),
                s = l.phrase.inside,
                u = { inline: s.inline, link: s.link, image: s.image, footnote: s.footnote, acronym: s.acronym, mark: s.mark };
            l.tag.pattern = /<\/?(?!\d)[a-z0-9]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i;
            var c = s.inline.inside;
            (c.bold.inside = u), (c.italic.inside = u), (c.inserted.inside = u), (c.deleted.inside = u), (c.span.inside = u);
            var d = s.table.inside;
            (d.inline = u.inline), (d.link = u.link), (d.image = u.image), (d.footnote = u.footnote), (d.acronym = u.acronym), (d.mark = u.mark);
        })(t);
    }
    return F0;
}
var P0, w4;
function DL() {
    if (w4) return P0;
    (w4 = 1), (P0 = e), (e.displayName = "toml"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /(?:[\w-]+|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*")/.source;
            function a(i) {
                return i.replace(/__/g, function () {
                    return r;
                });
            }
            n.languages.toml = {
                comment: { pattern: /#.*/, greedy: !0 },
                table: {
                    pattern: RegExp(a(/(^[\t ]*\[\s*(?:\[\s*)?)__(?:\s*\.\s*__)*(?=\s*\])/.source), "m"),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "class-name",
                },
                key: { pattern: RegExp(a(/(^[\t ]*|[{,]\s*)__(?:\s*\.\s*__)*(?=\s*=)/.source), "m"), lookbehind: !0, greedy: !0, alias: "property" },
                string: { pattern: /"""(?:\\[\s\S]|[^\\])*?"""|'''[\s\S]*?'''|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*"/, greedy: !0 },
                date: [
                    { pattern: /\b\d{4}-\d{2}-\d{2}(?:[T\s]\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|[+-]\d{2}:\d{2})?)?\b/i, alias: "number" },
                    { pattern: /\b\d{2}:\d{2}:\d{2}(?:\.\d+)?\b/, alias: "number" },
                ],
                number: /(?:\b0(?:x[\da-zA-Z]+(?:_[\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\b|[-+]?\b\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?\b|[-+]?\b(?:inf|nan)\b/,
                boolean: /\b(?:false|true)\b/,
                punctuation: /[.,=[\]{}]/,
            };
        })(t);
    }
    return P0;
}
var B0, k4;
function ML() {
    if (k4) return B0;
    (k4 = 1), (B0 = e), (e.displayName = "tremor"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.tremor = {
                comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/, lookbehind: !0 },
                "interpolated-string": null,
                extractor: {
                    pattern: /\b[a-z_]\w*\|(?:[^\r\n\\|]|\\(?:\r\n|[\s\S]))*\|/i,
                    greedy: !0,
                    inside: { regex: { pattern: /(^re)\|[\s\S]+/, lookbehind: !0 }, function: /^\w+/, value: /\|[\s\S]+/ },
                },
                identifier: { pattern: /`[^`]*`/, greedy: !0 },
                function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())\b/,
                keyword:
                    /\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\b/,
                boolean: /\b(?:false|null|true)\b/i,
                number: /\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\d[\d_]*(?:\.\d[\d_]*)?(?:[Ee][+-]?[\d_]+)?)\b/,
                "pattern-punctuation": { pattern: /%(?=[({[])/, alias: "punctuation" },
                operator: /[-+*\/%~!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\b/,
                punctuation: /::|[;\[\]()\{\},.:]/,
            };
            var r = /#\{(?:[^"{}]|\{[^{}]*\}|"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*")*\}/.source;
            (n.languages.tremor["interpolated-string"] = {
                pattern: RegExp(
                    /(^|[^\\])/.source +
                        '(?:"""(?:' +
                        /[^"\\#]|\\[\s\S]|"(?!"")|#(?!\{)/.source +
                        "|" +
                        r +
                        ')*"""|"(?:' +
                        /[^"\\\r\n#]|\\(?:\r\n|[\s\S])|#(?!\{)/.source +
                        "|" +
                        r +
                        ')*")',
                ),
                lookbehind: !0,
                greedy: !0,
                inside: {
                    interpolation: { pattern: RegExp(r), inside: { punctuation: /^#\{|\}$/, expression: { pattern: /[\s\S]+/, inside: n.languages.tremor } } },
                    string: /[\s\S]+/,
                },
            }),
                (n.languages.troy = n.languages.tremor),
                (n.languages.trickle = n.languages.tremor);
        })(t);
    }
    return B0;
}
var U0, T4;
function FL() {
    if (T4) return U0;
    T4 = 1;
    var e = BT(),
        t = Ng();
    (U0 = n), (n.displayName = "tsx"), (n.aliases = []);
    function n(r) {
        r.register(e),
            r.register(t),
            (function (a) {
                var i = a.util.clone(a.languages.typescript);
                (a.languages.tsx = a.languages.extend("jsx", i)), delete a.languages.tsx.parameter, delete a.languages.tsx["literal-property"];
                var o = a.languages.tsx.tag;
                (o.pattern = RegExp(/(^|[^\w$]|(?=<\/))/.source + "(?:" + o.pattern.source + ")", o.pattern.flags)), (o.lookbehind = !0);
            })(r);
    }
    return U0;
}
var z0, A4;
function PL() {
    if (A4) return z0;
    A4 = 1;
    var e = Ct();
    (z0 = t), (t.displayName = "tt2"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (function (r) {
                (r.languages.tt2 = r.languages.extend("clike", {
                    comment: /#.*|\[%#[\s\S]*?%\]/,
                    keyword:
                        /\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\b/,
                    punctuation: /[[\]{},()]/,
                })),
                    r.languages.insertBefore("tt2", "number", {
                        operator: /=[>=]?|!=?|<=?|>=?|&&|\|\|?|\b(?:and|not|or)\b/,
                        variable: { pattern: /\b[a-z]\w*(?:\s*\.\s*(?:\d+|\$?[a-z]\w*))*\b/i },
                    }),
                    r.languages.insertBefore("tt2", "keyword", { delimiter: { pattern: /^(?:\[%|%%)-?|-?%\]$/, alias: "punctuation" } }),
                    r.languages.insertBefore("tt2", "string", {
                        "single-quoted-string": { pattern: /'[^\\']*(?:\\[\s\S][^\\']*)*'/, greedy: !0, alias: "string" },
                        "double-quoted-string": {
                            pattern: /"[^\\"]*(?:\\[\s\S][^\\"]*)*"/,
                            greedy: !0,
                            alias: "string",
                            inside: { variable: { pattern: /\$(?:[a-z]\w*(?:\.(?:\d+|\$?[a-z]\w*))*)/i } },
                        },
                    }),
                    delete r.languages.tt2.string,
                    r.hooks.add("before-tokenize", function (a) {
                        var i = /\[%[\s\S]+?%\]/g;
                        r.languages["markup-templating"].buildPlaceholders(a, "tt2", i);
                    }),
                    r.hooks.add("after-tokenize", function (a) {
                        r.languages["markup-templating"].tokenizePlaceholders(a, "tt2");
                    });
            })(n);
    }
    return z0;
}
var $0, x4;
function BL() {
    if (x4) return $0;
    x4 = 1;
    var e = Ct();
    ($0 = t), (t.displayName = "twig"), (t.aliases = []);
    function t(n) {
        n.register(e),
            (n.languages.twig = {
                comment: /^\{#[\s\S]*?#\}$/,
                "tag-name": { pattern: /(^\{%-?\s*)\w+/, lookbehind: !0, alias: "keyword" },
                delimiter: { pattern: /^\{[{%]-?|-?[%}]\}$/, alias: "punctuation" },
                string: { pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/, inside: { punctuation: /^['"]|['"]$/ } },
                keyword: /\b(?:even|if|odd)\b/,
                boolean: /\b(?:false|null|true)\b/,
                number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
                operator: [
                    { pattern: /(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/, lookbehind: !0 },
                    /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/,
                ],
                punctuation: /[()\[\]{}:.,]/,
            }),
            n.hooks.add("before-tokenize", function (r) {
                if (r.language === "twig") {
                    var a = /\{(?:#[\s\S]*?#|%[\s\S]*?%|\{[\s\S]*?\})\}/g;
                    n.languages["markup-templating"].buildPlaceholders(r, "twig", a);
                }
            }),
            n.hooks.add("after-tokenize", function (r) {
                n.languages["markup-templating"].tokenizePlaceholders(r, "twig");
            });
    }
    return $0;
}
var q0, R4;
function UL() {
    if (R4) return q0;
    (R4 = 1), (q0 = e), (e.displayName = "typoscript"), (e.aliases = ["tsconfig"]);
    function e(t) {
        (function (n) {
            var r =
                /\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\b/;
            (n.languages.typoscript = {
                comment: [
                    { pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0 },
                    { pattern: /(^|[^\\:= \t]|(?:^|[^= \t])[ \t]+)\/\/.*/, lookbehind: !0, greedy: !0 },
                    { pattern: /(^|[^"'])#.*/, lookbehind: !0, greedy: !0 },
                ],
                function: [
                    {
                        pattern: /<INCLUDE_TYPOSCRIPT:\s*source\s*=\s*(?:"[^"\r\n]*"|'[^'\r\n]*')\s*>/,
                        inside: { string: { pattern: /"[^"\r\n]*"|'[^'\r\n]*'/, inside: { keyword: r } }, keyword: { pattern: /INCLUDE_TYPOSCRIPT/ } },
                    },
                    { pattern: /@import\s*(?:"[^"\r\n]*"|'[^'\r\n]*')/, inside: { string: /"[^"\r\n]*"|'[^'\r\n]*'/ } },
                ],
                string: {
                    pattern: /^([^=]*=[< ]?)(?:(?!\]\n).)*/,
                    lookbehind: !0,
                    inside: { function: /\{\$.*\}/, keyword: r, number: /^\d+$/, punctuation: /[,|:]/ },
                },
                keyword: r,
                number: { pattern: /\b\d+\s*[.{=]/, inside: { operator: /[.{=]/ } },
                tag: { pattern: /\.?[-\w\\]+\.?/, inside: { punctuation: /\./ } },
                punctuation: /[{}[\];(),.:|]/,
                operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
            }),
                (n.languages.tsconfig = n.languages.typoscript);
        })(t);
    }
    return q0;
}
var G0, I4;
function zL() {
    if (I4) return G0;
    (I4 = 1), (G0 = e), (e.displayName = "unrealscript"), (e.aliases = ["uc", "uscript"]);
    function e(t) {
        (t.languages.unrealscript = {
            comment: /\/\/.*|\/\*[\s\S]*?\*\//,
            string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
            category: { pattern: /(\b(?:(?:autoexpand|hide|show)categories|var)\s*\()[^()]+(?=\))/, lookbehind: !0, greedy: !0, alias: "property" },
            metadata: {
                pattern: /(\w\s*)<\s*\w+\s*=[^<>|=\r\n]+(?:\|\s*\w+\s*=[^<>|=\r\n]+)*>/,
                lookbehind: !0,
                greedy: !0,
                inside: { property: /\b\w+(?=\s*=)/, operator: /=/, punctuation: /[<>|]/ },
            },
            macro: { pattern: /`\w+/, alias: "property" },
            "class-name": { pattern: /(\b(?:class|enum|extends|interface|state(?:\(\))?|struct|within)\s+)\w+/, lookbehind: !0 },
            keyword:
                /\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            boolean: /\b(?:false|true)\b/,
            number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
            operator: />>|<<|--|\+\+|\*\*|[-+*/~!=<>$@]=?|&&?|\|\|?|\^\^?|[?:%]|\b(?:ClockwiseFrom|Cross|Dot)\b/,
            punctuation: /[()[\]{};,.]/,
        }),
            (t.languages.uc = t.languages.uscript = t.languages.unrealscript);
    }
    return G0;
}
var H0, N4;
function $L() {
    if (N4) return H0;
    (N4 = 1), (H0 = e), (e.displayName = "uorazor"), (e.aliases = []);
    function e(t) {
        t.languages.uorazor = {
            "comment-hash": { pattern: /#.*/, alias: "comment", greedy: !0 },
            "comment-slash": { pattern: /\/\/.*/, alias: "comment", greedy: !0 },
            string: { pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/, inside: { punctuation: /^['"]|['"]$/ }, greedy: !0 },
            "source-layers": {
                pattern:
                    /\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\b/i,
                alias: "function",
            },
            "source-commands": {
                pattern:
                    /\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\b/,
                alias: "function",
            },
            "tag-name": { pattern: /(^\{%-?\s*)\w+/, lookbehind: !0, alias: "keyword" },
            delimiter: { pattern: /^\{[{%]-?|-?[%}]\}$/, alias: "punctuation" },
            function:
                /\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\b/,
            keyword: /\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\b/,
            boolean: /\b(?:false|null|true)\b/,
            number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
            operator: [
                { pattern: /(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/, lookbehind: !0 },
                /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/,
            ],
            punctuation: /[()\[\]{}:.,]/,
        };
    }
    return H0;
}
var j0, _4;
function qL() {
    if (_4) return j0;
    (_4 = 1), (j0 = e), (e.displayName = "uri"), (e.aliases = ["url"]);
    function e(t) {
        (t.languages.uri = {
            scheme: { pattern: /^[a-z][a-z0-9+.-]*:/im, greedy: !0, inside: { "scheme-delimiter": /:$/ } },
            fragment: { pattern: /#[\w\-.~!$&'()*+,;=%:@/?]*/, inside: { "fragment-delimiter": /^#/ } },
            query: {
                pattern: /\?[\w\-.~!$&'()*+,;=%:@/?]*/,
                inside: {
                    "query-delimiter": { pattern: /^\?/, greedy: !0 },
                    "pair-delimiter": /[&;]/,
                    pair: { pattern: /^[^=][\s\S]*/, inside: { key: /^[^=]+/, value: { pattern: /(^=)[\s\S]+/, lookbehind: !0 } } },
                },
            },
            authority: {
                pattern: RegExp(
                    /^\/\//.source +
                        /(?:[\w\-.~!$&'()*+,;=%:]*@)?/.source +
                        ("(?:" + /\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\.[\w\-.~!$&'()*+,;=]+)\]/.source + "|" + /[\w\-.~!$&'()*+,;=%]*/.source + ")") +
                        /(?::\d*)?/.source,
                    "m",
                ),
                inside: {
                    "authority-delimiter": /^\/\//,
                    "user-info-segment": {
                        pattern: /^[\w\-.~!$&'()*+,;=%:]*@/,
                        inside: { "user-info-delimiter": /@$/, "user-info": /^[\w\-.~!$&'()*+,;=%:]+/ },
                    },
                    "port-segment": { pattern: /:\d*$/, inside: { "port-delimiter": /^:/, port: /^\d+/ } },
                    host: {
                        pattern: /[\s\S]+/,
                        inside: {
                            "ip-literal": {
                                pattern: /^\[[\s\S]+\]$/,
                                inside: { "ip-literal-delimiter": /^\[|\]$/, "ipv-future": /^v[\s\S]+/, "ipv6-address": /^[\s\S]+/ },
                            },
                            "ipv4-address": /^(?:(?:[03-9]\d?|[12]\d{0,2})\.){3}(?:[03-9]\d?|[12]\d{0,2})$/,
                        },
                    },
                },
            },
            path: { pattern: /^[\w\-.~!$&'()*+,;=%:@/]+/m, inside: { "path-separator": /\// } },
        }),
            (t.languages.url = t.languages.uri);
    }
    return j0;
}
var V0, C4;
function GL() {
    if (C4) return V0;
    (C4 = 1), (V0 = e), (e.displayName = "v"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = { pattern: /[\s\S]+/, inside: null };
            (n.languages.v = n.languages.extend("clike", {
                string: {
                    pattern: /r?(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                    alias: "quoted-string",
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\{[^{}]*\}|\w+(?:\.\w+(?:\([^\(\)]*\))?|\[[^\[\]]+\])*)/,
                            lookbehind: !0,
                            inside: {
                                "interpolation-variable": { pattern: /^\$\w[\s\S]*$/, alias: "variable" },
                                "interpolation-punctuation": { pattern: /^\$\{|\}$/, alias: "punctuation" },
                                "interpolation-expression": r,
                            },
                        },
                    },
                },
                "class-name": { pattern: /(\b(?:enum|interface|struct|type)\s+)(?:C\.)?\w+/, lookbehind: !0 },
                keyword:
                    /(?:\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\$(?:else|for|if)|#(?:flag|include))\b/,
                number: /\b(?:0x[a-f\d]+(?:_[a-f\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?)\b/i,
                operator: /~|\?|[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\.?/,
                builtin: /\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\b/,
            })),
                (r.inside = n.languages.v),
                n.languages.insertBefore("v", "string", { char: { pattern: /`(?:\\`|\\?[^`]{1,2})`/, alias: "rune" } }),
                n.languages.insertBefore("v", "operator", {
                    attribute: {
                        pattern: /(^[\t ]*)\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\]/m,
                        lookbehind: !0,
                        alias: "annotation",
                        inside: { punctuation: /[\[\]]/, keyword: /\w+/ },
                    },
                    generic: { pattern: /<\w+>(?=\s*[\)\{])/, inside: { punctuation: /[<>]/, "class-name": /\w+/ } },
                }),
                n.languages.insertBefore("v", "function", {
                    "generic-function": {
                        pattern: /\b\w+\s*<\w+>(?=\()/,
                        inside: { function: /^\w+/, generic: { pattern: /<\w+>/, inside: n.languages.v.generic.inside } },
                    },
                });
        })(t);
    }
    return V0;
}
var W0, O4;
function HL() {
    if (O4) return W0;
    (O4 = 1), (W0 = e), (e.displayName = "vala"), (e.aliases = []);
    function e(t) {
        (t.languages.vala = t.languages.extend("clike", {
            "class-name": [
                { pattern: /\b[A-Z]\w*(?:\.\w+)*\b(?=(?:\?\s+|\*?\s+\*?)\w)/, inside: { punctuation: /\./ } },
                { pattern: /(\[)[A-Z]\w*(?:\.\w+)*\b/, lookbehind: !0, inside: { punctuation: /\./ } },
                { pattern: /(\b(?:class|interface)\s+[A-Z]\w*(?:\.\w+)*\s*:\s*)[A-Z]\w*(?:\.\w+)*\b/, lookbehind: !0, inside: { punctuation: /\./ } },
                { pattern: /((?:\b(?:class|enum|interface|new|struct)\s+)|(?:catch\s+\())[A-Z]\w*(?:\.\w+)*\b/, lookbehind: !0, inside: { punctuation: /\./ } },
            ],
            keyword:
                /\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\b/i,
            function: /\b\w+(?=\s*\()/,
            number: /(?:\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?:f|u?l?)?/i,
            operator: /\+\+|--|&&|\|\||<<=?|>>=?|=>|->|~|[+\-*\/%&^|=!<>]=?|\?\??|\.\.\./,
            punctuation: /[{}[\];(),.:]/,
            constant: /\b[A-Z0-9_]+\b/,
        })),
            t.languages.insertBefore("vala", "string", {
                "raw-string": { pattern: /"""[\s\S]*?"""/, greedy: !0, alias: "string" },
                "template-string": {
                    pattern: /@"[\s\S]*?"/,
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /\$(?:\([^)]*\)|[a-zA-Z]\w*)/,
                            inside: { delimiter: { pattern: /^\$\(?|\)$/, alias: "punctuation" }, rest: t.languages.vala },
                        },
                        string: /[\s\S]+/,
                    },
                },
            }),
            t.languages.insertBefore("vala", "keyword", {
                regex: {
                    pattern: /\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[imsx]{0,4}(?=\s*(?:$|[\r\n,.;})\]]))/,
                    greedy: !0,
                    inside: {
                        "regex-source": { pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/, lookbehind: !0, alias: "language-regex", inside: t.languages.regex },
                        "regex-delimiter": /^\//,
                        "regex-flags": /^[a-z]+$/,
                    },
                },
            });
    }
    return W0;
}
var Y0, L4;
function jL() {
    if (L4) return Y0;
    (L4 = 1), (Y0 = e), (e.displayName = "velocity"), (e.aliases = []);
    function e(t) {
        (function (n) {
            n.languages.velocity = n.languages.extend("markup", {});
            var r = {
                variable: {
                    pattern: /(^|[^\\](?:\\\\)*)\$!?(?:[a-z][\w-]*(?:\([^)]*\))?(?:\.[a-z][\w-]*(?:\([^)]*\))?|\[[^\]]+\])*|\{[^}]+\})/i,
                    lookbehind: !0,
                    inside: {},
                },
                string: { pattern: /"[^"]*"|'[^']*'/, greedy: !0 },
                number: /\b\d+\b/,
                boolean: /\b(?:false|true)\b/,
                operator: /[=!<>]=?|[+*/%-]|&&|\|\||\.\.|\b(?:eq|g[et]|l[et]|n(?:e|ot))\b/,
                punctuation: /[(){}[\]:,.]/,
            };
            (r.variable.inside = {
                string: r.string,
                function: { pattern: /([^\w-])[a-z][\w-]*(?=\()/, lookbehind: !0 },
                number: r.number,
                boolean: r.boolean,
                punctuation: r.punctuation,
            }),
                n.languages.insertBefore("velocity", "comment", {
                    unparsed: { pattern: /(^|[^\\])#\[\[[\s\S]*?\]\]#/, lookbehind: !0, greedy: !0, inside: { punctuation: /^#\[\[|\]\]#$/ } },
                    "velocity-comment": [
                        { pattern: /(^|[^\\])#\*[\s\S]*?\*#/, lookbehind: !0, greedy: !0, alias: "comment" },
                        { pattern: /(^|[^\\])##.*/, lookbehind: !0, greedy: !0, alias: "comment" },
                    ],
                    directive: {
                        pattern: /(^|[^\\](?:\\\\)*)#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})(?:\s*\((?:[^()]|\([^()]*\))*\))?/i,
                        lookbehind: !0,
                        inside: { keyword: { pattern: /^#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})|\bin\b/, inside: { punctuation: /[{}]/ } }, rest: r },
                    },
                    variable: r.variable,
                }),
                (n.languages.velocity.tag.inside["attr-value"].inside.rest = n.languages.velocity);
        })(t);
    }
    return Y0;
}
var K0, D4;
function VL() {
    if (D4) return K0;
    (D4 = 1), (K0 = e), (e.displayName = "verilog"), (e.aliases = []);
    function e(t) {
        t.languages.verilog = {
            comment: { pattern: /\/\/.*|\/\*[\s\S]*?\*\//, greedy: !0 },
            string: { pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/, greedy: !0 },
            "kernel-function": { pattern: /\B\$\w+\b/, alias: "property" },
            constant: /\B`\w+\b/,
            function: /\b\w+(?=\()/,
            keyword:
                /\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\b/,
            important: /\b(?:always|always_comb|always_ff|always_latch)\b(?: *@)?/,
            number: /\B##?\d+|(?:\b\d+)?'[odbh] ?[\da-fzx_?]+|\b(?:\d*[._])?\d+(?:e[-+]?\d+)?/i,
            operator: /[-+{}^~%*\/?=!<>&|]+/,
            punctuation: /[[\];(),.:]/,
        };
    }
    return K0;
}
var X0, M4;
function WL() {
    if (M4) return X0;
    (M4 = 1), (X0 = e), (e.displayName = "vhdl"), (e.aliases = []);
    function e(t) {
        t.languages.vhdl = {
            comment: /--.+/,
            "vhdl-vectors": { pattern: /\b[oxb]"[\da-f_]+"|"[01uxzwlh-]+"/i, alias: "number" },
            "quoted-function": { pattern: /"\S+?"(?=\()/, alias: "function" },
            string: /"(?:[^\\"\r\n]|\\(?:\r\n|[\s\S]))*"/,
            constant: /\b(?:library|use)\b/i,
            keyword:
                /\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\b/i,
            boolean: /\b(?:false|true)\b/i,
            function: /\w+(?=\()/,
            number: /'[01uxzwlh-]'|\b(?:\d+#[\da-f_.]+#|\d[\d_.]*)(?:e[-+]?\d+)?/i,
            operator: /[<>]=?|:=|[-+*/&=]|\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\b/i,
            punctuation: /[{}[\];(),.:]/,
        };
    }
    return X0;
}
var Z0, F4;
function YL() {
    if (F4) return Z0;
    (F4 = 1), (Z0 = e), (e.displayName = "vim"), (e.aliases = []);
    function e(t) {
        t.languages.vim = {
            string: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\r\n]|'')*'/,
            comment: /".*/,
            function: /\b\w+(?=\()/,
            keyword:
                /\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\b/,
            builtin:
                /\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\b/,
            number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?)\b/i,
            operator: /\|\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\/%?]|\b(?:is(?:not)?)\b/,
            punctuation: /[{}[\](),;:]/,
        };
    }
    return Z0;
}
var Q0, P4;
function KL() {
    if (P4) return Q0;
    (P4 = 1), (Q0 = e), (e.displayName = "visualBasic"), (e.aliases = []);
    function e(t) {
        (t.languages["visual-basic"] = {
            comment: { pattern: /(?:['‘’]|REM\b)(?:[^\r\n_]|_(?:\r\n?|\n)?)*/i, inside: { keyword: /^REM/i } },
            directive: {
                pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\b_[ \t]*(?:\r\n?|\n)|.)+/i,
                alias: "property",
                greedy: !0,
            },
            string: { pattern: /\$?["“”](?:["“”]{2}|[^"“”])*["“”]C?/i, greedy: !0 },
            date: {
                pattern:
                    /#[ \t]*(?:\d+([/-])\d+\1\d+(?:[ \t]+(?:\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?))?|\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?)[ \t]*#/i,
                alias: "number",
            },
            number: /(?:(?:\b\d+(?:\.\d+)?|\.\d+)(?:E[+-]?\d+)?|&[HO][\dA-F]+)(?:[FRD]|U?[ILS])?/i,
            boolean: /\b(?:False|Nothing|True)\b/i,
            keyword:
                /\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\b/i,
            operator: /[+\-*/\\^<=>&#@$%!]|\b_(?=[ \t]*[\r\n])/,
            punctuation: /[{}().,:?]/,
        }),
            (t.languages.vb = t.languages["visual-basic"]),
            (t.languages.vba = t.languages["visual-basic"]);
    }
    return Q0;
}
var J0, B4;
function XL() {
    if (B4) return J0;
    (B4 = 1), (J0 = e), (e.displayName = "warpscript"), (e.aliases = []);
    function e(t) {
        t.languages.warpscript = {
            comment: /#.*|\/\/.*|\/\*[\s\S]*?\*\//,
            string: { pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'|<'(?:[^\\']|'(?!>)|\\.)*'>/, greedy: !0 },
            variable: /\$\S+/,
            macro: { pattern: /@\S+/, alias: "property" },
            keyword:
                /\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\b/,
            number: /[+-]?\b(?:NaN|Infinity|\d+(?:\.\d*)?(?:[Ee][+-]?\d+)?|0x[\da-fA-F]+|0b[01]+)\b/,
            boolean: /\b(?:F|T|false|true)\b/,
            punctuation: /<%|%>|[{}[\]()]/,
            operator: /==|&&?|\|\|?|\*\*?|>>>?|<<|[<>!~]=?|[-/%^]|\+!?|\b(?:AND|NOT|OR)\b/,
        };
    }
    return J0;
}
var ef, U4;
function ZL() {
    if (U4) return ef;
    (U4 = 1), (ef = e), (e.displayName = "wasm"), (e.aliases = []);
    function e(t) {
        t.languages.wasm = {
            comment: [/\(;[\s\S]*?;\)/, { pattern: /;;.*/, greedy: !0 }],
            string: { pattern: /"(?:\\[\s\S]|[^"\\])*"/, greedy: !0 },
            keyword: [
                { pattern: /\b(?:align|offset)=/, inside: { operator: /=/ } },
                {
                    pattern:
                        /\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,
                    inside: { punctuation: /\./ },
                },
                /\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/,
            ],
            variable: /\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,
            number: /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,
            punctuation: /[()]/,
        };
    }
    return ef;
}
var tf, z4;
function QL() {
    if (z4) return tf;
    (z4 = 1), (tf = e), (e.displayName = "webIdl"), (e.aliases = []);
    function e(t) {
        (function (n) {
            var r = /(?:\B-|\b_|\b)[A-Za-z][\w-]*(?![\w-])/.source,
                a =
                    "(?:" +
                    /\b(?:unsigned\s+)?long\s+long(?![\w-])/.source +
                    "|" +
                    /\b(?:unrestricted|unsigned)\s+[a-z]+(?![\w-])/.source +
                    "|" +
                    /(?!(?:unrestricted|unsigned)\b)/.source +
                    r +
                    /(?:\s*<(?:[^<>]|<[^<>]*>)*>)?/.source +
                    ")" +
                    /(?:\s*\?)?/.source,
                i = {};
            n.languages["web-idl"] = {
                comment: { pattern: /\/\/.*|\/\*[\s\S]*?\*\//, greedy: !0 },
                string: { pattern: /"[^"]*"/, greedy: !0 },
                namespace: { pattern: RegExp(/(\bnamespace\s+)/.source + r), lookbehind: !0 },
                "class-name": [
                    { pattern: /(^|[^\w-])(?:iterable|maplike|setlike)\s*<(?:[^<>]|<[^<>]*>)*>/, lookbehind: !0, inside: i },
                    { pattern: RegExp(/(\b(?:attribute|const|deleter|getter|optional|setter)\s+)/.source + a), lookbehind: !0, inside: i },
                    { pattern: RegExp("(" + /\bcallback\s+/.source + r + /\s*=\s*/.source + ")" + a), lookbehind: !0, inside: i },
                    { pattern: RegExp(/(\btypedef\b\s*)/.source + a), lookbehind: !0, inside: i },
                    { pattern: RegExp(/(\b(?:callback|dictionary|enum|interface(?:\s+mixin)?)\s+)(?!(?:interface|mixin)\b)/.source + r), lookbehind: !0 },
                    { pattern: RegExp(/(:\s*)/.source + r), lookbehind: !0 },
                    RegExp(r + /(?=\s+(?:implements|includes)\b)/.source),
                    { pattern: RegExp(/(\b(?:implements|includes)\s+)/.source + r), lookbehind: !0 },
                    { pattern: RegExp(a + "(?=" + /\s*(?:\.{3}\s*)?/.source + r + /\s*[(),;=]/.source + ")"), inside: i },
                ],
                builtin:
                    /\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\b/,
                keyword: [
                    /\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\b/,
                    /\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\b/,
                ],
                boolean: /\b(?:false|true)\b/,
                number: { pattern: /(^|[^\w-])-?(?:0x[0-9a-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|NaN|Infinity)(?![\w-])/i, lookbehind: !0 },
                operator: /\.{3}|[=:?<>-]/,
                punctuation: /[(){}[\].,;]/,
            };
            for (var o in n.languages["web-idl"]) o !== "class-name" && (i[o] = n.languages["web-idl"][o]);
            n.languages.webidl = n.languages["web-idl"];
        })(t);
    }
    return tf;
}
var nf, $4;
function JL() {
    if ($4) return nf;
    ($4 = 1), (nf = e), (e.displayName = "wiki"), (e.aliases = []);
    function e(t) {
        (t.languages.wiki = t.languages.extend("markup", {
            "block-comment": { pattern: /(^|[^\\])\/\*[\s\S]*?\*\//, lookbehind: !0, alias: "comment" },
            heading: { pattern: /^(=+)[^=\r\n].*?\1/m, inside: { punctuation: /^=+|=+$/, important: /.+/ } },
            emphasis: {
                pattern: /('{2,5}).+?\1/,
                inside: {
                    "bold-italic": { pattern: /(''''').+?(?=\1)/, lookbehind: !0, alias: ["bold", "italic"] },
                    bold: { pattern: /(''')[^'](?:.*?[^'])?(?=\1)/, lookbehind: !0 },
                    italic: { pattern: /('')[^'](?:.*?[^'])?(?=\1)/, lookbehind: !0 },
                    punctuation: /^''+|''+$/,
                },
            },
            hr: { pattern: /^-{4,}/m, alias: "punctuation" },
            url: [/ISBN +(?:97[89][ -]?)?(?:\d[ -]?){9}[\dx]\b|(?:PMID|RFC) +\d+/i, /\[\[.+?\]\]|\[.+?\]/],
            variable: [/__[A-Z]+__/, /\{{3}.+?\}{3}/, /\{\{.+?\}\}/],
            symbol: [/^#redirect/im, /~{3,5}/],
            "table-tag": {
                pattern: /((?:^|[|!])[|!])[^|\r\n]+\|(?!\|)/m,
                lookbehind: !0,
                inside: { "table-bar": { pattern: /\|$/, alias: "punctuation" }, rest: t.languages.markup.tag.inside },
            },
            punctuation: /^(?:\{\||\|\}|\|-|[*#:;!|])|\|\||!!/m,
        })),
            t.languages.insertBefore("wiki", "tag", {
                nowiki: {
                    pattern: /<(nowiki|pre|source)\b[^>]*>[\s\S]*?<\/\1>/i,
                    inside: { tag: { pattern: /<(?:nowiki|pre|source)\b[^>]*>|<\/(?:nowiki|pre|source)>/i, inside: t.languages.markup.tag.inside } },
                },
            });
    }
    return nf;
}
var rf, q4;
function eD() {
    if (q4) return rf;
    (q4 = 1), (rf = e), (e.displayName = "wolfram"), (e.aliases = ["mathematica", "wl", "nb"]);
    function e(t) {
        (t.languages.wolfram = {
            comment: /\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,
            string: { pattern: /"(?:\\.|[^"\\\r\n])*"/, greedy: !0 },
            keyword: /\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\b/,
            context: { pattern: /\b\w+`+\w*/, alias: "class-name" },
            blank: { pattern: /\b\w+_\b/, alias: "regex" },
            "global-variable": { pattern: /\$\w+/, alias: "variable" },
            boolean: /\b(?:False|True)\b/,
            number: /(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?j?\b/i,
            operator:
                /\/\.|;|=\.|\^=|\^:=|:=|<<|>>|<\||\|>|:>|\|->|->|<-|@@@|@@|@|\/@|=!=|===|==|=|\+|-|\^|\[\/-+%=\]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
            punctuation: /[{}[\];(),.:]/,
        }),
            (t.languages.mathematica = t.languages.wolfram),
            (t.languages.wl = t.languages.wolfram),
            (t.languages.nb = t.languages.wolfram);
    }
    return rf;
}
var af, G4;
function tD() {
    if (G4) return af;
    (G4 = 1), (af = e), (e.displayName = "wren"), (e.aliases = []);
    function e(t) {
        (t.languages.wren = {
            comment: [
                { pattern: /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*))*\*\/)*\*\/)*\*\//, greedy: !0 },
                { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 },
            ],
            "triple-quoted-string": { pattern: /"""[\s\S]*?"""/, greedy: !0, alias: "string" },
            "string-literal": null,
            hashbang: { pattern: /^#!\/.+/, greedy: !0, alias: "comment" },
            attribute: { pattern: /#!?[ \t\u3000]*\w+/, alias: "keyword" },
            "class-name": [{ pattern: /(\bclass\s+)\w+/, lookbehind: !0 }, /\b[A-Z][a-z\d_]*\b/],
            constant: /\b[A-Z][A-Z\d_]*\b/,
            null: { pattern: /\bnull\b/, alias: "keyword" },
            keyword: /\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\b/,
            boolean: /\b(?:false|true)\b/,
            number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
            function: /\b[a-z_]\w*(?=\s*[({])/i,
            operator: /<<|>>|[=!<>]=?|&&|\|\||[-+*/%~^&|?:]|\.{2,3}/,
            punctuation: /[\[\](){}.,;]/,
        }),
            (t.languages.wren["string-literal"] = {
                pattern: /(^|[^\\"])"(?:[^\\"%]|\\[\s\S]|%(?!\()|%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\))*"/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /((?:^|[^\\])(?:\\{2})*)%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\)/,
                        lookbehind: !0,
                        inside: {
                            expression: { pattern: /^(%\()[\s\S]+(?=\)$)/, lookbehind: !0, inside: t.languages.wren },
                            "interpolation-punctuation": { pattern: /^%\(|\)$/, alias: "punctuation" },
                        },
                    },
                    string: /[\s\S]+/,
                },
            });
    }
    return af;
}
var of, H4;
function nD() {
    if (H4) return of;
    (H4 = 1), (of = e), (e.displayName = "xeora"), (e.aliases = ["xeoracube"]);
    function e(t) {
        (function (n) {
            (n.languages.xeora = n.languages.extend("markup", {
                constant: { pattern: /\$(?:DomainContents|PageRenderDuration)\$/, inside: { punctuation: { pattern: /\$/ } } },
                variable: { pattern: /\$@?(?:#+|[-+*~=^])?[\w.]+\$/, inside: { punctuation: { pattern: /[$.]/ }, operator: { pattern: /#+|[-+*~=^@]/ } } },
                "function-inline": {
                    pattern:
                        /\$F:[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\$/,
                    inside: {
                        variable: {
                            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\w.]+/,
                            inside: { punctuation: { pattern: /[,.|]/ }, operator: { pattern: /#+|[-+*~=^@]/ } },
                        },
                        punctuation: { pattern: /\$\w:|[$:?.,|]/ },
                    },
                    alias: "function",
                },
                "function-block": {
                    pattern:
                        /\$XF:\{[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\}:XF\$/,
                    inside: { punctuation: { pattern: /[$:{}?.,|]/ } },
                    alias: "function",
                },
                "directive-inline": {
                    pattern: /\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\/\w.]+\$/,
                    inside: { punctuation: { pattern: /\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/, inside: { tag: { pattern: /#\d/ } } } },
                    alias: "function",
                },
                "directive-block-open": {
                    pattern: /\$\w+:\{|\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\w.]+:\{(?:![A-Z]+)?/,
                    inside: {
                        punctuation: { pattern: /\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/, inside: { tag: { pattern: /#\d/ } } },
                        attribute: { pattern: /![A-Z]+$/, inside: { punctuation: { pattern: /!/ } }, alias: "keyword" },
                    },
                    alias: "function",
                },
                "directive-block-separator": { pattern: /\}:[-\w.]+:\{/, inside: { punctuation: { pattern: /[:{}]/ } }, alias: "function" },
                "directive-block-close": { pattern: /\}:[-\w.]+\$/, inside: { punctuation: { pattern: /[:{}$]/ } }, alias: "function" },
            })),
                n.languages.insertBefore(
                    "inside",
                    "punctuation",
                    { variable: n.languages.xeora["function-inline"].inside.variable },
                    n.languages.xeora["function-block"],
                ),
                (n.languages.xeoracube = n.languages.xeora);
        })(t);
    }
    return of;
}
var lf, j4;
function rD() {
    if (j4) return lf;
    (j4 = 1), (lf = e), (e.displayName = "xmlDoc"), (e.aliases = []);
    function e(t) {
        (function (n) {
            function r(l, s) {
                n.languages[l] && n.languages.insertBefore(l, "comment", { "doc-comment": s });
            }
            var a = n.languages.markup.tag,
                i = { pattern: /\/\/\/.*/, greedy: !0, alias: "comment", inside: { tag: a } },
                o = { pattern: /'''.*/, greedy: !0, alias: "comment", inside: { tag: a } };
            r("csharp", i), r("fsharp", i), r("vbnet", o);
        })(t);
    }
    return lf;
}
var sf, V4;
function aD() {
    if (V4) return sf;
    (V4 = 1), (sf = e), (e.displayName = "xojo"), (e.aliases = []);
    function e(t) {
        t.languages.xojo = {
            comment: { pattern: /(?:'|\/\/|Rem\b).+/i, greedy: !0 },
            string: { pattern: /"(?:""|[^"])*"/, greedy: !0 },
            number: [/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i, /&[bchou][a-z\d]+/i],
            directive: { pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\b/i, alias: "property" },
            keyword:
                /\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\b/i,
            operator: /<[=>]?|>=?|[+\-*\/\\^=]|\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\b/i,
            punctuation: /[.,;:()]/,
        };
    }
    return sf;
}
var uf, W4;
function iD() {
    if (W4) return uf;
    (W4 = 1), (uf = e), (e.displayName = "xquery"), (e.aliases = []);
    function e(t) {
        (function (n) {
            (n.languages.xquery = n.languages.extend("markup", {
                "xquery-comment": { pattern: /\(:[\s\S]*?:\)/, greedy: !0, alias: "comment" },
                string: { pattern: /(["'])(?:\1\1|(?!\1)[\s\S])*\1/, greedy: !0 },
                extension: { pattern: /\(#.+?#\)/, alias: "symbol" },
                variable: /\$[-\w:]+/,
                axis: {
                    pattern:
                        /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,
                    lookbehind: !0,
                    alias: "operator",
                },
                "keyword-operator": {
                    pattern: /(^|[^:-])\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\b(?=$|[^:-])/,
                    lookbehind: !0,
                    alias: "operator",
                },
                keyword: {
                    pattern:
                        /(^|[^:-])\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\b(?=$|[^:-])/,
                    lookbehind: !0,
                },
                function: /[\w-]+(?::[\w-]+)*(?=\s*\()/,
                "xquery-element": { pattern: /(element\s+)[\w-]+(?::[\w-]+)*/, lookbehind: !0, alias: "tag" },
                "xquery-attribute": { pattern: /(attribute\s+)[\w-]+(?::[\w-]+)*/, lookbehind: !0, alias: "attr-name" },
                builtin: {
                    pattern:
                        /(^|[^:-])\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\b(?=$|[^:-])/,
                    lookbehind: !0,
                },
                number: /\b\d+(?:\.\d+)?(?:E[+-]?\d+)?/,
                operator: [/[+*=?|@]|\.\.?|:=|!=|<[=<]?|>[=>]?/, { pattern: /(\s)-(?=\s)/, lookbehind: !0 }],
                punctuation: /[[\](){},;:/]/,
            })),
                (n.languages.xquery.tag.pattern =
                    /<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/),
                (n.languages.xquery.tag.inside["attr-value"].pattern =
                    /=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+)/),
                (n.languages.xquery.tag.inside["attr-value"].inside.punctuation = /^="|"$/),
                (n.languages.xquery.tag.inside["attr-value"].inside.expression = {
                    pattern: /\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}/,
                    inside: n.languages.xquery,
                    alias: "language-xquery",
                });
            var r = function (i) {
                    return typeof i == "string" ? i : typeof i.content == "string" ? i.content : i.content.map(r).join("");
                },
                a = function (i) {
                    for (var o = [], l = 0; l < i.length; l++) {
                        var s = i[l],
                            u = !1;
                        if (
                            (typeof s != "string" &&
                                (s.type === "tag" && s.content[0] && s.content[0].type === "tag"
                                    ? s.content[0].content[0].content === "</"
                                        ? o.length > 0 && o[o.length - 1].tagName === r(s.content[0].content[1]) && o.pop()
                                        : s.content[s.content.length - 1].content === "/>" || o.push({ tagName: r(s.content[0].content[1]), openedBraces: 0 })
                                    : o.length > 0 &&
                                        s.type === "punctuation" &&
                                        s.content === "{" &&
                                        (!i[l + 1] || i[l + 1].type !== "punctuation" || i[l + 1].content !== "{") &&
                                        (!i[l - 1] || i[l - 1].type !== "plain-text" || i[l - 1].content !== "{")
                                      ? o[o.length - 1].openedBraces++
                                      : o.length > 0 && o[o.length - 1].openedBraces > 0 && s.type === "punctuation" && s.content === "}"
                                        ? o[o.length - 1].openedBraces--
                                        : s.type !== "comment" && (u = !0)),
                            (u || typeof s == "string") && o.length > 0 && o[o.length - 1].openedBraces === 0)
                        ) {
                            var c = r(s);
                            l < i.length - 1 && (typeof i[l + 1] == "string" || i[l + 1].type === "plain-text") && ((c += r(i[l + 1])), i.splice(l + 1, 1)),
                                l > 0 && (typeof i[l - 1] == "string" || i[l - 1].type === "plain-text") && ((c = r(i[l - 1]) + c), i.splice(l - 1, 1), l--),
                                /^\s+$/.test(c) ? (i[l] = c) : (i[l] = new n.Token("plain-text", c, null, c));
                        }
                        s.content && typeof s.content != "string" && a(s.content);
                    }
                };
            n.hooks.add("after-tokenize", function (i) {
                i.language === "xquery" && a(i.tokens);
            });
        })(t);
    }
    return uf;
}
var cf, Y4;
function oD() {
    if (Y4) return cf;
    (Y4 = 1), (cf = e), (e.displayName = "yang"), (e.aliases = []);
    function e(t) {
        t.languages.yang = {
            comment: /\/\*[\s\S]*?\*\/|\/\/.*/,
            string: { pattern: /"(?:[^\\"]|\\.)*"|'[^']*'/, greedy: !0 },
            keyword: { pattern: /(^|[{};\r\n][ \t]*)[a-z_][\w.-]*/i, lookbehind: !0 },
            namespace: { pattern: /(\s)[a-z_][\w.-]*(?=:)/i, lookbehind: !0 },
            boolean: /\b(?:false|true)\b/,
            operator: /\+/,
            punctuation: /[{};:]/,
        };
    }
    return cf;
}
var df, K4;
function lD() {
    if (K4) return df;
    (K4 = 1), (df = e), (e.displayName = "zig"), (e.aliases = []);
    function e(t) {
        (function (n) {
            function r(c) {
                return function () {
                    return c;
                };
            }
            var a =
                    /\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\b/,
                i = "\\b(?!" + a.source + ")(?!\\d)\\w+\\b",
                o = /align\s*\((?:[^()]|\([^()]*\))*\)/.source,
                l = /(?:\?|\bpromise->|(?:\[[^[\]]*\]|\*(?!\*)|\*\*)(?:\s*<ALIGN>|\s*const\b|\s*volatile\b|\s*allowzero\b)*)/.source.replace(/<ALIGN>/g, r(o)),
                s = /(?:\bpromise\b|(?:\berror\.)?<ID>(?:\.<ID>)*(?!\s+<ID>))/.source.replace(/<ID>/g, r(i)),
                u = "(?!\\s)(?:!?\\s*(?:" + l + "\\s*)*" + s + ")+";
            (n.languages.zig = {
                comment: [{ pattern: /\/\/[/!].*/, alias: "doc-comment" }, /\/{2}.*/],
                string: [
                    { pattern: /(^|[^\\@])c?"(?:[^"\\\r\n]|\\.)*"/, lookbehind: !0, greedy: !0 },
                    { pattern: /([\r\n])([ \t]+c?\\{2}).*(?:(?:\r\n?|\n)\2.*)*/, lookbehind: !0, greedy: !0 },
                ],
                char: { pattern: /(^|[^\\])'(?:[^'\\\r\n]|[\uD800-\uDFFF]{2}|\\(?:.|x[a-fA-F\d]{2}|u\{[a-fA-F\d]{1,6}\}))'/, lookbehind: !0, greedy: !0 },
                builtin: /\B@(?!\d)\w+(?=\s*\()/,
                label: { pattern: /(\b(?:break|continue)\s*:\s*)\w+\b|\b(?!\d)\w+\b(?=\s*:\s*(?:\{|while\b))/, lookbehind: !0 },
                "class-name": [
                    /\b(?!\d)\w+(?=\s*=\s*(?:(?:extern|packed)\s+)?(?:enum|struct|union)\s*[({])/,
                    {
                        pattern: RegExp(
                            /(:\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?[=;,)])|<TYPE>(?=\s*(?:<ALIGN>\s*)?\{)/.source.replace(/<TYPE>/g, r(u)).replace(/<ALIGN>/g, r(o)),
                        ),
                        lookbehind: !0,
                        inside: null,
                    },
                    {
                        pattern: RegExp(/(\)\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?;)/.source.replace(/<TYPE>/g, r(u)).replace(/<ALIGN>/g, r(o))),
                        lookbehind: !0,
                        inside: null,
                    },
                ],
                "builtin-type": {
                    pattern:
                        /\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\b/,
                    alias: "keyword",
                },
                keyword: a,
                function: /\b(?!\d)\w+(?=\s*\()/,
                number: /\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\d]+(?:\.[a-fA-F\d]*)?(?:[pP][+-]?[a-fA-F\d]+)?|\d+(?:\.\d*)?(?:[eE][+-]?\d+)?)\b/,
                boolean: /\b(?:false|true)\b/,
                operator: /\.[*?]|\.{2,3}|[-=]>|\*\*|\+\+|\|\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,
                punctuation: /[.:,;(){}[\]]/,
            }),
                n.languages.zig["class-name"].forEach(function (c) {
                    c.inside === null && (c.inside = n.languages.zig);
                });
        })(t);
    }
    return df;
}
var x = hC,
    sD = x;
x.register(xC());
x.register(RC());
x.register(IC());
x.register(NC());
x.register(_C());
x.register(CC());
x.register(OC());
x.register(LC());
x.register(DC());
x.register(MC());
x.register(FC());
x.register(PC());
x.register(BC());
x.register(UC());
x.register(zC());
x.register($C());
x.register(qC());
x.register(GC());
x.register(HC());
x.register(jC());
x.register(VC());
x.register(WC());
x.register(MT());
x.register(FT());
x.register(YC());
x.register(KC());
x.register(XC());
x.register(ZC());
x.register(QC());
x.register(JC());
x.register(e8());
x.register(t8());
x.register(n8());
x.register(r8());
x.register(ra());
x.register(a8());
x.register(i8());
x.register(o8());
x.register(l8());
x.register(s8());
x.register(u8());
x.register(c8());
x.register(d8());
x.register(p8());
x.register(xg());
x.register(f8());
x.register(ms());
x.register(m8());
x.register(h8());
x.register(g8());
x.register(b8());
x.register(y8());
x.register(v8());
x.register(E8());
x.register(S8());
x.register(w8());
x.register(k8());
x.register(T8());
x.register(A8());
x.register(x8());
x.register(R8());
x.register(I8());
x.register(N8());
x.register(_8());
x.register(C8());
x.register(O8());
x.register(L8());
x.register(D8());
x.register(M8());
x.register(F8());
x.register(P8());
x.register(B8());
x.register(U8());
x.register(z8());
x.register($8());
x.register(q8());
x.register(G8());
x.register(H8());
x.register(j8());
x.register(V8());
x.register(W8());
x.register(Y8());
x.register(K8());
x.register(X8());
x.register(Z8());
x.register(Q8());
x.register(J8());
x.register(e9());
x.register(t9());
x.register(n9());
x.register(r9());
x.register(a9());
x.register(i9());
x.register(o9());
x.register(Rg());
x.register(l9());
x.register(s9());
x.register(u9());
x.register(c9());
x.register(d9());
x.register(p9());
x.register(f9());
x.register(m9());
x.register(h9());
x.register(g9());
x.register(b9());
x.register(y9());
x.register(v9());
x.register(E9());
x.register(S9());
x.register(w9());
x.register(k9());
x.register(Ig());
x.register(T9());
x.register(gs());
x.register(A9());
x.register(x9());
x.register(R9());
x.register(I9());
x.register(N9());
x.register(_9());
x.register(C9());
x.register(_g());
x.register(O9());
x.register(L9());
x.register(D9());
x.register(BT());
x.register(M9());
x.register(F9());
x.register(P9());
x.register(B9());
x.register(U9());
x.register(z9());
x.register($9());
x.register(q9());
x.register(G9());
x.register(H9());
x.register(j9());
x.register(V9());
x.register(W9());
x.register(Y9());
x.register(K9());
x.register(X9());
x.register(PT());
x.register(Z9());
x.register(Q9());
x.register(J9());
x.register(Ct());
x.register(eO());
x.register(tO());
x.register(nO());
x.register(rO());
x.register(aO());
x.register(iO());
x.register(oO());
x.register(lO());
x.register(sO());
x.register(uO());
x.register(cO());
x.register(dO());
x.register(pO());
x.register(fO());
x.register(mO());
x.register(hO());
x.register(gO());
x.register(bO());
x.register(yO());
x.register(vO());
x.register(EO());
x.register(SO());
x.register(wO());
x.register(kO());
x.register(TO());
x.register(AO());
x.register(xO());
x.register(RO());
x.register(IO());
x.register(NO());
x.register(_O());
x.register(CO());
x.register(bs());
x.register(OO());
x.register(LO());
x.register(DO());
x.register(MO());
x.register(FO());
x.register(PO());
x.register(BO());
x.register(UO());
x.register(zO());
x.register($O());
x.register(qO());
x.register(GO());
x.register(HO());
x.register(jO());
x.register(VO());
x.register(WO());
x.register(YO());
x.register(KO());
x.register(XO());
x.register(ZO());
x.register(QO());
x.register(JO());
x.register(eL());
x.register(tL());
x.register(nL());
x.register(rL());
x.register(aL());
x.register(iL());
x.register(oL());
x.register(lL());
x.register(hs());
x.register(sL());
x.register(uL());
x.register(cL());
x.register(dL());
x.register(Cg());
x.register(pL());
x.register(fL());
x.register(mL());
x.register(hL());
x.register(gL());
x.register(bL());
x.register(yL());
x.register(vL());
x.register(EL());
x.register(SL());
x.register(wL());
x.register(kL());
x.register(Ag());
x.register(TL());
x.register(AL());
x.register(xL());
x.register(RL());
x.register(IL());
x.register(NL());
x.register(Og());
x.register(_L());
x.register(CL());
x.register(OL());
x.register(LL());
x.register(DL());
x.register(ML());
x.register(FL());
x.register(PL());
x.register(UT());
x.register(BL());
x.register(Ng());
x.register(UL());
x.register(zL());
x.register($L());
x.register(qL());
x.register(GL());
x.register(HL());
x.register(zT());
x.register(jL());
x.register(VL());
x.register(WL());
x.register(YL());
x.register(KL());
x.register(XL());
x.register(ZL());
x.register(QL());
x.register(JL());
x.register(eD());
x.register(tD());
x.register(nD());
x.register(rD());
x.register(aD());
x.register(iD());
x.register($T());
x.register(oD());
x.register(lD());
const uD = hh(sD);
var qT = iR(uD, AC);
qT.supportedLanguages = oR;
const cD = qT,
    dD = {
        'code[class*="language-"]': {
            textAlign: "left",
            whiteSpace: "pre",
            wordSpacing: "normal",
            wordBreak: "normal",
            wordWrap: "normal",
            color: "#eee",
            background: "#2f2f2f",
            fontFamily: "Roboto Mono, monospace",
            fontSize: "1em",
            lineHeight: "1.5em",
            MozTabSize: "4",
            OTabSize: "4",
            tabSize: "4",
            WebkitHyphens: "none",
            MozHyphens: "none",
            msHyphens: "none",
            hyphens: "none",
        },
        'pre[class*="language-"]': {
            textAlign: "left",
            whiteSpace: "pre",
            wordSpacing: "normal",
            wordBreak: "normal",
            wordWrap: "normal",
            color: "#eee",
            background: "#2f2f2f",
            fontFamily: "Roboto Mono, monospace",
            fontSize: "1em",
            lineHeight: "1.5em",
            MozTabSize: "4",
            OTabSize: "4",
            tabSize: "4",
            WebkitHyphens: "none",
            MozHyphens: "none",
            msHyphens: "none",
            hyphens: "none",
            overflow: "auto",
            position: "relative",
            margin: "0.5em 0",
            padding: "1.25em 1em",
        },
        'code[class*="language-"]::-moz-selection': { background: "#363636" },
        'pre[class*="language-"]::-moz-selection': { background: "#363636" },
        'code[class*="language-"] ::-moz-selection': { background: "#363636" },
        'pre[class*="language-"] ::-moz-selection': { background: "#363636" },
        'code[class*="language-"]::selection': { background: "#363636" },
        'pre[class*="language-"]::selection': { background: "#363636" },
        'code[class*="language-"] ::selection': { background: "#363636" },
        'pre[class*="language-"] ::selection': { background: "#363636" },
        ':not(pre) > code[class*="language-"]': { whiteSpace: "normal", borderRadius: "0.2em", padding: "0.1em" },
        ".language-css > code": { color: "#fd9170" },
        ".language-sass > code": { color: "#fd9170" },
        ".language-scss > code": { color: "#fd9170" },
        '[class*="language-"] .namespace': { Opacity: "0.7" },
        atrule: { color: "#c792ea" },
        "attr-name": { color: "#ffcb6b" },
        "attr-value": { color: "#a5e844" },
        attribute: { color: "#a5e844" },
        boolean: { color: "#c792ea" },
        builtin: { color: "#ffcb6b" },
        cdata: { color: "#80cbc4" },
        char: { color: "#80cbc4" },
        class: { color: "#ffcb6b" },
        "class-name": { color: "#f2ff00" },
        comment: { color: "#616161" },
        constant: { color: "#c792ea" },
        deleted: { color: "#ff6666" },
        doctype: { color: "#616161" },
        entity: { color: "#ff6666" },
        function: { color: "#c792ea" },
        hexcode: { color: "#f2ff00" },
        id: { color: "#c792ea", fontWeight: "bold" },
        important: { color: "#c792ea", fontWeight: "bold" },
        inserted: { color: "#80cbc4" },
        keyword: { color: "#c792ea" },
        number: { color: "#fd9170" },
        operator: { color: "#89ddff" },
        prolog: { color: "#616161" },
        property: { color: "#80cbc4" },
        "pseudo-class": { color: "#a5e844" },
        "pseudo-element": { color: "#a5e844" },
        punctuation: { color: "#89ddff" },
        regex: { color: "#f2ff00" },
        selector: { color: "#ff6666" },
        string: { color: "#a5e844" },
        symbol: { color: "#c792ea" },
        tag: { color: "#ff6666" },
        unit: { color: "#fd9170" },
        url: { color: "#ff6666" },
        variable: { color: "#ff6666" },
    };
function X4(e) {
    const t = [],
        n = String(e || "");
    let r = n.indexOf(","),
        a = 0,
        i = !1;
    for (; !i; ) {
        r === -1 && ((r = n.length), (i = !0));
        const o = n.slice(a, r).trim();
        (o || !i) && t.push(o), (a = r + 1), (r = n.indexOf(",", a));
    }
    return t;
}
function pD(e, t) {
    const n = t || {};
    return (e[e.length - 1] === "" ? [...e, ""] : e).join((n.padRight ? " " : "") + "," + (n.padLeft === !1 ? "" : " ")).trim();
}
const fD = /^[$_\p{ID_Start}][$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,
    mD = /^[$_\p{ID_Start}][-$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,
    hD = {};
function Z4(e, t) {
    return ((t || hD).jsx ? mD : fD).test(e);
}
const gD = /[ \t\n\f\r]/g;
function bD(e) {
    return typeof e == "object" ? (e.type === "text" ? Q4(e.value) : !1) : Q4(e);
}
function Q4(e) {
    return e.replace(gD, "") === "";
}
class ho {
    constructor(t, n, r) {
        (this.property = t), (this.normal = n), r && (this.space = r);
    }
}
ho.prototype.property = {};
ho.prototype.normal = {};
ho.prototype.space = null;
function GT(e, t) {
    const n = {},
        r = {};
    let a = -1;
    for (; ++a < e.length; ) Object.assign(n, e[a].property), Object.assign(r, e[a].normal);
    return new ho(n, r, t);
}
function to(e) {
    return e.toLowerCase();
}
class ln {
    constructor(t, n) {
        (this.property = t), (this.attribute = n);
    }
}
ln.prototype.space = null;
ln.prototype.boolean = !1;
ln.prototype.booleanish = !1;
ln.prototype.overloadedBoolean = !1;
ln.prototype.number = !1;
ln.prototype.commaSeparated = !1;
ln.prototype.spaceSeparated = !1;
ln.prototype.commaOrSpaceSeparated = !1;
ln.prototype.mustUseProperty = !1;
ln.prototype.defined = !1;
let yD = 0;
const fe = aa(),
    We = aa(),
    HT = aa(),
    V = aa(),
    Ne = aa(),
    Ma = aa(),
    Ft = aa();
function aa() {
    return 2 ** ++yD;
}
const Hm = Object.freeze(
        Object.defineProperty(
            {
                __proto__: null,
                boolean: fe,
                booleanish: We,
                commaOrSpaceSeparated: Ft,
                commaSeparated: Ma,
                number: V,
                overloadedBoolean: HT,
                spaceSeparated: Ne,
            },
            Symbol.toStringTag,
            { value: "Module" },
        ),
    ),
    pf = Object.keys(Hm);
class Lg extends ln {
    constructor(t, n, r, a) {
        let i = -1;
        if ((super(t, n), J4(this, "space", a), typeof r == "number"))
            for (; ++i < pf.length; ) {
                const o = pf[i];
                J4(this, pf[i], (r & Hm[o]) === Hm[o]);
            }
    }
}
Lg.prototype.defined = !0;
function J4(e, t, n) {
    n && (e[t] = n);
}
const vD = {}.hasOwnProperty;
function Za(e) {
    const t = {},
        n = {};
    let r;
    for (r in e.properties)
        if (vD.call(e.properties, r)) {
            const a = e.properties[r],
                i = new Lg(r, e.transform(e.attributes || {}, r), a, e.space);
            e.mustUseProperty && e.mustUseProperty.includes(r) && (i.mustUseProperty = !0), (t[r] = i), (n[to(r)] = r), (n[to(i.attribute)] = r);
        }
    return new ho(t, n, e.space);
}
const jT = Za({
        space: "xlink",
        transform(e, t) {
            return "xlink:" + t.slice(5).toLowerCase();
        },
        properties: { xLinkActuate: null, xLinkArcRole: null, xLinkHref: null, xLinkRole: null, xLinkShow: null, xLinkTitle: null, xLinkType: null },
    }),
    VT = Za({
        space: "xml",
        transform(e, t) {
            return "xml:" + t.slice(3).toLowerCase();
        },
        properties: { xmlLang: null, xmlBase: null, xmlSpace: null },
    });
function WT(e, t) {
    return t in e ? e[t] : t;
}
function YT(e, t) {
    return WT(e, t.toLowerCase());
}
const KT = Za({ space: "xmlns", attributes: { xmlnsxlink: "xmlns:xlink" }, transform: YT, properties: { xmlns: null, xmlnsXLink: null } }),
    XT = Za({
        transform(e, t) {
            return t === "role" ? t : "aria-" + t.slice(4).toLowerCase();
        },
        properties: {
            ariaActiveDescendant: null,
            ariaAtomic: We,
            ariaAutoComplete: null,
            ariaBusy: We,
            ariaChecked: We,
            ariaColCount: V,
            ariaColIndex: V,
            ariaColSpan: V,
            ariaControls: Ne,
            ariaCurrent: null,
            ariaDescribedBy: Ne,
            ariaDetails: null,
            ariaDisabled: We,
            ariaDropEffect: Ne,
            ariaErrorMessage: null,
            ariaExpanded: We,
            ariaFlowTo: Ne,
            ariaGrabbed: We,
            ariaHasPopup: null,
            ariaHidden: We,
            ariaInvalid: null,
            ariaKeyShortcuts: null,
            ariaLabel: null,
            ariaLabelledBy: Ne,
            ariaLevel: V,
            ariaLive: null,
            ariaModal: We,
            ariaMultiLine: We,
            ariaMultiSelectable: We,
            ariaOrientation: null,
            ariaOwns: Ne,
            ariaPlaceholder: null,
            ariaPosInSet: V,
            ariaPressed: We,
            ariaReadOnly: We,
            ariaRelevant: null,
            ariaRequired: We,
            ariaRoleDescription: Ne,
            ariaRowCount: V,
            ariaRowIndex: V,
            ariaRowSpan: V,
            ariaSelected: We,
            ariaSetSize: V,
            ariaSort: null,
            ariaValueMax: V,
            ariaValueMin: V,
            ariaValueNow: V,
            ariaValueText: null,
            role: null,
        },
    }),
    ED = Za({
        space: "html",
        attributes: { acceptcharset: "accept-charset", classname: "class", htmlfor: "for", httpequiv: "http-equiv" },
        transform: YT,
        mustUseProperty: ["checked", "multiple", "muted", "selected"],
        properties: {
            abbr: null,
            accept: Ma,
            acceptCharset: Ne,
            accessKey: Ne,
            action: null,
            allow: null,
            allowFullScreen: fe,
            allowPaymentRequest: fe,
            allowUserMedia: fe,
            alt: null,
            as: null,
            async: fe,
            autoCapitalize: null,
            autoComplete: Ne,
            autoFocus: fe,
            autoPlay: fe,
            blocking: Ne,
            capture: null,
            charSet: null,
            checked: fe,
            cite: null,
            className: Ne,
            cols: V,
            colSpan: null,
            content: null,
            contentEditable: We,
            controls: fe,
            controlsList: Ne,
            coords: V | Ma,
            crossOrigin: null,
            data: null,
            dateTime: null,
            decoding: null,
            default: fe,
            defer: fe,
            dir: null,
            dirName: null,
            disabled: fe,
            download: HT,
            draggable: We,
            encType: null,
            enterKeyHint: null,
            fetchPriority: null,
            form: null,
            formAction: null,
            formEncType: null,
            formMethod: null,
            formNoValidate: fe,
            formTarget: null,
            headers: Ne,
            height: V,
            hidden: fe,
            high: V,
            href: null,
            hrefLang: null,
            htmlFor: Ne,
            httpEquiv: Ne,
            id: null,
            imageSizes: null,
            imageSrcSet: null,
            inert: fe,
            inputMode: null,
            integrity: null,
            is: null,
            isMap: fe,
            itemId: null,
            itemProp: Ne,
            itemRef: Ne,
            itemScope: fe,
            itemType: Ne,
            kind: null,
            label: null,
            lang: null,
            language: null,
            list: null,
            loading: null,
            loop: fe,
            low: V,
            manifest: null,
            max: null,
            maxLength: V,
            media: null,
            method: null,
            min: null,
            minLength: V,
            multiple: fe,
            muted: fe,
            name: null,
            nonce: null,
            noModule: fe,
            noValidate: fe,
            onAbort: null,
            onAfterPrint: null,
            onAuxClick: null,
            onBeforeMatch: null,
            onBeforePrint: null,
            onBeforeToggle: null,
            onBeforeUnload: null,
            onBlur: null,
            onCancel: null,
            onCanPlay: null,
            onCanPlayThrough: null,
            onChange: null,
            onClick: null,
            onClose: null,
            onContextLost: null,
            onContextMenu: null,
            onContextRestored: null,
            onCopy: null,
            onCueChange: null,
            onCut: null,
            onDblClick: null,
            onDrag: null,
            onDragEnd: null,
            onDragEnter: null,
            onDragExit: null,
            onDragLeave: null,
            onDragOver: null,
            onDragStart: null,
            onDrop: null,
            onDurationChange: null,
            onEmptied: null,
            onEnded: null,
            onError: null,
            onFocus: null,
            onFormData: null,
            onHashChange: null,
            onInput: null,
            onInvalid: null,
            onKeyDown: null,
            onKeyPress: null,
            onKeyUp: null,
            onLanguageChange: null,
            onLoad: null,
            onLoadedData: null,
            onLoadedMetadata: null,
            onLoadEnd: null,
            onLoadStart: null,
            onMessage: null,
            onMessageError: null,
            onMouseDown: null,
            onMouseEnter: null,
            onMouseLeave: null,
            onMouseMove: null,
            onMouseOut: null,
            onMouseOver: null,
            onMouseUp: null,
            onOffline: null,
            onOnline: null,
            onPageHide: null,
            onPageShow: null,
            onPaste: null,
            onPause: null,
            onPlay: null,
            onPlaying: null,
            onPopState: null,
            onProgress: null,
            onRateChange: null,
            onRejectionHandled: null,
            onReset: null,
            onResize: null,
            onScroll: null,
            onScrollEnd: null,
            onSecurityPolicyViolation: null,
            onSeeked: null,
            onSeeking: null,
            onSelect: null,
            onSlotChange: null,
            onStalled: null,
            onStorage: null,
            onSubmit: null,
            onSuspend: null,
            onTimeUpdate: null,
            onToggle: null,
            onUnhandledRejection: null,
            onUnload: null,
            onVolumeChange: null,
            onWaiting: null,
            onWheel: null,
            open: fe,
            optimum: V,
            pattern: null,
            ping: Ne,
            placeholder: null,
            playsInline: fe,
            popover: null,
            popoverTarget: null,
            popoverTargetAction: null,
            poster: null,
            preload: null,
            readOnly: fe,
            referrerPolicy: null,
            rel: Ne,
            required: fe,
            reversed: fe,
            rows: V,
            rowSpan: V,
            sandbox: Ne,
            scope: null,
            scoped: fe,
            seamless: fe,
            selected: fe,
            shadowRootClonable: fe,
            shadowRootDelegatesFocus: fe,
            shadowRootMode: null,
            shape: null,
            size: V,
            sizes: null,
            slot: null,
            span: V,
            spellCheck: We,
            src: null,
            srcDoc: null,
            srcLang: null,
            srcSet: null,
            start: V,
            step: null,
            style: null,
            tabIndex: V,
            target: null,
            title: null,
            translate: null,
            type: null,
            typeMustMatch: fe,
            useMap: null,
            value: We,
            width: V,
            wrap: null,
            writingSuggestions: null,
            align: null,
            aLink: null,
            archive: Ne,
            axis: null,
            background: null,
            bgColor: null,
            border: V,
            borderColor: null,
            bottomMargin: V,
            cellPadding: null,
            cellSpacing: null,
            char: null,
            charOff: null,
            classId: null,
            clear: null,
            code: null,
            codeBase: null,
            codeType: null,
            color: null,
            compact: fe,
            declare: fe,
            event: null,
            face: null,
            frame: null,
            frameBorder: null,
            hSpace: V,
            leftMargin: V,
            link: null,
            longDesc: null,
            lowSrc: null,
            marginHeight: V,
            marginWidth: V,
            noResize: fe,
            noHref: fe,
            noShade: fe,
            noWrap: fe,
            object: null,
            profile: null,
            prompt: null,
            rev: null,
            rightMargin: V,
            rules: null,
            scheme: null,
            scrolling: We,
            standby: null,
            summary: null,
            text: null,
            topMargin: V,
            valueType: null,
            version: null,
            vAlign: null,
            vLink: null,
            vSpace: V,
            allowTransparency: null,
            autoCorrect: null,
            autoSave: null,
            disablePictureInPicture: fe,
            disableRemotePlayback: fe,
            prefix: null,
            property: null,
            results: V,
            security: null,
            unselectable: null,
        },
    }),
    SD = Za({
        space: "svg",
        attributes: {
            accentHeight: "accent-height",
            alignmentBaseline: "alignment-baseline",
            arabicForm: "arabic-form",
            baselineShift: "baseline-shift",
            capHeight: "cap-height",
            className: "class",
            clipPath: "clip-path",
            clipRule: "clip-rule",
            colorInterpolation: "color-interpolation",
            colorInterpolationFilters: "color-interpolation-filters",
            colorProfile: "color-profile",
            colorRendering: "color-rendering",
            crossOrigin: "crossorigin",
            dataType: "datatype",
            dominantBaseline: "dominant-baseline",
            enableBackground: "enable-background",
            fillOpacity: "fill-opacity",
            fillRule: "fill-rule",
            floodColor: "flood-color",
            floodOpacity: "flood-opacity",
            fontFamily: "font-family",
            fontSize: "font-size",
            fontSizeAdjust: "font-size-adjust",
            fontStretch: "font-stretch",
            fontStyle: "font-style",
            fontVariant: "font-variant",
            fontWeight: "font-weight",
            glyphName: "glyph-name",
            glyphOrientationHorizontal: "glyph-orientation-horizontal",
            glyphOrientationVertical: "glyph-orientation-vertical",
            hrefLang: "hreflang",
            horizAdvX: "horiz-adv-x",
            horizOriginX: "horiz-origin-x",
            horizOriginY: "horiz-origin-y",
            imageRendering: "image-rendering",
            letterSpacing: "letter-spacing",
            lightingColor: "lighting-color",
            markerEnd: "marker-end",
            markerMid: "marker-mid",
            markerStart: "marker-start",
            navDown: "nav-down",
            navDownLeft: "nav-down-left",
            navDownRight: "nav-down-right",
            navLeft: "nav-left",
            navNext: "nav-next",
            navPrev: "nav-prev",
            navRight: "nav-right",
            navUp: "nav-up",
            navUpLeft: "nav-up-left",
            navUpRight: "nav-up-right",
            onAbort: "onabort",
            onActivate: "onactivate",
            onAfterPrint: "onafterprint",
            onBeforePrint: "onbeforeprint",
            onBegin: "onbegin",
            onCancel: "oncancel",
            onCanPlay: "oncanplay",
            onCanPlayThrough: "oncanplaythrough",
            onChange: "onchange",
            onClick: "onclick",
            onClose: "onclose",
            onCopy: "oncopy",
            onCueChange: "oncuechange",
            onCut: "oncut",
            onDblClick: "ondblclick",
            onDrag: "ondrag",
            onDragEnd: "ondragend",
            onDragEnter: "ondragenter",
            onDragExit: "ondragexit",
            onDragLeave: "ondragleave",
            onDragOver: "ondragover",
            onDragStart: "ondragstart",
            onDrop: "ondrop",
            onDurationChange: "ondurationchange",
            onEmptied: "onemptied",
            onEnd: "onend",
            onEnded: "onended",
            onError: "onerror",
            onFocus: "onfocus",
            onFocusIn: "onfocusin",
            onFocusOut: "onfocusout",
            onHashChange: "onhashchange",
            onInput: "oninput",
            onInvalid: "oninvalid",
            onKeyDown: "onkeydown",
            onKeyPress: "onkeypress",
            onKeyUp: "onkeyup",
            onLoad: "onload",
            onLoadedData: "onloadeddata",
            onLoadedMetadata: "onloadedmetadata",
            onLoadStart: "onloadstart",
            onMessage: "onmessage",
            onMouseDown: "onmousedown",
            onMouseEnter: "onmouseenter",
            onMouseLeave: "onmouseleave",
            onMouseMove: "onmousemove",
            onMouseOut: "onmouseout",
            onMouseOver: "onmouseover",
            onMouseUp: "onmouseup",
            onMouseWheel: "onmousewheel",
            onOffline: "onoffline",
            onOnline: "ononline",
            onPageHide: "onpagehide",
            onPageShow: "onpageshow",
            onPaste: "onpaste",
            onPause: "onpause",
            onPlay: "onplay",
            onPlaying: "onplaying",
            onPopState: "onpopstate",
            onProgress: "onprogress",
            onRateChange: "onratechange",
            onRepeat: "onrepeat",
            onReset: "onreset",
            onResize: "onresize",
            onScroll: "onscroll",
            onSeeked: "onseeked",
            onSeeking: "onseeking",
            onSelect: "onselect",
            onShow: "onshow",
            onStalled: "onstalled",
            onStorage: "onstorage",
            onSubmit: "onsubmit",
            onSuspend: "onsuspend",
            onTimeUpdate: "ontimeupdate",
            onToggle: "ontoggle",
            onUnload: "onunload",
            onVolumeChange: "onvolumechange",
            onWaiting: "onwaiting",
            onZoom: "onzoom",
            overlinePosition: "overline-position",
            overlineThickness: "overline-thickness",
            paintOrder: "paint-order",
            panose1: "panose-1",
            pointerEvents: "pointer-events",
            referrerPolicy: "referrerpolicy",
            renderingIntent: "rendering-intent",
            shapeRendering: "shape-rendering",
            stopColor: "stop-color",
            stopOpacity: "stop-opacity",
            strikethroughPosition: "strikethrough-position",
            strikethroughThickness: "strikethrough-thickness",
            strokeDashArray: "stroke-dasharray",
            strokeDashOffset: "stroke-dashoffset",
            strokeLineCap: "stroke-linecap",
            strokeLineJoin: "stroke-linejoin",
            strokeMiterLimit: "stroke-miterlimit",
            strokeOpacity: "stroke-opacity",
            strokeWidth: "stroke-width",
            tabIndex: "tabindex",
            textAnchor: "text-anchor",
            textDecoration: "text-decoration",
            textRendering: "text-rendering",
            transformOrigin: "transform-origin",
            typeOf: "typeof",
            underlinePosition: "underline-position",
            underlineThickness: "underline-thickness",
            unicodeBidi: "unicode-bidi",
            unicodeRange: "unicode-range",
            unitsPerEm: "units-per-em",
            vAlphabetic: "v-alphabetic",
            vHanging: "v-hanging",
            vIdeographic: "v-ideographic",
            vMathematical: "v-mathematical",
            vectorEffect: "vector-effect",
            vertAdvY: "vert-adv-y",
            vertOriginX: "vert-origin-x",
            vertOriginY: "vert-origin-y",
            wordSpacing: "word-spacing",
            writingMode: "writing-mode",
            xHeight: "x-height",
            playbackOrder: "playbackorder",
            timelineBegin: "timelinebegin",
        },
        transform: WT,
        properties: {
            about: Ft,
            accentHeight: V,
            accumulate: null,
            additive: null,
            alignmentBaseline: null,
            alphabetic: V,
            amplitude: V,
            arabicForm: null,
            ascent: V,
            attributeName: null,
            attributeType: null,
            azimuth: V,
            bandwidth: null,
            baselineShift: null,
            baseFrequency: null,
            baseProfile: null,
            bbox: null,
            begin: null,
            bias: V,
            by: null,
            calcMode: null,
            capHeight: V,
            className: Ne,
            clip: null,
            clipPath: null,
            clipPathUnits: null,
            clipRule: null,
            color: null,
            colorInterpolation: null,
            colorInterpolationFilters: null,
            colorProfile: null,
            colorRendering: null,
            content: null,
            contentScriptType: null,
            contentStyleType: null,
            crossOrigin: null,
            cursor: null,
            cx: null,
            cy: null,
            d: null,
            dataType: null,
            defaultAction: null,
            descent: V,
            diffuseConstant: V,
            direction: null,
            display: null,
            dur: null,
            divisor: V,
            dominantBaseline: null,
            download: fe,
            dx: null,
            dy: null,
            edgeMode: null,
            editable: null,
            elevation: V,
            enableBackground: null,
            end: null,
            event: null,
            exponent: V,
            externalResourcesRequired: null,
            fill: null,
            fillOpacity: V,
            fillRule: null,
            filter: null,
            filterRes: null,
            filterUnits: null,
            floodColor: null,
            floodOpacity: null,
            focusable: null,
            focusHighlight: null,
            fontFamily: null,
            fontSize: null,
            fontSizeAdjust: null,
            fontStretch: null,
            fontStyle: null,
            fontVariant: null,
            fontWeight: null,
            format: null,
            fr: null,
            from: null,
            fx: null,
            fy: null,
            g1: Ma,
            g2: Ma,
            glyphName: Ma,
            glyphOrientationHorizontal: null,
            glyphOrientationVertical: null,
            glyphRef: null,
            gradientTransform: null,
            gradientUnits: null,
            handler: null,
            hanging: V,
            hatchContentUnits: null,
            hatchUnits: null,
            height: null,
            href: null,
            hrefLang: null,
            horizAdvX: V,
            horizOriginX: V,
            horizOriginY: V,
            id: null,
            ideographic: V,
            imageRendering: null,
            initialVisibility: null,
            in: null,
            in2: null,
            intercept: V,
            k: V,
            k1: V,
            k2: V,
            k3: V,
            k4: V,
            kernelMatrix: Ft,
            kernelUnitLength: null,
            keyPoints: null,
            keySplines: null,
            keyTimes: null,
            kerning: null,
            lang: null,
            lengthAdjust: null,
            letterSpacing: null,
            lightingColor: null,
            limitingConeAngle: V,
            local: null,
            markerEnd: null,
            markerMid: null,
            markerStart: null,
            markerHeight: null,
            markerUnits: null,
            markerWidth: null,
            mask: null,
            maskContentUnits: null,
            maskUnits: null,
            mathematical: null,
            max: null,
            media: null,
            mediaCharacterEncoding: null,
            mediaContentEncodings: null,
            mediaSize: V,
            mediaTime: null,
            method: null,
            min: null,
            mode: null,
            name: null,
            navDown: null,
            navDownLeft: null,
            navDownRight: null,
            navLeft: null,
            navNext: null,
            navPrev: null,
            navRight: null,
            navUp: null,
            navUpLeft: null,
            navUpRight: null,
            numOctaves: null,
            observer: null,
            offset: null,
            onAbort: null,
            onActivate: null,
            onAfterPrint: null,
            onBeforePrint: null,
            onBegin: null,
            onCancel: null,
            onCanPlay: null,
            onCanPlayThrough: null,
            onChange: null,
            onClick: null,
            onClose: null,
            onCopy: null,
            onCueChange: null,
            onCut: null,
            onDblClick: null,
            onDrag: null,
            onDragEnd: null,
            onDragEnter: null,
            onDragExit: null,
            onDragLeave: null,
            onDragOver: null,
            onDragStart: null,
            onDrop: null,
            onDurationChange: null,
            onEmptied: null,
            onEnd: null,
            onEnded: null,
            onError: null,
            onFocus: null,
            onFocusIn: null,
            onFocusOut: null,
            onHashChange: null,
            onInput: null,
            onInvalid: null,
            onKeyDown: null,
            onKeyPress: null,
            onKeyUp: null,
            onLoad: null,
            onLoadedData: null,
            onLoadedMetadata: null,
            onLoadStart: null,
            onMessage: null,
            onMouseDown: null,
            onMouseEnter: null,
            onMouseLeave: null,
            onMouseMove: null,
            onMouseOut: null,
            onMouseOver: null,
            onMouseUp: null,
            onMouseWheel: null,
            onOffline: null,
            onOnline: null,
            onPageHide: null,
            onPageShow: null,
            onPaste: null,
            onPause: null,
            onPlay: null,
            onPlaying: null,
            onPopState: null,
            onProgress: null,
            onRateChange: null,
            onRepeat: null,
            onReset: null,
            onResize: null,
            onScroll: null,
            onSeeked: null,
            onSeeking: null,
            onSelect: null,
            onShow: null,
            onStalled: null,
            onStorage: null,
            onSubmit: null,
            onSuspend: null,
            onTimeUpdate: null,
            onToggle: null,
            onUnload: null,
            onVolumeChange: null,
            onWaiting: null,
            onZoom: null,
            opacity: null,
            operator: null,
            order: null,
            orient: null,
            orientation: null,
            origin: null,
            overflow: null,
            overlay: null,
            overlinePosition: V,
            overlineThickness: V,
            paintOrder: null,
            panose1: null,
            path: null,
            pathLength: V,
            patternContentUnits: null,
            patternTransform: null,
            patternUnits: null,
            phase: null,
            ping: Ne,
            pitch: null,
            playbackOrder: null,
            pointerEvents: null,
            points: null,
            pointsAtX: V,
            pointsAtY: V,
            pointsAtZ: V,
            preserveAlpha: null,
            preserveAspectRatio: null,
            primitiveUnits: null,
            propagate: null,
            property: Ft,
            r: null,
            radius: null,
            referrerPolicy: null,
            refX: null,
            refY: null,
            rel: Ft,
            rev: Ft,
            renderingIntent: null,
            repeatCount: null,
            repeatDur: null,
            requiredExtensions: Ft,
            requiredFeatures: Ft,
            requiredFonts: Ft,
            requiredFormats: Ft,
            resource: null,
            restart: null,
            result: null,
            rotate: null,
            rx: null,
            ry: null,
            scale: null,
            seed: null,
            shapeRendering: null,
            side: null,
            slope: null,
            snapshotTime: null,
            specularConstant: V,
            specularExponent: V,
            spreadMethod: null,
            spacing: null,
            startOffset: null,
            stdDeviation: null,
            stemh: null,
            stemv: null,
            stitchTiles: null,
            stopColor: null,
            stopOpacity: null,
            strikethroughPosition: V,
            strikethroughThickness: V,
            string: null,
            stroke: null,
            strokeDashArray: Ft,
            strokeDashOffset: null,
            strokeLineCap: null,
            strokeLineJoin: null,
            strokeMiterLimit: V,
            strokeOpacity: V,
            strokeWidth: null,
            style: null,
            surfaceScale: V,
            syncBehavior: null,
            syncBehaviorDefault: null,
            syncMaster: null,
            syncTolerance: null,
            syncToleranceDefault: null,
            systemLanguage: Ft,
            tabIndex: V,
            tableValues: null,
            target: null,
            targetX: V,
            targetY: V,
            textAnchor: null,
            textDecoration: null,
            textRendering: null,
            textLength: null,
            timelineBegin: null,
            title: null,
            transformBehavior: null,
            type: null,
            typeOf: Ft,
            to: null,
            transform: null,
            transformOrigin: null,
            u1: null,
            u2: null,
            underlinePosition: V,
            underlineThickness: V,
            unicode: null,
            unicodeBidi: null,
            unicodeRange: null,
            unitsPerEm: V,
            values: null,
            vAlphabetic: V,
            vMathematical: V,
            vectorEffect: null,
            vHanging: V,
            vIdeographic: V,
            version: null,
            vertAdvY: V,
            vertOriginX: V,
            vertOriginY: V,
            viewBox: null,
            viewTarget: null,
            visibility: null,
            width: null,
            widths: null,
            wordSpacing: null,
            writingMode: null,
            x: null,
            x1: null,
            x2: null,
            xChannelSelector: null,
            xHeight: V,
            y: null,
            y1: null,
            y2: null,
            yChannelSelector: null,
            z: null,
            zoomAndPan: null,
        },
    }),
    wD = /^data[-\w.:]+$/i,
    e2 = /-[a-z]/g,
    kD = /[A-Z]/g;
function ZT(e, t) {
    const n = to(t);
    let r = t,
        a = ln;
    if (n in e.normal) return e.property[e.normal[n]];
    if (n.length > 4 && n.slice(0, 4) === "data" && wD.test(t)) {
        if (t.charAt(4) === "-") {
            const i = t.slice(5).replace(e2, AD);
            r = "data" + i.charAt(0).toUpperCase() + i.slice(1);
        } else {
            const i = t.slice(4);
            if (!e2.test(i)) {
                let o = i.replace(kD, TD);
                o.charAt(0) !== "-" && (o = "-" + o), (t = "data" + o);
            }
        }
        a = Lg;
    }
    return new a(r, t);
}
function TD(e) {
    return "-" + e.toLowerCase();
}
function AD(e) {
    return e.charAt(1).toUpperCase();
}
const xD = {
        classId: "classID",
        dataType: "datatype",
        itemId: "itemID",
        strokeDashArray: "strokeDasharray",
        strokeDashOffset: "strokeDashoffset",
        strokeLineCap: "strokeLinecap",
        strokeLineJoin: "strokeLinejoin",
        strokeMiterLimit: "strokeMiterlimit",
        typeOf: "typeof",
        xLinkActuate: "xlinkActuate",
        xLinkArcRole: "xlinkArcrole",
        xLinkHref: "xlinkHref",
        xLinkRole: "xlinkRole",
        xLinkShow: "xlinkShow",
        xLinkTitle: "xlinkTitle",
        xLinkType: "xlinkType",
        xmlnsXLink: "xmlnsXlink",
    },
    QT = GT([VT, jT, KT, XT, ED], "html"),
    ys = GT([VT, jT, KT, XT, SD], "svg");
function t2(e) {
    const t = String(e || "").trim();
    return t ? t.split(/[ \t\n\r\f]+/g) : [];
}
function RD(e) {
    return e.join(" ").trim();
}
var JT = {},
    n2 = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,
    ID = /\n/g,
    ND = /^\s*/,
    _D = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,
    CD = /^:\s*/,
    OD = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,
    LD = /^[;\s]*/,
    DD = /^\s+|\s+$/g,
    MD = `
`,
    r2 = "/",
    a2 = "*",
    qr = "",
    FD = "comment",
    PD = "declaration",
    BD = function (e, t) {
        if (typeof e != "string") throw new TypeError("First argument must be a string");
        if (!e) return [];
        t = t || {};
        var n = 1,
            r = 1;
        function a(b) {
            var E = b.match(ID);
            E && (n += E.length);
            var I = b.lastIndexOf(MD);
            r = ~I ? b.length - I : r + b.length;
        }
        function i() {
            var b = { line: n, column: r };
            return function (E) {
                return (E.position = new o(b)), u(), E;
            };
        }
        function o(b) {
            (this.start = b), (this.end = { line: n, column: r }), (this.source = t.source);
        }
        o.prototype.content = e;
        function l(b) {
            var E = new Error(t.source + ":" + n + ":" + r + ": " + b);
            if (((E.reason = b), (E.filename = t.source), (E.line = n), (E.column = r), (E.source = e), !t.silent)) throw E;
        }
        function s(b) {
            var E = b.exec(e);
            if (E) {
                var I = E[0];
                return a(I), (e = e.slice(I.length)), E;
            }
        }
        function u() {
            s(ND);
        }
        function c(b) {
            var E;
            for (b = b || []; (E = d()); ) E !== !1 && b.push(E);
            return b;
        }
        function d() {
            var b = i();
            if (!(r2 != e.charAt(0) || a2 != e.charAt(1))) {
                for (var E = 2; qr != e.charAt(E) && (a2 != e.charAt(E) || r2 != e.charAt(E + 1)); ) ++E;
                if (((E += 2), qr === e.charAt(E - 1))) return l("End of comment missing");
                var I = e.slice(2, E - 2);
                return (r += 2), a(I), (e = e.slice(E)), (r += 2), b({ type: FD, comment: I });
            }
        }
        function m() {
            var b = i(),
                E = s(_D);
            if (E) {
                if ((d(), !s(CD))) return l("property missing ':'");
                var I = s(OD),
                    y = b({ type: PD, property: i2(E[0].replace(n2, qr)), value: I ? i2(I[0].replace(n2, qr)) : qr });
                return s(LD), y;
            }
        }
        function f() {
            var b = [];
            c(b);
            for (var E; (E = m()); ) E !== !1 && (b.push(E), c(b));
            return b;
        }
        return u(), f();
    };
function i2(e) {
    return e ? e.replace(DD, qr) : qr;
}
var UD =
    (Pa && Pa.__importDefault) ||
    function (e) {
        return e && e.__esModule ? e : { default: e };
    };
Object.defineProperty(JT, "__esModule", { value: !0 });
var o2 = (JT.default = $D),
    zD = UD(BD);
function $D(e, t) {
    var n = null;
    if (!e || typeof e != "string") return n;
    var r = (0, zD.default)(e),
        a = typeof t == "function";
    return (
        r.forEach(function (i) {
            if (i.type === "declaration") {
                var o = i.property,
                    l = i.value;
                a ? t(o, l, i) : l && ((n = n || {}), (n[o] = l));
            }
        }),
        n
    );
}
const qD = o2.default || o2,
    eA = tA("end"),
    Dg = tA("start");
function tA(e) {
    return t;
    function t(n) {
        const r = (n && n.position && n.position[e]) || {};
        if (typeof r.line == "number" && r.line > 0 && typeof r.column == "number" && r.column > 0)
            return { line: r.line, column: r.column, offset: typeof r.offset == "number" && r.offset > -1 ? r.offset : void 0 };
    }
}
function GD(e) {
    const t = Dg(e),
        n = eA(e);
    if (t && n) return { start: t, end: n };
}
function HD(e) {
    return !e || typeof e != "object"
        ? ""
        : "position" in e || "type" in e
          ? l2(e.position)
          : "start" in e || "end" in e
            ? l2(e)
            : "line" in e || "column" in e
              ? jm(e)
              : "";
}
function jm(e) {
    return s2(e && e.line) + ":" + s2(e && e.column);
}
function l2(e) {
    return jm(e && e.start) + "-" + jm(e && e.end);
}
function s2(e) {
    return e && typeof e == "number" ? e : 1;
}
let St = class extends Error {
    constructor(t, n, r) {
        super(), typeof n == "string" && ((r = n), (n = void 0));
        let a = "",
            i = {},
            o = !1;
        if (
            (n &&
                ("line" in n && "column" in n
                    ? (i = { place: n })
                    : "start" in n && "end" in n
                      ? (i = { place: n })
                      : "type" in n
                        ? (i = { ancestors: [n], place: n.position })
                        : (i = { ...n })),
            typeof t == "string" ? (a = t) : !i.cause && t && ((o = !0), (a = t.message), (i.cause = t)),
            !i.ruleId && !i.source && typeof r == "string")
        ) {
            const s = r.indexOf(":");
            s === -1 ? (i.ruleId = r) : ((i.source = r.slice(0, s)), (i.ruleId = r.slice(s + 1)));
        }
        if (!i.place && i.ancestors && i.ancestors) {
            const s = i.ancestors[i.ancestors.length - 1];
            s && (i.place = s.position);
        }
        const l = i.place && "start" in i.place ? i.place.start : i.place;
        (this.ancestors = i.ancestors || void 0),
            (this.cause = i.cause || void 0),
            (this.column = l ? l.column : void 0),
            (this.fatal = void 0),
            this.file,
            (this.message = a),
            (this.line = l ? l.line : void 0),
            (this.name = HD(i.place) || "1:1"),
            (this.place = i.place || void 0),
            (this.reason = this.message),
            (this.ruleId = i.ruleId || void 0),
            (this.source = i.source || void 0),
            (this.stack = o && i.cause && typeof i.cause.stack == "string" ? i.cause.stack : ""),
            this.actual,
            this.expected,
            this.note,
            this.url;
    }
};
St.prototype.file = "";
St.prototype.name = "";
St.prototype.reason = "";
St.prototype.message = "";
St.prototype.stack = "";
St.prototype.column = void 0;
St.prototype.line = void 0;
St.prototype.ancestors = void 0;
St.prototype.cause = void 0;
St.prototype.fatal = void 0;
St.prototype.place = void 0;
St.prototype.ruleId = void 0;
St.prototype.source = void 0;
const Mg = {}.hasOwnProperty,
    jD = new Map(),
    VD = /[A-Z]/g,
    WD = /-([a-z])/g,
    YD = new Set(["table", "tbody", "thead", "tfoot", "tr"]),
    KD = new Set(["td", "th"]),
    nA = "https://github.com/syntax-tree/hast-util-to-jsx-runtime";
function XD(e, t) {
    if (!t || t.Fragment === void 0) throw new TypeError("Expected `Fragment` in options");
    const n = t.filePath || void 0;
    let r;
    if (t.development) {
        if (typeof t.jsxDEV != "function") throw new TypeError("Expected `jsxDEV` in options when `development: true`");
        r = aM(n, t.jsxDEV);
    } else {
        if (typeof t.jsx != "function") throw new TypeError("Expected `jsx` in production options");
        if (typeof t.jsxs != "function") throw new TypeError("Expected `jsxs` in production options");
        r = rM(n, t.jsx, t.jsxs);
    }
    const a = {
            Fragment: t.Fragment,
            ancestors: [],
            components: t.components || {},
            create: r,
            elementAttributeNameCase: t.elementAttributeNameCase || "react",
            evaluater: t.createEvaluater ? t.createEvaluater() : void 0,
            filePath: n,
            ignoreInvalidStyle: t.ignoreInvalidStyle || !1,
            passKeys: t.passKeys !== !1,
            passNode: t.passNode || !1,
            schema: t.space === "svg" ? ys : QT,
            stylePropertyNameCase: t.stylePropertyNameCase || "dom",
            tableCellAlignToStyle: t.tableCellAlignToStyle !== !1,
        },
        i = rA(a, e, void 0);
    return i && typeof i != "string" ? i : a.create(e, a.Fragment, { children: i || void 0 }, void 0);
}
function rA(e, t, n) {
    if (t.type === "element") return ZD(e, t, n);
    if (t.type === "mdxFlowExpression" || t.type === "mdxTextExpression") return QD(e, t);
    if (t.type === "mdxJsxFlowElement" || t.type === "mdxJsxTextElement") return eM(e, t, n);
    if (t.type === "mdxjsEsm") return JD(e, t);
    if (t.type === "root") return tM(e, t, n);
    if (t.type === "text") return nM(e, t);
}
function ZD(e, t, n) {
    const r = e.schema;
    let a = r;
    t.tagName.toLowerCase() === "svg" && r.space === "html" && ((a = ys), (e.schema = a)), e.ancestors.push(t);
    const i = iA(e, t.tagName, !1),
        o = iM(e, t);
    let l = Pg(e, t);
    return (
        YD.has(t.tagName) &&
            (l = l.filter(function (s) {
                return typeof s == "string" ? !bD(s) : !0;
            })),
        aA(e, o, i, t),
        Fg(o, l),
        e.ancestors.pop(),
        (e.schema = r),
        e.create(t, i, o, n)
    );
}
function QD(e, t) {
    if (t.data && t.data.estree && e.evaluater) {
        const r = t.data.estree.body[0];
        return r.type, e.evaluater.evaluateExpression(r.expression);
    }
    no(e, t.position);
}
function JD(e, t) {
    if (t.data && t.data.estree && e.evaluater) return e.evaluater.evaluateProgram(t.data.estree);
    no(e, t.position);
}
function eM(e, t, n) {
    const r = e.schema;
    let a = r;
    t.name === "svg" && r.space === "html" && ((a = ys), (e.schema = a)), e.ancestors.push(t);
    const i = t.name === null ? e.Fragment : iA(e, t.name, !0),
        o = oM(e, t),
        l = Pg(e, t);
    return aA(e, o, i, t), Fg(o, l), e.ancestors.pop(), (e.schema = r), e.create(t, i, o, n);
}
function tM(e, t, n) {
    const r = {};
    return Fg(r, Pg(e, t)), e.create(t, e.Fragment, r, n);
}
function nM(e, t) {
    return t.value;
}
function aA(e, t, n, r) {
    typeof n != "string" && n !== e.Fragment && e.passNode && (t.node = r);
}
function Fg(e, t) {
    if (t.length > 0) {
        const n = t.length > 1 ? t : t[0];
        n && (e.children = n);
    }
}
function rM(e, t, n) {
    return r;
    function r(a, i, o, l) {
        const u = Array.isArray(o.children) ? n : t;
        return l ? u(i, o, l) : u(i, o);
    }
}
function aM(e, t) {
    return n;
    function n(r, a, i, o) {
        const l = Array.isArray(i.children),
            s = Dg(r);
        return t(a, i, o, l, { columnNumber: s ? s.column - 1 : void 0, fileName: e, lineNumber: s ? s.line : void 0 }, void 0);
    }
}
function iM(e, t) {
    const n = {};
    let r, a;
    for (a in t.properties)
        if (a !== "children" && Mg.call(t.properties, a)) {
            const i = lM(e, a, t.properties[a]);
            if (i) {
                const [o, l] = i;
                e.tableCellAlignToStyle && o === "align" && typeof l == "string" && KD.has(t.tagName) ? (r = l) : (n[o] = l);
            }
        }
    if (r) {
        const i = n.style || (n.style = {});
        i[e.stylePropertyNameCase === "css" ? "text-align" : "textAlign"] = r;
    }
    return n;
}
function oM(e, t) {
    const n = {};
    for (const r of t.attributes)
        if (r.type === "mdxJsxExpressionAttribute")
            if (r.data && r.data.estree && e.evaluater) {
                const i = r.data.estree.body[0];
                i.type;
                const o = i.expression;
                o.type;
                const l = o.properties[0];
                l.type, Object.assign(n, e.evaluater.evaluateExpression(l.argument));
            } else no(e, t.position);
        else {
            const a = r.name;
            let i;
            if (r.value && typeof r.value == "object")
                if (r.value.data && r.value.data.estree && e.evaluater) {
                    const l = r.value.data.estree.body[0];
                    l.type, (i = e.evaluater.evaluateExpression(l.expression));
                } else no(e, t.position);
            else i = r.value === null ? !0 : r.value;
            n[a] = i;
        }
    return n;
}
function Pg(e, t) {
    const n = [];
    let r = -1;
    const a = e.passKeys ? new Map() : jD;
    for (; ++r < t.children.length; ) {
        const i = t.children[r];
        let o;
        if (e.passKeys) {
            const s = i.type === "element" ? i.tagName : i.type === "mdxJsxFlowElement" || i.type === "mdxJsxTextElement" ? i.name : void 0;
            if (s) {
                const u = a.get(s) || 0;
                (o = s + "-" + u), a.set(s, u + 1);
            }
        }
        const l = rA(e, i, o);
        l !== void 0 && n.push(l);
    }
    return n;
}
function lM(e, t, n) {
    const r = ZT(e.schema, t);
    if (!(n == null || (typeof n == "number" && Number.isNaN(n)))) {
        if ((Array.isArray(n) && (n = r.commaSeparated ? pD(n) : RD(n)), r.property === "style")) {
            let a = typeof n == "object" ? n : sM(e, String(n));
            return e.stylePropertyNameCase === "css" && (a = uM(a)), ["style", a];
        }
        return [e.elementAttributeNameCase === "react" && r.space ? xD[r.property] || r.property : r.attribute, n];
    }
}
function sM(e, t) {
    const n = {};
    try {
        qD(t, r);
    } catch (a) {
        if (!e.ignoreInvalidStyle) {
            const i = a,
                o = new St("Cannot parse `style` attribute", { ancestors: e.ancestors, cause: i, ruleId: "style", source: "hast-util-to-jsx-runtime" });
            throw ((o.file = e.filePath || void 0), (o.url = nA + "#cannot-parse-style-attribute"), o);
        }
    }
    return n;
    function r(a, i) {
        let o = a;
        o.slice(0, 2) !== "--" && (o.slice(0, 4) === "-ms-" && (o = "ms-" + o.slice(4)), (o = o.replace(WD, dM))), (n[o] = i);
    }
}
function iA(e, t, n) {
    let r;
    if (!n) r = { type: "Literal", value: t };
    else if (t.includes(".")) {
        const a = t.split(".");
        let i = -1,
            o;
        for (; ++i < a.length; ) {
            const l = Z4(a[i]) ? { type: "Identifier", name: a[i] } : { type: "Literal", value: a[i] };
            o = o ? { type: "MemberExpression", object: o, property: l, computed: !!(i && l.type === "Literal"), optional: !1 } : l;
        }
        r = o;
    } else r = Z4(t) && !/^[a-z]/.test(t) ? { type: "Identifier", name: t } : { type: "Literal", value: t };
    if (r.type === "Literal") {
        const a = r.value;
        return Mg.call(e.components, a) ? e.components[a] : a;
    }
    if (e.evaluater) return e.evaluater.evaluateExpression(r);
    no(e);
}
function no(e, t) {
    const n = new St("Cannot handle MDX estrees without `createEvaluater`", {
        ancestors: e.ancestors,
        place: t,
        ruleId: "mdx-estree",
        source: "hast-util-to-jsx-runtime",
    });
    throw ((n.file = e.filePath || void 0), (n.url = nA + "#cannot-handle-mdx-estrees-without-createevaluater"), n);
}
function uM(e) {
    const t = {};
    let n;
    for (n in e) Mg.call(e, n) && (t[cM(n)] = e[n]);
    return t;
}
function cM(e) {
    let t = e.replace(VD, pM);
    return t.slice(0, 3) === "ms-" && (t = "-" + t), t;
}
function dM(e, t) {
    return t.toUpperCase();
}
function pM(e) {
    return "-" + e.toLowerCase();
}
const ff = {
        action: ["form"],
        cite: ["blockquote", "del", "ins", "q"],
        data: ["object"],
        formAction: ["button", "input"],
        href: ["a", "area", "base", "link"],
        icon: ["menuitem"],
        itemId: null,
        manifest: ["html"],
        ping: ["a", "area"],
        poster: ["video"],
        src: ["audio", "embed", "iframe", "img", "input", "script", "source", "track", "video"],
    },
    fM = {};
function Bg(e, t) {
    const n = t || fM,
        r = typeof n.includeImageAlt == "boolean" ? n.includeImageAlt : !0,
        a = typeof n.includeHtml == "boolean" ? n.includeHtml : !0;
    return oA(e, r, a);
}
function oA(e, t, n) {
    if (mM(e)) {
        if ("value" in e) return e.type === "html" && !n ? "" : e.value;
        if (t && "alt" in e && e.alt) return e.alt;
        if ("children" in e) return u2(e.children, t, n);
    }
    return Array.isArray(e) ? u2(e, t, n) : "";
}
function u2(e, t, n) {
    const r = [];
    let a = -1;
    for (; ++a < e.length; ) r[a] = oA(e[a], t, n);
    return r.join("");
}
function mM(e) {
    return !!(e && typeof e == "object");
}
const c2 = document.createElement("i");
function Ug(e) {
    const t = "&" + e + ";";
    c2.innerHTML = t;
    const n = c2.textContent;
    return (n.charCodeAt(n.length - 1) === 59 && e !== "semi") || n === t ? !1 : n;
}
function qt(e, t, n, r) {
    const a = e.length;
    let i = 0,
        o;
    if ((t < 0 ? (t = -t > a ? 0 : a + t) : (t = t > a ? a : t), (n = n > 0 ? n : 0), r.length < 1e4)) (o = Array.from(r)), o.unshift(t, n), e.splice(...o);
    else for (n && e.splice(t, n); i < r.length; ) (o = r.slice(i, i + 1e4)), o.unshift(t, 0), e.splice(...o), (i += 1e4), (t += 1e4);
}
function Xt(e, t) {
    return e.length > 0 ? (qt(e, e.length, 0, t), e) : t;
}
const d2 = {}.hasOwnProperty;
function lA(e) {
    const t = {};
    let n = -1;
    for (; ++n < e.length; ) hM(t, e[n]);
    return t;
}
function hM(e, t) {
    let n;
    for (n in t) {
        const a = (d2.call(e, n) ? e[n] : void 0) || (e[n] = {}),
            i = t[n];
        let o;
        if (i)
            for (o in i) {
                d2.call(a, o) || (a[o] = []);
                const l = i[o];
                gM(a[o], Array.isArray(l) ? l : l ? [l] : []);
            }
    }
}
function gM(e, t) {
    let n = -1;
    const r = [];
    for (; ++n < t.length; ) (t[n].add === "after" ? e : r).push(t[n]);
    qt(e, 0, 0, r);
}
function sA(e, t) {
    const n = Number.parseInt(e, t);
    return n < 9 ||
        n === 11 ||
        (n > 13 && n < 32) ||
        (n > 126 && n < 160) ||
        (n > 55295 && n < 57344) ||
        (n > 64975 && n < 65008) ||
        (n & 65535) === 65535 ||
        (n & 65535) === 65534 ||
        n > 1114111
        ? "�"
        : String.fromCodePoint(n);
}
function bn(e) {
    return e
        .replace(/[\t\n\r ]+/g, " ")
        .replace(/^ | $/g, "")
        .toLowerCase()
        .toUpperCase();
}
const gt = Cr(/[A-Za-z]/),
    ct = Cr(/[\dA-Za-z]/),
    bM = Cr(/[#-'*+\--9=?A-Z^-~]/);
function ql(e) {
    return e !== null && (e < 32 || e === 127);
}
const Vm = Cr(/\d/),
    yM = Cr(/[\dA-Fa-f]/),
    vM = Cr(/[!-/:-@[-`{-~]/);
function ae(e) {
    return e !== null && e < -2;
}
function Re(e) {
    return e !== null && (e < 0 || e === 32);
}
function ye(e) {
    return e === -2 || e === -1 || e === 32;
}
const vs = Cr(/\p{P}|\p{S}/u),
    Jr = Cr(/\s/);
function Cr(e) {
    return t;
    function t(n) {
        return n !== null && n > -1 && e.test(String.fromCharCode(n));
    }
}
function Qa(e) {
    const t = [];
    let n = -1,
        r = 0,
        a = 0;
    for (; ++n < e.length; ) {
        const i = e.charCodeAt(n);
        let o = "";
        if (i === 37 && ct(e.charCodeAt(n + 1)) && ct(e.charCodeAt(n + 2))) a = 2;
        else if (i < 128) /[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(i)) || (o = String.fromCharCode(i));
        else if (i > 55295 && i < 57344) {
            const l = e.charCodeAt(n + 1);
            i < 56320 && l > 56319 && l < 57344 ? ((o = String.fromCharCode(i, l)), (a = 1)) : (o = "�");
        } else o = String.fromCharCode(i);
        o && (t.push(e.slice(r, n), encodeURIComponent(o)), (r = n + a + 1), (o = "")), a && ((n += a), (a = 0));
    }
    return t.join("") + e.slice(r);
}
function be(e, t, n, r) {
    const a = r ? r - 1 : Number.POSITIVE_INFINITY;
    let i = 0;
    return o;
    function o(s) {
        return ye(s) ? (e.enter(n), l(s)) : t(s);
    }
    function l(s) {
        return ye(s) && i++ < a ? (e.consume(s), l) : (e.exit(n), t(s));
    }
}
const EM = { tokenize: SM };
function SM(e) {
    const t = e.attempt(this.parser.constructs.contentInitial, r, a);
    let n;
    return t;
    function r(l) {
        if (l === null) {
            e.consume(l);
            return;
        }
        return e.enter("lineEnding"), e.consume(l), e.exit("lineEnding"), be(e, t, "linePrefix");
    }
    function a(l) {
        return e.enter("paragraph"), i(l);
    }
    function i(l) {
        const s = e.enter("chunkText", { contentType: "text", previous: n });
        return n && (n.next = s), (n = s), o(l);
    }
    function o(l) {
        if (l === null) {
            e.exit("chunkText"), e.exit("paragraph"), e.consume(l);
            return;
        }
        return ae(l) ? (e.consume(l), e.exit("chunkText"), i) : (e.consume(l), o);
    }
}
const wM = { tokenize: kM },
    p2 = { tokenize: TM };
function kM(e) {
    const t = this,
        n = [];
    let r = 0,
        a,
        i,
        o;
    return l;
    function l(v) {
        if (r < n.length) {
            const T = n[r];
            return (t.containerState = T[1]), e.attempt(T[0].continuation, s, u)(v);
        }
        return u(v);
    }
    function s(v) {
        if ((r++, t.containerState._closeFlow)) {
            (t.containerState._closeFlow = void 0), a && g();
            const T = t.events.length;
            let R = T,
                k;
            for (; R--; )
                if (t.events[R][0] === "exit" && t.events[R][1].type === "chunkFlow") {
                    k = t.events[R][1].end;
                    break;
                }
            y(r);
            let L = T;
            for (; L < t.events.length; ) (t.events[L][1].end = { ...k }), L++;
            return qt(t.events, R + 1, 0, t.events.slice(T)), (t.events.length = L), u(v);
        }
        return l(v);
    }
    function u(v) {
        if (r === n.length) {
            if (!a) return m(v);
            if (a.currentConstruct && a.currentConstruct.concrete) return b(v);
            t.interrupt = !!(a.currentConstruct && !a._gfmTableDynamicInterruptHack);
        }
        return (t.containerState = {}), e.check(p2, c, d)(v);
    }
    function c(v) {
        return a && g(), y(r), m(v);
    }
    function d(v) {
        return (t.parser.lazy[t.now().line] = r !== n.length), (o = t.now().offset), b(v);
    }
    function m(v) {
        return (t.containerState = {}), e.attempt(p2, f, b)(v);
    }
    function f(v) {
        return r++, n.push([t.currentConstruct, t.containerState]), m(v);
    }
    function b(v) {
        if (v === null) {
            a && g(), y(0), e.consume(v);
            return;
        }
        return (a = a || t.parser.flow(t.now())), e.enter("chunkFlow", { _tokenizer: a, contentType: "flow", previous: i }), E(v);
    }
    function E(v) {
        if (v === null) {
            I(e.exit("chunkFlow"), !0), y(0), e.consume(v);
            return;
        }
        return ae(v) ? (e.consume(v), I(e.exit("chunkFlow")), (r = 0), (t.interrupt = void 0), l) : (e.consume(v), E);
    }
    function I(v, T) {
        const R = t.sliceStream(v);
        if ((T && R.push(null), (v.previous = i), i && (i.next = v), (i = v), a.defineSkip(v.start), a.write(R), t.parser.lazy[v.start.line])) {
            let k = a.events.length;
            for (; k--; ) if (a.events[k][1].start.offset < o && (!a.events[k][1].end || a.events[k][1].end.offset > o)) return;
            const L = t.events.length;
            let F = L,
                M,
                O;
            for (; F--; )
                if (t.events[F][0] === "exit" && t.events[F][1].type === "chunkFlow") {
                    if (M) {
                        O = t.events[F][1].end;
                        break;
                    }
                    M = !0;
                }
            for (y(r), k = L; k < t.events.length; ) (t.events[k][1].end = { ...O }), k++;
            qt(t.events, F + 1, 0, t.events.slice(L)), (t.events.length = k);
        }
    }
    function y(v) {
        let T = n.length;
        for (; T-- > v; ) {
            const R = n[T];
            (t.containerState = R[1]), R[0].exit.call(t, e);
        }
        n.length = v;
    }
    function g() {
        a.write([null]), (i = void 0), (a = void 0), (t.containerState._closeFlow = void 0);
    }
}
function TM(e, t, n) {
    return be(e, e.attempt(this.parser.constructs.document, t, n), "linePrefix", this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
}
function ja(e) {
    if (e === null || Re(e) || Jr(e)) return 1;
    if (vs(e)) return 2;
}
function Es(e, t, n) {
    const r = [];
    let a = -1;
    for (; ++a < e.length; ) {
        const i = e[a].resolveAll;
        i && !r.includes(i) && ((t = i(t, n)), r.push(i));
    }
    return t;
}
const Wm = { name: "attention", resolveAll: AM, tokenize: xM };
function AM(e, t) {
    let n = -1,
        r,
        a,
        i,
        o,
        l,
        s,
        u,
        c;
    for (; ++n < e.length; )
        if (e[n][0] === "enter" && e[n][1].type === "attentionSequence" && e[n][1]._close) {
            for (r = n; r--; )
                if (
                    e[r][0] === "exit" &&
                    e[r][1].type === "attentionSequence" &&
                    e[r][1]._open &&
                    t.sliceSerialize(e[r][1]).charCodeAt(0) === t.sliceSerialize(e[n][1]).charCodeAt(0)
                ) {
                    if (
                        (e[r][1]._close || e[n][1]._open) &&
                        (e[n][1].end.offset - e[n][1].start.offset) % 3 &&
                        !((e[r][1].end.offset - e[r][1].start.offset + e[n][1].end.offset - e[n][1].start.offset) % 3)
                    )
                        continue;
                    s = e[r][1].end.offset - e[r][1].start.offset > 1 && e[n][1].end.offset - e[n][1].start.offset > 1 ? 2 : 1;
                    const d = { ...e[r][1].end },
                        m = { ...e[n][1].start };
                    f2(d, -s),
                        f2(m, s),
                        (o = { type: s > 1 ? "strongSequence" : "emphasisSequence", start: d, end: { ...e[r][1].end } }),
                        (l = { type: s > 1 ? "strongSequence" : "emphasisSequence", start: { ...e[n][1].start }, end: m }),
                        (i = { type: s > 1 ? "strongText" : "emphasisText", start: { ...e[r][1].end }, end: { ...e[n][1].start } }),
                        (a = { type: s > 1 ? "strong" : "emphasis", start: { ...o.start }, end: { ...l.end } }),
                        (e[r][1].end = { ...o.start }),
                        (e[n][1].start = { ...l.end }),
                        (u = []),
                        e[r][1].end.offset - e[r][1].start.offset &&
                            (u = Xt(u, [
                                ["enter", e[r][1], t],
                                ["exit", e[r][1], t],
                            ])),
                        (u = Xt(u, [
                            ["enter", a, t],
                            ["enter", o, t],
                            ["exit", o, t],
                            ["enter", i, t],
                        ])),
                        (u = Xt(u, Es(t.parser.constructs.insideSpan.null, e.slice(r + 1, n), t))),
                        (u = Xt(u, [
                            ["exit", i, t],
                            ["enter", l, t],
                            ["exit", l, t],
                            ["exit", a, t],
                        ])),
                        e[n][1].end.offset - e[n][1].start.offset
                            ? ((c = 2),
                              (u = Xt(u, [
                                  ["enter", e[n][1], t],
                                  ["exit", e[n][1], t],
                              ])))
                            : (c = 0),
                        qt(e, r - 1, n - r + 3, u),
                        (n = r + u.length - c - 2);
                    break;
                }
        }
    for (n = -1; ++n < e.length; ) e[n][1].type === "attentionSequence" && (e[n][1].type = "data");
    return e;
}
function xM(e, t) {
    const n = this.parser.constructs.attentionMarkers.null,
        r = this.previous,
        a = ja(r);
    let i;
    return o;
    function o(s) {
        return (i = s), e.enter("attentionSequence"), l(s);
    }
    function l(s) {
        if (s === i) return e.consume(s), l;
        const u = e.exit("attentionSequence"),
            c = ja(s),
            d = !c || (c === 2 && a) || n.includes(s),
            m = !a || (a === 2 && c) || n.includes(r);
        return (u._open = !!(i === 42 ? d : d && (a || !m))), (u._close = !!(i === 42 ? m : m && (c || !d))), t(s);
    }
}
function f2(e, t) {
    (e.column += t), (e.offset += t), (e._bufferIndex += t);
}
const RM = { name: "autolink", tokenize: IM };
function IM(e, t, n) {
    let r = 0;
    return a;
    function a(f) {
        return e.enter("autolink"), e.enter("autolinkMarker"), e.consume(f), e.exit("autolinkMarker"), e.enter("autolinkProtocol"), i;
    }
    function i(f) {
        return gt(f) ? (e.consume(f), o) : f === 64 ? n(f) : u(f);
    }
    function o(f) {
        return f === 43 || f === 45 || f === 46 || ct(f) ? ((r = 1), l(f)) : u(f);
    }
    function l(f) {
        return f === 58 ? (e.consume(f), (r = 0), s) : (f === 43 || f === 45 || f === 46 || ct(f)) && r++ < 32 ? (e.consume(f), l) : ((r = 0), u(f));
    }
    function s(f) {
        return f === 62
            ? (e.exit("autolinkProtocol"), e.enter("autolinkMarker"), e.consume(f), e.exit("autolinkMarker"), e.exit("autolink"), t)
            : f === null || f === 32 || f === 60 || ql(f)
              ? n(f)
              : (e.consume(f), s);
    }
    function u(f) {
        return f === 64 ? (e.consume(f), c) : bM(f) ? (e.consume(f), u) : n(f);
    }
    function c(f) {
        return ct(f) ? d(f) : n(f);
    }
    function d(f) {
        return f === 46
            ? (e.consume(f), (r = 0), c)
            : f === 62
              ? ((e.exit("autolinkProtocol").type = "autolinkEmail"), e.enter("autolinkMarker"), e.consume(f), e.exit("autolinkMarker"), e.exit("autolink"), t)
              : m(f);
    }
    function m(f) {
        if ((f === 45 || ct(f)) && r++ < 63) {
            const b = f === 45 ? m : d;
            return e.consume(f), b;
        }
        return n(f);
    }
}
const go = { partial: !0, tokenize: NM };
function NM(e, t, n) {
    return r;
    function r(i) {
        return ye(i) ? be(e, a, "linePrefix")(i) : a(i);
    }
    function a(i) {
        return i === null || ae(i) ? t(i) : n(i);
    }
}
const uA = { continuation: { tokenize: CM }, exit: OM, name: "blockQuote", tokenize: _M };
function _M(e, t, n) {
    const r = this;
    return a;
    function a(o) {
        if (o === 62) {
            const l = r.containerState;
            return (
                l.open || (e.enter("blockQuote", { _container: !0 }), (l.open = !0)),
                e.enter("blockQuotePrefix"),
                e.enter("blockQuoteMarker"),
                e.consume(o),
                e.exit("blockQuoteMarker"),
                i
            );
        }
        return n(o);
    }
    function i(o) {
        return ye(o)
            ? (e.enter("blockQuotePrefixWhitespace"), e.consume(o), e.exit("blockQuotePrefixWhitespace"), e.exit("blockQuotePrefix"), t)
            : (e.exit("blockQuotePrefix"), t(o));
    }
}
function CM(e, t, n) {
    const r = this;
    return a;
    function a(o) {
        return ye(o) ? be(e, i, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(o) : i(o);
    }
    function i(o) {
        return e.attempt(uA, t, n)(o);
    }
}
function OM(e) {
    e.exit("blockQuote");
}
const cA = { name: "characterEscape", tokenize: LM };
function LM(e, t, n) {
    return r;
    function r(i) {
        return e.enter("characterEscape"), e.enter("escapeMarker"), e.consume(i), e.exit("escapeMarker"), a;
    }
    function a(i) {
        return vM(i) ? (e.enter("characterEscapeValue"), e.consume(i), e.exit("characterEscapeValue"), e.exit("characterEscape"), t) : n(i);
    }
}
const dA = { name: "characterReference", tokenize: DM };
function DM(e, t, n) {
    const r = this;
    let a = 0,
        i,
        o;
    return l;
    function l(d) {
        return e.enter("characterReference"), e.enter("characterReferenceMarker"), e.consume(d), e.exit("characterReferenceMarker"), s;
    }
    function s(d) {
        return d === 35
            ? (e.enter("characterReferenceMarkerNumeric"), e.consume(d), e.exit("characterReferenceMarkerNumeric"), u)
            : (e.enter("characterReferenceValue"), (i = 31), (o = ct), c(d));
    }
    function u(d) {
        return d === 88 || d === 120
            ? (e.enter("characterReferenceMarkerHexadecimal"),
              e.consume(d),
              e.exit("characterReferenceMarkerHexadecimal"),
              e.enter("characterReferenceValue"),
              (i = 6),
              (o = yM),
              c)
            : (e.enter("characterReferenceValue"), (i = 7), (o = Vm), c(d));
    }
    function c(d) {
        if (d === 59 && a) {
            const m = e.exit("characterReferenceValue");
            return o === ct && !Ug(r.sliceSerialize(m))
                ? n(d)
                : (e.enter("characterReferenceMarker"), e.consume(d), e.exit("characterReferenceMarker"), e.exit("characterReference"), t);
        }
        return o(d) && a++ < i ? (e.consume(d), c) : n(d);
    }
}
const m2 = { partial: !0, tokenize: FM },
    h2 = { concrete: !0, name: "codeFenced", tokenize: MM };
function MM(e, t, n) {
    const r = this,
        a = { partial: !0, tokenize: R };
    let i = 0,
        o = 0,
        l;
    return s;
    function s(k) {
        return u(k);
    }
    function u(k) {
        const L = r.events[r.events.length - 1];
        return (
            (i = L && L[1].type === "linePrefix" ? L[2].sliceSerialize(L[1], !0).length : 0),
            (l = k),
            e.enter("codeFenced"),
            e.enter("codeFencedFence"),
            e.enter("codeFencedFenceSequence"),
            c(k)
        );
    }
    function c(k) {
        return k === l ? (o++, e.consume(k), c) : o < 3 ? n(k) : (e.exit("codeFencedFenceSequence"), ye(k) ? be(e, d, "whitespace")(k) : d(k));
    }
    function d(k) {
        return k === null || ae(k)
            ? (e.exit("codeFencedFence"), r.interrupt ? t(k) : e.check(m2, E, T)(k))
            : (e.enter("codeFencedFenceInfo"), e.enter("chunkString", { contentType: "string" }), m(k));
    }
    function m(k) {
        return k === null || ae(k)
            ? (e.exit("chunkString"), e.exit("codeFencedFenceInfo"), d(k))
            : ye(k)
              ? (e.exit("chunkString"), e.exit("codeFencedFenceInfo"), be(e, f, "whitespace")(k))
              : k === 96 && k === l
                ? n(k)
                : (e.consume(k), m);
    }
    function f(k) {
        return k === null || ae(k) ? d(k) : (e.enter("codeFencedFenceMeta"), e.enter("chunkString", { contentType: "string" }), b(k));
    }
    function b(k) {
        return k === null || ae(k) ? (e.exit("chunkString"), e.exit("codeFencedFenceMeta"), d(k)) : k === 96 && k === l ? n(k) : (e.consume(k), b);
    }
    function E(k) {
        return e.attempt(a, T, I)(k);
    }
    function I(k) {
        return e.enter("lineEnding"), e.consume(k), e.exit("lineEnding"), y;
    }
    function y(k) {
        return i > 0 && ye(k) ? be(e, g, "linePrefix", i + 1)(k) : g(k);
    }
    function g(k) {
        return k === null || ae(k) ? e.check(m2, E, T)(k) : (e.enter("codeFlowValue"), v(k));
    }
    function v(k) {
        return k === null || ae(k) ? (e.exit("codeFlowValue"), g(k)) : (e.consume(k), v);
    }
    function T(k) {
        return e.exit("codeFenced"), t(k);
    }
    function R(k, L, F) {
        let M = 0;
        return O;
        function O(J) {
            return k.enter("lineEnding"), k.consume(J), k.exit("lineEnding"), B;
        }
        function B(J) {
            return k.enter("codeFencedFence"), ye(J) ? be(k, $, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(J) : $(J);
        }
        function $(J) {
            return J === l ? (k.enter("codeFencedFenceSequence"), ne(J)) : F(J);
        }
        function ne(J) {
            return J === l ? (M++, k.consume(J), ne) : M >= o ? (k.exit("codeFencedFenceSequence"), ye(J) ? be(k, re, "whitespace")(J) : re(J)) : F(J);
        }
        function re(J) {
            return J === null || ae(J) ? (k.exit("codeFencedFence"), L(J)) : F(J);
        }
    }
}
function FM(e, t, n) {
    const r = this;
    return a;
    function a(o) {
        return o === null ? n(o) : (e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), i);
    }
    function i(o) {
        return r.parser.lazy[r.now().line] ? n(o) : t(o);
    }
}
const mf = { name: "codeIndented", tokenize: BM },
    PM = { partial: !0, tokenize: UM };
function BM(e, t, n) {
    const r = this;
    return a;
    function a(u) {
        return e.enter("codeIndented"), be(e, i, "linePrefix", 4 + 1)(u);
    }
    function i(u) {
        const c = r.events[r.events.length - 1];
        return c && c[1].type === "linePrefix" && c[2].sliceSerialize(c[1], !0).length >= 4 ? o(u) : n(u);
    }
    function o(u) {
        return u === null ? s(u) : ae(u) ? e.attempt(PM, o, s)(u) : (e.enter("codeFlowValue"), l(u));
    }
    function l(u) {
        return u === null || ae(u) ? (e.exit("codeFlowValue"), o(u)) : (e.consume(u), l);
    }
    function s(u) {
        return e.exit("codeIndented"), t(u);
    }
}
function UM(e, t, n) {
    const r = this;
    return a;
    function a(o) {
        return r.parser.lazy[r.now().line] ? n(o) : ae(o) ? (e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), a) : be(e, i, "linePrefix", 4 + 1)(o);
    }
    function i(o) {
        const l = r.events[r.events.length - 1];
        return l && l[1].type === "linePrefix" && l[2].sliceSerialize(l[1], !0).length >= 4 ? t(o) : ae(o) ? a(o) : n(o);
    }
}
const zM = { name: "codeText", previous: qM, resolve: $M, tokenize: GM };
function $M(e) {
    let t = e.length - 4,
        n = 3,
        r,
        a;
    if ((e[n][1].type === "lineEnding" || e[n][1].type === "space") && (e[t][1].type === "lineEnding" || e[t][1].type === "space")) {
        for (r = n; ++r < t; )
            if (e[r][1].type === "codeTextData") {
                (e[n][1].type = "codeTextPadding"), (e[t][1].type = "codeTextPadding"), (n += 2), (t -= 2);
                break;
            }
    }
    for (r = n - 1, t++; ++r <= t; )
        a === void 0
            ? r !== t && e[r][1].type !== "lineEnding" && (a = r)
            : (r === t || e[r][1].type === "lineEnding") &&
              ((e[a][1].type = "codeTextData"),
              r !== a + 2 && ((e[a][1].end = e[r - 1][1].end), e.splice(a + 2, r - a - 2), (t -= r - a - 2), (r = a + 2)),
              (a = void 0));
    return e;
}
function qM(e) {
    return e !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function GM(e, t, n) {
    let r = 0,
        a,
        i;
    return o;
    function o(d) {
        return e.enter("codeText"), e.enter("codeTextSequence"), l(d);
    }
    function l(d) {
        return d === 96 ? (e.consume(d), r++, l) : (e.exit("codeTextSequence"), s(d));
    }
    function s(d) {
        return d === null
            ? n(d)
            : d === 32
              ? (e.enter("space"), e.consume(d), e.exit("space"), s)
              : d === 96
                ? ((i = e.enter("codeTextSequence")), (a = 0), c(d))
                : ae(d)
                  ? (e.enter("lineEnding"), e.consume(d), e.exit("lineEnding"), s)
                  : (e.enter("codeTextData"), u(d));
    }
    function u(d) {
        return d === null || d === 32 || d === 96 || ae(d) ? (e.exit("codeTextData"), s(d)) : (e.consume(d), u);
    }
    function c(d) {
        return d === 96 ? (e.consume(d), a++, c) : a === r ? (e.exit("codeTextSequence"), e.exit("codeText"), t(d)) : ((i.type = "codeTextData"), u(d));
    }
}
class HM {
    constructor(t) {
        (this.left = t ? [...t] : []), (this.right = []);
    }
    get(t) {
        if (t < 0 || t >= this.left.length + this.right.length)
            throw new RangeError("Cannot access index `" + t + "` in a splice buffer of size `" + (this.left.length + this.right.length) + "`");
        return t < this.left.length ? this.left[t] : this.right[this.right.length - t + this.left.length - 1];
    }
    get length() {
        return this.left.length + this.right.length;
    }
    shift() {
        return this.setCursor(0), this.right.pop();
    }
    slice(t, n) {
        const r = n ?? Number.POSITIVE_INFINITY;
        return r < this.left.length
            ? this.left.slice(t, r)
            : t > this.left.length
              ? this.right.slice(this.right.length - r + this.left.length, this.right.length - t + this.left.length).reverse()
              : this.left.slice(t).concat(this.right.slice(this.right.length - r + this.left.length).reverse());
    }
    splice(t, n, r) {
        const a = n || 0;
        this.setCursor(Math.trunc(t));
        const i = this.right.splice(this.right.length - a, Number.POSITIVE_INFINITY);
        return r && gi(this.left, r), i.reverse();
    }
    pop() {
        return this.setCursor(Number.POSITIVE_INFINITY), this.left.pop();
    }
    push(t) {
        this.setCursor(Number.POSITIVE_INFINITY), this.left.push(t);
    }
    pushMany(t) {
        this.setCursor(Number.POSITIVE_INFINITY), gi(this.left, t);
    }
    unshift(t) {
        this.setCursor(0), this.right.push(t);
    }
    unshiftMany(t) {
        this.setCursor(0), gi(this.right, t.reverse());
    }
    setCursor(t) {
        if (!(t === this.left.length || (t > this.left.length && this.right.length === 0) || (t < 0 && this.left.length === 0)))
            if (t < this.left.length) {
                const n = this.left.splice(t, Number.POSITIVE_INFINITY);
                gi(this.right, n.reverse());
            } else {
                const n = this.right.splice(this.left.length + this.right.length - t, Number.POSITIVE_INFINITY);
                gi(this.left, n.reverse());
            }
    }
}
function gi(e, t) {
    let n = 0;
    if (t.length < 1e4) e.push(...t);
    else for (; n < t.length; ) e.push(...t.slice(n, n + 1e4)), (n += 1e4);
}
function pA(e) {
    const t = {};
    let n = -1,
        r,
        a,
        i,
        o,
        l,
        s,
        u;
    const c = new HM(e);
    for (; ++n < c.length; ) {
        for (; n in t; ) n = t[n];
        if (
            ((r = c.get(n)),
            n &&
                r[1].type === "chunkFlow" &&
                c.get(n - 1)[1].type === "listItemPrefix" &&
                ((s = r[1]._tokenizer.events),
                (i = 0),
                i < s.length && s[i][1].type === "lineEndingBlank" && (i += 2),
                i < s.length && s[i][1].type === "content"))
        )
            for (; ++i < s.length && s[i][1].type !== "content"; ) s[i][1].type === "chunkText" && ((s[i][1]._isInFirstContentOfListItem = !0), i++);
        if (r[0] === "enter") r[1].contentType && (Object.assign(t, jM(c, n)), (n = t[n]), (u = !0));
        else if (r[1]._container) {
            for (i = n, a = void 0; i--; )
                if (((o = c.get(i)), o[1].type === "lineEnding" || o[1].type === "lineEndingBlank"))
                    o[0] === "enter" && (a && (c.get(a)[1].type = "lineEndingBlank"), (o[1].type = "lineEnding"), (a = i));
                else if (o[1].type !== "linePrefix") break;
            a && ((r[1].end = { ...c.get(a)[1].start }), (l = c.slice(a, n)), l.unshift(r), c.splice(a, n - a + 1, l));
        }
    }
    return qt(e, 0, Number.POSITIVE_INFINITY, c.slice(0)), !u;
}
function jM(e, t) {
    const n = e.get(t)[1],
        r = e.get(t)[2];
    let a = t - 1;
    const i = [],
        o = n._tokenizer || r.parser[n.contentType](n.start),
        l = o.events,
        s = [],
        u = {};
    let c,
        d,
        m = -1,
        f = n,
        b = 0,
        E = 0;
    const I = [E];
    for (; f; ) {
        for (; e.get(++a)[1] !== f; );
        i.push(a),
            f._tokenizer ||
                ((c = r.sliceStream(f)),
                f.next || c.push(null),
                d && o.defineSkip(f.start),
                f._isInFirstContentOfListItem && (o._gfmTasklistFirstContentOfListItem = !0),
                o.write(c),
                f._isInFirstContentOfListItem && (o._gfmTasklistFirstContentOfListItem = void 0)),
            (d = f),
            (f = f.next);
    }
    for (f = n; ++m < l.length; )
        l[m][0] === "exit" &&
            l[m - 1][0] === "enter" &&
            l[m][1].type === l[m - 1][1].type &&
            l[m][1].start.line !== l[m][1].end.line &&
            ((E = m + 1), I.push(E), (f._tokenizer = void 0), (f.previous = void 0), (f = f.next));
    for (o.events = [], f ? ((f._tokenizer = void 0), (f.previous = void 0)) : I.pop(), m = I.length; m--; ) {
        const y = l.slice(I[m], I[m + 1]),
            g = i.pop();
        s.push([g, g + y.length - 1]), e.splice(g, 2, y);
    }
    for (s.reverse(), m = -1; ++m < s.length; ) (u[b + s[m][0]] = b + s[m][1]), (b += s[m][1] - s[m][0] - 1);
    return u;
}
const VM = { resolve: YM, tokenize: KM },
    WM = { partial: !0, tokenize: XM };
function YM(e) {
    return pA(e), e;
}
function KM(e, t) {
    let n;
    return r;
    function r(l) {
        return e.enter("content"), (n = e.enter("chunkContent", { contentType: "content" })), a(l);
    }
    function a(l) {
        return l === null ? i(l) : ae(l) ? e.check(WM, o, i)(l) : (e.consume(l), a);
    }
    function i(l) {
        return e.exit("chunkContent"), e.exit("content"), t(l);
    }
    function o(l) {
        return e.consume(l), e.exit("chunkContent"), (n.next = e.enter("chunkContent", { contentType: "content", previous: n })), (n = n.next), a;
    }
}
function XM(e, t, n) {
    const r = this;
    return a;
    function a(o) {
        return e.exit("chunkContent"), e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), be(e, i, "linePrefix");
    }
    function i(o) {
        if (o === null || ae(o)) return n(o);
        const l = r.events[r.events.length - 1];
        return !r.parser.constructs.disable.null.includes("codeIndented") && l && l[1].type === "linePrefix" && l[2].sliceSerialize(l[1], !0).length >= 4
            ? t(o)
            : e.interrupt(r.parser.constructs.flow, n, t)(o);
    }
}
function fA(e, t, n, r, a, i, o, l, s) {
    const u = s || Number.POSITIVE_INFINITY;
    let c = 0;
    return d;
    function d(y) {
        return y === 60
            ? (e.enter(r), e.enter(a), e.enter(i), e.consume(y), e.exit(i), m)
            : y === null || y === 32 || y === 41 || ql(y)
              ? n(y)
              : (e.enter(r), e.enter(o), e.enter(l), e.enter("chunkString", { contentType: "string" }), E(y));
    }
    function m(y) {
        return y === 62
            ? (e.enter(i), e.consume(y), e.exit(i), e.exit(a), e.exit(r), t)
            : (e.enter(l), e.enter("chunkString", { contentType: "string" }), f(y));
    }
    function f(y) {
        return y === 62 ? (e.exit("chunkString"), e.exit(l), m(y)) : y === null || y === 60 || ae(y) ? n(y) : (e.consume(y), y === 92 ? b : f);
    }
    function b(y) {
        return y === 60 || y === 62 || y === 92 ? (e.consume(y), f) : f(y);
    }
    function E(y) {
        return !c && (y === null || y === 41 || Re(y))
            ? (e.exit("chunkString"), e.exit(l), e.exit(o), e.exit(r), t(y))
            : c < u && y === 40
              ? (e.consume(y), c++, E)
              : y === 41
                ? (e.consume(y), c--, E)
                : y === null || y === 32 || y === 40 || ql(y)
                  ? n(y)
                  : (e.consume(y), y === 92 ? I : E);
    }
    function I(y) {
        return y === 40 || y === 41 || y === 92 ? (e.consume(y), E) : E(y);
    }
}
function mA(e, t, n, r, a, i) {
    const o = this;
    let l = 0,
        s;
    return u;
    function u(f) {
        return e.enter(r), e.enter(a), e.consume(f), e.exit(a), e.enter(i), c;
    }
    function c(f) {
        return l > 999 || f === null || f === 91 || (f === 93 && !s) || (f === 94 && !l && "_hiddenFootnoteSupport" in o.parser.constructs)
            ? n(f)
            : f === 93
              ? (e.exit(i), e.enter(a), e.consume(f), e.exit(a), e.exit(r), t)
              : ae(f)
                ? (e.enter("lineEnding"), e.consume(f), e.exit("lineEnding"), c)
                : (e.enter("chunkString", { contentType: "string" }), d(f));
    }
    function d(f) {
        return f === null || f === 91 || f === 93 || ae(f) || l++ > 999 ? (e.exit("chunkString"), c(f)) : (e.consume(f), s || (s = !ye(f)), f === 92 ? m : d);
    }
    function m(f) {
        return f === 91 || f === 92 || f === 93 ? (e.consume(f), l++, d) : d(f);
    }
}
function hA(e, t, n, r, a, i) {
    let o;
    return l;
    function l(m) {
        return m === 34 || m === 39 || m === 40 ? (e.enter(r), e.enter(a), e.consume(m), e.exit(a), (o = m === 40 ? 41 : m), s) : n(m);
    }
    function s(m) {
        return m === o ? (e.enter(a), e.consume(m), e.exit(a), e.exit(r), t) : (e.enter(i), u(m));
    }
    function u(m) {
        return m === o
            ? (e.exit(i), s(o))
            : m === null
              ? n(m)
              : ae(m)
                ? (e.enter("lineEnding"), e.consume(m), e.exit("lineEnding"), be(e, u, "linePrefix"))
                : (e.enter("chunkString", { contentType: "string" }), c(m));
    }
    function c(m) {
        return m === o || m === null || ae(m) ? (e.exit("chunkString"), u(m)) : (e.consume(m), m === 92 ? d : c);
    }
    function d(m) {
        return m === o || m === 92 ? (e.consume(m), c) : c(m);
    }
}
function Di(e, t) {
    let n;
    return r;
    function r(a) {
        return ae(a) ? (e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), (n = !0), r) : ye(a) ? be(e, r, n ? "linePrefix" : "lineSuffix")(a) : t(a);
    }
}
const ZM = { name: "definition", tokenize: JM },
    QM = { partial: !0, tokenize: eF };
function JM(e, t, n) {
    const r = this;
    let a;
    return i;
    function i(f) {
        return e.enter("definition"), o(f);
    }
    function o(f) {
        return mA.call(r, e, l, n, "definitionLabel", "definitionLabelMarker", "definitionLabelString")(f);
    }
    function l(f) {
        return (
            (a = bn(r.sliceSerialize(r.events[r.events.length - 1][1]).slice(1, -1))),
            f === 58 ? (e.enter("definitionMarker"), e.consume(f), e.exit("definitionMarker"), s) : n(f)
        );
    }
    function s(f) {
        return Re(f) ? Di(e, u)(f) : u(f);
    }
    function u(f) {
        return fA(
            e,
            c,
            n,
            "definitionDestination",
            "definitionDestinationLiteral",
            "definitionDestinationLiteralMarker",
            "definitionDestinationRaw",
            "definitionDestinationString",
        )(f);
    }
    function c(f) {
        return e.attempt(QM, d, d)(f);
    }
    function d(f) {
        return ye(f) ? be(e, m, "whitespace")(f) : m(f);
    }
    function m(f) {
        return f === null || ae(f) ? (e.exit("definition"), r.parser.defined.push(a), t(f)) : n(f);
    }
}
function eF(e, t, n) {
    return r;
    function r(l) {
        return Re(l) ? Di(e, a)(l) : n(l);
    }
    function a(l) {
        return hA(e, i, n, "definitionTitle", "definitionTitleMarker", "definitionTitleString")(l);
    }
    function i(l) {
        return ye(l) ? be(e, o, "whitespace")(l) : o(l);
    }
    function o(l) {
        return l === null || ae(l) ? t(l) : n(l);
    }
}
const tF = { name: "hardBreakEscape", tokenize: nF };
function nF(e, t, n) {
    return r;
    function r(i) {
        return e.enter("hardBreakEscape"), e.consume(i), a;
    }
    function a(i) {
        return ae(i) ? (e.exit("hardBreakEscape"), t(i)) : n(i);
    }
}
const rF = { name: "headingAtx", resolve: aF, tokenize: iF };
function aF(e, t) {
    let n = e.length - 2,
        r = 3,
        a,
        i;
    return (
        e[r][1].type === "whitespace" && (r += 2),
        n - 2 > r && e[n][1].type === "whitespace" && (n -= 2),
        e[n][1].type === "atxHeadingSequence" && (r === n - 1 || (n - 4 > r && e[n - 2][1].type === "whitespace")) && (n -= r + 1 === n ? 2 : 4),
        n > r &&
            ((a = { type: "atxHeadingText", start: e[r][1].start, end: e[n][1].end }),
            (i = { type: "chunkText", start: e[r][1].start, end: e[n][1].end, contentType: "text" }),
            qt(e, r, n - r + 1, [
                ["enter", a, t],
                ["enter", i, t],
                ["exit", i, t],
                ["exit", a, t],
            ])),
        e
    );
}
function iF(e, t, n) {
    let r = 0;
    return a;
    function a(c) {
        return e.enter("atxHeading"), i(c);
    }
    function i(c) {
        return e.enter("atxHeadingSequence"), o(c);
    }
    function o(c) {
        return c === 35 && r++ < 6 ? (e.consume(c), o) : c === null || Re(c) ? (e.exit("atxHeadingSequence"), l(c)) : n(c);
    }
    function l(c) {
        return c === 35
            ? (e.enter("atxHeadingSequence"), s(c))
            : c === null || ae(c)
              ? (e.exit("atxHeading"), t(c))
              : ye(c)
                ? be(e, l, "whitespace")(c)
                : (e.enter("atxHeadingText"), u(c));
    }
    function s(c) {
        return c === 35 ? (e.consume(c), s) : (e.exit("atxHeadingSequence"), l(c));
    }
    function u(c) {
        return c === null || c === 35 || Re(c) ? (e.exit("atxHeadingText"), l(c)) : (e.consume(c), u);
    }
}
const oF = [
        "address",
        "article",
        "aside",
        "base",
        "basefont",
        "blockquote",
        "body",
        "caption",
        "center",
        "col",
        "colgroup",
        "dd",
        "details",
        "dialog",
        "dir",
        "div",
        "dl",
        "dt",
        "fieldset",
        "figcaption",
        "figure",
        "footer",
        "form",
        "frame",
        "frameset",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "head",
        "header",
        "hr",
        "html",
        "iframe",
        "legend",
        "li",
        "link",
        "main",
        "menu",
        "menuitem",
        "nav",
        "noframes",
        "ol",
        "optgroup",
        "option",
        "p",
        "param",
        "search",
        "section",
        "summary",
        "table",
        "tbody",
        "td",
        "tfoot",
        "th",
        "thead",
        "title",
        "tr",
        "track",
        "ul",
    ],
    g2 = ["pre", "script", "style", "textarea"],
    lF = { concrete: !0, name: "htmlFlow", resolveTo: cF, tokenize: dF },
    sF = { partial: !0, tokenize: fF },
    uF = { partial: !0, tokenize: pF };
function cF(e) {
    let t = e.length;
    for (; t-- && !(e[t][0] === "enter" && e[t][1].type === "htmlFlow"); );
    return t > 1 && e[t - 2][1].type === "linePrefix" && ((e[t][1].start = e[t - 2][1].start), (e[t + 1][1].start = e[t - 2][1].start), e.splice(t - 2, 2)), e;
}
function dF(e, t, n) {
    const r = this;
    let a, i, o, l, s;
    return u;
    function u(C) {
        return c(C);
    }
    function c(C) {
        return e.enter("htmlFlow"), e.enter("htmlFlowData"), e.consume(C), d;
    }
    function d(C) {
        return C === 33
            ? (e.consume(C), m)
            : C === 47
              ? (e.consume(C), (i = !0), E)
              : C === 63
                ? (e.consume(C), (a = 3), r.interrupt ? t : A)
                : gt(C)
                  ? (e.consume(C), (o = String.fromCharCode(C)), I)
                  : n(C);
    }
    function m(C) {
        return C === 45
            ? (e.consume(C), (a = 2), f)
            : C === 91
              ? (e.consume(C), (a = 5), (l = 0), b)
              : gt(C)
                ? (e.consume(C), (a = 4), r.interrupt ? t : A)
                : n(C);
    }
    function f(C) {
        return C === 45 ? (e.consume(C), r.interrupt ? t : A) : n(C);
    }
    function b(C) {
        const he = "CDATA[";
        return C === he.charCodeAt(l++) ? (e.consume(C), l === he.length ? (r.interrupt ? t : $) : b) : n(C);
    }
    function E(C) {
        return gt(C) ? (e.consume(C), (o = String.fromCharCode(C)), I) : n(C);
    }
    function I(C) {
        if (C === null || C === 47 || C === 62 || Re(C)) {
            const he = C === 47,
                ke = o.toLowerCase();
            return !he && !i && g2.includes(ke)
                ? ((a = 1), r.interrupt ? t(C) : $(C))
                : oF.includes(o.toLowerCase())
                  ? ((a = 6), he ? (e.consume(C), y) : r.interrupt ? t(C) : $(C))
                  : ((a = 7), r.interrupt && !r.parser.lazy[r.now().line] ? n(C) : i ? g(C) : v(C));
        }
        return C === 45 || ct(C) ? (e.consume(C), (o += String.fromCharCode(C)), I) : n(C);
    }
    function y(C) {
        return C === 62 ? (e.consume(C), r.interrupt ? t : $) : n(C);
    }
    function g(C) {
        return ye(C) ? (e.consume(C), g) : O(C);
    }
    function v(C) {
        return C === 47 ? (e.consume(C), O) : C === 58 || C === 95 || gt(C) ? (e.consume(C), T) : ye(C) ? (e.consume(C), v) : O(C);
    }
    function T(C) {
        return C === 45 || C === 46 || C === 58 || C === 95 || ct(C) ? (e.consume(C), T) : R(C);
    }
    function R(C) {
        return C === 61 ? (e.consume(C), k) : ye(C) ? (e.consume(C), R) : v(C);
    }
    function k(C) {
        return C === null || C === 60 || C === 61 || C === 62 || C === 96
            ? n(C)
            : C === 34 || C === 39
              ? (e.consume(C), (s = C), L)
              : ye(C)
                ? (e.consume(C), k)
                : F(C);
    }
    function L(C) {
        return C === s ? (e.consume(C), (s = null), M) : C === null || ae(C) ? n(C) : (e.consume(C), L);
    }
    function F(C) {
        return C === null || C === 34 || C === 39 || C === 47 || C === 60 || C === 61 || C === 62 || C === 96 || Re(C) ? R(C) : (e.consume(C), F);
    }
    function M(C) {
        return C === 47 || C === 62 || ye(C) ? v(C) : n(C);
    }
    function O(C) {
        return C === 62 ? (e.consume(C), B) : n(C);
    }
    function B(C) {
        return C === null || ae(C) ? $(C) : ye(C) ? (e.consume(C), B) : n(C);
    }
    function $(C) {
        return C === 45 && a === 2
            ? (e.consume(C), se)
            : C === 60 && a === 1
              ? (e.consume(C), ce)
              : C === 62 && a === 4
                ? (e.consume(C), Y)
                : C === 63 && a === 3
                  ? (e.consume(C), A)
                  : C === 93 && a === 5
                    ? (e.consume(C), W)
                    : ae(C) && (a === 6 || a === 7)
                      ? (e.exit("htmlFlowData"), e.check(sF, Q, ne)(C))
                      : C === null || ae(C)
                        ? (e.exit("htmlFlowData"), ne(C))
                        : (e.consume(C), $);
    }
    function ne(C) {
        return e.check(uF, re, Q)(C);
    }
    function re(C) {
        return e.enter("lineEnding"), e.consume(C), e.exit("lineEnding"), J;
    }
    function J(C) {
        return C === null || ae(C) ? ne(C) : (e.enter("htmlFlowData"), $(C));
    }
    function se(C) {
        return C === 45 ? (e.consume(C), A) : $(C);
    }
    function ce(C) {
        return C === 47 ? (e.consume(C), (o = ""), U) : $(C);
    }
    function U(C) {
        if (C === 62) {
            const he = o.toLowerCase();
            return g2.includes(he) ? (e.consume(C), Y) : $(C);
        }
        return gt(C) && o.length < 8 ? (e.consume(C), (o += String.fromCharCode(C)), U) : $(C);
    }
    function W(C) {
        return C === 93 ? (e.consume(C), A) : $(C);
    }
    function A(C) {
        return C === 62 ? (e.consume(C), Y) : C === 45 && a === 2 ? (e.consume(C), A) : $(C);
    }
    function Y(C) {
        return C === null || ae(C) ? (e.exit("htmlFlowData"), Q(C)) : (e.consume(C), Y);
    }
    function Q(C) {
        return e.exit("htmlFlow"), t(C);
    }
}
function pF(e, t, n) {
    const r = this;
    return a;
    function a(o) {
        return ae(o) ? (e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), i) : n(o);
    }
    function i(o) {
        return r.parser.lazy[r.now().line] ? n(o) : t(o);
    }
}
function fF(e, t, n) {
    return r;
    function r(a) {
        return e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), e.attempt(go, t, n);
    }
}
const mF = { name: "htmlText", tokenize: hF };
function hF(e, t, n) {
    const r = this;
    let a, i, o;
    return l;
    function l(A) {
        return e.enter("htmlText"), e.enter("htmlTextData"), e.consume(A), s;
    }
    function s(A) {
        return A === 33 ? (e.consume(A), u) : A === 47 ? (e.consume(A), R) : A === 63 ? (e.consume(A), v) : gt(A) ? (e.consume(A), F) : n(A);
    }
    function u(A) {
        return A === 45 ? (e.consume(A), c) : A === 91 ? (e.consume(A), (i = 0), b) : gt(A) ? (e.consume(A), g) : n(A);
    }
    function c(A) {
        return A === 45 ? (e.consume(A), f) : n(A);
    }
    function d(A) {
        return A === null ? n(A) : A === 45 ? (e.consume(A), m) : ae(A) ? ((o = d), ce(A)) : (e.consume(A), d);
    }
    function m(A) {
        return A === 45 ? (e.consume(A), f) : d(A);
    }
    function f(A) {
        return A === 62 ? se(A) : A === 45 ? m(A) : d(A);
    }
    function b(A) {
        const Y = "CDATA[";
        return A === Y.charCodeAt(i++) ? (e.consume(A), i === Y.length ? E : b) : n(A);
    }
    function E(A) {
        return A === null ? n(A) : A === 93 ? (e.consume(A), I) : ae(A) ? ((o = E), ce(A)) : (e.consume(A), E);
    }
    function I(A) {
        return A === 93 ? (e.consume(A), y) : E(A);
    }
    function y(A) {
        return A === 62 ? se(A) : A === 93 ? (e.consume(A), y) : E(A);
    }
    function g(A) {
        return A === null || A === 62 ? se(A) : ae(A) ? ((o = g), ce(A)) : (e.consume(A), g);
    }
    function v(A) {
        return A === null ? n(A) : A === 63 ? (e.consume(A), T) : ae(A) ? ((o = v), ce(A)) : (e.consume(A), v);
    }
    function T(A) {
        return A === 62 ? se(A) : v(A);
    }
    function R(A) {
        return gt(A) ? (e.consume(A), k) : n(A);
    }
    function k(A) {
        return A === 45 || ct(A) ? (e.consume(A), k) : L(A);
    }
    function L(A) {
        return ae(A) ? ((o = L), ce(A)) : ye(A) ? (e.consume(A), L) : se(A);
    }
    function F(A) {
        return A === 45 || ct(A) ? (e.consume(A), F) : A === 47 || A === 62 || Re(A) ? M(A) : n(A);
    }
    function M(A) {
        return A === 47 ? (e.consume(A), se) : A === 58 || A === 95 || gt(A) ? (e.consume(A), O) : ae(A) ? ((o = M), ce(A)) : ye(A) ? (e.consume(A), M) : se(A);
    }
    function O(A) {
        return A === 45 || A === 46 || A === 58 || A === 95 || ct(A) ? (e.consume(A), O) : B(A);
    }
    function B(A) {
        return A === 61 ? (e.consume(A), $) : ae(A) ? ((o = B), ce(A)) : ye(A) ? (e.consume(A), B) : M(A);
    }
    function $(A) {
        return A === null || A === 60 || A === 61 || A === 62 || A === 96
            ? n(A)
            : A === 34 || A === 39
              ? (e.consume(A), (a = A), ne)
              : ae(A)
                ? ((o = $), ce(A))
                : ye(A)
                  ? (e.consume(A), $)
                  : (e.consume(A), re);
    }
    function ne(A) {
        return A === a ? (e.consume(A), (a = void 0), J) : A === null ? n(A) : ae(A) ? ((o = ne), ce(A)) : (e.consume(A), ne);
    }
    function re(A) {
        return A === null || A === 34 || A === 39 || A === 60 || A === 61 || A === 96 ? n(A) : A === 47 || A === 62 || Re(A) ? M(A) : (e.consume(A), re);
    }
    function J(A) {
        return A === 47 || A === 62 || Re(A) ? M(A) : n(A);
    }
    function se(A) {
        return A === 62 ? (e.consume(A), e.exit("htmlTextData"), e.exit("htmlText"), t) : n(A);
    }
    function ce(A) {
        return e.exit("htmlTextData"), e.enter("lineEnding"), e.consume(A), e.exit("lineEnding"), U;
    }
    function U(A) {
        return ye(A) ? be(e, W, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(A) : W(A);
    }
    function W(A) {
        return e.enter("htmlTextData"), o(A);
    }
}
const zg = { name: "labelEnd", resolveAll: vF, resolveTo: EF, tokenize: SF },
    gF = { tokenize: wF },
    bF = { tokenize: kF },
    yF = { tokenize: TF };
function vF(e) {
    let t = -1;
    const n = [];
    for (; ++t < e.length; ) {
        const r = e[t][1];
        if ((n.push(e[t]), r.type === "labelImage" || r.type === "labelLink" || r.type === "labelEnd")) {
            const a = r.type === "labelImage" ? 4 : 2;
            (r.type = "data"), (t += a);
        }
    }
    return e.length !== n.length && qt(e, 0, e.length, n), e;
}
function EF(e, t) {
    let n = e.length,
        r = 0,
        a,
        i,
        o,
        l;
    for (; n--; )
        if (((a = e[n][1]), i)) {
            if (a.type === "link" || (a.type === "labelLink" && a._inactive)) break;
            e[n][0] === "enter" && a.type === "labelLink" && (a._inactive = !0);
        } else if (o) {
            if (e[n][0] === "enter" && (a.type === "labelImage" || a.type === "labelLink") && !a._balanced && ((i = n), a.type !== "labelLink")) {
                r = 2;
                break;
            }
        } else a.type === "labelEnd" && (o = n);
    const s = { type: e[i][1].type === "labelLink" ? "link" : "image", start: { ...e[i][1].start }, end: { ...e[e.length - 1][1].end } },
        u = { type: "label", start: { ...e[i][1].start }, end: { ...e[o][1].end } },
        c = { type: "labelText", start: { ...e[i + r + 2][1].end }, end: { ...e[o - 2][1].start } };
    return (
        (l = [
            ["enter", s, t],
            ["enter", u, t],
        ]),
        (l = Xt(l, e.slice(i + 1, i + r + 3))),
        (l = Xt(l, [["enter", c, t]])),
        (l = Xt(l, Es(t.parser.constructs.insideSpan.null, e.slice(i + r + 4, o - 3), t))),
        (l = Xt(l, [["exit", c, t], e[o - 2], e[o - 1], ["exit", u, t]])),
        (l = Xt(l, e.slice(o + 1))),
        (l = Xt(l, [["exit", s, t]])),
        qt(e, i, e.length, l),
        e
    );
}
function SF(e, t, n) {
    const r = this;
    let a = r.events.length,
        i,
        o;
    for (; a--; )
        if ((r.events[a][1].type === "labelImage" || r.events[a][1].type === "labelLink") && !r.events[a][1]._balanced) {
            i = r.events[a][1];
            break;
        }
    return l;
    function l(m) {
        return i
            ? i._inactive
                ? d(m)
                : ((o = r.parser.defined.includes(bn(r.sliceSerialize({ start: i.end, end: r.now() })))),
                  e.enter("labelEnd"),
                  e.enter("labelMarker"),
                  e.consume(m),
                  e.exit("labelMarker"),
                  e.exit("labelEnd"),
                  s)
            : n(m);
    }
    function s(m) {
        return m === 40 ? e.attempt(gF, c, o ? c : d)(m) : m === 91 ? e.attempt(bF, c, o ? u : d)(m) : o ? c(m) : d(m);
    }
    function u(m) {
        return e.attempt(yF, c, d)(m);
    }
    function c(m) {
        return t(m);
    }
    function d(m) {
        return (i._balanced = !0), n(m);
    }
}
function wF(e, t, n) {
    return r;
    function r(d) {
        return e.enter("resource"), e.enter("resourceMarker"), e.consume(d), e.exit("resourceMarker"), a;
    }
    function a(d) {
        return Re(d) ? Di(e, i)(d) : i(d);
    }
    function i(d) {
        return d === 41
            ? c(d)
            : fA(
                  e,
                  o,
                  l,
                  "resourceDestination",
                  "resourceDestinationLiteral",
                  "resourceDestinationLiteralMarker",
                  "resourceDestinationRaw",
                  "resourceDestinationString",
                  32,
              )(d);
    }
    function o(d) {
        return Re(d) ? Di(e, s)(d) : c(d);
    }
    function l(d) {
        return n(d);
    }
    function s(d) {
        return d === 34 || d === 39 || d === 40 ? hA(e, u, n, "resourceTitle", "resourceTitleMarker", "resourceTitleString")(d) : c(d);
    }
    function u(d) {
        return Re(d) ? Di(e, c)(d) : c(d);
    }
    function c(d) {
        return d === 41 ? (e.enter("resourceMarker"), e.consume(d), e.exit("resourceMarker"), e.exit("resource"), t) : n(d);
    }
}
function kF(e, t, n) {
    const r = this;
    return a;
    function a(l) {
        return mA.call(r, e, i, o, "reference", "referenceMarker", "referenceString")(l);
    }
    function i(l) {
        return r.parser.defined.includes(bn(r.sliceSerialize(r.events[r.events.length - 1][1]).slice(1, -1))) ? t(l) : n(l);
    }
    function o(l) {
        return n(l);
    }
}
function TF(e, t, n) {
    return r;
    function r(i) {
        return e.enter("reference"), e.enter("referenceMarker"), e.consume(i), e.exit("referenceMarker"), a;
    }
    function a(i) {
        return i === 93 ? (e.enter("referenceMarker"), e.consume(i), e.exit("referenceMarker"), e.exit("reference"), t) : n(i);
    }
}
const AF = { name: "labelStartImage", resolveAll: zg.resolveAll, tokenize: xF };
function xF(e, t, n) {
    const r = this;
    return a;
    function a(l) {
        return e.enter("labelImage"), e.enter("labelImageMarker"), e.consume(l), e.exit("labelImageMarker"), i;
    }
    function i(l) {
        return l === 91 ? (e.enter("labelMarker"), e.consume(l), e.exit("labelMarker"), e.exit("labelImage"), o) : n(l);
    }
    function o(l) {
        return l === 94 && "_hiddenFootnoteSupport" in r.parser.constructs ? n(l) : t(l);
    }
}
const RF = { name: "labelStartLink", resolveAll: zg.resolveAll, tokenize: IF };
function IF(e, t, n) {
    const r = this;
    return a;
    function a(o) {
        return e.enter("labelLink"), e.enter("labelMarker"), e.consume(o), e.exit("labelMarker"), e.exit("labelLink"), i;
    }
    function i(o) {
        return o === 94 && "_hiddenFootnoteSupport" in r.parser.constructs ? n(o) : t(o);
    }
}
const hf = { name: "lineEnding", tokenize: NF };
function NF(e, t) {
    return n;
    function n(r) {
        return e.enter("lineEnding"), e.consume(r), e.exit("lineEnding"), be(e, t, "linePrefix");
    }
}
const fl = { name: "thematicBreak", tokenize: _F };
function _F(e, t, n) {
    let r = 0,
        a;
    return i;
    function i(u) {
        return e.enter("thematicBreak"), o(u);
    }
    function o(u) {
        return (a = u), l(u);
    }
    function l(u) {
        return u === a ? (e.enter("thematicBreakSequence"), s(u)) : r >= 3 && (u === null || ae(u)) ? (e.exit("thematicBreak"), t(u)) : n(u);
    }
    function s(u) {
        return u === a ? (e.consume(u), r++, s) : (e.exit("thematicBreakSequence"), ye(u) ? be(e, l, "whitespace")(u) : l(u));
    }
}
const Tt = { continuation: { tokenize: DF }, exit: FF, name: "list", tokenize: LF },
    CF = { partial: !0, tokenize: PF },
    OF = { partial: !0, tokenize: MF };
function LF(e, t, n) {
    const r = this,
        a = r.events[r.events.length - 1];
    let i = a && a[1].type === "linePrefix" ? a[2].sliceSerialize(a[1], !0).length : 0,
        o = 0;
    return l;
    function l(f) {
        const b = r.containerState.type || (f === 42 || f === 43 || f === 45 ? "listUnordered" : "listOrdered");
        if (b === "listUnordered" ? !r.containerState.marker || f === r.containerState.marker : Vm(f)) {
            if ((r.containerState.type || ((r.containerState.type = b), e.enter(b, { _container: !0 })), b === "listUnordered"))
                return e.enter("listItemPrefix"), f === 42 || f === 45 ? e.check(fl, n, u)(f) : u(f);
            if (!r.interrupt || f === 49) return e.enter("listItemPrefix"), e.enter("listItemValue"), s(f);
        }
        return n(f);
    }
    function s(f) {
        return Vm(f) && ++o < 10
            ? (e.consume(f), s)
            : (!r.interrupt || o < 2) && (r.containerState.marker ? f === r.containerState.marker : f === 41 || f === 46)
              ? (e.exit("listItemValue"), u(f))
              : n(f);
    }
    function u(f) {
        return (
            e.enter("listItemMarker"),
            e.consume(f),
            e.exit("listItemMarker"),
            (r.containerState.marker = r.containerState.marker || f),
            e.check(go, r.interrupt ? n : c, e.attempt(CF, m, d))
        );
    }
    function c(f) {
        return (r.containerState.initialBlankLine = !0), i++, m(f);
    }
    function d(f) {
        return ye(f) ? (e.enter("listItemPrefixWhitespace"), e.consume(f), e.exit("listItemPrefixWhitespace"), m) : n(f);
    }
    function m(f) {
        return (r.containerState.size = i + r.sliceSerialize(e.exit("listItemPrefix"), !0).length), t(f);
    }
}
function DF(e, t, n) {
    const r = this;
    return (r.containerState._closeFlow = void 0), e.check(go, a, i);
    function a(l) {
        return (
            (r.containerState.furtherBlankLines = r.containerState.furtherBlankLines || r.containerState.initialBlankLine),
            be(e, t, "listItemIndent", r.containerState.size + 1)(l)
        );
    }
    function i(l) {
        return r.containerState.furtherBlankLines || !ye(l)
            ? ((r.containerState.furtherBlankLines = void 0), (r.containerState.initialBlankLine = void 0), o(l))
            : ((r.containerState.furtherBlankLines = void 0), (r.containerState.initialBlankLine = void 0), e.attempt(OF, t, o)(l));
    }
    function o(l) {
        return (
            (r.containerState._closeFlow = !0),
            (r.interrupt = void 0),
            be(e, e.attempt(Tt, t, n), "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(l)
        );
    }
}
function MF(e, t, n) {
    const r = this;
    return be(e, a, "listItemIndent", r.containerState.size + 1);
    function a(i) {
        const o = r.events[r.events.length - 1];
        return o && o[1].type === "listItemIndent" && o[2].sliceSerialize(o[1], !0).length === r.containerState.size ? t(i) : n(i);
    }
}
function FF(e) {
    e.exit(this.containerState.type);
}
function PF(e, t, n) {
    const r = this;
    return be(e, a, "listItemPrefixWhitespace", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4 + 1);
    function a(i) {
        const o = r.events[r.events.length - 1];
        return !ye(i) && o && o[1].type === "listItemPrefixWhitespace" ? t(i) : n(i);
    }
}
const b2 = { name: "setextUnderline", resolveTo: BF, tokenize: UF };
function BF(e, t) {
    let n = e.length,
        r,
        a,
        i;
    for (; n--; )
        if (e[n][0] === "enter") {
            if (e[n][1].type === "content") {
                r = n;
                break;
            }
            e[n][1].type === "paragraph" && (a = n);
        } else e[n][1].type === "content" && e.splice(n, 1), !i && e[n][1].type === "definition" && (i = n);
    const o = { type: "setextHeading", start: { ...e[a][1].start }, end: { ...e[e.length - 1][1].end } };
    return (
        (e[a][1].type = "setextHeadingText"),
        i ? (e.splice(a, 0, ["enter", o, t]), e.splice(i + 1, 0, ["exit", e[r][1], t]), (e[r][1].end = { ...e[i][1].end })) : (e[r][1] = o),
        e.push(["exit", o, t]),
        e
    );
}
function UF(e, t, n) {
    const r = this;
    let a;
    return i;
    function i(u) {
        let c = r.events.length,
            d;
        for (; c--; )
            if (r.events[c][1].type !== "lineEnding" && r.events[c][1].type !== "linePrefix" && r.events[c][1].type !== "content") {
                d = r.events[c][1].type === "paragraph";
                break;
            }
        return !r.parser.lazy[r.now().line] && (r.interrupt || d) ? (e.enter("setextHeadingLine"), (a = u), o(u)) : n(u);
    }
    function o(u) {
        return e.enter("setextHeadingLineSequence"), l(u);
    }
    function l(u) {
        return u === a ? (e.consume(u), l) : (e.exit("setextHeadingLineSequence"), ye(u) ? be(e, s, "lineSuffix")(u) : s(u));
    }
    function s(u) {
        return u === null || ae(u) ? (e.exit("setextHeadingLine"), t(u)) : n(u);
    }
}
const zF = { tokenize: $F };
function $F(e) {
    const t = this,
        n = e.attempt(
            go,
            r,
            e.attempt(this.parser.constructs.flowInitial, a, be(e, e.attempt(this.parser.constructs.flow, a, e.attempt(VM, a)), "linePrefix")),
        );
    return n;
    function r(i) {
        if (i === null) {
            e.consume(i);
            return;
        }
        return e.enter("lineEndingBlank"), e.consume(i), e.exit("lineEndingBlank"), (t.currentConstruct = void 0), n;
    }
    function a(i) {
        if (i === null) {
            e.consume(i);
            return;
        }
        return e.enter("lineEnding"), e.consume(i), e.exit("lineEnding"), (t.currentConstruct = void 0), n;
    }
}
const qF = { resolveAll: bA() },
    GF = gA("string"),
    HF = gA("text");
function gA(e) {
    return { resolveAll: bA(e === "text" ? jF : void 0), tokenize: t };
    function t(n) {
        const r = this,
            a = this.parser.constructs[e],
            i = n.attempt(a, o, l);
        return o;
        function o(c) {
            return u(c) ? i(c) : l(c);
        }
        function l(c) {
            if (c === null) {
                n.consume(c);
                return;
            }
            return n.enter("data"), n.consume(c), s;
        }
        function s(c) {
            return u(c) ? (n.exit("data"), i(c)) : (n.consume(c), s);
        }
        function u(c) {
            if (c === null) return !0;
            const d = a[c];
            let m = -1;
            if (d)
                for (; ++m < d.length; ) {
                    const f = d[m];
                    if (!f.previous || f.previous.call(r, r.previous)) return !0;
                }
            return !1;
        }
    }
}
function bA(e) {
    return t;
    function t(n, r) {
        let a = -1,
            i;
        for (; ++a <= n.length; )
            i === void 0
                ? n[a] && n[a][1].type === "data" && ((i = a), a++)
                : (!n[a] || n[a][1].type !== "data") &&
                  (a !== i + 2 && ((n[i][1].end = n[a - 1][1].end), n.splice(i + 2, a - i - 2), (a = i + 2)), (i = void 0));
        return e ? e(n, r) : n;
    }
}
function jF(e, t) {
    let n = 0;
    for (; ++n <= e.length; )
        if ((n === e.length || e[n][1].type === "lineEnding") && e[n - 1][1].type === "data") {
            const r = e[n - 1][1],
                a = t.sliceStream(r);
            let i = a.length,
                o = -1,
                l = 0,
                s;
            for (; i--; ) {
                const u = a[i];
                if (typeof u == "string") {
                    for (o = u.length; u.charCodeAt(o - 1) === 32; ) l++, o--;
                    if (o) break;
                    o = -1;
                } else if (u === -2) (s = !0), l++;
                else if (u !== -1) {
                    i++;
                    break;
                }
            }
            if (l) {
                const u = {
                    type: n === e.length || s || l < 2 ? "lineSuffix" : "hardBreakTrailing",
                    start: {
                        _bufferIndex: i ? o : r.start._bufferIndex + o,
                        _index: r.start._index + i,
                        line: r.end.line,
                        column: r.end.column - l,
                        offset: r.end.offset - l,
                    },
                    end: { ...r.end },
                };
                (r.end = { ...u.start }), r.start.offset === r.end.offset ? Object.assign(r, u) : (e.splice(n, 0, ["enter", u, t], ["exit", u, t]), (n += 2));
            }
            n++;
        }
    return e;
}
const VF = { 42: Tt, 43: Tt, 45: Tt, 48: Tt, 49: Tt, 50: Tt, 51: Tt, 52: Tt, 53: Tt, 54: Tt, 55: Tt, 56: Tt, 57: Tt, 62: uA },
    WF = { 91: ZM },
    YF = { [-2]: mf, [-1]: mf, 32: mf },
    KF = { 35: rF, 42: fl, 45: [b2, fl], 60: lF, 61: b2, 95: fl, 96: h2, 126: h2 },
    XF = { 38: dA, 92: cA },
    ZF = { [-5]: hf, [-4]: hf, [-3]: hf, 33: AF, 38: dA, 42: Wm, 60: [RM, mF], 91: RF, 92: [tF, cA], 93: zg, 95: Wm, 96: zM },
    QF = { null: [Wm, qF] },
    JF = { null: [42, 95] },
    eP = { null: [] },
    tP = Object.freeze(
        Object.defineProperty(
            {
                __proto__: null,
                attentionMarkers: JF,
                contentInitial: WF,
                disable: eP,
                document: VF,
                flow: KF,
                flowInitial: YF,
                insideSpan: QF,
                string: XF,
                text: ZF,
            },
            Symbol.toStringTag,
            { value: "Module" },
        ),
    );
function nP(e, t, n) {
    let r = { _bufferIndex: -1, _index: 0, line: (n && n.line) || 1, column: (n && n.column) || 1, offset: (n && n.offset) || 0 };
    const a = {},
        i = [];
    let o = [],
        l = [];
    const s = { attempt: L(R), check: L(k), consume: g, enter: v, exit: T, interrupt: L(k, { interrupt: !0 }) },
        u = { code: null, containerState: {}, defineSkip: E, events: [], now: b, parser: e, previous: null, sliceSerialize: m, sliceStream: f, write: d };
    let c = t.tokenize.call(u, s);
    return t.resolveAll && i.push(t), u;
    function d(B) {
        return (o = Xt(o, B)), I(), o[o.length - 1] !== null ? [] : (F(t, 0), (u.events = Es(i, u.events, u)), u.events);
    }
    function m(B, $) {
        return aP(f(B), $);
    }
    function f(B) {
        return rP(o, B);
    }
    function b() {
        const { _bufferIndex: B, _index: $, line: ne, column: re, offset: J } = r;
        return { _bufferIndex: B, _index: $, line: ne, column: re, offset: J };
    }
    function E(B) {
        (a[B.line] = B.column), O();
    }
    function I() {
        let B;
        for (; r._index < o.length; ) {
            const $ = o[r._index];
            if (typeof $ == "string")
                for (B = r._index, r._bufferIndex < 0 && (r._bufferIndex = 0); r._index === B && r._bufferIndex < $.length; ) y($.charCodeAt(r._bufferIndex));
            else y($);
        }
    }
    function y(B) {
        c = c(B);
    }
    function g(B) {
        ae(B) ? (r.line++, (r.column = 1), (r.offset += B === -3 ? 2 : 1), O()) : B !== -1 && (r.column++, r.offset++),
            r._bufferIndex < 0 ? r._index++ : (r._bufferIndex++, r._bufferIndex === o[r._index].length && ((r._bufferIndex = -1), r._index++)),
            (u.previous = B);
    }
    function v(B, $) {
        const ne = $ || {};
        return (ne.type = B), (ne.start = b()), u.events.push(["enter", ne, u]), l.push(ne), ne;
    }
    function T(B) {
        const $ = l.pop();
        return ($.end = b()), u.events.push(["exit", $, u]), $;
    }
    function R(B, $) {
        F(B, $.from);
    }
    function k(B, $) {
        $.restore();
    }
    function L(B, $) {
        return ne;
        function ne(re, J, se) {
            let ce, U, W, A;
            return Array.isArray(re) ? Q(re) : "tokenize" in re ? Q([re]) : Y(re);
            function Y(de) {
                return Te;
                function Te(He) {
                    const it = He !== null && de[He],
                        pt = He !== null && de.null,
                        sn = [...(Array.isArray(it) ? it : it ? [it] : []), ...(Array.isArray(pt) ? pt : pt ? [pt] : [])];
                    return Q(sn)(He);
                }
            }
            function Q(de) {
                return (ce = de), (U = 0), de.length === 0 ? se : C(de[U]);
            }
            function C(de) {
                return Te;
                function Te(He) {
                    return (
                        (A = M()),
                        (W = de),
                        de.partial || (u.currentConstruct = de),
                        de.name && u.parser.constructs.disable.null.includes(de.name)
                            ? ke()
                            : de.tokenize.call($ ? Object.assign(Object.create(u), $) : u, s, he, ke)(He)
                    );
                }
            }
            function he(de) {
                return B(W, A), J;
            }
            function ke(de) {
                return A.restore(), ++U < ce.length ? C(ce[U]) : se;
            }
        }
    }
    function F(B, $) {
        B.resolveAll && !i.includes(B) && i.push(B),
            B.resolve && qt(u.events, $, u.events.length - $, B.resolve(u.events.slice($), u)),
            B.resolveTo && (u.events = B.resolveTo(u.events, u));
    }
    function M() {
        const B = b(),
            $ = u.previous,
            ne = u.currentConstruct,
            re = u.events.length,
            J = Array.from(l);
        return { from: re, restore: se };
        function se() {
            (r = B), (u.previous = $), (u.currentConstruct = ne), (u.events.length = re), (l = J), O();
        }
    }
    function O() {
        r.line in a && r.column < 2 && ((r.column = a[r.line]), (r.offset += a[r.line] - 1));
    }
}
function rP(e, t) {
    const n = t.start._index,
        r = t.start._bufferIndex,
        a = t.end._index,
        i = t.end._bufferIndex;
    let o;
    if (n === a) o = [e[n].slice(r, i)];
    else {
        if (((o = e.slice(n, a)), r > -1)) {
            const l = o[0];
            typeof l == "string" ? (o[0] = l.slice(r)) : o.shift();
        }
        i > 0 && o.push(e[a].slice(0, i));
    }
    return o;
}
function aP(e, t) {
    let n = -1;
    const r = [];
    let a;
    for (; ++n < e.length; ) {
        const i = e[n];
        let o;
        if (typeof i == "string") o = i;
        else
            switch (i) {
                case -5: {
                    o = "\r";
                    break;
                }
                case -4: {
                    o = `
`;
                    break;
                }
                case -3: {
                    o = `\r
`;
                    break;
                }
                case -2: {
                    o = t ? " " : "	";
                    break;
                }
                case -1: {
                    if (!t && a) continue;
                    o = " ";
                    break;
                }
                default:
                    o = String.fromCharCode(i);
            }
        (a = i === -2), r.push(o);
    }
    return r.join("");
}
function iP(e) {
    const r = {
        constructs: lA([tP, ...((e || {}).extensions || [])]),
        content: a(EM),
        defined: [],
        document: a(wM),
        flow: a(zF),
        lazy: {},
        string: a(GF),
        text: a(HF),
    };
    return r;
    function a(i) {
        return o;
        function o(l) {
            return nP(r, i, l);
        }
    }
}
function oP(e) {
    for (; !pA(e); );
    return e;
}
const y2 = /[\0\t\n\r]/g;
function lP() {
    let e = 1,
        t = "",
        n = !0,
        r;
    return a;
    function a(i, o, l) {
        const s = [];
        let u, c, d, m, f;
        for (
            i = t + (typeof i == "string" ? i.toString() : new TextDecoder(o || void 0).decode(i)),
                d = 0,
                t = "",
                n && (i.charCodeAt(0) === 65279 && d++, (n = void 0));
            d < i.length;

        ) {
            if (((y2.lastIndex = d), (u = y2.exec(i)), (m = u && u.index !== void 0 ? u.index : i.length), (f = i.charCodeAt(m)), !u)) {
                t = i.slice(d);
                break;
            }
            if (f === 10 && d === m && r) s.push(-3), (r = void 0);
            else
                switch ((r && (s.push(-5), (r = void 0)), d < m && (s.push(i.slice(d, m)), (e += m - d)), f)) {
                    case 0: {
                        s.push(65533), e++;
                        break;
                    }
                    case 9: {
                        for (c = Math.ceil(e / 4) * 4, s.push(-2); e++ < c; ) s.push(-1);
                        break;
                    }
                    case 10: {
                        s.push(-4), (e = 1);
                        break;
                    }
                    default:
                        (r = !0), (e = 1);
                }
            d = m + 1;
        }
        return l && (r && s.push(-5), t && s.push(t), s.push(null)), s;
    }
}
const sP = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
function uP(e) {
    return e.replace(sP, cP);
}
function cP(e, t, n) {
    if (t) return t;
    if (n.charCodeAt(0) === 35) {
        const a = n.charCodeAt(1),
            i = a === 120 || a === 88;
        return sA(n.slice(i ? 2 : 1), i ? 16 : 10);
    }
    return Ug(n) || e;
}
function ml(e) {
    return !e || typeof e != "object"
        ? ""
        : "position" in e || "type" in e
          ? v2(e.position)
          : "start" in e || "end" in e
            ? v2(e)
            : "line" in e || "column" in e
              ? Ym(e)
              : "";
}
function Ym(e) {
    return E2(e && e.line) + ":" + E2(e && e.column);
}
function v2(e) {
    return Ym(e && e.start) + "-" + Ym(e && e.end);
}
function E2(e) {
    return e && typeof e == "number" ? e : 1;
}
const yA = {}.hasOwnProperty;
function dP(e, t, n) {
    return (
        typeof t != "string" && ((n = t), (t = void 0)),
        pP(n)(
            oP(
                iP(n)
                    .document()
                    .write(lP()(e, t, !0)),
            ),
        )
    );
}
function pP(e) {
    const t = {
        transforms: [],
        canContainEols: ["emphasis", "fragment", "heading", "paragraph", "strong"],
        enter: {
            autolink: i(Dr),
            autolinkProtocol: M,
            autolinkEmail: M,
            atxHeading: i(ri),
            blockQuote: i(pt),
            characterEscape: M,
            characterReference: M,
            codeFenced: i(sn),
            codeFencedFenceInfo: o,
            codeFencedFenceMeta: o,
            codeIndented: i(sn, o),
            codeText: i(ti, o),
            codeTextData: M,
            data: M,
            codeFlowValue: M,
            definition: i(Lr),
            definitionDestinationString: o,
            definitionLabelString: o,
            definitionTitleString: o,
            emphasis: i(ni),
            hardBreakEscape: i(ai),
            hardBreakTrailing: i(ai),
            htmlFlow: i(la, o),
            htmlFlowData: M,
            htmlText: i(la, o),
            htmlTextData: M,
            image: i(sa),
            label: o,
            link: i(Dr),
            listItem: i(o6),
            listItemValue: m,
            listOrdered: i(y1, d),
            listUnordered: i(y1),
            paragraph: i(l6),
            reference: C,
            referenceString: o,
            resourceDestinationString: o,
            resourceTitleString: o,
            setextHeading: i(ri),
            strong: i(s6),
            thematicBreak: i(c6),
        },
        exit: {
            atxHeading: s(),
            atxHeadingSequence: R,
            autolink: s(),
            autolinkEmail: it,
            autolinkProtocol: He,
            blockQuote: s(),
            characterEscapeValue: O,
            characterReferenceMarkerHexadecimal: ke,
            characterReferenceMarkerNumeric: ke,
            characterReferenceValue: de,
            characterReference: Te,
            codeFenced: s(I),
            codeFencedFence: E,
            codeFencedFenceInfo: f,
            codeFencedFenceMeta: b,
            codeFlowValue: O,
            codeIndented: s(y),
            codeText: s(J),
            codeTextData: O,
            data: O,
            definition: s(),
            definitionDestinationString: T,
            definitionLabelString: g,
            definitionTitleString: v,
            emphasis: s(),
            hardBreakEscape: s($),
            hardBreakTrailing: s($),
            htmlFlow: s(ne),
            htmlFlowData: O,
            htmlText: s(re),
            htmlTextData: O,
            image: s(ce),
            label: W,
            labelText: U,
            lineEnding: B,
            link: s(se),
            listItem: s(),
            listOrdered: s(),
            listUnordered: s(),
            paragraph: s(),
            referenceString: he,
            resourceDestinationString: A,
            resourceTitleString: Y,
            resource: Q,
            setextHeading: s(F),
            setextHeadingLineSequence: L,
            setextHeadingText: k,
            strong: s(),
            thematicBreak: s(),
        },
    };
    vA(t, (e || {}).mdastExtensions || []);
    const n = {};
    return r;
    function r(z) {
        let X = { type: "root", children: [] };
        const pe = { stack: [X], tokenStack: [], config: t, enter: l, exit: u, buffer: o, resume: c, data: n },
            Ee = [];
        let xe = -1;
        for (; ++xe < z.length; )
            if (z[xe][1].type === "listOrdered" || z[xe][1].type === "listUnordered")
                if (z[xe][0] === "enter") Ee.push(xe);
                else {
                    const un = Ee.pop();
                    xe = a(z, un, xe);
                }
        for (xe = -1; ++xe < z.length; ) {
            const un = t[z[xe][0]];
            yA.call(un, z[xe][1].type) && un[z[xe][1].type].call(Object.assign({ sliceSerialize: z[xe][2].sliceSerialize }, pe), z[xe][1]);
        }
        if (pe.tokenStack.length > 0) {
            const un = pe.tokenStack[pe.tokenStack.length - 1];
            (un[1] || S2).call(pe, void 0, un[0]);
        }
        for (
            X.position = {
                start: rr(z.length > 0 ? z[0][1].start : { line: 1, column: 1, offset: 0 }),
                end: rr(z.length > 0 ? z[z.length - 2][1].end : { line: 1, column: 1, offset: 0 }),
            },
                xe = -1;
            ++xe < t.transforms.length;

        )
            X = t.transforms[xe](X) || X;
        return X;
    }
    function a(z, X, pe) {
        let Ee = X - 1,
            xe = -1,
            un = !1,
            Mr,
            Dn,
            ii,
            oi;
        for (; ++Ee <= pe; ) {
            const Mt = z[Ee];
            switch (Mt[1].type) {
                case "listUnordered":
                case "listOrdered":
                case "blockQuote": {
                    Mt[0] === "enter" ? xe++ : xe--, (oi = void 0);
                    break;
                }
                case "lineEndingBlank": {
                    Mt[0] === "enter" && (Mr && !oi && !xe && !ii && (ii = Ee), (oi = void 0));
                    break;
                }
                case "linePrefix":
                case "listItemValue":
                case "listItemMarker":
                case "listItemPrefix":
                case "listItemPrefixWhitespace":
                    break;
                default:
                    oi = void 0;
            }
            if (
                (!xe && Mt[0] === "enter" && Mt[1].type === "listItemPrefix") ||
                (xe === -1 && Mt[0] === "exit" && (Mt[1].type === "listUnordered" || Mt[1].type === "listOrdered"))
            ) {
                if (Mr) {
                    let ua = Ee;
                    for (Dn = void 0; ua--; ) {
                        const Mn = z[ua];
                        if (Mn[1].type === "lineEnding" || Mn[1].type === "lineEndingBlank") {
                            if (Mn[0] === "exit") continue;
                            Dn && ((z[Dn][1].type = "lineEndingBlank"), (un = !0)), (Mn[1].type = "lineEnding"), (Dn = ua);
                        } else if (
                            !(
                                Mn[1].type === "linePrefix" ||
                                Mn[1].type === "blockQuotePrefix" ||
                                Mn[1].type === "blockQuotePrefixWhitespace" ||
                                Mn[1].type === "blockQuoteMarker" ||
                                Mn[1].type === "listItemIndent"
                            )
                        )
                            break;
                    }
                    ii && (!Dn || ii < Dn) && (Mr._spread = !0),
                        (Mr.end = Object.assign({}, Dn ? z[Dn][1].start : Mt[1].end)),
                        z.splice(Dn || Ee, 0, ["exit", Mr, Mt[2]]),
                        Ee++,
                        pe++;
                }
                if (Mt[1].type === "listItemPrefix") {
                    const ua = { type: "listItem", _spread: !1, start: Object.assign({}, Mt[1].start), end: void 0 };
                    (Mr = ua), z.splice(Ee, 0, ["enter", ua, Mt[2]]), Ee++, pe++, (ii = void 0), (oi = !0);
                }
            }
        }
        return (z[X][1]._spread = un), pe;
    }
    function i(z, X) {
        return pe;
        function pe(Ee) {
            l.call(this, z(Ee), Ee), X && X.call(this, Ee);
        }
    }
    function o() {
        this.stack.push({ type: "fragment", children: [] });
    }
    function l(z, X, pe) {
        this.stack[this.stack.length - 1].children.push(z),
            this.stack.push(z),
            this.tokenStack.push([X, pe || void 0]),
            (z.position = { start: rr(X.start), end: void 0 });
    }
    function s(z) {
        return X;
        function X(pe) {
            z && z.call(this, pe), u.call(this, pe);
        }
    }
    function u(z, X) {
        const pe = this.stack.pop(),
            Ee = this.tokenStack.pop();
        if (Ee) Ee[0].type !== z.type && (X ? X.call(this, z, Ee[0]) : (Ee[1] || S2).call(this, z, Ee[0]));
        else throw new Error("Cannot close `" + z.type + "` (" + ml({ start: z.start, end: z.end }) + "): it’s not open");
        pe.position.end = rr(z.end);
    }
    function c() {
        return Bg(this.stack.pop());
    }
    function d() {
        this.data.expectingFirstListItemValue = !0;
    }
    function m(z) {
        if (this.data.expectingFirstListItemValue) {
            const X = this.stack[this.stack.length - 2];
            (X.start = Number.parseInt(this.sliceSerialize(z), 10)), (this.data.expectingFirstListItemValue = void 0);
        }
    }
    function f() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        X.lang = z;
    }
    function b() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        X.meta = z;
    }
    function E() {
        this.data.flowCodeInside || (this.buffer(), (this.data.flowCodeInside = !0));
    }
    function I() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        (X.value = z.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, "")), (this.data.flowCodeInside = void 0);
    }
    function y() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        X.value = z.replace(/(\r?\n|\r)$/g, "");
    }
    function g(z) {
        const X = this.resume(),
            pe = this.stack[this.stack.length - 1];
        (pe.label = X), (pe.identifier = bn(this.sliceSerialize(z)).toLowerCase());
    }
    function v() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        X.title = z;
    }
    function T() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        X.url = z;
    }
    function R(z) {
        const X = this.stack[this.stack.length - 1];
        if (!X.depth) {
            const pe = this.sliceSerialize(z).length;
            X.depth = pe;
        }
    }
    function k() {
        this.data.setextHeadingSlurpLineEnding = !0;
    }
    function L(z) {
        const X = this.stack[this.stack.length - 1];
        X.depth = this.sliceSerialize(z).codePointAt(0) === 61 ? 1 : 2;
    }
    function F() {
        this.data.setextHeadingSlurpLineEnding = void 0;
    }
    function M(z) {
        const pe = this.stack[this.stack.length - 1].children;
        let Ee = pe[pe.length - 1];
        (!Ee || Ee.type !== "text") && ((Ee = u6()), (Ee.position = { start: rr(z.start), end: void 0 }), pe.push(Ee)), this.stack.push(Ee);
    }
    function O(z) {
        const X = this.stack.pop();
        (X.value += this.sliceSerialize(z)), (X.position.end = rr(z.end));
    }
    function B(z) {
        const X = this.stack[this.stack.length - 1];
        if (this.data.atHardBreak) {
            const pe = X.children[X.children.length - 1];
            (pe.position.end = rr(z.end)), (this.data.atHardBreak = void 0);
            return;
        }
        !this.data.setextHeadingSlurpLineEnding && t.canContainEols.includes(X.type) && (M.call(this, z), O.call(this, z));
    }
    function $() {
        this.data.atHardBreak = !0;
    }
    function ne() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        X.value = z;
    }
    function re() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        X.value = z;
    }
    function J() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        X.value = z;
    }
    function se() {
        const z = this.stack[this.stack.length - 1];
        if (this.data.inReference) {
            const X = this.data.referenceType || "shortcut";
            (z.type += "Reference"), (z.referenceType = X), delete z.url, delete z.title;
        } else delete z.identifier, delete z.label;
        this.data.referenceType = void 0;
    }
    function ce() {
        const z = this.stack[this.stack.length - 1];
        if (this.data.inReference) {
            const X = this.data.referenceType || "shortcut";
            (z.type += "Reference"), (z.referenceType = X), delete z.url, delete z.title;
        } else delete z.identifier, delete z.label;
        this.data.referenceType = void 0;
    }
    function U(z) {
        const X = this.sliceSerialize(z),
            pe = this.stack[this.stack.length - 2];
        (pe.label = uP(X)), (pe.identifier = bn(X).toLowerCase());
    }
    function W() {
        const z = this.stack[this.stack.length - 1],
            X = this.resume(),
            pe = this.stack[this.stack.length - 1];
        if (((this.data.inReference = !0), pe.type === "link")) {
            const Ee = z.children;
            pe.children = Ee;
        } else pe.alt = X;
    }
    function A() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        X.url = z;
    }
    function Y() {
        const z = this.resume(),
            X = this.stack[this.stack.length - 1];
        X.title = z;
    }
    function Q() {
        this.data.inReference = void 0;
    }
    function C() {
        this.data.referenceType = "collapsed";
    }
    function he(z) {
        const X = this.resume(),
            pe = this.stack[this.stack.length - 1];
        (pe.label = X), (pe.identifier = bn(this.sliceSerialize(z)).toLowerCase()), (this.data.referenceType = "full");
    }
    function ke(z) {
        this.data.characterReferenceType = z.type;
    }
    function de(z) {
        const X = this.sliceSerialize(z),
            pe = this.data.characterReferenceType;
        let Ee;
        pe ? ((Ee = sA(X, pe === "characterReferenceMarkerNumeric" ? 10 : 16)), (this.data.characterReferenceType = void 0)) : (Ee = Ug(X));
        const xe = this.stack[this.stack.length - 1];
        xe.value += Ee;
    }
    function Te(z) {
        const X = this.stack.pop();
        X.position.end = rr(z.end);
    }
    function He(z) {
        O.call(this, z);
        const X = this.stack[this.stack.length - 1];
        X.url = this.sliceSerialize(z);
    }
    function it(z) {
        O.call(this, z);
        const X = this.stack[this.stack.length - 1];
        X.url = "mailto:" + this.sliceSerialize(z);
    }
    function pt() {
        return { type: "blockquote", children: [] };
    }
    function sn() {
        return { type: "code", lang: null, meta: null, value: "" };
    }
    function ti() {
        return { type: "inlineCode", value: "" };
    }
    function Lr() {
        return { type: "definition", identifier: "", label: null, title: null, url: "" };
    }
    function ni() {
        return { type: "emphasis", children: [] };
    }
    function ri() {
        return { type: "heading", depth: 0, children: [] };
    }
    function ai() {
        return { type: "break" };
    }
    function la() {
        return { type: "html", value: "" };
    }
    function sa() {
        return { type: "image", title: null, url: "", alt: null };
    }
    function Dr() {
        return { type: "link", title: null, url: "", children: [] };
    }
    function y1(z) {
        return { type: "list", ordered: z.type === "listOrdered", start: null, spread: z._spread, children: [] };
    }
    function o6(z) {
        return { type: "listItem", spread: z._spread, checked: null, children: [] };
    }
    function l6() {
        return { type: "paragraph", children: [] };
    }
    function s6() {
        return { type: "strong", children: [] };
    }
    function u6() {
        return { type: "text", value: "" };
    }
    function c6() {
        return { type: "thematicBreak" };
    }
}
function rr(e) {
    return { line: e.line, column: e.column, offset: e.offset };
}
function vA(e, t) {
    let n = -1;
    for (; ++n < t.length; ) {
        const r = t[n];
        Array.isArray(r) ? vA(e, r) : fP(e, r);
    }
}
function fP(e, t) {
    let n;
    for (n in t)
        if (yA.call(t, n))
            switch (n) {
                case "canContainEols": {
                    const r = t[n];
                    r && e[n].push(...r);
                    break;
                }
                case "transforms": {
                    const r = t[n];
                    r && e[n].push(...r);
                    break;
                }
                case "enter":
                case "exit": {
                    const r = t[n];
                    r && Object.assign(e[n], r);
                    break;
                }
            }
}
function S2(e, t) {
    throw e
        ? new Error(
              "Cannot close `" +
                  e.type +
                  "` (" +
                  ml({ start: e.start, end: e.end }) +
                  "): a different token (`" +
                  t.type +
                  "`, " +
                  ml({ start: t.start, end: t.end }) +
                  ") is open",
          )
        : new Error("Cannot close document, a token (`" + t.type + "`, " + ml({ start: t.start, end: t.end }) + ") is still open");
}
function mP(e) {
    const t = this;
    t.parser = n;
    function n(r) {
        return dP(r, { ...t.data("settings"), ...e, extensions: t.data("micromarkExtensions") || [], mdastExtensions: t.data("fromMarkdownExtensions") || [] });
    }
}
function hP(e, t) {
    const n = { type: "element", tagName: "blockquote", properties: {}, children: e.wrap(e.all(t), !0) };
    return e.patch(t, n), e.applyData(t, n);
}
function gP(e, t) {
    const n = { type: "element", tagName: "br", properties: {}, children: [] };
    return (
        e.patch(t, n),
        [
            e.applyData(t, n),
            {
                type: "text",
                value: `
`,
            },
        ]
    );
}
function bP(e, t) {
    const n = t.value
            ? t.value +
              `
`
            : "",
        r = {};
    t.lang && (r.className = ["language-" + t.lang]);
    let a = { type: "element", tagName: "code", properties: r, children: [{ type: "text", value: n }] };
    return (
        t.meta && (a.data = { meta: t.meta }),
        e.patch(t, a),
        (a = e.applyData(t, a)),
        (a = { type: "element", tagName: "pre", properties: {}, children: [a] }),
        e.patch(t, a),
        a
    );
}
function yP(e, t) {
    const n = { type: "element", tagName: "del", properties: {}, children: e.all(t) };
    return e.patch(t, n), e.applyData(t, n);
}
function vP(e, t) {
    const n = { type: "element", tagName: "em", properties: {}, children: e.all(t) };
    return e.patch(t, n), e.applyData(t, n);
}
function EP(e, t) {
    const n = typeof e.options.clobberPrefix == "string" ? e.options.clobberPrefix : "user-content-",
        r = String(t.identifier).toUpperCase(),
        a = Qa(r.toLowerCase()),
        i = e.footnoteOrder.indexOf(r);
    let o,
        l = e.footnoteCounts.get(r);
    l === void 0 ? ((l = 0), e.footnoteOrder.push(r), (o = e.footnoteOrder.length)) : (o = i + 1), (l += 1), e.footnoteCounts.set(r, l);
    const s = {
        type: "element",
        tagName: "a",
        properties: { href: "#" + n + "fn-" + a, id: n + "fnref-" + a + (l > 1 ? "-" + l : ""), dataFootnoteRef: !0, ariaDescribedBy: ["footnote-label"] },
        children: [{ type: "text", value: String(o) }],
    };
    e.patch(t, s);
    const u = { type: "element", tagName: "sup", properties: {}, children: [s] };
    return e.patch(t, u), e.applyData(t, u);
}
function SP(e, t) {
    const n = { type: "element", tagName: "h" + t.depth, properties: {}, children: e.all(t) };
    return e.patch(t, n), e.applyData(t, n);
}
function wP(e, t) {
    if (e.options.allowDangerousHtml) {
        const n = { type: "raw", value: t.value };
        return e.patch(t, n), e.applyData(t, n);
    }
}
function EA(e, t) {
    const n = t.referenceType;
    let r = "]";
    if ((n === "collapsed" ? (r += "[]") : n === "full" && (r += "[" + (t.label || t.identifier) + "]"), t.type === "imageReference"))
        return [{ type: "text", value: "![" + t.alt + r }];
    const a = e.all(t),
        i = a[0];
    i && i.type === "text" ? (i.value = "[" + i.value) : a.unshift({ type: "text", value: "[" });
    const o = a[a.length - 1];
    return o && o.type === "text" ? (o.value += r) : a.push({ type: "text", value: r }), a;
}
function kP(e, t) {
    const n = String(t.identifier).toUpperCase(),
        r = e.definitionById.get(n);
    if (!r) return EA(e, t);
    const a = { src: Qa(r.url || ""), alt: t.alt };
    r.title !== null && r.title !== void 0 && (a.title = r.title);
    const i = { type: "element", tagName: "img", properties: a, children: [] };
    return e.patch(t, i), e.applyData(t, i);
}
function TP(e, t) {
    const n = { src: Qa(t.url) };
    t.alt !== null && t.alt !== void 0 && (n.alt = t.alt), t.title !== null && t.title !== void 0 && (n.title = t.title);
    const r = { type: "element", tagName: "img", properties: n, children: [] };
    return e.patch(t, r), e.applyData(t, r);
}
function AP(e, t) {
    const n = { type: "text", value: t.value.replace(/\r?\n|\r/g, " ") };
    e.patch(t, n);
    const r = { type: "element", tagName: "code", properties: {}, children: [n] };
    return e.patch(t, r), e.applyData(t, r);
}
function xP(e, t) {
    const n = String(t.identifier).toUpperCase(),
        r = e.definitionById.get(n);
    if (!r) return EA(e, t);
    const a = { href: Qa(r.url || "") };
    r.title !== null && r.title !== void 0 && (a.title = r.title);
    const i = { type: "element", tagName: "a", properties: a, children: e.all(t) };
    return e.patch(t, i), e.applyData(t, i);
}
function RP(e, t) {
    const n = { href: Qa(t.url) };
    t.title !== null && t.title !== void 0 && (n.title = t.title);
    const r = { type: "element", tagName: "a", properties: n, children: e.all(t) };
    return e.patch(t, r), e.applyData(t, r);
}
function IP(e, t, n) {
    const r = e.all(t),
        a = n ? NP(n) : SA(t),
        i = {},
        o = [];
    if (typeof t.checked == "boolean") {
        const c = r[0];
        let d;
        c && c.type === "element" && c.tagName === "p" ? (d = c) : ((d = { type: "element", tagName: "p", properties: {}, children: [] }), r.unshift(d)),
            d.children.length > 0 && d.children.unshift({ type: "text", value: " " }),
            d.children.unshift({ type: "element", tagName: "input", properties: { type: "checkbox", checked: t.checked, disabled: !0 }, children: [] }),
            (i.className = ["task-list-item"]);
    }
    let l = -1;
    for (; ++l < r.length; ) {
        const c = r[l];
        (a || l !== 0 || c.type !== "element" || c.tagName !== "p") &&
            o.push({
                type: "text",
                value: `
`,
            }),
            c.type === "element" && c.tagName === "p" && !a ? o.push(...c.children) : o.push(c);
    }
    const s = r[r.length - 1];
    s &&
        (a || s.type !== "element" || s.tagName !== "p") &&
        o.push({
            type: "text",
            value: `
`,
        });
    const u = { type: "element", tagName: "li", properties: i, children: o };
    return e.patch(t, u), e.applyData(t, u);
}
function NP(e) {
    let t = !1;
    if (e.type === "list") {
        t = e.spread || !1;
        const n = e.children;
        let r = -1;
        for (; !t && ++r < n.length; ) t = SA(n[r]);
    }
    return t;
}
function SA(e) {
    const t = e.spread;
    return t ?? e.children.length > 1;
}
function _P(e, t) {
    const n = {},
        r = e.all(t);
    let a = -1;
    for (typeof t.start == "number" && t.start !== 1 && (n.start = t.start); ++a < r.length; ) {
        const o = r[a];
        if (
            o.type === "element" &&
            o.tagName === "li" &&
            o.properties &&
            Array.isArray(o.properties.className) &&
            o.properties.className.includes("task-list-item")
        ) {
            n.className = ["contains-task-list"];
            break;
        }
    }
    const i = { type: "element", tagName: t.ordered ? "ol" : "ul", properties: n, children: e.wrap(r, !0) };
    return e.patch(t, i), e.applyData(t, i);
}
function CP(e, t) {
    const n = { type: "element", tagName: "p", properties: {}, children: e.all(t) };
    return e.patch(t, n), e.applyData(t, n);
}
function OP(e, t) {
    const n = { type: "root", children: e.wrap(e.all(t)) };
    return e.patch(t, n), e.applyData(t, n);
}
function LP(e, t) {
    const n = { type: "element", tagName: "strong", properties: {}, children: e.all(t) };
    return e.patch(t, n), e.applyData(t, n);
}
function DP(e, t) {
    const n = e.all(t),
        r = n.shift(),
        a = [];
    if (r) {
        const o = { type: "element", tagName: "thead", properties: {}, children: e.wrap([r], !0) };
        e.patch(t.children[0], o), a.push(o);
    }
    if (n.length > 0) {
        const o = { type: "element", tagName: "tbody", properties: {}, children: e.wrap(n, !0) },
            l = Dg(t.children[1]),
            s = eA(t.children[t.children.length - 1]);
        l && s && (o.position = { start: l, end: s }), a.push(o);
    }
    const i = { type: "element", tagName: "table", properties: {}, children: e.wrap(a, !0) };
    return e.patch(t, i), e.applyData(t, i);
}
function MP(e, t, n) {
    const r = n ? n.children : void 0,
        i = (r ? r.indexOf(t) : 1) === 0 ? "th" : "td",
        o = n && n.type === "table" ? n.align : void 0,
        l = o ? o.length : t.children.length;
    let s = -1;
    const u = [];
    for (; ++s < l; ) {
        const d = t.children[s],
            m = {},
            f = o ? o[s] : void 0;
        f && (m.align = f);
        let b = { type: "element", tagName: i, properties: m, children: [] };
        d && ((b.children = e.all(d)), e.patch(d, b), (b = e.applyData(d, b))), u.push(b);
    }
    const c = { type: "element", tagName: "tr", properties: {}, children: e.wrap(u, !0) };
    return e.patch(t, c), e.applyData(t, c);
}
function FP(e, t) {
    const n = { type: "element", tagName: "td", properties: {}, children: e.all(t) };
    return e.patch(t, n), e.applyData(t, n);
}
const w2 = 9,
    k2 = 32;
function PP(e) {
    const t = String(e),
        n = /\r?\n|\r/g;
    let r = n.exec(t),
        a = 0;
    const i = [];
    for (; r; ) i.push(T2(t.slice(a, r.index), a > 0, !0), r[0]), (a = r.index + r[0].length), (r = n.exec(t));
    return i.push(T2(t.slice(a), a > 0, !1)), i.join("");
}
function T2(e, t, n) {
    let r = 0,
        a = e.length;
    if (t) {
        let i = e.codePointAt(r);
        for (; i === w2 || i === k2; ) r++, (i = e.codePointAt(r));
    }
    if (n) {
        let i = e.codePointAt(a - 1);
        for (; i === w2 || i === k2; ) a--, (i = e.codePointAt(a - 1));
    }
    return a > r ? e.slice(r, a) : "";
}
function BP(e, t) {
    const n = { type: "text", value: PP(String(t.value)) };
    return e.patch(t, n), e.applyData(t, n);
}
function UP(e, t) {
    const n = { type: "element", tagName: "hr", properties: {}, children: [] };
    return e.patch(t, n), e.applyData(t, n);
}
const zP = {
    blockquote: hP,
    break: gP,
    code: bP,
    delete: yP,
    emphasis: vP,
    footnoteReference: EP,
    heading: SP,
    html: wP,
    imageReference: kP,
    image: TP,
    inlineCode: AP,
    linkReference: xP,
    link: RP,
    listItem: IP,
    list: _P,
    paragraph: CP,
    root: OP,
    strong: LP,
    table: DP,
    tableCell: FP,
    tableRow: MP,
    text: BP,
    thematicBreak: UP,
    toml: $o,
    yaml: $o,
    definition: $o,
    footnoteDefinition: $o,
};
function $o() {}
const wA = -1,
    Ss = 0,
    Mi = 1,
    Gl = 2,
    $g = 3,
    qg = 4,
    Gg = 5,
    Hg = 6,
    kA = 7,
    TA = 8,
    A2 = typeof self == "object" ? self : globalThis,
    $P = (e, t) => {
        const n = (a, i) => (e.set(i, a), a),
            r = a => {
                if (e.has(a)) return e.get(a);
                const [i, o] = t[a];
                switch (i) {
                    case Ss:
                    case wA:
                        return n(o, a);
                    case Mi: {
                        const l = n([], a);
                        for (const s of o) l.push(r(s));
                        return l;
                    }
                    case Gl: {
                        const l = n({}, a);
                        for (const [s, u] of o) l[r(s)] = r(u);
                        return l;
                    }
                    case $g:
                        return n(new Date(o), a);
                    case qg: {
                        const { source: l, flags: s } = o;
                        return n(new RegExp(l, s), a);
                    }
                    case Gg: {
                        const l = n(new Map(), a);
                        for (const [s, u] of o) l.set(r(s), r(u));
                        return l;
                    }
                    case Hg: {
                        const l = n(new Set(), a);
                        for (const s of o) l.add(r(s));
                        return l;
                    }
                    case kA: {
                        const { name: l, message: s } = o;
                        return n(new A2[l](s), a);
                    }
                    case TA:
                        return n(BigInt(o), a);
                    case "BigInt":
                        return n(Object(BigInt(o)), a);
                    case "ArrayBuffer":
                        return n(new Uint8Array(o).buffer, o);
                    case "DataView": {
                        const { buffer: l } = new Uint8Array(o);
                        return n(new DataView(l), o);
                    }
                }
                return n(new A2[i](o), a);
            };
        return r;
    },
    x2 = e => $P(new Map(), e)(0),
    pa = "",
    { toString: qP } = {},
    { keys: GP } = Object,
    bi = e => {
        const t = typeof e;
        if (t !== "object" || !e) return [Ss, t];
        const n = qP.call(e).slice(8, -1);
        switch (n) {
            case "Array":
                return [Mi, pa];
            case "Object":
                return [Gl, pa];
            case "Date":
                return [$g, pa];
            case "RegExp":
                return [qg, pa];
            case "Map":
                return [Gg, pa];
            case "Set":
                return [Hg, pa];
            case "DataView":
                return [Mi, n];
        }
        return n.includes("Array") ? [Mi, n] : n.includes("Error") ? [kA, n] : [Gl, n];
    },
    qo = ([e, t]) => e === Ss && (t === "function" || t === "symbol"),
    HP = (e, t, n, r) => {
        const a = (o, l) => {
                const s = r.push(o) - 1;
                return n.set(l, s), s;
            },
            i = o => {
                if (n.has(o)) return n.get(o);
                let [l, s] = bi(o);
                switch (l) {
                    case Ss: {
                        let c = o;
                        switch (s) {
                            case "bigint":
                                (l = TA), (c = o.toString());
                                break;
                            case "function":
                            case "symbol":
                                if (e) throw new TypeError("unable to serialize " + s);
                                c = null;
                                break;
                            case "undefined":
                                return a([wA], o);
                        }
                        return a([l, c], o);
                    }
                    case Mi: {
                        if (s) {
                            let m = o;
                            return s === "DataView" ? (m = new Uint8Array(o.buffer)) : s === "ArrayBuffer" && (m = new Uint8Array(o)), a([s, [...m]], o);
                        }
                        const c = [],
                            d = a([l, c], o);
                        for (const m of o) c.push(i(m));
                        return d;
                    }
                    case Gl: {
                        if (s)
                            switch (s) {
                                case "BigInt":
                                    return a([s, o.toString()], o);
                                case "Boolean":
                                case "Number":
                                case "String":
                                    return a([s, o.valueOf()], o);
                            }
                        if (t && "toJSON" in o) return i(o.toJSON());
                        const c = [],
                            d = a([l, c], o);
                        for (const m of GP(o)) (e || !qo(bi(o[m]))) && c.push([i(m), i(o[m])]);
                        return d;
                    }
                    case $g:
                        return a([l, o.toISOString()], o);
                    case qg: {
                        const { source: c, flags: d } = o;
                        return a([l, { source: c, flags: d }], o);
                    }
                    case Gg: {
                        const c = [],
                            d = a([l, c], o);
                        for (const [m, f] of o) (e || !(qo(bi(m)) || qo(bi(f)))) && c.push([i(m), i(f)]);
                        return d;
                    }
                    case Hg: {
                        const c = [],
                            d = a([l, c], o);
                        for (const m of o) (e || !qo(bi(m))) && c.push(i(m));
                        return d;
                    }
                }
                const { message: u } = o;
                return a([l, { name: s, message: u }], o);
            };
        return i;
    },
    R2 = (e, { json: t, lossy: n } = {}) => {
        const r = [];
        return HP(!(t || n), !!t, new Map(), r)(e), r;
    },
    Hl = typeof structuredClone == "function" ? (e, t) => (t && ("json" in t || "lossy" in t) ? x2(R2(e, t)) : structuredClone(e)) : (e, t) => x2(R2(e, t));
function jP(e, t) {
    const n = [{ type: "text", value: "↩" }];
    return t > 1 && n.push({ type: "element", tagName: "sup", properties: {}, children: [{ type: "text", value: String(t) }] }), n;
}
function VP(e, t) {
    return "Back to reference " + (e + 1) + (t > 1 ? "-" + t : "");
}
function WP(e) {
    const t = typeof e.options.clobberPrefix == "string" ? e.options.clobberPrefix : "user-content-",
        n = e.options.footnoteBackContent || jP,
        r = e.options.footnoteBackLabel || VP,
        a = e.options.footnoteLabel || "Footnotes",
        i = e.options.footnoteLabelTagName || "h2",
        o = e.options.footnoteLabelProperties || { className: ["sr-only"] },
        l = [];
    let s = -1;
    for (; ++s < e.footnoteOrder.length; ) {
        const u = e.footnoteById.get(e.footnoteOrder[s]);
        if (!u) continue;
        const c = e.all(u),
            d = String(u.identifier).toUpperCase(),
            m = Qa(d.toLowerCase());
        let f = 0;
        const b = [],
            E = e.footnoteCounts.get(d);
        for (; E !== void 0 && ++f <= E; ) {
            b.length > 0 && b.push({ type: "text", value: " " });
            let g = typeof n == "string" ? n : n(s, f);
            typeof g == "string" && (g = { type: "text", value: g }),
                b.push({
                    type: "element",
                    tagName: "a",
                    properties: {
                        href: "#" + t + "fnref-" + m + (f > 1 ? "-" + f : ""),
                        dataFootnoteBackref: "",
                        ariaLabel: typeof r == "string" ? r : r(s, f),
                        className: ["data-footnote-backref"],
                    },
                    children: Array.isArray(g) ? g : [g],
                });
        }
        const I = c[c.length - 1];
        if (I && I.type === "element" && I.tagName === "p") {
            const g = I.children[I.children.length - 1];
            g && g.type === "text" ? (g.value += " ") : I.children.push({ type: "text", value: " " }), I.children.push(...b);
        } else c.push(...b);
        const y = { type: "element", tagName: "li", properties: { id: t + "fn-" + m }, children: e.wrap(c, !0) };
        e.patch(u, y), l.push(y);
    }
    if (l.length !== 0)
        return {
            type: "element",
            tagName: "section",
            properties: { dataFootnotes: !0, className: ["footnotes"] },
            children: [
                { type: "element", tagName: i, properties: { ...Hl(o), id: "footnote-label" }, children: [{ type: "text", value: a }] },
                {
                    type: "text",
                    value: `
`,
                },
                { type: "element", tagName: "ol", properties: {}, children: e.wrap(l, !0) },
                {
                    type: "text",
                    value: `
`,
                },
            ],
        };
}
const AA = function (e) {
    if (e == null) return ZP;
    if (typeof e == "function") return ws(e);
    if (typeof e == "object") return Array.isArray(e) ? YP(e) : KP(e);
    if (typeof e == "string") return XP(e);
    throw new Error("Expected function, string, or object as test");
};
function YP(e) {
    const t = [];
    let n = -1;
    for (; ++n < e.length; ) t[n] = AA(e[n]);
    return ws(r);
    function r(...a) {
        let i = -1;
        for (; ++i < t.length; ) if (t[i].apply(this, a)) return !0;
        return !1;
    }
}
function KP(e) {
    const t = e;
    return ws(n);
    function n(r) {
        const a = r;
        let i;
        for (i in e) if (a[i] !== t[i]) return !1;
        return !0;
    }
}
function XP(e) {
    return ws(t);
    function t(n) {
        return n && n.type === e;
    }
}
function ws(e) {
    return t;
    function t(n, r, a) {
        return !!(QP(n) && e.call(this, n, typeof r == "number" ? r : void 0, a || void 0));
    }
}
function ZP() {
    return !0;
}
function QP(e) {
    return e !== null && typeof e == "object" && "type" in e;
}
const xA = [],
    JP = !0,
    I2 = !1,
    eB = "skip";
function tB(e, t, n, r) {
    let a;
    typeof t == "function" && typeof n != "function" ? ((r = n), (n = t)) : (a = t);
    const i = AA(a),
        o = r ? -1 : 1;
    l(e, void 0, [])();
    function l(s, u, c) {
        const d = s && typeof s == "object" ? s : {};
        if (typeof d.type == "string") {
            const f = typeof d.tagName == "string" ? d.tagName : typeof d.name == "string" ? d.name : void 0;
            Object.defineProperty(m, "name", { value: "node (" + (s.type + (f ? "<" + f + ">" : "")) + ")" });
        }
        return m;
        function m() {
            let f = xA,
                b,
                E,
                I;
            if ((!t || i(s, u, c[c.length - 1] || void 0)) && ((f = nB(n(s, c))), f[0] === I2)) return f;
            if ("children" in s && s.children) {
                const y = s;
                if (y.children && f[0] !== eB)
                    for (E = (r ? y.children.length : -1) + o, I = c.concat(y); E > -1 && E < y.children.length; ) {
                        const g = y.children[E];
                        if (((b = l(g, E, I)()), b[0] === I2)) return b;
                        E = typeof b[1] == "number" ? b[1] : E + o;
                    }
            }
            return f;
        }
    }
}
function nB(e) {
    return Array.isArray(e) ? e : typeof e == "number" ? [JP, e] : e == null ? xA : [e];
}
function rB(e, t, n, r) {
    let a, i, o;
    typeof t == "function" && typeof n != "function" ? ((i = void 0), (o = t), (a = n)) : ((i = t), (o = n), (a = r)), tB(e, i, l, a);
    function l(s, u) {
        const c = u[u.length - 1],
            d = c ? c.children.indexOf(s) : void 0;
        return o(s, d, c);
    }
}
const Km = {}.hasOwnProperty,
    aB = {};
function iB(e, t) {
    const n = t || aB,
        r = new Map(),
        a = new Map(),
        i = new Map(),
        o = { ...zP, ...n.handlers },
        l = {
            all: u,
            applyData: lB,
            definitionById: r,
            footnoteById: a,
            footnoteCounts: i,
            footnoteOrder: [],
            handlers: o,
            one: s,
            options: n,
            patch: oB,
            wrap: uB,
        };
    return (
        rB(e, function (c) {
            if (c.type === "definition" || c.type === "footnoteDefinition") {
                const d = c.type === "definition" ? r : a,
                    m = String(c.identifier).toUpperCase();
                d.has(m) || d.set(m, c);
            }
        }),
        l
    );
    function s(c, d) {
        const m = c.type,
            f = l.handlers[m];
        if (Km.call(l.handlers, m) && f) return f(l, c, d);
        if (l.options.passThrough && l.options.passThrough.includes(m)) {
            if ("children" in c) {
                const { children: E, ...I } = c,
                    y = Hl(I);
                return (y.children = l.all(c)), y;
            }
            return Hl(c);
        }
        return (l.options.unknownHandler || sB)(l, c, d);
    }
    function u(c) {
        const d = [];
        if ("children" in c) {
            const m = c.children;
            let f = -1;
            for (; ++f < m.length; ) {
                const b = l.one(m[f], c);
                if (b) {
                    if (
                        f &&
                        m[f - 1].type === "break" &&
                        (!Array.isArray(b) && b.type === "text" && (b.value = N2(b.value)), !Array.isArray(b) && b.type === "element")
                    ) {
                        const E = b.children[0];
                        E && E.type === "text" && (E.value = N2(E.value));
                    }
                    Array.isArray(b) ? d.push(...b) : d.push(b);
                }
            }
        }
        return d;
    }
}
function oB(e, t) {
    e.position && (t.position = GD(e));
}
function lB(e, t) {
    let n = t;
    if (e && e.data) {
        const r = e.data.hName,
            a = e.data.hChildren,
            i = e.data.hProperties;
        if (typeof r == "string")
            if (n.type === "element") n.tagName = r;
            else {
                const o = "children" in n ? n.children : [n];
                n = { type: "element", tagName: r, properties: {}, children: o };
            }
        n.type === "element" && i && Object.assign(n.properties, Hl(i)), "children" in n && n.children && a !== null && a !== void 0 && (n.children = a);
    }
    return n;
}
function sB(e, t) {
    const n = t.data || {},
        r =
            "value" in t && !(Km.call(n, "hProperties") || Km.call(n, "hChildren"))
                ? { type: "text", value: t.value }
                : { type: "element", tagName: "div", properties: {}, children: e.all(t) };
    return e.patch(t, r), e.applyData(t, r);
}
function uB(e, t) {
    const n = [];
    let r = -1;
    for (
        t &&
        n.push({
            type: "text",
            value: `
`,
        });
        ++r < e.length;

    )
        r &&
            n.push({
                type: "text",
                value: `
`,
            }),
            n.push(e[r]);
    return (
        t &&
            e.length > 0 &&
            n.push({
                type: "text",
                value: `
`,
            }),
        n
    );
}
function N2(e) {
    let t = 0,
        n = e.charCodeAt(t);
    for (; n === 9 || n === 32; ) t++, (n = e.charCodeAt(t));
    return e.slice(t);
}
function _2(e, t) {
    const n = iB(e, t),
        r = n.one(e, void 0),
        a = WP(n),
        i = Array.isArray(r) ? { type: "root", children: r } : r || { type: "root", children: [] };
    return (
        a &&
            i.children.push(
                {
                    type: "text",
                    value: `
`,
                },
                a,
            ),
        i
    );
}
function cB(e, t) {
    return e && "run" in e
        ? async function (n, r) {
              const a = _2(n, { file: r, ...t });
              await e.run(a, r);
          }
        : function (n, r) {
              return _2(n, { file: r, ...(e || t) });
          };
}
function C2(e) {
    if (e) throw e;
}
var hl = Object.prototype.hasOwnProperty,
    RA = Object.prototype.toString,
    O2 = Object.defineProperty,
    L2 = Object.getOwnPropertyDescriptor,
    D2 = function (t) {
        return typeof Array.isArray == "function" ? Array.isArray(t) : RA.call(t) === "[object Array]";
    },
    M2 = function (t) {
        if (!t || RA.call(t) !== "[object Object]") return !1;
        var n = hl.call(t, "constructor"),
            r = t.constructor && t.constructor.prototype && hl.call(t.constructor.prototype, "isPrototypeOf");
        if (t.constructor && !n && !r) return !1;
        var a;
        for (a in t);
        return typeof a > "u" || hl.call(t, a);
    },
    F2 = function (t, n) {
        O2 && n.name === "__proto__" ? O2(t, n.name, { enumerable: !0, configurable: !0, value: n.newValue, writable: !0 }) : (t[n.name] = n.newValue);
    },
    P2 = function (t, n) {
        if (n === "__proto__")
            if (hl.call(t, n)) {
                if (L2) return L2(t, n).value;
            } else return;
        return t[n];
    },
    dB = function e() {
        var t,
            n,
            r,
            a,
            i,
            o,
            l = arguments[0],
            s = 1,
            u = arguments.length,
            c = !1;
        for (
            typeof l == "boolean" && ((c = l), (l = arguments[1] || {}), (s = 2)), (l == null || (typeof l != "object" && typeof l != "function")) && (l = {});
            s < u;
            ++s
        )
            if (((t = arguments[s]), t != null))
                for (n in t)
                    (r = P2(l, n)),
                        (a = P2(t, n)),
                        l !== a &&
                            (c && a && (M2(a) || (i = D2(a)))
                                ? (i ? ((i = !1), (o = r && D2(r) ? r : [])) : (o = r && M2(r) ? r : {}), F2(l, { name: n, newValue: e(c, o, a) }))
                                : typeof a < "u" && F2(l, { name: n, newValue: a }));
        return l;
    };
const gf = hh(dB);
function Xm(e) {
    if (typeof e != "object" || e === null) return !1;
    const t = Object.getPrototypeOf(e);
    return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function pB() {
    const e = [],
        t = { run: n, use: r };
    return t;
    function n(...a) {
        let i = -1;
        const o = a.pop();
        if (typeof o != "function") throw new TypeError("Expected function as last argument, not " + o);
        l(null, ...a);
        function l(s, ...u) {
            const c = e[++i];
            let d = -1;
            if (s) {
                o(s);
                return;
            }
            for (; ++d < a.length; ) (u[d] === null || u[d] === void 0) && (u[d] = a[d]);
            (a = u), c ? fB(c, l)(...u) : o(null, ...u);
        }
    }
    function r(a) {
        if (typeof a != "function") throw new TypeError("Expected `middelware` to be a function, not " + a);
        return e.push(a), t;
    }
}
function fB(e, t) {
    let n;
    return r;
    function r(...o) {
        const l = e.length > o.length;
        let s;
        l && o.push(a);
        try {
            s = e.apply(this, o);
        } catch (u) {
            const c = u;
            if (l && n) throw c;
            return a(c);
        }
        l || (s && s.then && typeof s.then == "function" ? s.then(i, a) : s instanceof Error ? a(s) : i(s));
    }
    function a(o, ...l) {
        n || ((n = !0), t(o, ...l));
    }
    function i(o) {
        a(null, o);
    }
}
function mB(e) {
    return !e || typeof e != "object"
        ? ""
        : "position" in e || "type" in e
          ? B2(e.position)
          : "start" in e || "end" in e
            ? B2(e)
            : "line" in e || "column" in e
              ? Zm(e)
              : "";
}
function Zm(e) {
    return U2(e && e.line) + ":" + U2(e && e.column);
}
function B2(e) {
    return Zm(e && e.start) + "-" + Zm(e && e.end);
}
function U2(e) {
    return e && typeof e == "number" ? e : 1;
}
let Ot = class extends Error {
    constructor(t, n, r) {
        super(), typeof n == "string" && ((r = n), (n = void 0));
        let a = "",
            i = {},
            o = !1;
        if (
            (n &&
                ("line" in n && "column" in n
                    ? (i = { place: n })
                    : "start" in n && "end" in n
                      ? (i = { place: n })
                      : "type" in n
                        ? (i = { ancestors: [n], place: n.position })
                        : (i = { ...n })),
            typeof t == "string" ? (a = t) : !i.cause && t && ((o = !0), (a = t.message), (i.cause = t)),
            !i.ruleId && !i.source && typeof r == "string")
        ) {
            const s = r.indexOf(":");
            s === -1 ? (i.ruleId = r) : ((i.source = r.slice(0, s)), (i.ruleId = r.slice(s + 1)));
        }
        if (!i.place && i.ancestors && i.ancestors) {
            const s = i.ancestors[i.ancestors.length - 1];
            s && (i.place = s.position);
        }
        const l = i.place && "start" in i.place ? i.place.start : i.place;
        (this.ancestors = i.ancestors || void 0),
            (this.cause = i.cause || void 0),
            (this.column = l ? l.column : void 0),
            (this.fatal = void 0),
            this.file,
            (this.message = a),
            (this.line = l ? l.line : void 0),
            (this.name = mB(i.place) || "1:1"),
            (this.place = i.place || void 0),
            (this.reason = this.message),
            (this.ruleId = i.ruleId || void 0),
            (this.source = i.source || void 0),
            (this.stack = o && i.cause && typeof i.cause.stack == "string" ? i.cause.stack : ""),
            this.actual,
            this.expected,
            this.note,
            this.url;
    }
};
Ot.prototype.file = "";
Ot.prototype.name = "";
Ot.prototype.reason = "";
Ot.prototype.message = "";
Ot.prototype.stack = "";
Ot.prototype.column = void 0;
Ot.prototype.line = void 0;
Ot.prototype.ancestors = void 0;
Ot.prototype.cause = void 0;
Ot.prototype.fatal = void 0;
Ot.prototype.place = void 0;
Ot.prototype.ruleId = void 0;
Ot.prototype.source = void 0;
const Sn = { basename: hB, dirname: gB, extname: bB, join: yB, sep: "/" };
function hB(e, t) {
    if (t !== void 0 && typeof t != "string") throw new TypeError('"ext" argument must be a string');
    bo(e);
    let n = 0,
        r = -1,
        a = e.length,
        i;
    if (t === void 0 || t.length === 0 || t.length > e.length) {
        for (; a--; )
            if (e.codePointAt(a) === 47) {
                if (i) {
                    n = a + 1;
                    break;
                }
            } else r < 0 && ((i = !0), (r = a + 1));
        return r < 0 ? "" : e.slice(n, r);
    }
    if (t === e) return "";
    let o = -1,
        l = t.length - 1;
    for (; a--; )
        if (e.codePointAt(a) === 47) {
            if (i) {
                n = a + 1;
                break;
            }
        } else o < 0 && ((i = !0), (o = a + 1)), l > -1 && (e.codePointAt(a) === t.codePointAt(l--) ? l < 0 && (r = a) : ((l = -1), (r = o)));
    return n === r ? (r = o) : r < 0 && (r = e.length), e.slice(n, r);
}
function gB(e) {
    if ((bo(e), e.length === 0)) return ".";
    let t = -1,
        n = e.length,
        r;
    for (; --n; )
        if (e.codePointAt(n) === 47) {
            if (r) {
                t = n;
                break;
            }
        } else r || (r = !0);
    return t < 0 ? (e.codePointAt(0) === 47 ? "/" : ".") : t === 1 && e.codePointAt(0) === 47 ? "//" : e.slice(0, t);
}
function bB(e) {
    bo(e);
    let t = e.length,
        n = -1,
        r = 0,
        a = -1,
        i = 0,
        o;
    for (; t--; ) {
        const l = e.codePointAt(t);
        if (l === 47) {
            if (o) {
                r = t + 1;
                break;
            }
            continue;
        }
        n < 0 && ((o = !0), (n = t + 1)), l === 46 ? (a < 0 ? (a = t) : i !== 1 && (i = 1)) : a > -1 && (i = -1);
    }
    return a < 0 || n < 0 || i === 0 || (i === 1 && a === n - 1 && a === r + 1) ? "" : e.slice(a, n);
}
function yB(...e) {
    let t = -1,
        n;
    for (; ++t < e.length; ) bo(e[t]), e[t] && (n = n === void 0 ? e[t] : n + "/" + e[t]);
    return n === void 0 ? "." : vB(n);
}
function vB(e) {
    bo(e);
    const t = e.codePointAt(0) === 47;
    let n = EB(e, !t);
    return n.length === 0 && !t && (n = "."), n.length > 0 && e.codePointAt(e.length - 1) === 47 && (n += "/"), t ? "/" + n : n;
}
function EB(e, t) {
    let n = "",
        r = 0,
        a = -1,
        i = 0,
        o = -1,
        l,
        s;
    for (; ++o <= e.length; ) {
        if (o < e.length) l = e.codePointAt(o);
        else {
            if (l === 47) break;
            l = 47;
        }
        if (l === 47) {
            if (!(a === o - 1 || i === 1))
                if (a !== o - 1 && i === 2) {
                    if (n.length < 2 || r !== 2 || n.codePointAt(n.length - 1) !== 46 || n.codePointAt(n.length - 2) !== 46) {
                        if (n.length > 2) {
                            if (((s = n.lastIndexOf("/")), s !== n.length - 1)) {
                                s < 0 ? ((n = ""), (r = 0)) : ((n = n.slice(0, s)), (r = n.length - 1 - n.lastIndexOf("/"))), (a = o), (i = 0);
                                continue;
                            }
                        } else if (n.length > 0) {
                            (n = ""), (r = 0), (a = o), (i = 0);
                            continue;
                        }
                    }
                    t && ((n = n.length > 0 ? n + "/.." : ".."), (r = 2));
                } else n.length > 0 ? (n += "/" + e.slice(a + 1, o)) : (n = e.slice(a + 1, o)), (r = o - a - 1);
            (a = o), (i = 0);
        } else l === 46 && i > -1 ? i++ : (i = -1);
    }
    return n;
}
function bo(e) {
    if (typeof e != "string") throw new TypeError("Path must be a string. Received " + JSON.stringify(e));
}
const SB = { cwd: wB };
function wB() {
    return "/";
}
function Qm(e) {
    return !!(e !== null && typeof e == "object" && "href" in e && e.href && "protocol" in e && e.protocol && e.auth === void 0);
}
function kB(e) {
    if (typeof e == "string") e = new URL(e);
    else if (!Qm(e)) {
        const t = new TypeError('The "path" argument must be of type string or an instance of URL. Received `' + e + "`");
        throw ((t.code = "ERR_INVALID_ARG_TYPE"), t);
    }
    if (e.protocol !== "file:") {
        const t = new TypeError("The URL must be of scheme file");
        throw ((t.code = "ERR_INVALID_URL_SCHEME"), t);
    }
    return TB(e);
}
function TB(e) {
    if (e.hostname !== "") {
        const r = new TypeError('File URL host must be "localhost" or empty on darwin');
        throw ((r.code = "ERR_INVALID_FILE_URL_HOST"), r);
    }
    const t = e.pathname;
    let n = -1;
    for (; ++n < t.length; )
        if (t.codePointAt(n) === 37 && t.codePointAt(n + 1) === 50) {
            const r = t.codePointAt(n + 2);
            if (r === 70 || r === 102) {
                const a = new TypeError("File URL path must not include encoded / characters");
                throw ((a.code = "ERR_INVALID_FILE_URL_PATH"), a);
            }
        }
    return decodeURIComponent(t);
}
const bf = ["history", "path", "basename", "stem", "extname", "dirname"];
let AB = class {
    constructor(t) {
        let n;
        t ? (Qm(t) ? (n = { path: t }) : typeof t == "string" || xB(t) ? (n = { value: t }) : (n = t)) : (n = {}),
            (this.cwd = "cwd" in n ? "" : SB.cwd()),
            (this.data = {}),
            (this.history = []),
            (this.messages = []),
            this.value,
            this.map,
            this.result,
            this.stored;
        let r = -1;
        for (; ++r < bf.length; ) {
            const i = bf[r];
            i in n && n[i] !== void 0 && n[i] !== null && (this[i] = i === "history" ? [...n[i]] : n[i]);
        }
        let a;
        for (a in n) bf.includes(a) || (this[a] = n[a]);
    }
    get basename() {
        return typeof this.path == "string" ? Sn.basename(this.path) : void 0;
    }
    set basename(t) {
        vf(t, "basename"), yf(t, "basename"), (this.path = Sn.join(this.dirname || "", t));
    }
    get dirname() {
        return typeof this.path == "string" ? Sn.dirname(this.path) : void 0;
    }
    set dirname(t) {
        z2(this.basename, "dirname"), (this.path = Sn.join(t || "", this.basename));
    }
    get extname() {
        return typeof this.path == "string" ? Sn.extname(this.path) : void 0;
    }
    set extname(t) {
        if ((yf(t, "extname"), z2(this.dirname, "extname"), t)) {
            if (t.codePointAt(0) !== 46) throw new Error("`extname` must start with `.`");
            if (t.includes(".", 1)) throw new Error("`extname` cannot contain multiple dots");
        }
        this.path = Sn.join(this.dirname, this.stem + (t || ""));
    }
    get path() {
        return this.history[this.history.length - 1];
    }
    set path(t) {
        Qm(t) && (t = kB(t)), vf(t, "path"), this.path !== t && this.history.push(t);
    }
    get stem() {
        return typeof this.path == "string" ? Sn.basename(this.path, this.extname) : void 0;
    }
    set stem(t) {
        vf(t, "stem"), yf(t, "stem"), (this.path = Sn.join(this.dirname || "", t + (this.extname || "")));
    }
    fail(t, n, r) {
        const a = this.message(t, n, r);
        throw ((a.fatal = !0), a);
    }
    info(t, n, r) {
        const a = this.message(t, n, r);
        return (a.fatal = void 0), a;
    }
    message(t, n, r) {
        const a = new Ot(t, n, r);
        return this.path && ((a.name = this.path + ":" + a.name), (a.file = this.path)), (a.fatal = !1), this.messages.push(a), a;
    }
    toString(t) {
        return this.value === void 0 ? "" : typeof this.value == "string" ? this.value : new TextDecoder(t || void 0).decode(this.value);
    }
};
function yf(e, t) {
    if (e && e.includes(Sn.sep)) throw new Error("`" + t + "` cannot be a path: did not expect `" + Sn.sep + "`");
}
function vf(e, t) {
    if (!e) throw new Error("`" + t + "` cannot be empty");
}
function z2(e, t) {
    if (!e) throw new Error("Setting `" + t + "` requires `path` to be set too");
}
function xB(e) {
    return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
const RB = function (e) {
        const r = this.constructor.prototype,
            a = r[e],
            i = function () {
                return a.apply(i, arguments);
            };
        return Object.setPrototypeOf(i, r), i;
    },
    IB = {}.hasOwnProperty;
class jg extends RB {
    constructor() {
        super("copy"),
            (this.Compiler = void 0),
            (this.Parser = void 0),
            (this.attachers = []),
            (this.compiler = void 0),
            (this.freezeIndex = -1),
            (this.frozen = void 0),
            (this.namespace = {}),
            (this.parser = void 0),
            (this.transformers = pB());
    }
    copy() {
        const t = new jg();
        let n = -1;
        for (; ++n < this.attachers.length; ) {
            const r = this.attachers[n];
            t.use(...r);
        }
        return t.data(gf(!0, {}, this.namespace)), t;
    }
    data(t, n) {
        return typeof t == "string"
            ? arguments.length === 2
                ? (wf("data", this.frozen), (this.namespace[t] = n), this)
                : (IB.call(this.namespace, t) && this.namespace[t]) || void 0
            : t
              ? (wf("data", this.frozen), (this.namespace = t), this)
              : this.namespace;
    }
    freeze() {
        if (this.frozen) return this;
        const t = this;
        for (; ++this.freezeIndex < this.attachers.length; ) {
            const [n, ...r] = this.attachers[this.freezeIndex];
            if (r[0] === !1) continue;
            r[0] === !0 && (r[0] = void 0);
            const a = n.call(t, ...r);
            typeof a == "function" && this.transformers.use(a);
        }
        return (this.frozen = !0), (this.freezeIndex = Number.POSITIVE_INFINITY), this;
    }
    parse(t) {
        this.freeze();
        const n = Go(t),
            r = this.parser || this.Parser;
        return Ef("parse", r), r(String(n), n);
    }
    process(t, n) {
        const r = this;
        return this.freeze(), Ef("process", this.parser || this.Parser), Sf("process", this.compiler || this.Compiler), n ? a(void 0, n) : new Promise(a);
        function a(i, o) {
            const l = Go(t),
                s = r.parse(l);
            r.run(s, l, function (c, d, m) {
                if (c || !d || !m) return u(c);
                const f = d,
                    b = r.stringify(f, m);
                CB(b) ? (m.value = b) : (m.result = b), u(c, m);
            });
            function u(c, d) {
                c || !d ? o(c) : i ? i(d) : n(void 0, d);
            }
        }
    }
    processSync(t) {
        let n = !1,
            r;
        return (
            this.freeze(),
            Ef("processSync", this.parser || this.Parser),
            Sf("processSync", this.compiler || this.Compiler),
            this.process(t, a),
            q2("processSync", "process", n),
            r
        );
        function a(i, o) {
            (n = !0), C2(i), (r = o);
        }
    }
    run(t, n, r) {
        $2(t), this.freeze();
        const a = this.transformers;
        return !r && typeof n == "function" && ((r = n), (n = void 0)), r ? i(void 0, r) : new Promise(i);
        function i(o, l) {
            const s = Go(n);
            a.run(t, s, u);
            function u(c, d, m) {
                const f = d || t;
                c ? l(c) : o ? o(f) : r(void 0, f, m);
            }
        }
    }
    runSync(t, n) {
        let r = !1,
            a;
        return this.run(t, n, i), q2("runSync", "run", r), a;
        function i(o, l) {
            C2(o), (a = l), (r = !0);
        }
    }
    stringify(t, n) {
        this.freeze();
        const r = Go(n),
            a = this.compiler || this.Compiler;
        return Sf("stringify", a), $2(t), a(t, r);
    }
    use(t, ...n) {
        const r = this.attachers,
            a = this.namespace;
        if ((wf("use", this.frozen), t != null))
            if (typeof t == "function") s(t, n);
            else if (typeof t == "object") Array.isArray(t) ? l(t) : o(t);
            else throw new TypeError("Expected usable value, not `" + t + "`");
        return this;
        function i(u) {
            if (typeof u == "function") s(u, []);
            else if (typeof u == "object")
                if (Array.isArray(u)) {
                    const [c, ...d] = u;
                    s(c, d);
                } else o(u);
            else throw new TypeError("Expected usable value, not `" + u + "`");
        }
        function o(u) {
            if (!("plugins" in u) && !("settings" in u))
                throw new Error(
                    "Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither",
                );
            l(u.plugins), u.settings && (a.settings = gf(!0, a.settings, u.settings));
        }
        function l(u) {
            let c = -1;
            if (u != null)
                if (Array.isArray(u))
                    for (; ++c < u.length; ) {
                        const d = u[c];
                        i(d);
                    }
                else throw new TypeError("Expected a list of plugins, not `" + u + "`");
        }
        function s(u, c) {
            let d = -1,
                m = -1;
            for (; ++d < r.length; )
                if (r[d][0] === u) {
                    m = d;
                    break;
                }
            if (m === -1) r.push([u, ...c]);
            else if (c.length > 0) {
                let [f, ...b] = c;
                const E = r[m][1];
                Xm(E) && Xm(f) && (f = gf(!0, E, f)), (r[m] = [u, f, ...b]);
            }
        }
    }
}
const NB = new jg().freeze();
function Ef(e, t) {
    if (typeof t != "function") throw new TypeError("Cannot `" + e + "` without `parser`");
}
function Sf(e, t) {
    if (typeof t != "function") throw new TypeError("Cannot `" + e + "` without `compiler`");
}
function wf(e, t) {
    if (t)
        throw new Error(
            "Cannot call `" + e + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.",
        );
}
function $2(e) {
    if (!Xm(e) || typeof e.type != "string") throw new TypeError("Expected node, got `" + e + "`");
}
function q2(e, t, n) {
    if (!n) throw new Error("`" + e + "` finished async. Use `" + t + "` instead");
}
function Go(e) {
    return _B(e) ? e : new AB(e);
}
function _B(e) {
    return !!(e && typeof e == "object" && "message" in e && "messages" in e);
}
function CB(e) {
    return typeof e == "string" || OB(e);
}
function OB(e) {
    return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
const IA = function (e) {
    if (e == null) return FB;
    if (typeof e == "function") return ks(e);
    if (typeof e == "object") return Array.isArray(e) ? LB(e) : DB(e);
    if (typeof e == "string") return MB(e);
    throw new Error("Expected function, string, or object as test");
};
function LB(e) {
    const t = [];
    let n = -1;
    for (; ++n < e.length; ) t[n] = IA(e[n]);
    return ks(r);
    function r(...a) {
        let i = -1;
        for (; ++i < t.length; ) if (t[i].apply(this, a)) return !0;
        return !1;
    }
}
function DB(e) {
    const t = e;
    return ks(n);
    function n(r) {
        const a = r;
        let i;
        for (i in e) if (a[i] !== t[i]) return !1;
        return !0;
    }
}
function MB(e) {
    return ks(t);
    function t(n) {
        return n && n.type === e;
    }
}
function ks(e) {
    return t;
    function t(n, r, a) {
        return !!(PB(n) && e.call(this, n, typeof r == "number" ? r : void 0, a || void 0));
    }
}
function FB() {
    return !0;
}
function PB(e) {
    return e !== null && typeof e == "object" && "type" in e;
}
const NA = [],
    BB = !0,
    G2 = !1,
    UB = "skip";
function zB(e, t, n, r) {
    let a;
    typeof t == "function" && typeof n != "function" ? ((r = n), (n = t)) : (a = t);
    const i = IA(a),
        o = r ? -1 : 1;
    l(e, void 0, [])();
    function l(s, u, c) {
        const d = s && typeof s == "object" ? s : {};
        if (typeof d.type == "string") {
            const f = typeof d.tagName == "string" ? d.tagName : typeof d.name == "string" ? d.name : void 0;
            Object.defineProperty(m, "name", { value: "node (" + (s.type + (f ? "<" + f + ">" : "")) + ")" });
        }
        return m;
        function m() {
            let f = NA,
                b,
                E,
                I;
            if ((!t || i(s, u, c[c.length - 1] || void 0)) && ((f = $B(n(s, c))), f[0] === G2)) return f;
            if ("children" in s && s.children) {
                const y = s;
                if (y.children && f[0] !== UB)
                    for (E = (r ? y.children.length : -1) + o, I = c.concat(y); E > -1 && E < y.children.length; ) {
                        const g = y.children[E];
                        if (((b = l(g, E, I)()), b[0] === G2)) return b;
                        E = typeof b[1] == "number" ? b[1] : E + o;
                    }
            }
            return f;
        }
    }
}
function $B(e) {
    return Array.isArray(e) ? e : typeof e == "number" ? [BB, e] : e == null ? NA : [e];
}
function qB(e, t, n, r) {
    let a, i, o;
    typeof t == "function" && typeof n != "function" ? ((i = void 0), (o = t), (a = n)) : ((i = t), (o = n), (a = r)), zB(e, i, l, a);
    function l(s, u) {
        const c = u[u.length - 1],
            d = c ? c.children.indexOf(s) : void 0;
        return o(s, d, c);
    }
}
function GB(e) {
    return !e || typeof e != "object"
        ? ""
        : "position" in e || "type" in e
          ? H2(e.position)
          : "start" in e || "end" in e
            ? H2(e)
            : "line" in e || "column" in e
              ? Jm(e)
              : "";
}
function Jm(e) {
    return j2(e && e.line) + ":" + j2(e && e.column);
}
function H2(e) {
    return Jm(e && e.start) + "-" + Jm(e && e.end);
}
function j2(e) {
    return e && typeof e == "number" ? e : 1;
}
class Lt extends Error {
    constructor(t, n, r) {
        super(), typeof n == "string" && ((r = n), (n = void 0));
        let a = "",
            i = {},
            o = !1;
        if (
            (n &&
                ("line" in n && "column" in n
                    ? (i = { place: n })
                    : "start" in n && "end" in n
                      ? (i = { place: n })
                      : "type" in n
                        ? (i = { ancestors: [n], place: n.position })
                        : (i = { ...n })),
            typeof t == "string" ? (a = t) : !i.cause && t && ((o = !0), (a = t.message), (i.cause = t)),
            !i.ruleId && !i.source && typeof r == "string")
        ) {
            const s = r.indexOf(":");
            s === -1 ? (i.ruleId = r) : ((i.source = r.slice(0, s)), (i.ruleId = r.slice(s + 1)));
        }
        if (!i.place && i.ancestors && i.ancestors) {
            const s = i.ancestors[i.ancestors.length - 1];
            s && (i.place = s.position);
        }
        const l = i.place && "start" in i.place ? i.place.start : i.place;
        (this.ancestors = i.ancestors || void 0),
            (this.cause = i.cause || void 0),
            (this.column = l ? l.column : void 0),
            (this.fatal = void 0),
            this.file,
            (this.message = a),
            (this.line = l ? l.line : void 0),
            (this.name = GB(i.place) || "1:1"),
            (this.place = i.place || void 0),
            (this.reason = this.message),
            (this.ruleId = i.ruleId || void 0),
            (this.source = i.source || void 0),
            (this.stack = o && i.cause && typeof i.cause.stack == "string" ? i.cause.stack : ""),
            this.actual,
            this.expected,
            this.note,
            this.url;
    }
}
Lt.prototype.file = "";
Lt.prototype.name = "";
Lt.prototype.reason = "";
Lt.prototype.message = "";
Lt.prototype.stack = "";
Lt.prototype.column = void 0;
Lt.prototype.line = void 0;
Lt.prototype.ancestors = void 0;
Lt.prototype.cause = void 0;
Lt.prototype.fatal = void 0;
Lt.prototype.place = void 0;
Lt.prototype.ruleId = void 0;
Lt.prototype.source = void 0;
const wn = { basename: HB, dirname: jB, extname: VB, join: WB, sep: "/" };
function HB(e, t) {
    if (t !== void 0 && typeof t != "string") throw new TypeError('"ext" argument must be a string');
    yo(e);
    let n = 0,
        r = -1,
        a = e.length,
        i;
    if (t === void 0 || t.length === 0 || t.length > e.length) {
        for (; a--; )
            if (e.codePointAt(a) === 47) {
                if (i) {
                    n = a + 1;
                    break;
                }
            } else r < 0 && ((i = !0), (r = a + 1));
        return r < 0 ? "" : e.slice(n, r);
    }
    if (t === e) return "";
    let o = -1,
        l = t.length - 1;
    for (; a--; )
        if (e.codePointAt(a) === 47) {
            if (i) {
                n = a + 1;
                break;
            }
        } else o < 0 && ((i = !0), (o = a + 1)), l > -1 && (e.codePointAt(a) === t.codePointAt(l--) ? l < 0 && (r = a) : ((l = -1), (r = o)));
    return n === r ? (r = o) : r < 0 && (r = e.length), e.slice(n, r);
}
function jB(e) {
    if ((yo(e), e.length === 0)) return ".";
    let t = -1,
        n = e.length,
        r;
    for (; --n; )
        if (e.codePointAt(n) === 47) {
            if (r) {
                t = n;
                break;
            }
        } else r || (r = !0);
    return t < 0 ? (e.codePointAt(0) === 47 ? "/" : ".") : t === 1 && e.codePointAt(0) === 47 ? "//" : e.slice(0, t);
}
function VB(e) {
    yo(e);
    let t = e.length,
        n = -1,
        r = 0,
        a = -1,
        i = 0,
        o;
    for (; t--; ) {
        const l = e.codePointAt(t);
        if (l === 47) {
            if (o) {
                r = t + 1;
                break;
            }
            continue;
        }
        n < 0 && ((o = !0), (n = t + 1)), l === 46 ? (a < 0 ? (a = t) : i !== 1 && (i = 1)) : a > -1 && (i = -1);
    }
    return a < 0 || n < 0 || i === 0 || (i === 1 && a === n - 1 && a === r + 1) ? "" : e.slice(a, n);
}
function WB(...e) {
    let t = -1,
        n;
    for (; ++t < e.length; ) yo(e[t]), e[t] && (n = n === void 0 ? e[t] : n + "/" + e[t]);
    return n === void 0 ? "." : YB(n);
}
function YB(e) {
    yo(e);
    const t = e.codePointAt(0) === 47;
    let n = KB(e, !t);
    return n.length === 0 && !t && (n = "."), n.length > 0 && e.codePointAt(e.length - 1) === 47 && (n += "/"), t ? "/" + n : n;
}
function KB(e, t) {
    let n = "",
        r = 0,
        a = -1,
        i = 0,
        o = -1,
        l,
        s;
    for (; ++o <= e.length; ) {
        if (o < e.length) l = e.codePointAt(o);
        else {
            if (l === 47) break;
            l = 47;
        }
        if (l === 47) {
            if (!(a === o - 1 || i === 1))
                if (a !== o - 1 && i === 2) {
                    if (n.length < 2 || r !== 2 || n.codePointAt(n.length - 1) !== 46 || n.codePointAt(n.length - 2) !== 46) {
                        if (n.length > 2) {
                            if (((s = n.lastIndexOf("/")), s !== n.length - 1)) {
                                s < 0 ? ((n = ""), (r = 0)) : ((n = n.slice(0, s)), (r = n.length - 1 - n.lastIndexOf("/"))), (a = o), (i = 0);
                                continue;
                            }
                        } else if (n.length > 0) {
                            (n = ""), (r = 0), (a = o), (i = 0);
                            continue;
                        }
                    }
                    t && ((n = n.length > 0 ? n + "/.." : ".."), (r = 2));
                } else n.length > 0 ? (n += "/" + e.slice(a + 1, o)) : (n = e.slice(a + 1, o)), (r = o - a - 1);
            (a = o), (i = 0);
        } else l === 46 && i > -1 ? i++ : (i = -1);
    }
    return n;
}
function yo(e) {
    if (typeof e != "string") throw new TypeError("Path must be a string. Received " + JSON.stringify(e));
}
const XB = { cwd: ZB };
function ZB() {
    return "/";
}
function eh(e) {
    return !!(e !== null && typeof e == "object" && "href" in e && e.href && "protocol" in e && e.protocol && e.auth === void 0);
}
function QB(e) {
    if (typeof e == "string") e = new URL(e);
    else if (!eh(e)) {
        const t = new TypeError('The "path" argument must be of type string or an instance of URL. Received `' + e + "`");
        throw ((t.code = "ERR_INVALID_ARG_TYPE"), t);
    }
    if (e.protocol !== "file:") {
        const t = new TypeError("The URL must be of scheme file");
        throw ((t.code = "ERR_INVALID_URL_SCHEME"), t);
    }
    return JB(e);
}
function JB(e) {
    if (e.hostname !== "") {
        const r = new TypeError('File URL host must be "localhost" or empty on darwin');
        throw ((r.code = "ERR_INVALID_FILE_URL_HOST"), r);
    }
    const t = e.pathname;
    let n = -1;
    for (; ++n < t.length; )
        if (t.codePointAt(n) === 37 && t.codePointAt(n + 1) === 50) {
            const r = t.codePointAt(n + 2);
            if (r === 70 || r === 102) {
                const a = new TypeError("File URL path must not include encoded / characters");
                throw ((a.code = "ERR_INVALID_FILE_URL_PATH"), a);
            }
        }
    return decodeURIComponent(t);
}
const kf = ["history", "path", "basename", "stem", "extname", "dirname"];
class eU {
    constructor(t) {
        let n;
        t ? (eh(t) ? (n = { path: t }) : typeof t == "string" || tU(t) ? (n = { value: t }) : (n = t)) : (n = {}),
            (this.cwd = "cwd" in n ? "" : XB.cwd()),
            (this.data = {}),
            (this.history = []),
            (this.messages = []),
            this.value,
            this.map,
            this.result,
            this.stored;
        let r = -1;
        for (; ++r < kf.length; ) {
            const i = kf[r];
            i in n && n[i] !== void 0 && n[i] !== null && (this[i] = i === "history" ? [...n[i]] : n[i]);
        }
        let a;
        for (a in n) kf.includes(a) || (this[a] = n[a]);
    }
    get basename() {
        return typeof this.path == "string" ? wn.basename(this.path) : void 0;
    }
    set basename(t) {
        Af(t, "basename"), Tf(t, "basename"), (this.path = wn.join(this.dirname || "", t));
    }
    get dirname() {
        return typeof this.path == "string" ? wn.dirname(this.path) : void 0;
    }
    set dirname(t) {
        V2(this.basename, "dirname"), (this.path = wn.join(t || "", this.basename));
    }
    get extname() {
        return typeof this.path == "string" ? wn.extname(this.path) : void 0;
    }
    set extname(t) {
        if ((Tf(t, "extname"), V2(this.dirname, "extname"), t)) {
            if (t.codePointAt(0) !== 46) throw new Error("`extname` must start with `.`");
            if (t.includes(".", 1)) throw new Error("`extname` cannot contain multiple dots");
        }
        this.path = wn.join(this.dirname, this.stem + (t || ""));
    }
    get path() {
        return this.history[this.history.length - 1];
    }
    set path(t) {
        eh(t) && (t = QB(t)), Af(t, "path"), this.path !== t && this.history.push(t);
    }
    get stem() {
        return typeof this.path == "string" ? wn.basename(this.path, this.extname) : void 0;
    }
    set stem(t) {
        Af(t, "stem"), Tf(t, "stem"), (this.path = wn.join(this.dirname || "", t + (this.extname || "")));
    }
    fail(t, n, r) {
        const a = this.message(t, n, r);
        throw ((a.fatal = !0), a);
    }
    info(t, n, r) {
        const a = this.message(t, n, r);
        return (a.fatal = void 0), a;
    }
    message(t, n, r) {
        const a = new Lt(t, n, r);
        return this.path && ((a.name = this.path + ":" + a.name), (a.file = this.path)), (a.fatal = !1), this.messages.push(a), a;
    }
    toString(t) {
        return this.value === void 0 ? "" : typeof this.value == "string" ? this.value : new TextDecoder(t || void 0).decode(this.value);
    }
}
function Tf(e, t) {
    if (e && e.includes(wn.sep)) throw new Error("`" + t + "` cannot be a path: did not expect `" + wn.sep + "`");
}
function Af(e, t) {
    if (!e) throw new Error("`" + t + "` cannot be empty");
}
function V2(e, t) {
    if (!e) throw new Error("Setting `" + t + "` requires `path` to be set too");
}
function tU(e) {
    return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
const nU = "https://github.com/remarkjs/react-markdown/blob/main/changelog.md",
    W2 = [],
    Y2 = { allowDangerousHtml: !0 },
    rU = /^(https?|ircs?|mailto|xmpp)$/i,
    aU = [
        { from: "astPlugins", id: "remove-buggy-html-in-markdown-parser" },
        { from: "allowDangerousHtml", id: "remove-buggy-html-in-markdown-parser" },
        { from: "allowNode", id: "replace-allownode-allowedtypes-and-disallowedtypes", to: "allowElement" },
        { from: "allowedTypes", id: "replace-allownode-allowedtypes-and-disallowedtypes", to: "allowedElements" },
        { from: "disallowedTypes", id: "replace-allownode-allowedtypes-and-disallowedtypes", to: "disallowedElements" },
        { from: "escapeHtml", id: "remove-buggy-html-in-markdown-parser" },
        { from: "includeElementIndex", id: "#remove-includeelementindex" },
        { from: "includeNodeIndex", id: "change-includenodeindex-to-includeelementindex" },
        { from: "linkTarget", id: "remove-linktarget" },
        { from: "plugins", id: "change-plugins-to-remarkplugins", to: "remarkPlugins" },
        { from: "rawSourcePos", id: "#remove-rawsourcepos" },
        { from: "renderers", id: "change-renderers-to-components", to: "components" },
        { from: "source", id: "change-source-to-children", to: "children" },
        { from: "sourcePos", id: "#remove-sourcepos" },
        { from: "transformImageUri", id: "#add-urltransform", to: "urlTransform" },
        { from: "transformLinkUri", id: "#add-urltransform", to: "urlTransform" },
    ];
function iU(e) {
    const t = e.allowedElements,
        n = e.allowElement,
        r = e.children || "",
        a = e.className,
        i = e.components,
        o = e.disallowedElements,
        l = e.rehypePlugins || W2,
        s = e.remarkPlugins || W2,
        u = e.remarkRehypeOptions ? { ...e.remarkRehypeOptions, ...Y2 } : Y2,
        c = e.skipHtml,
        d = e.unwrapDisallowed,
        m = e.urlTransform || oU,
        f = NB().use(mP).use(s).use(cB, u).use(l),
        b = new eU();
    typeof r == "string" && (b.value = r);
    for (const g of aU) Object.hasOwn(e, g.from) && ("" + g.from + (g.to ? "use `" + g.to + "` instead" : "remove it") + nU + g.id, void 0);
    const E = f.parse(b);
    let I = f.runSync(E, b);
    return (
        a && (I = { type: "element", tagName: "div", properties: { className: a }, children: I.type === "root" ? I.children : [I] }),
        qB(I, y),
        XD(I, { Fragment: ut.Fragment, components: i, ignoreInvalidStyle: !0, jsx: ut.jsx, jsxs: ut.jsxs, passKeys: !0, passNode: !0 })
    );
    function y(g, v, T) {
        if (g.type === "raw" && T && typeof v == "number") return c ? T.children.splice(v, 1) : (T.children[v] = { type: "text", value: g.value }), v;
        if (g.type === "element") {
            let R;
            for (R in ff)
                if (Object.hasOwn(ff, R) && Object.hasOwn(g.properties, R)) {
                    const k = g.properties[R],
                        L = ff[R];
                    (L === null || L.includes(g.tagName)) && (g.properties[R] = m(String(k || ""), R, g));
                }
        }
        if (g.type === "element") {
            let R = t ? !t.includes(g.tagName) : o ? o.includes(g.tagName) : !1;
            if ((!R && n && typeof v == "number" && (R = !n(g, v, T)), R && T && typeof v == "number"))
                return d && g.children ? T.children.splice(v, 1, ...g.children) : T.children.splice(v, 1), v;
        }
    }
}
function oU(e) {
    const t = e.indexOf(":"),
        n = e.indexOf("?"),
        r = e.indexOf("#"),
        a = e.indexOf("/");
    return t === -1 || (a !== -1 && t > a) || (n !== -1 && t > n) || (r !== -1 && t > r) || rU.test(e.slice(0, t)) ? e : "";
}
function K2(e, t) {
    const n = String(e);
    if (typeof t != "string") throw new TypeError("Expected character");
    let r = 0,
        a = n.indexOf(t);
    for (; a !== -1; ) r++, (a = n.indexOf(t, a + t.length));
    return r;
}
function lU(e) {
    if (typeof e != "string") throw new TypeError("Expected a string");
    return e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
const Vg = function (e) {
    if (e == null) return dU;
    if (typeof e == "function") return Ts(e);
    if (typeof e == "object") return Array.isArray(e) ? sU(e) : uU(e);
    if (typeof e == "string") return cU(e);
    throw new Error("Expected function, string, or object as test");
};
function sU(e) {
    const t = [];
    let n = -1;
    for (; ++n < e.length; ) t[n] = Vg(e[n]);
    return Ts(r);
    function r(...a) {
        let i = -1;
        for (; ++i < t.length; ) if (t[i].apply(this, a)) return !0;
        return !1;
    }
}
function uU(e) {
    const t = e;
    return Ts(n);
    function n(r) {
        const a = r;
        let i;
        for (i in e) if (a[i] !== t[i]) return !1;
        return !0;
    }
}
function cU(e) {
    return Ts(t);
    function t(n) {
        return n && n.type === e;
    }
}
function Ts(e) {
    return t;
    function t(n, r, a) {
        return !!(pU(n) && e.call(this, n, typeof r == "number" ? r : void 0, a || void 0));
    }
}
function dU() {
    return !0;
}
function pU(e) {
    return e !== null && typeof e == "object" && "type" in e;
}
const _A = [],
    fU = !0,
    X2 = !1,
    mU = "skip";
function hU(e, t, n, r) {
    let a;
    typeof t == "function" && typeof n != "function" ? ((r = n), (n = t)) : (a = t);
    const i = Vg(a),
        o = r ? -1 : 1;
    l(e, void 0, [])();
    function l(s, u, c) {
        const d = s && typeof s == "object" ? s : {};
        if (typeof d.type == "string") {
            const f = typeof d.tagName == "string" ? d.tagName : typeof d.name == "string" ? d.name : void 0;
            Object.defineProperty(m, "name", { value: "node (" + (s.type + (f ? "<" + f + ">" : "")) + ")" });
        }
        return m;
        function m() {
            let f = _A,
                b,
                E,
                I;
            if ((!t || i(s, u, c[c.length - 1] || void 0)) && ((f = gU(n(s, c))), f[0] === X2)) return f;
            if ("children" in s && s.children) {
                const y = s;
                if (y.children && f[0] !== mU)
                    for (E = (r ? y.children.length : -1) + o, I = c.concat(y); E > -1 && E < y.children.length; ) {
                        const g = y.children[E];
                        if (((b = l(g, E, I)()), b[0] === X2)) return b;
                        E = typeof b[1] == "number" ? b[1] : E + o;
                    }
            }
            return f;
        }
    }
}
function gU(e) {
    return Array.isArray(e) ? e : typeof e == "number" ? [fU, e] : e == null ? _A : [e];
}
function bU(e, t, n) {
    const a = Vg((n || {}).ignore || []),
        i = yU(t);
    let o = -1;
    for (; ++o < i.length; ) hU(e, "text", l);
    function l(u, c) {
        let d = -1,
            m;
        for (; ++d < c.length; ) {
            const f = c[d],
                b = m ? m.children : void 0;
            if (a(f, b ? b.indexOf(f) : void 0, m)) return;
            m = f;
        }
        if (m) return s(u, c);
    }
    function s(u, c) {
        const d = c[c.length - 1],
            m = i[o][0],
            f = i[o][1];
        let b = 0;
        const I = d.children.indexOf(u);
        let y = !1,
            g = [];
        m.lastIndex = 0;
        let v = m.exec(u.value);
        for (; v; ) {
            const T = v.index,
                R = { index: v.index, input: v.input, stack: [...c, u] };
            let k = f(...v, R);
            if (
                (typeof k == "string" && (k = k.length > 0 ? { type: "text", value: k } : void 0),
                k === !1
                    ? (m.lastIndex = T + 1)
                    : (b !== T && g.push({ type: "text", value: u.value.slice(b, T) }),
                      Array.isArray(k) ? g.push(...k) : k && g.push(k),
                      (b = T + v[0].length),
                      (y = !0)),
                !m.global)
            )
                break;
            v = m.exec(u.value);
        }
        return y ? (b < u.value.length && g.push({ type: "text", value: u.value.slice(b) }), d.children.splice(I, 1, ...g)) : (g = [u]), I + g.length;
    }
}
function yU(e) {
    const t = [];
    if (!Array.isArray(e)) throw new TypeError("Expected find and replace tuple or list of tuples");
    const n = !e[0] || Array.isArray(e[0]) ? e : [e];
    let r = -1;
    for (; ++r < n.length; ) {
        const a = n[r];
        t.push([vU(a[0]), EU(a[1])]);
    }
    return t;
}
function vU(e) {
    return typeof e == "string" ? new RegExp(lU(e), "g") : e;
}
function EU(e) {
    return typeof e == "function"
        ? e
        : function () {
              return e;
          };
}
const xf = "phrasing",
    Rf = ["autolink", "link", "image", "label"];
function SU() {
    return {
        transforms: [IU],
        enter: { literalAutolink: kU, literalAutolinkEmail: If, literalAutolinkHttp: If, literalAutolinkWww: If },
        exit: { literalAutolink: RU, literalAutolinkEmail: xU, literalAutolinkHttp: TU, literalAutolinkWww: AU },
    };
}
function wU() {
    return {
        unsafe: [
            { character: "@", before: "[+\\-.\\w]", after: "[\\-.\\w]", inConstruct: xf, notInConstruct: Rf },
            { character: ".", before: "[Ww]", after: "[\\-.\\w]", inConstruct: xf, notInConstruct: Rf },
            { character: ":", before: "[ps]", after: "\\/", inConstruct: xf, notInConstruct: Rf },
        ],
    };
}
function kU(e) {
    this.enter({ type: "link", title: null, url: "", children: [] }, e);
}
function If(e) {
    this.config.enter.autolinkProtocol.call(this, e);
}
function TU(e) {
    this.config.exit.autolinkProtocol.call(this, e);
}
function AU(e) {
    this.config.exit.data.call(this, e);
    const t = this.stack[this.stack.length - 1];
    t.type, (t.url = "http://" + this.sliceSerialize(e));
}
function xU(e) {
    this.config.exit.autolinkEmail.call(this, e);
}
function RU(e) {
    this.exit(e);
}
function IU(e) {
    bU(
        e,
        [
            [/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/gi, NU],
            [new RegExp("(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)", "gu"), _U],
        ],
        { ignore: ["link", "linkReference"] },
    );
}
function NU(e, t, n, r, a) {
    let i = "";
    if (!CA(a) || (/^w/i.test(t) && ((n = t + n), (t = ""), (i = "http://")), !CU(n))) return !1;
    const o = OU(n + r);
    if (!o[0]) return !1;
    const l = { type: "link", title: null, url: i + t + o[0], children: [{ type: "text", value: t + o[0] }] };
    return o[1] ? [l, { type: "text", value: o[1] }] : l;
}
function _U(e, t, n, r) {
    return !CA(r, !0) || /[-\d_]$/.test(n) ? !1 : { type: "link", title: null, url: "mailto:" + t + "@" + n, children: [{ type: "text", value: t + "@" + n }] };
}
function CU(e) {
    const t = e.split(".");
    return !(
        t.length < 2 ||
        (t[t.length - 1] && (/_/.test(t[t.length - 1]) || !/[a-zA-Z\d]/.test(t[t.length - 1]))) ||
        (t[t.length - 2] && (/_/.test(t[t.length - 2]) || !/[a-zA-Z\d]/.test(t[t.length - 2])))
    );
}
function OU(e) {
    const t = /[!"&'),.:;<>?\]}]+$/.exec(e);
    if (!t) return [e, void 0];
    e = e.slice(0, t.index);
    let n = t[0],
        r = n.indexOf(")");
    const a = K2(e, "(");
    let i = K2(e, ")");
    for (; r !== -1 && a > i; ) (e += n.slice(0, r + 1)), (n = n.slice(r + 1)), (r = n.indexOf(")")), i++;
    return [e, n];
}
function CA(e, t) {
    const n = e.input.charCodeAt(e.index - 1);
    return (e.index === 0 || Jr(n) || vs(n)) && (!t || n !== 47);
}
OA.peek = GU;
function LU() {
    return {
        enter: { gfmFootnoteDefinition: MU, gfmFootnoteDefinitionLabelString: FU, gfmFootnoteCall: UU, gfmFootnoteCallString: zU },
        exit: { gfmFootnoteDefinition: BU, gfmFootnoteDefinitionLabelString: PU, gfmFootnoteCall: qU, gfmFootnoteCallString: $U },
    };
}
function DU() {
    return { unsafe: [{ character: "[", inConstruct: ["phrasing", "label", "reference"] }], handlers: { footnoteDefinition: HU, footnoteReference: OA } };
}
function MU(e) {
    this.enter({ type: "footnoteDefinition", identifier: "", label: "", children: [] }, e);
}
function FU() {
    this.buffer();
}
function PU(e) {
    const t = this.resume(),
        n = this.stack[this.stack.length - 1];
    n.type, (n.label = t), (n.identifier = bn(this.sliceSerialize(e)).toLowerCase());
}
function BU(e) {
    this.exit(e);
}
function UU(e) {
    this.enter({ type: "footnoteReference", identifier: "", label: "" }, e);
}
function zU() {
    this.buffer();
}
function $U(e) {
    const t = this.resume(),
        n = this.stack[this.stack.length - 1];
    n.type, (n.label = t), (n.identifier = bn(this.sliceSerialize(e)).toLowerCase());
}
function qU(e) {
    this.exit(e);
}
function OA(e, t, n, r) {
    const a = n.createTracker(r);
    let i = a.move("[^");
    const o = n.enter("footnoteReference"),
        l = n.enter("reference");
    return (i += a.move(n.safe(n.associationId(e), { ...a.current(), before: i, after: "]" }))), l(), o(), (i += a.move("]")), i;
}
function GU() {
    return "[";
}
function HU(e, t, n, r) {
    const a = n.createTracker(r);
    let i = a.move("[^");
    const o = n.enter("footnoteDefinition"),
        l = n.enter("label");
    return (
        (i += a.move(n.safe(n.associationId(e), { ...a.current(), before: i, after: "]" }))),
        l(),
        (i += a.move("]:" + (e.children && e.children.length > 0 ? " " : ""))),
        a.shift(4),
        (i += a.move(n.indentLines(n.containerFlow(e, a.current()), jU))),
        o(),
        i
    );
}
function jU(e, t, n) {
    return t === 0 ? e : (n ? "" : "    ") + e;
}
const VU = ["autolink", "destinationLiteral", "destinationRaw", "reference", "titleQuote", "titleApostrophe"];
LA.peek = ZU;
function WU() {
    return { canContainEols: ["delete"], enter: { strikethrough: KU }, exit: { strikethrough: XU } };
}
function YU() {
    return { unsafe: [{ character: "~", inConstruct: "phrasing", notInConstruct: VU }], handlers: { delete: LA } };
}
function KU(e) {
    this.enter({ type: "delete", children: [] }, e);
}
function XU(e) {
    this.exit(e);
}
function LA(e, t, n, r) {
    const a = n.createTracker(r),
        i = n.enter("strikethrough");
    let o = a.move("~~");
    return (o += n.containerPhrasing(e, { ...a.current(), before: o, after: "~" })), (o += a.move("~~")), i(), o;
}
function ZU() {
    return "~";
}
function QU(e) {
    return e.length;
}
function JU(e, t) {
    const n = t || {},
        r = (n.align || []).concat(),
        a = n.stringLength || QU,
        i = [],
        o = [],
        l = [],
        s = [];
    let u = 0,
        c = -1;
    for (; ++c < e.length; ) {
        const E = [],
            I = [];
        let y = -1;
        for (e[c].length > u && (u = e[c].length); ++y < e[c].length; ) {
            const g = ez(e[c][y]);
            if (n.alignDelimiters !== !1) {
                const v = a(g);
                (I[y] = v), (s[y] === void 0 || v > s[y]) && (s[y] = v);
            }
            E.push(g);
        }
        (o[c] = E), (l[c] = I);
    }
    let d = -1;
    if (typeof r == "object" && "length" in r) for (; ++d < u; ) i[d] = Z2(r[d]);
    else {
        const E = Z2(r);
        for (; ++d < u; ) i[d] = E;
    }
    d = -1;
    const m = [],
        f = [];
    for (; ++d < u; ) {
        const E = i[d];
        let I = "",
            y = "";
        E === 99 ? ((I = ":"), (y = ":")) : E === 108 ? (I = ":") : E === 114 && (y = ":");
        let g = n.alignDelimiters === !1 ? 1 : Math.max(1, s[d] - I.length - y.length);
        const v = I + "-".repeat(g) + y;
        n.alignDelimiters !== !1 && ((g = I.length + g + y.length), g > s[d] && (s[d] = g), (f[d] = g)), (m[d] = v);
    }
    o.splice(1, 0, m), l.splice(1, 0, f), (c = -1);
    const b = [];
    for (; ++c < o.length; ) {
        const E = o[c],
            I = l[c];
        d = -1;
        const y = [];
        for (; ++d < u; ) {
            const g = E[d] || "";
            let v = "",
                T = "";
            if (n.alignDelimiters !== !1) {
                const R = s[d] - (I[d] || 0),
                    k = i[d];
                k === 114
                    ? (v = " ".repeat(R))
                    : k === 99
                      ? R % 2
                          ? ((v = " ".repeat(R / 2 + 0.5)), (T = " ".repeat(R / 2 - 0.5)))
                          : ((v = " ".repeat(R / 2)), (T = v))
                      : (T = " ".repeat(R));
            }
            n.delimiterStart !== !1 && !d && y.push("|"),
                n.padding !== !1 && !(n.alignDelimiters === !1 && g === "") && (n.delimiterStart !== !1 || d) && y.push(" "),
                n.alignDelimiters !== !1 && y.push(v),
                y.push(g),
                n.alignDelimiters !== !1 && y.push(T),
                n.padding !== !1 && y.push(" "),
                (n.delimiterEnd !== !1 || d !== u - 1) && y.push("|");
        }
        b.push(n.delimiterEnd === !1 ? y.join("").replace(/ +$/, "") : y.join(""));
    }
    return b.join(`
`);
}
function ez(e) {
    return e == null ? "" : String(e);
}
function Z2(e) {
    const t = typeof e == "string" ? e.codePointAt(0) : 0;
    return t === 67 || t === 99 ? 99 : t === 76 || t === 108 ? 108 : t === 82 || t === 114 ? 114 : 0;
}
function tz(e, t, n, r) {
    const a = n.enter("blockquote"),
        i = n.createTracker(r);
    i.move("> "), i.shift(2);
    const o = n.indentLines(n.containerFlow(e, i.current()), nz);
    return a(), o;
}
function nz(e, t, n) {
    return ">" + (n ? "" : " ") + e;
}
function rz(e, t) {
    return Q2(e, t.inConstruct, !0) && !Q2(e, t.notInConstruct, !1);
}
function Q2(e, t, n) {
    if ((typeof t == "string" && (t = [t]), !t || t.length === 0)) return n;
    let r = -1;
    for (; ++r < t.length; ) if (e.includes(t[r])) return !0;
    return !1;
}
function J2(e, t, n, r) {
    let a = -1;
    for (; ++a < n.unsafe.length; )
        if (
            n.unsafe[a].character ===
                `
` &&
            rz(n.stack, n.unsafe[a])
        )
            return /[ \t]/.test(r.before) ? "" : " ";
    return `\\
`;
}
function DA(e, t) {
    const n = String(e);
    let r = n.indexOf(t),
        a = r,
        i = 0,
        o = 0;
    if (typeof t != "string") throw new TypeError("Expected substring");
    for (; r !== -1; ) r === a ? ++i > o && (o = i) : (i = 1), (a = r + t.length), (r = n.indexOf(t, a));
    return o;
}
function az(e, t) {
    return !!(t.options.fences === !1 && e.value && !e.lang && /[^ \r\n]/.test(e.value) && !/^[\t ]*(?:[\r\n]|$)|(?:^|[\r\n])[\t ]*$/.test(e.value));
}
function iz(e) {
    const t = e.options.fence || "`";
    if (t !== "`" && t !== "~") throw new Error("Cannot serialize code with `" + t + "` for `options.fence`, expected `` ` `` or `~`");
    return t;
}
function oz(e, t, n, r) {
    const a = iz(n),
        i = e.value || "",
        o = a === "`" ? "GraveAccent" : "Tilde";
    if (az(e, n)) {
        const d = n.enter("codeIndented"),
            m = n.indentLines(i, lz);
        return d(), m;
    }
    const l = n.createTracker(r),
        s = a.repeat(Math.max(DA(i, a) + 1, 3)),
        u = n.enter("codeFenced");
    let c = l.move(s);
    if (e.lang) {
        const d = n.enter(`codeFencedLang${o}`);
        (c += l.move(n.safe(e.lang, { before: c, after: " ", encode: ["`"], ...l.current() }))), d();
    }
    if (e.lang && e.meta) {
        const d = n.enter(`codeFencedMeta${o}`);
        (c += l.move(" ")),
            (c += l.move(
                n.safe(e.meta, {
                    before: c,
                    after: `
`,
                    encode: ["`"],
                    ...l.current(),
                }),
            )),
            d();
    }
    return (
        (c += l.move(`
`)),
        i &&
            (c += l.move(
                i +
                    `
`,
            )),
        (c += l.move(s)),
        u(),
        c
    );
}
function lz(e, t, n) {
    return (n ? "" : "    ") + e;
}
function Wg(e) {
    const t = e.options.quote || '"';
    if (t !== '"' && t !== "'") throw new Error("Cannot serialize title with `" + t + "` for `options.quote`, expected `\"`, or `'`");
    return t;
}
function sz(e, t, n, r) {
    const a = Wg(n),
        i = a === '"' ? "Quote" : "Apostrophe",
        o = n.enter("definition");
    let l = n.enter("label");
    const s = n.createTracker(r);
    let u = s.move("[");
    return (
        (u += s.move(n.safe(n.associationId(e), { before: u, after: "]", ...s.current() }))),
        (u += s.move("]: ")),
        l(),
        !e.url || /[\0- \u007F]/.test(e.url)
            ? ((l = n.enter("destinationLiteral")),
              (u += s.move("<")),
              (u += s.move(n.safe(e.url, { before: u, after: ">", ...s.current() }))),
              (u += s.move(">")))
            : ((l = n.enter("destinationRaw")),
              (u += s.move(
                  n.safe(e.url, {
                      before: u,
                      after: e.title
                          ? " "
                          : `
`,
                      ...s.current(),
                  }),
              ))),
        l(),
        e.title &&
            ((l = n.enter(`title${i}`)),
            (u += s.move(" " + a)),
            (u += s.move(n.safe(e.title, { before: u, after: a, ...s.current() }))),
            (u += s.move(a)),
            l()),
        o(),
        u
    );
}
function uz(e) {
    const t = e.options.emphasis || "*";
    if (t !== "*" && t !== "_") throw new Error("Cannot serialize emphasis with `" + t + "` for `options.emphasis`, expected `*`, or `_`");
    return t;
}
function ro(e) {
    return "&#x" + e.toString(16).toUpperCase() + ";";
}
function jl(e, t, n) {
    const r = ja(e),
        a = ja(t);
    return r === void 0
        ? a === void 0
            ? n === "_"
                ? { inside: !0, outside: !0 }
                : { inside: !1, outside: !1 }
            : a === 1
              ? { inside: !0, outside: !0 }
              : { inside: !1, outside: !0 }
        : r === 1
          ? a === void 0
              ? { inside: !1, outside: !1 }
              : a === 1
                ? { inside: !0, outside: !0 }
                : { inside: !1, outside: !1 }
          : a === void 0
            ? { inside: !1, outside: !1 }
            : a === 1
              ? { inside: !0, outside: !1 }
              : { inside: !1, outside: !1 };
}
MA.peek = cz;
function MA(e, t, n, r) {
    const a = uz(n),
        i = n.enter("emphasis"),
        o = n.createTracker(r),
        l = o.move(a);
    let s = o.move(n.containerPhrasing(e, { after: a, before: l, ...o.current() }));
    const u = s.charCodeAt(0),
        c = jl(r.before.charCodeAt(r.before.length - 1), u, a);
    c.inside && (s = ro(u) + s.slice(1));
    const d = s.charCodeAt(s.length - 1),
        m = jl(r.after.charCodeAt(0), d, a);
    m.inside && (s = s.slice(0, -1) + ro(d));
    const f = o.move(a);
    return i(), (n.attentionEncodeSurroundingInfo = { after: m.outside, before: c.outside }), l + s + f;
}
function cz(e, t, n) {
    return n.options.emphasis || "*";
}
const FA = function (e) {
    if (e == null) return mz;
    if (typeof e == "function") return As(e);
    if (typeof e == "object") return Array.isArray(e) ? dz(e) : pz(e);
    if (typeof e == "string") return fz(e);
    throw new Error("Expected function, string, or object as test");
};
function dz(e) {
    const t = [];
    let n = -1;
    for (; ++n < e.length; ) t[n] = FA(e[n]);
    return As(r);
    function r(...a) {
        let i = -1;
        for (; ++i < t.length; ) if (t[i].apply(this, a)) return !0;
        return !1;
    }
}
function pz(e) {
    const t = e;
    return As(n);
    function n(r) {
        const a = r;
        let i;
        for (i in e) if (a[i] !== t[i]) return !1;
        return !0;
    }
}
function fz(e) {
    return As(t);
    function t(n) {
        return n && n.type === e;
    }
}
function As(e) {
    return t;
    function t(n, r, a) {
        return !!(hz(n) && e.call(this, n, typeof r == "number" ? r : void 0, a || void 0));
    }
}
function mz() {
    return !0;
}
function hz(e) {
    return e !== null && typeof e == "object" && "type" in e;
}
const PA = [],
    gz = !0,
    th = !1,
    bz = "skip";
function yz(e, t, n, r) {
    let a;
    typeof t == "function" && typeof n != "function" ? ((r = n), (n = t)) : (a = t);
    const i = FA(a),
        o = r ? -1 : 1;
    l(e, void 0, [])();
    function l(s, u, c) {
        const d = s && typeof s == "object" ? s : {};
        if (typeof d.type == "string") {
            const f = typeof d.tagName == "string" ? d.tagName : typeof d.name == "string" ? d.name : void 0;
            Object.defineProperty(m, "name", { value: "node (" + (s.type + (f ? "<" + f + ">" : "")) + ")" });
        }
        return m;
        function m() {
            let f = PA,
                b,
                E,
                I;
            if ((!t || i(s, u, c[c.length - 1] || void 0)) && ((f = vz(n(s, c))), f[0] === th)) return f;
            if ("children" in s && s.children) {
                const y = s;
                if (y.children && f[0] !== bz)
                    for (E = (r ? y.children.length : -1) + o, I = c.concat(y); E > -1 && E < y.children.length; ) {
                        const g = y.children[E];
                        if (((b = l(g, E, I)()), b[0] === th)) return b;
                        E = typeof b[1] == "number" ? b[1] : E + o;
                    }
            }
            return f;
        }
    }
}
function vz(e) {
    return Array.isArray(e) ? e : typeof e == "number" ? [gz, e] : e == null ? PA : [e];
}
function Ez(e, t, n, r) {
    let a, i, o;
    typeof t == "function" && typeof n != "function" ? ((i = void 0), (o = t), (a = n)) : ((i = t), (o = n), (a = r)), yz(e, i, l, a);
    function l(s, u) {
        const c = u[u.length - 1],
            d = c ? c.children.indexOf(s) : void 0;
        return o(s, d, c);
    }
}
function Sz(e, t) {
    let n = !1;
    return (
        Ez(e, function (r) {
            if (("value" in r && /\r?\n|\r/.test(r.value)) || r.type === "break") return (n = !0), th;
        }),
        !!((!e.depth || e.depth < 3) && Bg(e) && (t.options.setext || n))
    );
}
function wz(e, t, n, r) {
    const a = Math.max(Math.min(6, e.depth || 1), 1),
        i = n.createTracker(r);
    if (Sz(e, n)) {
        const c = n.enter("headingSetext"),
            d = n.enter("phrasing"),
            m = n.containerPhrasing(e, {
                ...i.current(),
                before: `
`,
                after: `
`,
            });
        return (
            d(),
            c(),
            m +
                `
` +
                (a === 1 ? "=" : "-").repeat(
                    m.length -
                        (Math.max(
                            m.lastIndexOf("\r"),
                            m.lastIndexOf(`
`),
                        ) +
                            1),
                )
        );
    }
    const o = "#".repeat(a),
        l = n.enter("headingAtx"),
        s = n.enter("phrasing");
    i.move(o + " ");
    let u = n.containerPhrasing(e, {
        before: "# ",
        after: `
`,
        ...i.current(),
    });
    return /^[\t ]/.test(u) && (u = ro(u.charCodeAt(0)) + u.slice(1)), (u = u ? o + " " + u : o), n.options.closeAtx && (u += " " + o), s(), l(), u;
}
BA.peek = kz;
function BA(e) {
    return e.value || "";
}
function kz() {
    return "<";
}
UA.peek = Tz;
function UA(e, t, n, r) {
    const a = Wg(n),
        i = a === '"' ? "Quote" : "Apostrophe",
        o = n.enter("image");
    let l = n.enter("label");
    const s = n.createTracker(r);
    let u = s.move("![");
    return (
        (u += s.move(n.safe(e.alt, { before: u, after: "]", ...s.current() }))),
        (u += s.move("](")),
        l(),
        (!e.url && e.title) || /[\0- \u007F]/.test(e.url)
            ? ((l = n.enter("destinationLiteral")),
              (u += s.move("<")),
              (u += s.move(n.safe(e.url, { before: u, after: ">", ...s.current() }))),
              (u += s.move(">")))
            : ((l = n.enter("destinationRaw")), (u += s.move(n.safe(e.url, { before: u, after: e.title ? " " : ")", ...s.current() })))),
        l(),
        e.title &&
            ((l = n.enter(`title${i}`)),
            (u += s.move(" " + a)),
            (u += s.move(n.safe(e.title, { before: u, after: a, ...s.current() }))),
            (u += s.move(a)),
            l()),
        (u += s.move(")")),
        o(),
        u
    );
}
function Tz() {
    return "!";
}
zA.peek = Az;
function zA(e, t, n, r) {
    const a = e.referenceType,
        i = n.enter("imageReference");
    let o = n.enter("label");
    const l = n.createTracker(r);
    let s = l.move("![");
    const u = n.safe(e.alt, { before: s, after: "]", ...l.current() });
    (s += l.move(u + "][")), o();
    const c = n.stack;
    (n.stack = []), (o = n.enter("reference"));
    const d = n.safe(n.associationId(e), { before: s, after: "]", ...l.current() });
    return o(), (n.stack = c), i(), a === "full" || !u || u !== d ? (s += l.move(d + "]")) : a === "shortcut" ? (s = s.slice(0, -1)) : (s += l.move("]")), s;
}
function Az() {
    return "!";
}
$A.peek = xz;
function $A(e, t, n) {
    let r = e.value || "",
        a = "`",
        i = -1;
    for (; new RegExp("(^|[^`])" + a + "([^`]|$)").test(r); ) a += "`";
    for (/[^ \r\n]/.test(r) && ((/^[ \r\n]/.test(r) && /[ \r\n]$/.test(r)) || /^`|`$/.test(r)) && (r = " " + r + " "); ++i < n.unsafe.length; ) {
        const o = n.unsafe[i],
            l = n.compilePattern(o);
        let s;
        if (o.atBreak)
            for (; (s = l.exec(r)); ) {
                let u = s.index;
                r.charCodeAt(u) === 10 && r.charCodeAt(u - 1) === 13 && u--, (r = r.slice(0, u) + " " + r.slice(s.index + 1));
            }
    }
    return a + r + a;
}
function xz() {
    return "`";
}
function qA(e, t) {
    const n = Bg(e);
    return !!(
        !t.options.resourceLink &&
        e.url &&
        !e.title &&
        e.children &&
        e.children.length === 1 &&
        e.children[0].type === "text" &&
        (n === e.url || "mailto:" + n === e.url) &&
        /^[a-z][a-z+.-]+:/i.test(e.url) &&
        !/[\0- <>\u007F]/.test(e.url)
    );
}
GA.peek = Rz;
function GA(e, t, n, r) {
    const a = Wg(n),
        i = a === '"' ? "Quote" : "Apostrophe",
        o = n.createTracker(r);
    let l, s;
    if (qA(e, n)) {
        const c = n.stack;
        (n.stack = []), (l = n.enter("autolink"));
        let d = o.move("<");
        return (d += o.move(n.containerPhrasing(e, { before: d, after: ">", ...o.current() }))), (d += o.move(">")), l(), (n.stack = c), d;
    }
    (l = n.enter("link")), (s = n.enter("label"));
    let u = o.move("[");
    return (
        (u += o.move(n.containerPhrasing(e, { before: u, after: "](", ...o.current() }))),
        (u += o.move("](")),
        s(),
        (!e.url && e.title) || /[\0- \u007F]/.test(e.url)
            ? ((s = n.enter("destinationLiteral")),
              (u += o.move("<")),
              (u += o.move(n.safe(e.url, { before: u, after: ">", ...o.current() }))),
              (u += o.move(">")))
            : ((s = n.enter("destinationRaw")), (u += o.move(n.safe(e.url, { before: u, after: e.title ? " " : ")", ...o.current() })))),
        s(),
        e.title &&
            ((s = n.enter(`title${i}`)),
            (u += o.move(" " + a)),
            (u += o.move(n.safe(e.title, { before: u, after: a, ...o.current() }))),
            (u += o.move(a)),
            s()),
        (u += o.move(")")),
        l(),
        u
    );
}
function Rz(e, t, n) {
    return qA(e, n) ? "<" : "[";
}
HA.peek = Iz;
function HA(e, t, n, r) {
    const a = e.referenceType,
        i = n.enter("linkReference");
    let o = n.enter("label");
    const l = n.createTracker(r);
    let s = l.move("[");
    const u = n.containerPhrasing(e, { before: s, after: "]", ...l.current() });
    (s += l.move(u + "][")), o();
    const c = n.stack;
    (n.stack = []), (o = n.enter("reference"));
    const d = n.safe(n.associationId(e), { before: s, after: "]", ...l.current() });
    return o(), (n.stack = c), i(), a === "full" || !u || u !== d ? (s += l.move(d + "]")) : a === "shortcut" ? (s = s.slice(0, -1)) : (s += l.move("]")), s;
}
function Iz() {
    return "[";
}
function Yg(e) {
    const t = e.options.bullet || "*";
    if (t !== "*" && t !== "+" && t !== "-") throw new Error("Cannot serialize items with `" + t + "` for `options.bullet`, expected `*`, `+`, or `-`");
    return t;
}
function Nz(e) {
    const t = Yg(e),
        n = e.options.bulletOther;
    if (!n) return t === "*" ? "-" : "*";
    if (n !== "*" && n !== "+" && n !== "-") throw new Error("Cannot serialize items with `" + n + "` for `options.bulletOther`, expected `*`, `+`, or `-`");
    if (n === t) throw new Error("Expected `bullet` (`" + t + "`) and `bulletOther` (`" + n + "`) to be different");
    return n;
}
function _z(e) {
    const t = e.options.bulletOrdered || ".";
    if (t !== "." && t !== ")") throw new Error("Cannot serialize items with `" + t + "` for `options.bulletOrdered`, expected `.` or `)`");
    return t;
}
function jA(e) {
    const t = e.options.rule || "*";
    if (t !== "*" && t !== "-" && t !== "_") throw new Error("Cannot serialize rules with `" + t + "` for `options.rule`, expected `*`, `-`, or `_`");
    return t;
}
function Cz(e, t, n, r) {
    const a = n.enter("list"),
        i = n.bulletCurrent;
    let o = e.ordered ? _z(n) : Yg(n);
    const l = e.ordered ? (o === "." ? ")" : ".") : Nz(n);
    let s = t && n.bulletLastUsed ? o === n.bulletLastUsed : !1;
    if (!e.ordered) {
        const c = e.children ? e.children[0] : void 0;
        if (
            ((o === "*" || o === "-") &&
                c &&
                (!c.children || !c.children[0]) &&
                n.stack[n.stack.length - 1] === "list" &&
                n.stack[n.stack.length - 2] === "listItem" &&
                n.stack[n.stack.length - 3] === "list" &&
                n.stack[n.stack.length - 4] === "listItem" &&
                n.indexStack[n.indexStack.length - 1] === 0 &&
                n.indexStack[n.indexStack.length - 2] === 0 &&
                n.indexStack[n.indexStack.length - 3] === 0 &&
                (s = !0),
            jA(n) === o && c)
        ) {
            let d = -1;
            for (; ++d < e.children.length; ) {
                const m = e.children[d];
                if (m && m.type === "listItem" && m.children && m.children[0] && m.children[0].type === "thematicBreak") {
                    s = !0;
                    break;
                }
            }
        }
    }
    s && (o = l), (n.bulletCurrent = o);
    const u = n.containerFlow(e, r);
    return (n.bulletLastUsed = o), (n.bulletCurrent = i), a(), u;
}
function Oz(e) {
    const t = e.options.listItemIndent || "one";
    if (t !== "tab" && t !== "one" && t !== "mixed")
        throw new Error("Cannot serialize items with `" + t + "` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`");
    return t;
}
function Lz(e, t, n, r) {
    const a = Oz(n);
    let i = n.bulletCurrent || Yg(n);
    t &&
        t.type === "list" &&
        t.ordered &&
        (i = (typeof t.start == "number" && t.start > -1 ? t.start : 1) + (n.options.incrementListMarker === !1 ? 0 : t.children.indexOf(e)) + i);
    let o = i.length + 1;
    (a === "tab" || (a === "mixed" && ((t && t.type === "list" && t.spread) || e.spread))) && (o = Math.ceil(o / 4) * 4);
    const l = n.createTracker(r);
    l.move(i + " ".repeat(o - i.length)), l.shift(o);
    const s = n.enter("listItem"),
        u = n.indentLines(n.containerFlow(e, l.current()), c);
    return s(), u;
    function c(d, m, f) {
        return m ? (f ? "" : " ".repeat(o)) + d : (f ? i : i + " ".repeat(o - i.length)) + d;
    }
}
function Dz(e, t, n, r) {
    const a = n.enter("paragraph"),
        i = n.enter("phrasing"),
        o = n.containerPhrasing(e, r);
    return i(), a(), o;
}
const VA = function (e) {
    if (e == null) return Bz;
    if (typeof e == "function") return xs(e);
    if (typeof e == "object") return Array.isArray(e) ? Mz(e) : Fz(e);
    if (typeof e == "string") return Pz(e);
    throw new Error("Expected function, string, or object as test");
};
function Mz(e) {
    const t = [];
    let n = -1;
    for (; ++n < e.length; ) t[n] = VA(e[n]);
    return xs(r);
    function r(...a) {
        let i = -1;
        for (; ++i < t.length; ) if (t[i].apply(this, a)) return !0;
        return !1;
    }
}
function Fz(e) {
    const t = e;
    return xs(n);
    function n(r) {
        const a = r;
        let i;
        for (i in e) if (a[i] !== t[i]) return !1;
        return !0;
    }
}
function Pz(e) {
    return xs(t);
    function t(n) {
        return n && n.type === e;
    }
}
function xs(e) {
    return t;
    function t(n, r, a) {
        return !!(Uz(n) && e.call(this, n, typeof r == "number" ? r : void 0, a || void 0));
    }
}
function Bz() {
    return !0;
}
function Uz(e) {
    return e !== null && typeof e == "object" && "type" in e;
}
const zz = VA([
    "break",
    "delete",
    "emphasis",
    "footnote",
    "footnoteReference",
    "image",
    "imageReference",
    "inlineCode",
    "inlineMath",
    "link",
    "linkReference",
    "mdxJsxTextElement",
    "mdxTextExpression",
    "strong",
    "text",
    "textDirective",
]);
function $z(e, t, n, r) {
    return (
        e.children.some(function (o) {
            return zz(o);
        })
            ? n.containerPhrasing
            : n.containerFlow
    ).call(n, e, r);
}
function qz(e) {
    const t = e.options.strong || "*";
    if (t !== "*" && t !== "_") throw new Error("Cannot serialize strong with `" + t + "` for `options.strong`, expected `*`, or `_`");
    return t;
}
WA.peek = Gz;
function WA(e, t, n, r) {
    const a = qz(n),
        i = n.enter("strong"),
        o = n.createTracker(r),
        l = o.move(a + a);
    let s = o.move(n.containerPhrasing(e, { after: a, before: l, ...o.current() }));
    const u = s.charCodeAt(0),
        c = jl(r.before.charCodeAt(r.before.length - 1), u, a);
    c.inside && (s = ro(u) + s.slice(1));
    const d = s.charCodeAt(s.length - 1),
        m = jl(r.after.charCodeAt(0), d, a);
    m.inside && (s = s.slice(0, -1) + ro(d));
    const f = o.move(a + a);
    return i(), (n.attentionEncodeSurroundingInfo = { after: m.outside, before: c.outside }), l + s + f;
}
function Gz(e, t, n) {
    return n.options.strong || "*";
}
function Hz(e, t, n, r) {
    return n.safe(e.value, r);
}
function jz(e) {
    const t = e.options.ruleRepetition || 3;
    if (t < 3) throw new Error("Cannot serialize rules with repetition `" + t + "` for `options.ruleRepetition`, expected `3` or more");
    return t;
}
function Vz(e, t, n) {
    const r = (jA(n) + (n.options.ruleSpaces ? " " : "")).repeat(jz(n));
    return n.options.ruleSpaces ? r.slice(0, -1) : r;
}
const YA = {
    blockquote: tz,
    break: J2,
    code: oz,
    definition: sz,
    emphasis: MA,
    hardBreak: J2,
    heading: wz,
    html: BA,
    image: UA,
    imageReference: zA,
    inlineCode: $A,
    link: GA,
    linkReference: HA,
    list: Cz,
    listItem: Lz,
    paragraph: Dz,
    root: $z,
    strong: WA,
    text: Hz,
    thematicBreak: Vz,
};
function Wz() {
    return {
        enter: { table: Yz, tableData: ew, tableHeader: ew, tableRow: Xz },
        exit: { codeText: Zz, table: Kz, tableData: Nf, tableHeader: Nf, tableRow: Nf },
    };
}
function Yz(e) {
    const t = e._align;
    this.enter(
        {
            type: "table",
            align: t.map(function (n) {
                return n === "none" ? null : n;
            }),
            children: [],
        },
        e,
    ),
        (this.data.inTable = !0);
}
function Kz(e) {
    this.exit(e), (this.data.inTable = void 0);
}
function Xz(e) {
    this.enter({ type: "tableRow", children: [] }, e);
}
function Nf(e) {
    this.exit(e);
}
function ew(e) {
    this.enter({ type: "tableCell", children: [] }, e);
}
function Zz(e) {
    let t = this.resume();
    this.data.inTable && (t = t.replace(/\\([\\|])/g, Qz));
    const n = this.stack[this.stack.length - 1];
    n.type, (n.value = t), this.exit(e);
}
function Qz(e, t) {
    return t === "|" ? t : e;
}
function Jz(e) {
    const t = e || {},
        n = t.tableCellPadding,
        r = t.tablePipeAlign,
        a = t.stringLength,
        i = n ? " " : "|";
    return {
        unsafe: [
            { character: "\r", inConstruct: "tableCell" },
            {
                character: `
`,
                inConstruct: "tableCell",
            },
            { atBreak: !0, character: "|", after: "[	 :-]" },
            { character: "|", inConstruct: "tableCell" },
            { atBreak: !0, character: ":", after: "-" },
            { atBreak: !0, character: "-", after: "[:|-]" },
        ],
        handlers: { inlineCode: m, table: o, tableCell: s, tableRow: l },
    };
    function o(f, b, E, I) {
        return u(c(f, E, I), f.align);
    }
    function l(f, b, E, I) {
        const y = d(f, E, I),
            g = u([y]);
        return g.slice(
            0,
            g.indexOf(`
`),
        );
    }
    function s(f, b, E, I) {
        const y = E.enter("tableCell"),
            g = E.enter("phrasing"),
            v = E.containerPhrasing(f, { ...I, before: i, after: i });
        return g(), y(), v;
    }
    function u(f, b) {
        return JU(f, { align: b, alignDelimiters: r, padding: n, stringLength: a });
    }
    function c(f, b, E) {
        const I = f.children;
        let y = -1;
        const g = [],
            v = b.enter("table");
        for (; ++y < I.length; ) g[y] = d(I[y], b, E);
        return v(), g;
    }
    function d(f, b, E) {
        const I = f.children;
        let y = -1;
        const g = [],
            v = b.enter("tableRow");
        for (; ++y < I.length; ) g[y] = s(I[y], f, b, E);
        return v(), g;
    }
    function m(f, b, E) {
        let I = YA.inlineCode(f, b, E);
        return E.stack.includes("tableCell") && (I = I.replace(/\|/g, "\\$&")), I;
    }
}
function e$() {
    return { exit: { taskListCheckValueChecked: tw, taskListCheckValueUnchecked: tw, paragraph: n$ } };
}
function t$() {
    return { unsafe: [{ atBreak: !0, character: "-", after: "[:|-]" }], handlers: { listItem: r$ } };
}
function tw(e) {
    const t = this.stack[this.stack.length - 2];
    t.type, (t.checked = e.type === "taskListCheckValueChecked");
}
function n$(e) {
    const t = this.stack[this.stack.length - 2];
    if (t && t.type === "listItem" && typeof t.checked == "boolean") {
        const n = this.stack[this.stack.length - 1];
        n.type;
        const r = n.children[0];
        if (r && r.type === "text") {
            const a = t.children;
            let i = -1,
                o;
            for (; ++i < a.length; ) {
                const l = a[i];
                if (l.type === "paragraph") {
                    o = l;
                    break;
                }
            }
            o === n &&
                ((r.value = r.value.slice(1)),
                r.value.length === 0
                    ? n.children.shift()
                    : n.position &&
                      r.position &&
                      typeof r.position.start.offset == "number" &&
                      (r.position.start.column++, r.position.start.offset++, (n.position.start = Object.assign({}, r.position.start))));
        }
    }
    this.exit(e);
}
function r$(e, t, n, r) {
    const a = e.children[0],
        i = typeof e.checked == "boolean" && a && a.type === "paragraph",
        o = "[" + (e.checked ? "x" : " ") + "] ",
        l = n.createTracker(r);
    i && l.move(o);
    let s = YA.listItem(e, t, n, { ...r, ...l.current() });
    return i && (s = s.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/, u)), s;
    function u(c) {
        return c + o;
    }
}
function a$() {
    return [SU(), LU(), WU(), Wz(), e$()];
}
function i$(e) {
    return { extensions: [wU(), DU(), YU(), Jz(e), t$()] };
}
const o$ = { tokenize: p$, partial: !0 },
    KA = { tokenize: f$, partial: !0 },
    XA = { tokenize: m$, partial: !0 },
    ZA = { tokenize: h$, partial: !0 },
    l$ = { tokenize: g$, partial: !0 },
    QA = { name: "wwwAutolink", tokenize: c$, previous: ex },
    JA = { name: "protocolAutolink", tokenize: d$, previous: tx },
    er = { name: "emailAutolink", tokenize: u$, previous: nx },
    _n = {};
function s$() {
    return { text: _n };
}
let Pr = 48;
for (; Pr < 123; ) (_n[Pr] = er), Pr++, Pr === 58 ? (Pr = 65) : Pr === 91 && (Pr = 97);
_n[43] = er;
_n[45] = er;
_n[46] = er;
_n[95] = er;
_n[72] = [er, JA];
_n[104] = [er, JA];
_n[87] = [er, QA];
_n[119] = [er, QA];
function u$(e, t, n) {
    const r = this;
    let a, i;
    return o;
    function o(d) {
        return !nh(d) || !nx.call(r, r.previous) || Kg(r.events) ? n(d) : (e.enter("literalAutolink"), e.enter("literalAutolinkEmail"), l(d));
    }
    function l(d) {
        return nh(d) ? (e.consume(d), l) : d === 64 ? (e.consume(d), s) : n(d);
    }
    function s(d) {
        return d === 46 ? e.check(l$, c, u)(d) : d === 45 || d === 95 || ct(d) ? ((i = !0), e.consume(d), s) : c(d);
    }
    function u(d) {
        return e.consume(d), (a = !0), s;
    }
    function c(d) {
        return i && a && gt(r.previous) ? (e.exit("literalAutolinkEmail"), e.exit("literalAutolink"), t(d)) : n(d);
    }
}
function c$(e, t, n) {
    const r = this;
    return a;
    function a(o) {
        return (o !== 87 && o !== 119) || !ex.call(r, r.previous) || Kg(r.events)
            ? n(o)
            : (e.enter("literalAutolink"), e.enter("literalAutolinkWww"), e.check(o$, e.attempt(KA, e.attempt(XA, i), n), n)(o));
    }
    function i(o) {
        return e.exit("literalAutolinkWww"), e.exit("literalAutolink"), t(o);
    }
}
function d$(e, t, n) {
    const r = this;
    let a = "",
        i = !1;
    return o;
    function o(d) {
        return (d === 72 || d === 104) && tx.call(r, r.previous) && !Kg(r.events)
            ? (e.enter("literalAutolink"), e.enter("literalAutolinkHttp"), (a += String.fromCodePoint(d)), e.consume(d), l)
            : n(d);
    }
    function l(d) {
        if (gt(d) && a.length < 5) return (a += String.fromCodePoint(d)), e.consume(d), l;
        if (d === 58) {
            const m = a.toLowerCase();
            if (m === "http" || m === "https") return e.consume(d), s;
        }
        return n(d);
    }
    function s(d) {
        return d === 47 ? (e.consume(d), i ? u : ((i = !0), s)) : n(d);
    }
    function u(d) {
        return d === null || ql(d) || Re(d) || Jr(d) || vs(d) ? n(d) : e.attempt(KA, e.attempt(XA, c), n)(d);
    }
    function c(d) {
        return e.exit("literalAutolinkHttp"), e.exit("literalAutolink"), t(d);
    }
}
function p$(e, t, n) {
    let r = 0;
    return a;
    function a(o) {
        return (o === 87 || o === 119) && r < 3 ? (r++, e.consume(o), a) : o === 46 && r === 3 ? (e.consume(o), i) : n(o);
    }
    function i(o) {
        return o === null ? n(o) : t(o);
    }
}
function f$(e, t, n) {
    let r, a, i;
    return o;
    function o(u) {
        return u === 46 || u === 95 ? e.check(ZA, s, l)(u) : u === null || Re(u) || Jr(u) || (u !== 45 && vs(u)) ? s(u) : ((i = !0), e.consume(u), o);
    }
    function l(u) {
        return u === 95 ? (r = !0) : ((a = r), (r = void 0)), e.consume(u), o;
    }
    function s(u) {
        return a || r || !i ? n(u) : t(u);
    }
}
function m$(e, t) {
    let n = 0,
        r = 0;
    return a;
    function a(o) {
        return o === 40
            ? (n++, e.consume(o), a)
            : o === 41 && r < n
              ? i(o)
              : o === 33 ||
                  o === 34 ||
                  o === 38 ||
                  o === 39 ||
                  o === 41 ||
                  o === 42 ||
                  o === 44 ||
                  o === 46 ||
                  o === 58 ||
                  o === 59 ||
                  o === 60 ||
                  o === 63 ||
                  o === 93 ||
                  o === 95 ||
                  o === 126
                ? e.check(ZA, t, i)(o)
                : o === null || Re(o) || Jr(o)
                  ? t(o)
                  : (e.consume(o), a);
    }
    function i(o) {
        return o === 41 && r++, e.consume(o), a;
    }
}
function h$(e, t, n) {
    return r;
    function r(l) {
        return l === 33 || l === 34 || l === 39 || l === 41 || l === 42 || l === 44 || l === 46 || l === 58 || l === 59 || l === 63 || l === 95 || l === 126
            ? (e.consume(l), r)
            : l === 38
              ? (e.consume(l), i)
              : l === 93
                ? (e.consume(l), a)
                : l === 60 || l === null || Re(l) || Jr(l)
                  ? t(l)
                  : n(l);
    }
    function a(l) {
        return l === null || l === 40 || l === 91 || Re(l) || Jr(l) ? t(l) : r(l);
    }
    function i(l) {
        return gt(l) ? o(l) : n(l);
    }
    function o(l) {
        return l === 59 ? (e.consume(l), r) : gt(l) ? (e.consume(l), o) : n(l);
    }
}
function g$(e, t, n) {
    return r;
    function r(i) {
        return e.consume(i), a;
    }
    function a(i) {
        return ct(i) ? n(i) : t(i);
    }
}
function ex(e) {
    return e === null || e === 40 || e === 42 || e === 95 || e === 91 || e === 93 || e === 126 || Re(e);
}
function tx(e) {
    return !gt(e);
}
function nx(e) {
    return !(e === 47 || nh(e));
}
function nh(e) {
    return e === 43 || e === 45 || e === 46 || e === 95 || ct(e);
}
function Kg(e) {
    let t = e.length,
        n = !1;
    for (; t--; ) {
        const r = e[t][1];
        if ((r.type === "labelLink" || r.type === "labelImage") && !r._balanced) {
            n = !0;
            break;
        }
        if (r._gfmAutolinkLiteralWalkedInto) {
            n = !1;
            break;
        }
    }
    return e.length > 0 && !n && (e[e.length - 1][1]._gfmAutolinkLiteralWalkedInto = !0), n;
}
const b$ = { tokenize: A$, partial: !0 };
function y$() {
    return {
        document: { 91: { name: "gfmFootnoteDefinition", tokenize: w$, continuation: { tokenize: k$ }, exit: T$ } },
        text: { 91: { name: "gfmFootnoteCall", tokenize: S$ }, 93: { name: "gfmPotentialFootnoteCall", add: "after", tokenize: v$, resolveTo: E$ } },
    };
}
function v$(e, t, n) {
    const r = this;
    let a = r.events.length;
    const i = r.parser.gfmFootnotes || (r.parser.gfmFootnotes = []);
    let o;
    for (; a--; ) {
        const s = r.events[a][1];
        if (s.type === "labelImage") {
            o = s;
            break;
        }
        if (s.type === "gfmFootnoteCall" || s.type === "labelLink" || s.type === "label" || s.type === "image" || s.type === "link") break;
    }
    return l;
    function l(s) {
        if (!o || !o._balanced) return n(s);
        const u = bn(r.sliceSerialize({ start: o.end, end: r.now() }));
        return u.codePointAt(0) !== 94 || !i.includes(u.slice(1))
            ? n(s)
            : (e.enter("gfmFootnoteCallLabelMarker"), e.consume(s), e.exit("gfmFootnoteCallLabelMarker"), t(s));
    }
}
function E$(e, t) {
    let n = e.length;
    for (; n--; )
        if (e[n][1].type === "labelImage" && e[n][0] === "enter") {
            e[n][1];
            break;
        }
    (e[n + 1][1].type = "data"), (e[n + 3][1].type = "gfmFootnoteCallLabelMarker");
    const r = { type: "gfmFootnoteCall", start: Object.assign({}, e[n + 3][1].start), end: Object.assign({}, e[e.length - 1][1].end) },
        a = { type: "gfmFootnoteCallMarker", start: Object.assign({}, e[n + 3][1].end), end: Object.assign({}, e[n + 3][1].end) };
    a.end.column++, a.end.offset++, a.end._bufferIndex++;
    const i = { type: "gfmFootnoteCallString", start: Object.assign({}, a.end), end: Object.assign({}, e[e.length - 1][1].start) },
        o = { type: "chunkString", contentType: "string", start: Object.assign({}, i.start), end: Object.assign({}, i.end) },
        l = [
            e[n + 1],
            e[n + 2],
            ["enter", r, t],
            e[n + 3],
            e[n + 4],
            ["enter", a, t],
            ["exit", a, t],
            ["enter", i, t],
            ["enter", o, t],
            ["exit", o, t],
            ["exit", i, t],
            e[e.length - 2],
            e[e.length - 1],
            ["exit", r, t],
        ];
    return e.splice(n, e.length - n + 1, ...l), e;
}
function S$(e, t, n) {
    const r = this,
        a = r.parser.gfmFootnotes || (r.parser.gfmFootnotes = []);
    let i = 0,
        o;
    return l;
    function l(d) {
        return e.enter("gfmFootnoteCall"), e.enter("gfmFootnoteCallLabelMarker"), e.consume(d), e.exit("gfmFootnoteCallLabelMarker"), s;
    }
    function s(d) {
        return d !== 94
            ? n(d)
            : (e.enter("gfmFootnoteCallMarker"),
              e.consume(d),
              e.exit("gfmFootnoteCallMarker"),
              e.enter("gfmFootnoteCallString"),
              (e.enter("chunkString").contentType = "string"),
              u);
    }
    function u(d) {
        if (i > 999 || (d === 93 && !o) || d === null || d === 91 || Re(d)) return n(d);
        if (d === 93) {
            e.exit("chunkString");
            const m = e.exit("gfmFootnoteCallString");
            return a.includes(bn(r.sliceSerialize(m)))
                ? (e.enter("gfmFootnoteCallLabelMarker"), e.consume(d), e.exit("gfmFootnoteCallLabelMarker"), e.exit("gfmFootnoteCall"), t)
                : n(d);
        }
        return Re(d) || (o = !0), i++, e.consume(d), d === 92 ? c : u;
    }
    function c(d) {
        return d === 91 || d === 92 || d === 93 ? (e.consume(d), i++, u) : u(d);
    }
}
function w$(e, t, n) {
    const r = this,
        a = r.parser.gfmFootnotes || (r.parser.gfmFootnotes = []);
    let i,
        o = 0,
        l;
    return s;
    function s(b) {
        return (
            (e.enter("gfmFootnoteDefinition")._container = !0),
            e.enter("gfmFootnoteDefinitionLabel"),
            e.enter("gfmFootnoteDefinitionLabelMarker"),
            e.consume(b),
            e.exit("gfmFootnoteDefinitionLabelMarker"),
            u
        );
    }
    function u(b) {
        return b === 94
            ? (e.enter("gfmFootnoteDefinitionMarker"),
              e.consume(b),
              e.exit("gfmFootnoteDefinitionMarker"),
              e.enter("gfmFootnoteDefinitionLabelString"),
              (e.enter("chunkString").contentType = "string"),
              c)
            : n(b);
    }
    function c(b) {
        if (o > 999 || (b === 93 && !l) || b === null || b === 91 || Re(b)) return n(b);
        if (b === 93) {
            e.exit("chunkString");
            const E = e.exit("gfmFootnoteDefinitionLabelString");
            return (
                (i = bn(r.sliceSerialize(E))),
                e.enter("gfmFootnoteDefinitionLabelMarker"),
                e.consume(b),
                e.exit("gfmFootnoteDefinitionLabelMarker"),
                e.exit("gfmFootnoteDefinitionLabel"),
                m
            );
        }
        return Re(b) || (l = !0), o++, e.consume(b), b === 92 ? d : c;
    }
    function d(b) {
        return b === 91 || b === 92 || b === 93 ? (e.consume(b), o++, c) : c(b);
    }
    function m(b) {
        return b === 58
            ? (e.enter("definitionMarker"), e.consume(b), e.exit("definitionMarker"), a.includes(i) || a.push(i), be(e, f, "gfmFootnoteDefinitionWhitespace"))
            : n(b);
    }
    function f(b) {
        return t(b);
    }
}
function k$(e, t, n) {
    return e.check(go, t, e.attempt(b$, t, n));
}
function T$(e) {
    e.exit("gfmFootnoteDefinition");
}
function A$(e, t, n) {
    const r = this;
    return be(e, a, "gfmFootnoteDefinitionIndent", 4 + 1);
    function a(i) {
        const o = r.events[r.events.length - 1];
        return o && o[1].type === "gfmFootnoteDefinitionIndent" && o[2].sliceSerialize(o[1], !0).length === 4 ? t(i) : n(i);
    }
}
function x$(e) {
    let n = (e || {}).singleTilde;
    const r = { name: "strikethrough", tokenize: i, resolveAll: a };
    return n == null && (n = !0), { text: { 126: r }, insideSpan: { null: [r] }, attentionMarkers: { null: [126] } };
    function a(o, l) {
        let s = -1;
        for (; ++s < o.length; )
            if (o[s][0] === "enter" && o[s][1].type === "strikethroughSequenceTemporary" && o[s][1]._close) {
                let u = s;
                for (; u--; )
                    if (
                        o[u][0] === "exit" &&
                        o[u][1].type === "strikethroughSequenceTemporary" &&
                        o[u][1]._open &&
                        o[s][1].end.offset - o[s][1].start.offset === o[u][1].end.offset - o[u][1].start.offset
                    ) {
                        (o[s][1].type = "strikethroughSequence"), (o[u][1].type = "strikethroughSequence");
                        const c = { type: "strikethrough", start: Object.assign({}, o[u][1].start), end: Object.assign({}, o[s][1].end) },
                            d = { type: "strikethroughText", start: Object.assign({}, o[u][1].end), end: Object.assign({}, o[s][1].start) },
                            m = [
                                ["enter", c, l],
                                ["enter", o[u][1], l],
                                ["exit", o[u][1], l],
                                ["enter", d, l],
                            ],
                            f = l.parser.constructs.insideSpan.null;
                        f && qt(m, m.length, 0, Es(f, o.slice(u + 1, s), l)),
                            qt(m, m.length, 0, [
                                ["exit", d, l],
                                ["enter", o[s][1], l],
                                ["exit", o[s][1], l],
                                ["exit", c, l],
                            ]),
                            qt(o, u - 1, s - u + 3, m),
                            (s = u + m.length - 2);
                        break;
                    }
            }
        for (s = -1; ++s < o.length; ) o[s][1].type === "strikethroughSequenceTemporary" && (o[s][1].type = "data");
        return o;
    }
    function i(o, l, s) {
        const u = this.previous,
            c = this.events;
        let d = 0;
        return m;
        function m(b) {
            return u === 126 && c[c.length - 1][1].type !== "characterEscape" ? s(b) : (o.enter("strikethroughSequenceTemporary"), f(b));
        }
        function f(b) {
            const E = ja(u);
            if (b === 126) return d > 1 ? s(b) : (o.consume(b), d++, f);
            if (d < 2 && !n) return s(b);
            const I = o.exit("strikethroughSequenceTemporary"),
                y = ja(b);
            return (I._open = !y || (y === 2 && !!E)), (I._close = !E || (E === 2 && !!y)), l(b);
        }
    }
}
class R$ {
    constructor() {
        this.map = [];
    }
    add(t, n, r) {
        I$(this, t, n, r);
    }
    consume(t) {
        if (
            (this.map.sort(function (i, o) {
                return i[0] - o[0];
            }),
            this.map.length === 0)
        )
            return;
        let n = this.map.length;
        const r = [];
        for (; n > 0; ) (n -= 1), r.push(t.slice(this.map[n][0] + this.map[n][1]), this.map[n][2]), (t.length = this.map[n][0]);
        r.push(t.slice()), (t.length = 0);
        let a = r.pop();
        for (; a; ) {
            for (const i of a) t.push(i);
            a = r.pop();
        }
        this.map.length = 0;
    }
}
function I$(e, t, n, r) {
    let a = 0;
    if (!(n === 0 && r.length === 0)) {
        for (; a < e.map.length; ) {
            if (e.map[a][0] === t) {
                (e.map[a][1] += n), e.map[a][2].push(...r);
                return;
            }
            a += 1;
        }
        e.map.push([t, n, r]);
    }
}
function N$(e, t) {
    let n = !1;
    const r = [];
    for (; t < e.length; ) {
        const a = e[t];
        if (n) {
            if (a[0] === "enter") a[1].type === "tableContent" && r.push(e[t + 1][1].type === "tableDelimiterMarker" ? "left" : "none");
            else if (a[1].type === "tableContent") {
                if (e[t - 1][1].type === "tableDelimiterMarker") {
                    const i = r.length - 1;
                    r[i] = r[i] === "left" ? "center" : "right";
                }
            } else if (a[1].type === "tableDelimiterRow") break;
        } else a[0] === "enter" && a[1].type === "tableDelimiterRow" && (n = !0);
        t += 1;
    }
    return r;
}
function _$() {
    return { flow: { null: { name: "table", tokenize: C$, resolveAll: O$ } } };
}
function C$(e, t, n) {
    const r = this;
    let a = 0,
        i = 0,
        o;
    return l;
    function l(O) {
        let B = r.events.length - 1;
        for (; B > -1; ) {
            const re = r.events[B][1].type;
            if (re === "lineEnding" || re === "linePrefix") B--;
            else break;
        }
        const $ = B > -1 ? r.events[B][1].type : null,
            ne = $ === "tableHead" || $ === "tableRow" ? k : s;
        return ne === k && r.parser.lazy[r.now().line] ? n(O) : ne(O);
    }
    function s(O) {
        return e.enter("tableHead"), e.enter("tableRow"), u(O);
    }
    function u(O) {
        return O === 124 || ((o = !0), (i += 1)), c(O);
    }
    function c(O) {
        return O === null
            ? n(O)
            : ae(O)
              ? i > 1
                  ? ((i = 0), (r.interrupt = !0), e.exit("tableRow"), e.enter("lineEnding"), e.consume(O), e.exit("lineEnding"), f)
                  : n(O)
              : ye(O)
                ? be(e, c, "whitespace")(O)
                : ((i += 1),
                  o && ((o = !1), (a += 1)),
                  O === 124 ? (e.enter("tableCellDivider"), e.consume(O), e.exit("tableCellDivider"), (o = !0), c) : (e.enter("data"), d(O)));
    }
    function d(O) {
        return O === null || O === 124 || Re(O) ? (e.exit("data"), c(O)) : (e.consume(O), O === 92 ? m : d);
    }
    function m(O) {
        return O === 92 || O === 124 ? (e.consume(O), d) : d(O);
    }
    function f(O) {
        return (
            (r.interrupt = !1),
            r.parser.lazy[r.now().line]
                ? n(O)
                : (e.enter("tableDelimiterRow"),
                  (o = !1),
                  ye(O) ? be(e, b, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(O) : b(O))
        );
    }
    function b(O) {
        return O === 45 || O === 58 ? I(O) : O === 124 ? ((o = !0), e.enter("tableCellDivider"), e.consume(O), e.exit("tableCellDivider"), E) : R(O);
    }
    function E(O) {
        return ye(O) ? be(e, I, "whitespace")(O) : I(O);
    }
    function I(O) {
        return O === 58
            ? ((i += 1), (o = !0), e.enter("tableDelimiterMarker"), e.consume(O), e.exit("tableDelimiterMarker"), y)
            : O === 45
              ? ((i += 1), y(O))
              : O === null || ae(O)
                ? T(O)
                : R(O);
    }
    function y(O) {
        return O === 45 ? (e.enter("tableDelimiterFiller"), g(O)) : R(O);
    }
    function g(O) {
        return O === 45
            ? (e.consume(O), g)
            : O === 58
              ? ((o = !0), e.exit("tableDelimiterFiller"), e.enter("tableDelimiterMarker"), e.consume(O), e.exit("tableDelimiterMarker"), v)
              : (e.exit("tableDelimiterFiller"), v(O));
    }
    function v(O) {
        return ye(O) ? be(e, T, "whitespace")(O) : T(O);
    }
    function T(O) {
        return O === 124 ? b(O) : O === null || ae(O) ? (!o || a !== i ? R(O) : (e.exit("tableDelimiterRow"), e.exit("tableHead"), t(O))) : R(O);
    }
    function R(O) {
        return n(O);
    }
    function k(O) {
        return e.enter("tableRow"), L(O);
    }
    function L(O) {
        return O === 124
            ? (e.enter("tableCellDivider"), e.consume(O), e.exit("tableCellDivider"), L)
            : O === null || ae(O)
              ? (e.exit("tableRow"), t(O))
              : ye(O)
                ? be(e, L, "whitespace")(O)
                : (e.enter("data"), F(O));
    }
    function F(O) {
        return O === null || O === 124 || Re(O) ? (e.exit("data"), L(O)) : (e.consume(O), O === 92 ? M : F);
    }
    function M(O) {
        return O === 92 || O === 124 ? (e.consume(O), F) : F(O);
    }
}
function O$(e, t) {
    let n = -1,
        r = !0,
        a = 0,
        i = [0, 0, 0, 0],
        o = [0, 0, 0, 0],
        l = !1,
        s = 0,
        u,
        c,
        d;
    const m = new R$();
    for (; ++n < e.length; ) {
        const f = e[n],
            b = f[1];
        f[0] === "enter"
            ? b.type === "tableHead"
                ? ((l = !1),
                  s !== 0 && (nw(m, t, s, u, c), (c = void 0), (s = 0)),
                  (u = { type: "table", start: Object.assign({}, b.start), end: Object.assign({}, b.end) }),
                  m.add(n, 0, [["enter", u, t]]))
                : b.type === "tableRow" || b.type === "tableDelimiterRow"
                  ? ((r = !0),
                    (d = void 0),
                    (i = [0, 0, 0, 0]),
                    (o = [0, n + 1, 0, 0]),
                    l &&
                        ((l = !1),
                        (c = { type: "tableBody", start: Object.assign({}, b.start), end: Object.assign({}, b.end) }),
                        m.add(n, 0, [["enter", c, t]])),
                    (a = b.type === "tableDelimiterRow" ? 2 : c ? 3 : 1))
                  : a && (b.type === "data" || b.type === "tableDelimiterMarker" || b.type === "tableDelimiterFiller")
                    ? ((r = !1), o[2] === 0 && (i[1] !== 0 && ((o[0] = o[1]), (d = Ho(m, t, i, a, void 0, d)), (i = [0, 0, 0, 0])), (o[2] = n)))
                    : b.type === "tableCellDivider" &&
                      (r ? (r = !1) : (i[1] !== 0 && ((o[0] = o[1]), (d = Ho(m, t, i, a, void 0, d))), (i = o), (o = [i[1], n, 0, 0])))
            : b.type === "tableHead"
              ? ((l = !0), (s = n))
              : b.type === "tableRow" || b.type === "tableDelimiterRow"
                ? ((s = n), i[1] !== 0 ? ((o[0] = o[1]), (d = Ho(m, t, i, a, n, d))) : o[1] !== 0 && (d = Ho(m, t, o, a, n, d)), (a = 0))
                : a && (b.type === "data" || b.type === "tableDelimiterMarker" || b.type === "tableDelimiterFiller") && (o[3] = n);
    }
    for (s !== 0 && nw(m, t, s, u, c), m.consume(t.events), n = -1; ++n < t.events.length; ) {
        const f = t.events[n];
        f[0] === "enter" && f[1].type === "table" && (f[1]._align = N$(t.events, n));
    }
    return e;
}
function Ho(e, t, n, r, a, i) {
    const o = r === 1 ? "tableHeader" : r === 2 ? "tableDelimiter" : "tableData",
        l = "tableContent";
    n[0] !== 0 && ((i.end = Object.assign({}, ha(t.events, n[0]))), e.add(n[0], 0, [["exit", i, t]]));
    const s = ha(t.events, n[1]);
    if (((i = { type: o, start: Object.assign({}, s), end: Object.assign({}, s) }), e.add(n[1], 0, [["enter", i, t]]), n[2] !== 0)) {
        const u = ha(t.events, n[2]),
            c = ha(t.events, n[3]),
            d = { type: l, start: Object.assign({}, u), end: Object.assign({}, c) };
        if ((e.add(n[2], 0, [["enter", d, t]]), r !== 2)) {
            const m = t.events[n[2]],
                f = t.events[n[3]];
            if (((m[1].end = Object.assign({}, f[1].end)), (m[1].type = "chunkText"), (m[1].contentType = "text"), n[3] > n[2] + 1)) {
                const b = n[2] + 1,
                    E = n[3] - n[2] - 1;
                e.add(b, E, []);
            }
        }
        e.add(n[3] + 1, 0, [["exit", d, t]]);
    }
    return a !== void 0 && ((i.end = Object.assign({}, ha(t.events, a))), e.add(a, 0, [["exit", i, t]]), (i = void 0)), i;
}
function nw(e, t, n, r, a) {
    const i = [],
        o = ha(t.events, n);
    a && ((a.end = Object.assign({}, o)), i.push(["exit", a, t])), (r.end = Object.assign({}, o)), i.push(["exit", r, t]), e.add(n + 1, 0, i);
}
function ha(e, t) {
    const n = e[t],
        r = n[0] === "enter" ? "start" : "end";
    return n[1][r];
}
const L$ = { name: "tasklistCheck", tokenize: M$ };
function D$() {
    return { text: { 91: L$ } };
}
function M$(e, t, n) {
    const r = this;
    return a;
    function a(s) {
        return r.previous !== null || !r._gfmTasklistFirstContentOfListItem
            ? n(s)
            : (e.enter("taskListCheck"), e.enter("taskListCheckMarker"), e.consume(s), e.exit("taskListCheckMarker"), i);
    }
    function i(s) {
        return Re(s)
            ? (e.enter("taskListCheckValueUnchecked"), e.consume(s), e.exit("taskListCheckValueUnchecked"), o)
            : s === 88 || s === 120
              ? (e.enter("taskListCheckValueChecked"), e.consume(s), e.exit("taskListCheckValueChecked"), o)
              : n(s);
    }
    function o(s) {
        return s === 93 ? (e.enter("taskListCheckMarker"), e.consume(s), e.exit("taskListCheckMarker"), e.exit("taskListCheck"), l) : n(s);
    }
    function l(s) {
        return ae(s) ? t(s) : ye(s) ? e.check({ tokenize: F$ }, t, n)(s) : n(s);
    }
}
function F$(e, t, n) {
    return be(e, r, "whitespace");
    function r(a) {
        return a === null ? n(a) : t(a);
    }
}
function P$(e) {
    return lA([s$(), y$(), x$(e), _$(), D$()]);
}
const B$ = {};
function U$(e) {
    const t = this,
        n = e || B$,
        r = t.data(),
        a = r.micromarkExtensions || (r.micromarkExtensions = []),
        i = r.fromMarkdownExtensions || (r.fromMarkdownExtensions = []),
        o = r.toMarkdownExtensions || (r.toMarkdownExtensions = []);
    a.push(P$(n)), i.push(a$()), o.push(i$(n));
}
function z$() {
    return {
        enter: { mathFlow: e, mathFlowFenceMeta: t, mathText: i },
        exit: { mathFlow: a, mathFlowFence: r, mathFlowFenceMeta: n, mathFlowValue: l, mathText: o, mathTextData: l },
    };
    function e(s) {
        const u = { type: "element", tagName: "code", properties: { className: ["language-math", "math-display"] }, children: [] };
        this.enter({ type: "math", meta: null, value: "", data: { hName: "pre", hChildren: [u] } }, s);
    }
    function t() {
        this.buffer();
    }
    function n() {
        const s = this.resume(),
            u = this.stack[this.stack.length - 1];
        u.type, (u.meta = s);
    }
    function r() {
        this.data.mathFlowInside || (this.buffer(), (this.data.mathFlowInside = !0));
    }
    function a(s) {
        const u = this.resume().replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, ""),
            c = this.stack[this.stack.length - 1];
        c.type, this.exit(s), (c.value = u);
        const d = c.data.hChildren[0];
        d.type, d.tagName, d.children.push({ type: "text", value: u }), (this.data.mathFlowInside = void 0);
    }
    function i(s) {
        this.enter({ type: "inlineMath", value: "", data: { hName: "code", hProperties: { className: ["language-math", "math-inline"] }, hChildren: [] } }, s),
            this.buffer();
    }
    function o(s) {
        const u = this.resume(),
            c = this.stack[this.stack.length - 1];
        c.type, this.exit(s), (c.value = u), c.data.hChildren.push({ type: "text", value: u });
    }
    function l(s) {
        this.config.enter.data.call(this, s), this.config.exit.data.call(this, s);
    }
}
function $$(e) {
    let t = (e || {}).singleDollarTextMath;
    return (
        t == null && (t = !0),
        (r.peek = a),
        {
            unsafe: [
                { character: "\r", inConstruct: "mathFlowMeta" },
                {
                    character: `
`,
                    inConstruct: "mathFlowMeta",
                },
                { character: "$", after: t ? void 0 : "\\$", inConstruct: "phrasing" },
                { character: "$", inConstruct: "mathFlowMeta" },
                { atBreak: !0, character: "$", after: "\\$" },
            ],
            handlers: { math: n, inlineMath: r },
        }
    );
    function n(i, o, l, s) {
        const u = i.value || "",
            c = l.createTracker(s),
            d = "$".repeat(Math.max(DA(u, "$") + 1, 2)),
            m = l.enter("mathFlow");
        let f = c.move(d);
        if (i.meta) {
            const b = l.enter("mathFlowMeta");
            (f += c.move(
                l.safe(i.meta, {
                    after: `
`,
                    before: f,
                    encode: ["$"],
                    ...c.current(),
                }),
            )),
                b();
        }
        return (
            (f += c.move(`
`)),
            u &&
                (f += c.move(
                    u +
                        `
`,
                )),
            (f += c.move(d)),
            m(),
            f
        );
    }
    function r(i, o, l) {
        let s = i.value || "",
            u = 1;
        for (t || u++; new RegExp("(^|[^$])" + "\\$".repeat(u) + "([^$]|$)").test(s); ) u++;
        const c = "$".repeat(u);
        /[^ \r\n]/.test(s) && ((/^[ \r\n]/.test(s) && /[ \r\n]$/.test(s)) || /^\$|\$$/.test(s)) && (s = " " + s + " ");
        let d = -1;
        for (; ++d < l.unsafe.length; ) {
            const m = l.unsafe[d];
            if (!m.atBreak) continue;
            const f = l.compilePattern(m);
            let b;
            for (; (b = f.exec(s)); ) {
                let E = b.index;
                s.codePointAt(E) === 10 && s.codePointAt(E - 1) === 13 && E--, (s = s.slice(0, E) + " " + s.slice(b.index + 1));
            }
        }
        return c + s + c;
    }
    function a() {
        return "$";
    }
}
const q$ = { tokenize: G$, concrete: !0, name: "mathFlow" },
    rw = { tokenize: H$, partial: !0 };
function G$(e, t, n) {
    const r = this,
        a = r.events[r.events.length - 1],
        i = a && a[1].type === "linePrefix" ? a[2].sliceSerialize(a[1], !0).length : 0;
    let o = 0;
    return l;
    function l(g) {
        return e.enter("mathFlow"), e.enter("mathFlowFence"), e.enter("mathFlowFenceSequence"), s(g);
    }
    function s(g) {
        return g === 36 ? (e.consume(g), o++, s) : o < 2 ? n(g) : (e.exit("mathFlowFenceSequence"), be(e, u, "whitespace")(g));
    }
    function u(g) {
        return g === null || ae(g) ? d(g) : (e.enter("mathFlowFenceMeta"), e.enter("chunkString", { contentType: "string" }), c(g));
    }
    function c(g) {
        return g === null || ae(g) ? (e.exit("chunkString"), e.exit("mathFlowFenceMeta"), d(g)) : g === 36 ? n(g) : (e.consume(g), c);
    }
    function d(g) {
        return e.exit("mathFlowFence"), r.interrupt ? t(g) : e.attempt(rw, m, I)(g);
    }
    function m(g) {
        return e.attempt({ tokenize: y, partial: !0 }, I, f)(g);
    }
    function f(g) {
        return (i ? be(e, b, "linePrefix", i + 1) : b)(g);
    }
    function b(g) {
        return g === null ? I(g) : ae(g) ? e.attempt(rw, m, I)(g) : (e.enter("mathFlowValue"), E(g));
    }
    function E(g) {
        return g === null || ae(g) ? (e.exit("mathFlowValue"), b(g)) : (e.consume(g), E);
    }
    function I(g) {
        return e.exit("mathFlow"), t(g);
    }
    function y(g, v, T) {
        let R = 0;
        return be(g, k, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
        function k(M) {
            return g.enter("mathFlowFence"), g.enter("mathFlowFenceSequence"), L(M);
        }
        function L(M) {
            return M === 36 ? (R++, g.consume(M), L) : R < o ? T(M) : (g.exit("mathFlowFenceSequence"), be(g, F, "whitespace")(M));
        }
        function F(M) {
            return M === null || ae(M) ? (g.exit("mathFlowFence"), v(M)) : T(M);
        }
    }
}
function H$(e, t, n) {
    const r = this;
    return a;
    function a(o) {
        return o === null ? t(o) : (e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), i);
    }
    function i(o) {
        return r.parser.lazy[r.now().line] ? n(o) : t(o);
    }
}
function j$(e) {
    let n = (e || {}).singleDollarTextMath;
    return n == null && (n = !0), { tokenize: r, resolve: V$, previous: W$, name: "mathText" };
    function r(a, i, o) {
        let l = 0,
            s,
            u;
        return c;
        function c(E) {
            return a.enter("mathText"), a.enter("mathTextSequence"), d(E);
        }
        function d(E) {
            return E === 36 ? (a.consume(E), l++, d) : l < 2 && !n ? o(E) : (a.exit("mathTextSequence"), m(E));
        }
        function m(E) {
            return E === null
                ? o(E)
                : E === 36
                  ? ((u = a.enter("mathTextSequence")), (s = 0), b(E))
                  : E === 32
                    ? (a.enter("space"), a.consume(E), a.exit("space"), m)
                    : ae(E)
                      ? (a.enter("lineEnding"), a.consume(E), a.exit("lineEnding"), m)
                      : (a.enter("mathTextData"), f(E));
        }
        function f(E) {
            return E === null || E === 32 || E === 36 || ae(E) ? (a.exit("mathTextData"), m(E)) : (a.consume(E), f);
        }
        function b(E) {
            return E === 36 ? (a.consume(E), s++, b) : s === l ? (a.exit("mathTextSequence"), a.exit("mathText"), i(E)) : ((u.type = "mathTextData"), f(E));
        }
    }
}
function V$(e) {
    let t = e.length - 4,
        n = 3,
        r,
        a;
    if ((e[n][1].type === "lineEnding" || e[n][1].type === "space") && (e[t][1].type === "lineEnding" || e[t][1].type === "space")) {
        for (r = n; ++r < t; )
            if (e[r][1].type === "mathTextData") {
                (e[t][1].type = "mathTextPadding"), (e[n][1].type = "mathTextPadding"), (n += 2), (t -= 2);
                break;
            }
    }
    for (r = n - 1, t++; ++r <= t; )
        a === void 0
            ? r !== t && e[r][1].type !== "lineEnding" && (a = r)
            : (r === t || e[r][1].type === "lineEnding") &&
              ((e[a][1].type = "mathTextData"),
              r !== a + 2 && ((e[a][1].end = e[r - 1][1].end), e.splice(a + 2, r - a - 2), (t -= r - a - 2), (r = a + 2)),
              (a = void 0));
    return e;
}
function W$(e) {
    return e !== 36 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function Y$(e) {
    return { flow: { 36: q$ }, text: { 36: j$(e) } };
}
class Bt {
    constructor(t, n, r) {
        (this.lexer = void 0), (this.start = void 0), (this.end = void 0), (this.lexer = t), (this.start = n), (this.end = r);
    }
    static range(t, n) {
        return n ? (!t || !t.loc || !n.loc || t.loc.lexer !== n.loc.lexer ? null : new Bt(t.loc.lexer, t.loc.start, n.loc.end)) : t && t.loc;
    }
}
class en {
    constructor(t, n) {
        (this.text = void 0), (this.loc = void 0), (this.noexpand = void 0), (this.treatAsRelax = void 0), (this.text = t), (this.loc = n);
    }
    range(t, n) {
        return new en(n, Bt.range(this, t));
    }
}
class H {
    constructor(t, n) {
        (this.name = void 0), (this.position = void 0), (this.length = void 0), (this.rawMessage = void 0);
        var r = "KaTeX parse error: " + t,
            a,
            i,
            o = n && n.loc;
        if (o && o.start <= o.end) {
            var l = o.lexer.input;
            (a = o.start), (i = o.end), a === l.length ? (r += " at end of input: ") : (r += " at position " + (a + 1) + ": ");
            var s = l.slice(a, i).replace(/[^]/g, "$&̲"),
                u;
            a > 15 ? (u = "…" + l.slice(a - 15, a)) : (u = l.slice(0, a));
            var c;
            i + 15 < l.length ? (c = l.slice(i, i + 15) + "…") : (c = l.slice(i)), (r += u + s + c);
        }
        var d = new Error(r);
        return (d.name = "ParseError"), (d.__proto__ = H.prototype), (d.position = a), a != null && i != null && (d.length = i - a), (d.rawMessage = t), d;
    }
}
H.prototype.__proto__ = Error.prototype;
var K$ = function (t, n) {
        return t.indexOf(n) !== -1;
    },
    X$ = function (t, n) {
        return t === void 0 ? n : t;
    },
    Z$ = /([A-Z])/g,
    Q$ = function (t) {
        return t.replace(Z$, "-$1").toLowerCase();
    },
    J$ = { "&": "&amp;", ">": "&gt;", "<": "&lt;", '"': "&quot;", "'": "&#x27;" },
    eq = /[&><"']/g;
function tq(e) {
    return String(e).replace(eq, t => J$[t]);
}
var rx = function e(t) {
        return t.type === "ordgroup" || t.type === "color" ? (t.body.length === 1 ? e(t.body[0]) : t) : t.type === "font" ? e(t.body) : t;
    },
    nq = function (t) {
        var n = rx(t);
        return n.type === "mathord" || n.type === "textord" || n.type === "atom";
    },
    rq = function (t) {
        if (!t) throw new Error("Expected non-null, but got " + String(t));
        return t;
    },
    aq = function (t) {
        var n = /^[\x00-\x20]*([^\\/#?]*?)(:|&#0*58|&#x0*3a|&colon)/i.exec(t);
        return n ? (n[2] !== ":" || !/^[a-zA-Z][a-zA-Z0-9+\-.]*$/.test(n[1]) ? null : n[1].toLowerCase()) : "_relative";
    },
    ie = { contains: K$, deflt: X$, escape: tq, hyphenate: Q$, getBaseElem: rx, isCharacterBox: nq, protocolFromUrl: aq },
    gl = {
        displayMode: {
            type: "boolean",
            description:
                "Render math in display mode, which puts the math in display style (so \\int and \\sum are large, for example), and centers the math on the page on its own line.",
            cli: "-d, --display-mode",
        },
        output: {
            type: { enum: ["htmlAndMathml", "html", "mathml"] },
            description: "Determines the markup language of the output.",
            cli: "-F, --format <type>",
        },
        leqno: { type: "boolean", description: "Render display math in leqno style (left-justified tags)." },
        fleqn: { type: "boolean", description: "Render display math flush left." },
        throwOnError: {
            type: "boolean",
            default: !0,
            cli: "-t, --no-throw-on-error",
            cliDescription: "Render errors (in the color given by --error-color) instead of throwing a ParseError exception when encountering an error.",
        },
        errorColor: {
            type: "string",
            default: "#cc0000",
            cli: "-c, --error-color <color>",
            cliDescription:
                "A color string given in the format 'rgb' or 'rrggbb' (no #). This option determines the color of errors rendered by the -t option.",
            cliProcessor: e => "#" + e,
        },
        macros: {
            type: "object",
            cli: "-m, --macro <def>",
            cliDescription: "Define custom macro of the form '\\foo:expansion' (use multiple -m arguments for multiple macros).",
            cliDefault: [],
            cliProcessor: (e, t) => (t.push(e), t),
        },
        minRuleThickness: {
            type: "number",
            description:
                "Specifies a minimum thickness, in ems, for fraction lines, `\\sqrt` top lines, `{array}` vertical lines, `\\hline`, `\\hdashline`, `\\underline`, `\\overline`, and the borders of `\\fbox`, `\\boxed`, and `\\fcolorbox`.",
            processor: e => Math.max(0, e),
            cli: "--min-rule-thickness <size>",
            cliProcessor: parseFloat,
        },
        colorIsTextColor: {
            type: "boolean",
            description: "Makes \\color behave like LaTeX's 2-argument \\textcolor, instead of LaTeX's one-argument \\color mode change.",
            cli: "-b, --color-is-text-color",
        },
        strict: {
            type: [{ enum: ["warn", "ignore", "error"] }, "boolean", "function"],
            description: "Turn on strict / LaTeX faithfulness mode, which throws an error if the input uses features that are not supported by LaTeX.",
            cli: "-S, --strict",
            cliDefault: !1,
        },
        trust: { type: ["boolean", "function"], description: "Trust the input, enabling all HTML features such as \\url.", cli: "-T, --trust" },
        maxSize: {
            type: "number",
            default: 1 / 0,
            description:
                "If non-zero, all user-specified sizes, e.g. in \\rule{500em}{500em}, will be capped to maxSize ems. Otherwise, elements and spaces can be arbitrarily large",
            processor: e => Math.max(0, e),
            cli: "-s, --max-size <n>",
            cliProcessor: parseInt,
        },
        maxExpand: {
            type: "number",
            default: 1e3,
            description:
                "Limit the number of macro expansions to the specified number, to prevent e.g. infinite macro loops. If set to Infinity, the macro expander will try to fully expand as in LaTeX.",
            processor: e => Math.max(0, e),
            cli: "-e, --max-expand <n>",
            cliProcessor: e => (e === "Infinity" ? 1 / 0 : parseInt(e)),
        },
        globalGroup: { type: "boolean", cli: !1 },
    };
function iq(e) {
    if (e.default) return e.default;
    var t = e.type,
        n = Array.isArray(t) ? t[0] : t;
    if (typeof n != "string") return n.enum[0];
    switch (n) {
        case "boolean":
            return !1;
        case "string":
            return "";
        case "number":
            return 0;
        case "object":
            return {};
    }
}
class Xg {
    constructor(t) {
        (this.displayMode = void 0),
            (this.output = void 0),
            (this.leqno = void 0),
            (this.fleqn = void 0),
            (this.throwOnError = void 0),
            (this.errorColor = void 0),
            (this.macros = void 0),
            (this.minRuleThickness = void 0),
            (this.colorIsTextColor = void 0),
            (this.strict = void 0),
            (this.trust = void 0),
            (this.maxSize = void 0),
            (this.maxExpand = void 0),
            (this.globalGroup = void 0),
            (t = t || {});
        for (var n in gl)
            if (gl.hasOwnProperty(n)) {
                var r = gl[n];
                this[n] = t[n] !== void 0 ? (r.processor ? r.processor(t[n]) : t[n]) : iq(r);
            }
    }
    reportNonstrict(t, n, r) {
        var a = this.strict;
        if ((typeof a == "function" && (a = a(t, n, r)), !(!a || a === "ignore"))) {
            if (a === !0 || a === "error") throw new H("LaTeX-incompatible input and strict mode is set to 'error': " + (n + " [" + t + "]"), r);
            a === "warn"
                ? typeof console < "u" && console.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + (n + " [" + t + "]"))
                : typeof console < "u" &&
                  console.warn("LaTeX-incompatible input and strict mode is set to " + ("unrecognized '" + a + "': " + n + " [" + t + "]"));
        }
    }
    useStrictBehavior(t, n, r) {
        var a = this.strict;
        if (typeof a == "function")
            try {
                a = a(t, n, r);
            } catch {
                a = "error";
            }
        return !a || a === "ignore"
            ? !1
            : a === !0 || a === "error"
              ? !0
              : a === "warn"
                ? (typeof console < "u" && console.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + (n + " [" + t + "]")), !1)
                : (typeof console < "u" &&
                      console.warn("LaTeX-incompatible input and strict mode is set to " + ("unrecognized '" + a + "': " + n + " [" + t + "]")),
                  !1);
    }
    isTrusted(t) {
        if (t.url && !t.protocol) {
            var n = ie.protocolFromUrl(t.url);
            if (n == null) return !1;
            t.protocol = n;
        }
        var r = typeof this.trust == "function" ? this.trust(t) : this.trust;
        return !!r;
    }
}
class ar {
    constructor(t, n, r) {
        (this.id = void 0), (this.size = void 0), (this.cramped = void 0), (this.id = t), (this.size = n), (this.cramped = r);
    }
    sup() {
        return kn[oq[this.id]];
    }
    sub() {
        return kn[lq[this.id]];
    }
    fracNum() {
        return kn[sq[this.id]];
    }
    fracDen() {
        return kn[uq[this.id]];
    }
    cramp() {
        return kn[cq[this.id]];
    }
    text() {
        return kn[dq[this.id]];
    }
    isTight() {
        return this.size >= 2;
    }
}
var Zg = 0,
    Vl = 1,
    Fa = 2,
    Hn = 3,
    ao = 4,
    Qt = 5,
    Va = 6,
    bt = 7,
    kn = [
        new ar(Zg, 0, !1),
        new ar(Vl, 0, !0),
        new ar(Fa, 1, !1),
        new ar(Hn, 1, !0),
        new ar(ao, 2, !1),
        new ar(Qt, 2, !0),
        new ar(Va, 3, !1),
        new ar(bt, 3, !0),
    ],
    oq = [ao, Qt, ao, Qt, Va, bt, Va, bt],
    lq = [Qt, Qt, Qt, Qt, bt, bt, bt, bt],
    sq = [Fa, Hn, ao, Qt, Va, bt, Va, bt],
    uq = [Hn, Hn, Qt, Qt, bt, bt, bt, bt],
    cq = [Vl, Vl, Hn, Hn, Qt, Qt, bt, bt],
    dq = [Zg, Vl, Fa, Hn, Fa, Hn, Fa, Hn],
    le = { DISPLAY: kn[Zg], TEXT: kn[Fa], SCRIPT: kn[ao], SCRIPTSCRIPT: kn[Va] },
    rh = [
        {
            name: "latin",
            blocks: [
                [256, 591],
                [768, 879],
            ],
        },
        { name: "cyrillic", blocks: [[1024, 1279]] },
        { name: "armenian", blocks: [[1328, 1423]] },
        { name: "brahmic", blocks: [[2304, 4255]] },
        { name: "georgian", blocks: [[4256, 4351]] },
        {
            name: "cjk",
            blocks: [
                [12288, 12543],
                [19968, 40879],
                [65280, 65376],
            ],
        },
        { name: "hangul", blocks: [[44032, 55215]] },
    ];
function pq(e) {
    for (var t = 0; t < rh.length; t++)
        for (var n = rh[t], r = 0; r < n.blocks.length; r++) {
            var a = n.blocks[r];
            if (e >= a[0] && e <= a[1]) return n.name;
        }
    return null;
}
var bl = [];
rh.forEach(e => e.blocks.forEach(t => bl.push(...t)));
function ax(e) {
    for (var t = 0; t < bl.length; t += 2) if (e >= bl[t] && e <= bl[t + 1]) return !0;
    return !1;
}
var fa = 80,
    fq = function (t, n) {
        return (
            "M95," +
            (622 + t + n) +
            `
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l` +
            t / 2.075 +
            " -" +
            t +
            `
c5.3,-9.3,12,-14,20,-14
H400000v` +
            (40 + t) +
            `H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M` +
            (834 + t) +
            " " +
            n +
            "h400000v" +
            (40 + t) +
            "h-400000z"
        );
    },
    mq = function (t, n) {
        return (
            "M263," +
            (601 + t + n) +
            `c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l` +
            t / 2.084 +
            " -" +
            t +
            `
c4.7,-7.3,11,-11,19,-11
H40000v` +
            (40 + t) +
            `H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M` +
            (1001 + t) +
            " " +
            n +
            "h400000v" +
            (40 + t) +
            "h-400000z"
        );
    },
    hq = function (t, n) {
        return (
            "M983 " +
            (10 + t + n) +
            `
l` +
            t / 3.13 +
            " -" +
            t +
            `
c4,-6.7,10,-10,18,-10 H400000v` +
            (40 + t) +
            `
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M` +
            (1001 + t) +
            " " +
            n +
            "h400000v" +
            (40 + t) +
            "h-400000z"
        );
    },
    gq = function (t, n) {
        return (
            "M424," +
            (2398 + t + n) +
            `
c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514
c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20
s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121
s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081
l` +
            t / 4.223 +
            " -" +
            t +
            `c4,-6.7,10,-10,18,-10 H400000
v` +
            (40 + t) +
            `H1014.6
s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185
c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2z M` +
            (1001 + t) +
            " " +
            n +
            `
h400000v` +
            (40 + t) +
            "h-400000z"
        );
    },
    bq = function (t, n) {
        return (
            "M473," +
            (2713 + t + n) +
            `
c339.3,-1799.3,509.3,-2700,510,-2702 l` +
            t / 5.298 +
            " -" +
            t +
            `
c3.3,-7.3,9.3,-11,18,-11 H400000v` +
            (40 + t) +
            `H1017.7
s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200
c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26
s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,
606zM` +
            (1001 + t) +
            " " +
            n +
            "h400000v" +
            (40 + t) +
            "H1017.7z"
        );
    },
    yq = function (t) {
        var n = t / 2;
        return "M400000 " + t + " H0 L" + n + " 0 l65 45 L145 " + (t - 80) + " H400000z";
    },
    vq = function (t, n, r) {
        var a = r - 54 - n - t;
        return (
            "M702 " +
            (t + n) +
            "H400000" +
            (40 + t) +
            `
H742v` +
            a +
            `l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1
h-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170
c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667
219 661 l218 661zM702 ` +
            n +
            "H400000v" +
            (40 + t) +
            "H742z"
        );
    },
    Eq = function (t, n, r) {
        n = 1e3 * n;
        var a = "";
        switch (t) {
            case "sqrtMain":
                a = fq(n, fa);
                break;
            case "sqrtSize1":
                a = mq(n, fa);
                break;
            case "sqrtSize2":
                a = hq(n, fa);
                break;
            case "sqrtSize3":
                a = gq(n, fa);
                break;
            case "sqrtSize4":
                a = bq(n, fa);
                break;
            case "sqrtTall":
                a = vq(n, fa, r);
        }
        return a;
    },
    Sq = function (t, n) {
        switch (t) {
            case "⎜":
                return "M291 0 H417 V" + n + " H291z M291 0 H417 V" + n + " H291z";
            case "∣":
                return "M145 0 H188 V" + n + " H145z M145 0 H188 V" + n + " H145z";
            case "∥":
                return "M145 0 H188 V" + n + " H145z M145 0 H188 V" + n + " H145z" + ("M367 0 H410 V" + n + " H367z M367 0 H410 V" + n + " H367z");
            case "⎟":
                return "M457 0 H583 V" + n + " H457z M457 0 H583 V" + n + " H457z";
            case "⎢":
                return "M319 0 H403 V" + n + " H319z M319 0 H403 V" + n + " H319z";
            case "⎥":
                return "M263 0 H347 V" + n + " H263z M263 0 H347 V" + n + " H263z";
            case "⎪":
                return "M384 0 H504 V" + n + " H384z M384 0 H504 V" + n + " H384z";
            case "⏐":
                return "M312 0 H355 V" + n + " H312z M312 0 H355 V" + n + " H312z";
            case "‖":
                return "M257 0 H300 V" + n + " H257z M257 0 H300 V" + n + " H257z" + ("M478 0 H521 V" + n + " H478z M478 0 H521 V" + n + " H478z");
            default:
                return "";
        }
    },
    aw = {
        doubleleftarrow: `M262 157
l10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3
 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28
 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5
c2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5
 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87
-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7
-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z
m8 0v40h399730v-40zm0 194v40h399730v-40z`,
        doublerightarrow: `M399738 392l
-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5
 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88
-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68
-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18
-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782
c-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3
-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z`,
        leftarrow: `M400000 241H110l3-3c68.7-52.7 113.7-120
 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8
-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247
c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208
 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3
 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202
 l-3-3h399890zM100 241v40h399900v-40z`,
        leftbrace: `M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117
-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7
 5-6 9-10 13-.7 1-7.3 1-20 1H6z`,
        leftbraceunder: `M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z`,
        leftgroup: `M400000 80
H435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0
 435 0h399565z`,
        leftgroupunder: `M400000 262
H435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219
 435 219h399565z`,
        leftharpoon: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3
-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5
-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7
-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z`,
        leftharpoonplus: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5
 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3
-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7
-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z
m0 0v40h400000v-40z`,
        leftharpoondown: `M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333
 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5
 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667
-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z`,
        leftharpoondownplus: `M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12
 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7
-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0
v40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z`,
        lefthook: `M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5
-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3
-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21
 71.5 23h399859zM103 281v-40h399897v40z`,
        leftlinesegment: `M40 281 V428 H0 V94 H40 V241 H400000 v40z
M40 281 V428 H0 V94 H40 V241 H400000 v40z`,
        leftmapsto: `M40 281 V448H0V74H40V241H400000v40z
M40 281 V448H0V74H40V241H400000v40z`,
        leftToFrom: `M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23
-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8
c28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3
 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z`,
        longequal: `M0 50 h400000 v40H0z m0 194h40000v40H0z
M0 50 h400000 v40H0z m0 194h40000v40H0z`,
        midbrace: `M200428 334
c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14
-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7
 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11
 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z`,
        midbraceunder: `M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z`,
        oiintSize1: `M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6
-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z
m368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8
60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z`,
        oiintSize2: `M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8
-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z
m502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2
c0 110 84 276 504 276s502.4-166 502.4-276z`,
        oiiintSize1: `M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6
-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z
m525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0
85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z`,
        oiiintSize2: `M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8
-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z
m770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1
c0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z`,
        rightarrow: `M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z`,
        rightbrace: `M400000 542l
-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5
s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1
c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z`,
        rightbraceunder: `M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z`,
        rightgroup: `M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0
 3-1 3-3v-38c-76-158-257-219-435-219H0z`,
        rightgroupunder: `M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18
 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z`,
        rightharpoon: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z`,
        rightharpoonplus: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11
-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7
 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z
m0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z`,
        rightharpoondown: `M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8
 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5
-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95
-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z`,
        rightharpoondownplus: `M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8
 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3
 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3
-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z
m0-194v40h400000v-40zm0 0v40h400000v-40z`,
        righthook: `M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3
 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0
-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21
 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z`,
        rightlinesegment: `M399960 241 V94 h40 V428 h-40 V281 H0 v-40z
M399960 241 V94 h40 V428 h-40 V281 H0 v-40z`,
        rightToFrom: `M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23
 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32
-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142
-167z M100 147v40h399900v-40zM0 341v40h399900v-40z`,
        twoheadleftarrow: `M0 167c68 40
 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69
-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3
-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19
-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101
 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z`,
        twoheadrightarrow: `M400000 167
c-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3
 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42
 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333
-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70
 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z`,
        tilde1: `M200 55.538c-77 0-168 73.953-177 73.953-3 0-7
-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0
 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0
 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128
-68.267.847-113-73.952-191-73.952z`,
        tilde2: `M344 55.266c-142 0-300.638 81.316-311.5 86.418
-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9
 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114
c1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751
 181.476 676 181.476c-149 0-189-126.21-332-126.21z`,
        tilde3: `M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457
-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0
 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697
 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696
 -338 0-409-156.573-744-156.573z`,
        tilde4: `M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345
-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409
 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9
 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409
 -175.236-744-175.236z`,
        vec: `M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`,
        widehat1: `M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`,
        widehat2: `M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,
        widehat3: `M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,
        widehat4: `M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,
        widecheck1: `M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,
-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z`,
        widecheck2: `M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,
        widecheck3: `M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,
        widecheck4: `M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,
        baraboveleftarrow: `M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202
c4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5
c-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130
s-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47
121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6
s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11
c0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z
M100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z`,
        rightarrowabovebar: `M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32
-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0
13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39
-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5
-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z`,
        baraboveshortleftharpoon: `M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11
c1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17
c2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21
c-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40
c-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z
M0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z`,
        rightharpoonaboveshortbar: `M0,241 l0,40c399126,0,399993,0,399993,0
c4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,
-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6
c-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z
M0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z`,
        shortbaraboveleftharpoon: `M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11
c1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,
1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,
-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z
M93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z`,
        shortrightharpoonabovebar: `M53,241l0,40c398570,0,399437,0,399437,0
c4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,
-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6
c-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z
M500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z`,
    },
    wq = function (t, n) {
        switch (t) {
            case "lbrack":
                return (
                    "M403 1759 V84 H666 V0 H319 V1759 v" +
                    n +
                    ` v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v` +
                    n +
                    " v1759 h84z"
                );
            case "rbrack":
                return (
                    "M347 1759 V0 H0 V84 H263 V1759 v" +
                    n +
                    ` v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v` +
                    n +
                    " v1759 h84z"
                );
            case "vert":
                return (
                    "M145 15 v585 v" +
                    n +
                    ` v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v` +
                    -n +
                    ` v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v` +
                    n +
                    " v585 h43z"
                );
            case "doublevert":
                return (
                    "M145 15 v585 v" +
                    n +
                    ` v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v` +
                    -n +
                    ` v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v` +
                    n +
                    ` v585 h43z
M367 15 v585 v` +
                    n +
                    ` v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v` +
                    -n +
                    ` v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v` +
                    n +
                    " v585 h43z"
                );
            case "lfloor":
                return (
                    "M319 602 V0 H403 V602 v" +
                    n +
                    ` v1715 h263 v84 H319z
MM319 602 V0 H403 V602 v` +
                    n +
                    " v1715 H319z"
                );
            case "rfloor":
                return (
                    "M319 602 V0 H403 V602 v" +
                    n +
                    ` v1799 H0 v-84 H319z
MM319 602 V0 H403 V602 v` +
                    n +
                    " v1715 H319z"
                );
            case "lceil":
                return (
                    "M403 1759 V84 H666 V0 H319 V1759 v" +
                    n +
                    ` v602 h84z
M403 1759 V0 H319 V1759 v` +
                    n +
                    " v602 h84z"
                );
            case "rceil":
                return (
                    "M347 1759 V0 H0 V84 H263 V1759 v" +
                    n +
                    ` v602 h84z
M347 1759 V0 h-84 V1759 v` +
                    n +
                    " v602 h84z"
                );
            case "lparen":
                return (
                    `M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,` +
                    (n + 84) +
                    `c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-` +
                    (n + 92) +
                    `c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z`
                );
            case "rparen":
                return (
                    `M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,` +
                    (n + 9) +
                    `
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-` +
                    (n + 144) +
                    `c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z`
                );
            default:
                throw new Error("Unknown stretchy delimiter.");
        }
    };
class vo {
    constructor(t) {
        (this.children = void 0),
            (this.classes = void 0),
            (this.height = void 0),
            (this.depth = void 0),
            (this.maxFontSize = void 0),
            (this.style = void 0),
            (this.children = t),
            (this.classes = []),
            (this.height = 0),
            (this.depth = 0),
            (this.maxFontSize = 0),
            (this.style = {});
    }
    hasClass(t) {
        return ie.contains(this.classes, t);
    }
    toNode() {
        for (var t = document.createDocumentFragment(), n = 0; n < this.children.length; n++) t.appendChild(this.children[n].toNode());
        return t;
    }
    toMarkup() {
        for (var t = "", n = 0; n < this.children.length; n++) t += this.children[n].toMarkup();
        return t;
    }
    toText() {
        var t = n => n.toText();
        return this.children.map(t).join("");
    }
}
var An = {
        "AMS-Regular": {
            32: [0, 0, 0, 0, 0.25],
            65: [0, 0.68889, 0, 0, 0.72222],
            66: [0, 0.68889, 0, 0, 0.66667],
            67: [0, 0.68889, 0, 0, 0.72222],
            68: [0, 0.68889, 0, 0, 0.72222],
            69: [0, 0.68889, 0, 0, 0.66667],
            70: [0, 0.68889, 0, 0, 0.61111],
            71: [0, 0.68889, 0, 0, 0.77778],
            72: [0, 0.68889, 0, 0, 0.77778],
            73: [0, 0.68889, 0, 0, 0.38889],
            74: [0.16667, 0.68889, 0, 0, 0.5],
            75: [0, 0.68889, 0, 0, 0.77778],
            76: [0, 0.68889, 0, 0, 0.66667],
            77: [0, 0.68889, 0, 0, 0.94445],
            78: [0, 0.68889, 0, 0, 0.72222],
            79: [0.16667, 0.68889, 0, 0, 0.77778],
            80: [0, 0.68889, 0, 0, 0.61111],
            81: [0.16667, 0.68889, 0, 0, 0.77778],
            82: [0, 0.68889, 0, 0, 0.72222],
            83: [0, 0.68889, 0, 0, 0.55556],
            84: [0, 0.68889, 0, 0, 0.66667],
            85: [0, 0.68889, 0, 0, 0.72222],
            86: [0, 0.68889, 0, 0, 0.72222],
            87: [0, 0.68889, 0, 0, 1],
            88: [0, 0.68889, 0, 0, 0.72222],
            89: [0, 0.68889, 0, 0, 0.72222],
            90: [0, 0.68889, 0, 0, 0.66667],
            107: [0, 0.68889, 0, 0, 0.55556],
            160: [0, 0, 0, 0, 0.25],
            165: [0, 0.675, 0.025, 0, 0.75],
            174: [0.15559, 0.69224, 0, 0, 0.94666],
            240: [0, 0.68889, 0, 0, 0.55556],
            295: [0, 0.68889, 0, 0, 0.54028],
            710: [0, 0.825, 0, 0, 2.33334],
            732: [0, 0.9, 0, 0, 2.33334],
            770: [0, 0.825, 0, 0, 2.33334],
            771: [0, 0.9, 0, 0, 2.33334],
            989: [0.08167, 0.58167, 0, 0, 0.77778],
            1008: [0, 0.43056, 0.04028, 0, 0.66667],
            8245: [0, 0.54986, 0, 0, 0.275],
            8463: [0, 0.68889, 0, 0, 0.54028],
            8487: [0, 0.68889, 0, 0, 0.72222],
            8498: [0, 0.68889, 0, 0, 0.55556],
            8502: [0, 0.68889, 0, 0, 0.66667],
            8503: [0, 0.68889, 0, 0, 0.44445],
            8504: [0, 0.68889, 0, 0, 0.66667],
            8513: [0, 0.68889, 0, 0, 0.63889],
            8592: [-0.03598, 0.46402, 0, 0, 0.5],
            8594: [-0.03598, 0.46402, 0, 0, 0.5],
            8602: [-0.13313, 0.36687, 0, 0, 1],
            8603: [-0.13313, 0.36687, 0, 0, 1],
            8606: [0.01354, 0.52239, 0, 0, 1],
            8608: [0.01354, 0.52239, 0, 0, 1],
            8610: [0.01354, 0.52239, 0, 0, 1.11111],
            8611: [0.01354, 0.52239, 0, 0, 1.11111],
            8619: [0, 0.54986, 0, 0, 1],
            8620: [0, 0.54986, 0, 0, 1],
            8621: [-0.13313, 0.37788, 0, 0, 1.38889],
            8622: [-0.13313, 0.36687, 0, 0, 1],
            8624: [0, 0.69224, 0, 0, 0.5],
            8625: [0, 0.69224, 0, 0, 0.5],
            8630: [0, 0.43056, 0, 0, 1],
            8631: [0, 0.43056, 0, 0, 1],
            8634: [0.08198, 0.58198, 0, 0, 0.77778],
            8635: [0.08198, 0.58198, 0, 0, 0.77778],
            8638: [0.19444, 0.69224, 0, 0, 0.41667],
            8639: [0.19444, 0.69224, 0, 0, 0.41667],
            8642: [0.19444, 0.69224, 0, 0, 0.41667],
            8643: [0.19444, 0.69224, 0, 0, 0.41667],
            8644: [0.1808, 0.675, 0, 0, 1],
            8646: [0.1808, 0.675, 0, 0, 1],
            8647: [0.1808, 0.675, 0, 0, 1],
            8648: [0.19444, 0.69224, 0, 0, 0.83334],
            8649: [0.1808, 0.675, 0, 0, 1],
            8650: [0.19444, 0.69224, 0, 0, 0.83334],
            8651: [0.01354, 0.52239, 0, 0, 1],
            8652: [0.01354, 0.52239, 0, 0, 1],
            8653: [-0.13313, 0.36687, 0, 0, 1],
            8654: [-0.13313, 0.36687, 0, 0, 1],
            8655: [-0.13313, 0.36687, 0, 0, 1],
            8666: [0.13667, 0.63667, 0, 0, 1],
            8667: [0.13667, 0.63667, 0, 0, 1],
            8669: [-0.13313, 0.37788, 0, 0, 1],
            8672: [-0.064, 0.437, 0, 0, 1.334],
            8674: [-0.064, 0.437, 0, 0, 1.334],
            8705: [0, 0.825, 0, 0, 0.5],
            8708: [0, 0.68889, 0, 0, 0.55556],
            8709: [0.08167, 0.58167, 0, 0, 0.77778],
            8717: [0, 0.43056, 0, 0, 0.42917],
            8722: [-0.03598, 0.46402, 0, 0, 0.5],
            8724: [0.08198, 0.69224, 0, 0, 0.77778],
            8726: [0.08167, 0.58167, 0, 0, 0.77778],
            8733: [0, 0.69224, 0, 0, 0.77778],
            8736: [0, 0.69224, 0, 0, 0.72222],
            8737: [0, 0.69224, 0, 0, 0.72222],
            8738: [0.03517, 0.52239, 0, 0, 0.72222],
            8739: [0.08167, 0.58167, 0, 0, 0.22222],
            8740: [0.25142, 0.74111, 0, 0, 0.27778],
            8741: [0.08167, 0.58167, 0, 0, 0.38889],
            8742: [0.25142, 0.74111, 0, 0, 0.5],
            8756: [0, 0.69224, 0, 0, 0.66667],
            8757: [0, 0.69224, 0, 0, 0.66667],
            8764: [-0.13313, 0.36687, 0, 0, 0.77778],
            8765: [-0.13313, 0.37788, 0, 0, 0.77778],
            8769: [-0.13313, 0.36687, 0, 0, 0.77778],
            8770: [-0.03625, 0.46375, 0, 0, 0.77778],
            8774: [0.30274, 0.79383, 0, 0, 0.77778],
            8776: [-0.01688, 0.48312, 0, 0, 0.77778],
            8778: [0.08167, 0.58167, 0, 0, 0.77778],
            8782: [0.06062, 0.54986, 0, 0, 0.77778],
            8783: [0.06062, 0.54986, 0, 0, 0.77778],
            8785: [0.08198, 0.58198, 0, 0, 0.77778],
            8786: [0.08198, 0.58198, 0, 0, 0.77778],
            8787: [0.08198, 0.58198, 0, 0, 0.77778],
            8790: [0, 0.69224, 0, 0, 0.77778],
            8791: [0.22958, 0.72958, 0, 0, 0.77778],
            8796: [0.08198, 0.91667, 0, 0, 0.77778],
            8806: [0.25583, 0.75583, 0, 0, 0.77778],
            8807: [0.25583, 0.75583, 0, 0, 0.77778],
            8808: [0.25142, 0.75726, 0, 0, 0.77778],
            8809: [0.25142, 0.75726, 0, 0, 0.77778],
            8812: [0.25583, 0.75583, 0, 0, 0.5],
            8814: [0.20576, 0.70576, 0, 0, 0.77778],
            8815: [0.20576, 0.70576, 0, 0, 0.77778],
            8816: [0.30274, 0.79383, 0, 0, 0.77778],
            8817: [0.30274, 0.79383, 0, 0, 0.77778],
            8818: [0.22958, 0.72958, 0, 0, 0.77778],
            8819: [0.22958, 0.72958, 0, 0, 0.77778],
            8822: [0.1808, 0.675, 0, 0, 0.77778],
            8823: [0.1808, 0.675, 0, 0, 0.77778],
            8828: [0.13667, 0.63667, 0, 0, 0.77778],
            8829: [0.13667, 0.63667, 0, 0, 0.77778],
            8830: [0.22958, 0.72958, 0, 0, 0.77778],
            8831: [0.22958, 0.72958, 0, 0, 0.77778],
            8832: [0.20576, 0.70576, 0, 0, 0.77778],
            8833: [0.20576, 0.70576, 0, 0, 0.77778],
            8840: [0.30274, 0.79383, 0, 0, 0.77778],
            8841: [0.30274, 0.79383, 0, 0, 0.77778],
            8842: [0.13597, 0.63597, 0, 0, 0.77778],
            8843: [0.13597, 0.63597, 0, 0, 0.77778],
            8847: [0.03517, 0.54986, 0, 0, 0.77778],
            8848: [0.03517, 0.54986, 0, 0, 0.77778],
            8858: [0.08198, 0.58198, 0, 0, 0.77778],
            8859: [0.08198, 0.58198, 0, 0, 0.77778],
            8861: [0.08198, 0.58198, 0, 0, 0.77778],
            8862: [0, 0.675, 0, 0, 0.77778],
            8863: [0, 0.675, 0, 0, 0.77778],
            8864: [0, 0.675, 0, 0, 0.77778],
            8865: [0, 0.675, 0, 0, 0.77778],
            8872: [0, 0.69224, 0, 0, 0.61111],
            8873: [0, 0.69224, 0, 0, 0.72222],
            8874: [0, 0.69224, 0, 0, 0.88889],
            8876: [0, 0.68889, 0, 0, 0.61111],
            8877: [0, 0.68889, 0, 0, 0.61111],
            8878: [0, 0.68889, 0, 0, 0.72222],
            8879: [0, 0.68889, 0, 0, 0.72222],
            8882: [0.03517, 0.54986, 0, 0, 0.77778],
            8883: [0.03517, 0.54986, 0, 0, 0.77778],
            8884: [0.13667, 0.63667, 0, 0, 0.77778],
            8885: [0.13667, 0.63667, 0, 0, 0.77778],
            8888: [0, 0.54986, 0, 0, 1.11111],
            8890: [0.19444, 0.43056, 0, 0, 0.55556],
            8891: [0.19444, 0.69224, 0, 0, 0.61111],
            8892: [0.19444, 0.69224, 0, 0, 0.61111],
            8901: [0, 0.54986, 0, 0, 0.27778],
            8903: [0.08167, 0.58167, 0, 0, 0.77778],
            8905: [0.08167, 0.58167, 0, 0, 0.77778],
            8906: [0.08167, 0.58167, 0, 0, 0.77778],
            8907: [0, 0.69224, 0, 0, 0.77778],
            8908: [0, 0.69224, 0, 0, 0.77778],
            8909: [-0.03598, 0.46402, 0, 0, 0.77778],
            8910: [0, 0.54986, 0, 0, 0.76042],
            8911: [0, 0.54986, 0, 0, 0.76042],
            8912: [0.03517, 0.54986, 0, 0, 0.77778],
            8913: [0.03517, 0.54986, 0, 0, 0.77778],
            8914: [0, 0.54986, 0, 0, 0.66667],
            8915: [0, 0.54986, 0, 0, 0.66667],
            8916: [0, 0.69224, 0, 0, 0.66667],
            8918: [0.0391, 0.5391, 0, 0, 0.77778],
            8919: [0.0391, 0.5391, 0, 0, 0.77778],
            8920: [0.03517, 0.54986, 0, 0, 1.33334],
            8921: [0.03517, 0.54986, 0, 0, 1.33334],
            8922: [0.38569, 0.88569, 0, 0, 0.77778],
            8923: [0.38569, 0.88569, 0, 0, 0.77778],
            8926: [0.13667, 0.63667, 0, 0, 0.77778],
            8927: [0.13667, 0.63667, 0, 0, 0.77778],
            8928: [0.30274, 0.79383, 0, 0, 0.77778],
            8929: [0.30274, 0.79383, 0, 0, 0.77778],
            8934: [0.23222, 0.74111, 0, 0, 0.77778],
            8935: [0.23222, 0.74111, 0, 0, 0.77778],
            8936: [0.23222, 0.74111, 0, 0, 0.77778],
            8937: [0.23222, 0.74111, 0, 0, 0.77778],
            8938: [0.20576, 0.70576, 0, 0, 0.77778],
            8939: [0.20576, 0.70576, 0, 0, 0.77778],
            8940: [0.30274, 0.79383, 0, 0, 0.77778],
            8941: [0.30274, 0.79383, 0, 0, 0.77778],
            8994: [0.19444, 0.69224, 0, 0, 0.77778],
            8995: [0.19444, 0.69224, 0, 0, 0.77778],
            9416: [0.15559, 0.69224, 0, 0, 0.90222],
            9484: [0, 0.69224, 0, 0, 0.5],
            9488: [0, 0.69224, 0, 0, 0.5],
            9492: [0, 0.37788, 0, 0, 0.5],
            9496: [0, 0.37788, 0, 0, 0.5],
            9585: [0.19444, 0.68889, 0, 0, 0.88889],
            9586: [0.19444, 0.74111, 0, 0, 0.88889],
            9632: [0, 0.675, 0, 0, 0.77778],
            9633: [0, 0.675, 0, 0, 0.77778],
            9650: [0, 0.54986, 0, 0, 0.72222],
            9651: [0, 0.54986, 0, 0, 0.72222],
            9654: [0.03517, 0.54986, 0, 0, 0.77778],
            9660: [0, 0.54986, 0, 0, 0.72222],
            9661: [0, 0.54986, 0, 0, 0.72222],
            9664: [0.03517, 0.54986, 0, 0, 0.77778],
            9674: [0.11111, 0.69224, 0, 0, 0.66667],
            9733: [0.19444, 0.69224, 0, 0, 0.94445],
            10003: [0, 0.69224, 0, 0, 0.83334],
            10016: [0, 0.69224, 0, 0, 0.83334],
            10731: [0.11111, 0.69224, 0, 0, 0.66667],
            10846: [0.19444, 0.75583, 0, 0, 0.61111],
            10877: [0.13667, 0.63667, 0, 0, 0.77778],
            10878: [0.13667, 0.63667, 0, 0, 0.77778],
            10885: [0.25583, 0.75583, 0, 0, 0.77778],
            10886: [0.25583, 0.75583, 0, 0, 0.77778],
            10887: [0.13597, 0.63597, 0, 0, 0.77778],
            10888: [0.13597, 0.63597, 0, 0, 0.77778],
            10889: [0.26167, 0.75726, 0, 0, 0.77778],
            10890: [0.26167, 0.75726, 0, 0, 0.77778],
            10891: [0.48256, 0.98256, 0, 0, 0.77778],
            10892: [0.48256, 0.98256, 0, 0, 0.77778],
            10901: [0.13667, 0.63667, 0, 0, 0.77778],
            10902: [0.13667, 0.63667, 0, 0, 0.77778],
            10933: [0.25142, 0.75726, 0, 0, 0.77778],
            10934: [0.25142, 0.75726, 0, 0, 0.77778],
            10935: [0.26167, 0.75726, 0, 0, 0.77778],
            10936: [0.26167, 0.75726, 0, 0, 0.77778],
            10937: [0.26167, 0.75726, 0, 0, 0.77778],
            10938: [0.26167, 0.75726, 0, 0, 0.77778],
            10949: [0.25583, 0.75583, 0, 0, 0.77778],
            10950: [0.25583, 0.75583, 0, 0, 0.77778],
            10955: [0.28481, 0.79383, 0, 0, 0.77778],
            10956: [0.28481, 0.79383, 0, 0, 0.77778],
            57350: [0.08167, 0.58167, 0, 0, 0.22222],
            57351: [0.08167, 0.58167, 0, 0, 0.38889],
            57352: [0.08167, 0.58167, 0, 0, 0.77778],
            57353: [0, 0.43056, 0.04028, 0, 0.66667],
            57356: [0.25142, 0.75726, 0, 0, 0.77778],
            57357: [0.25142, 0.75726, 0, 0, 0.77778],
            57358: [0.41951, 0.91951, 0, 0, 0.77778],
            57359: [0.30274, 0.79383, 0, 0, 0.77778],
            57360: [0.30274, 0.79383, 0, 0, 0.77778],
            57361: [0.41951, 0.91951, 0, 0, 0.77778],
            57366: [0.25142, 0.75726, 0, 0, 0.77778],
            57367: [0.25142, 0.75726, 0, 0, 0.77778],
            57368: [0.25142, 0.75726, 0, 0, 0.77778],
            57369: [0.25142, 0.75726, 0, 0, 0.77778],
            57370: [0.13597, 0.63597, 0, 0, 0.77778],
            57371: [0.13597, 0.63597, 0, 0, 0.77778],
        },
        "Caligraphic-Regular": {
            32: [0, 0, 0, 0, 0.25],
            65: [0, 0.68333, 0, 0.19445, 0.79847],
            66: [0, 0.68333, 0.03041, 0.13889, 0.65681],
            67: [0, 0.68333, 0.05834, 0.13889, 0.52653],
            68: [0, 0.68333, 0.02778, 0.08334, 0.77139],
            69: [0, 0.68333, 0.08944, 0.11111, 0.52778],
            70: [0, 0.68333, 0.09931, 0.11111, 0.71875],
            71: [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],
            72: [0, 0.68333, 0.00965, 0.11111, 0.84452],
            73: [0, 0.68333, 0.07382, 0, 0.54452],
            74: [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],
            75: [0, 0.68333, 0.01445, 0.05556, 0.76195],
            76: [0, 0.68333, 0, 0.13889, 0.68972],
            77: [0, 0.68333, 0, 0.13889, 1.2009],
            78: [0, 0.68333, 0.14736, 0.08334, 0.82049],
            79: [0, 0.68333, 0.02778, 0.11111, 0.79611],
            80: [0, 0.68333, 0.08222, 0.08334, 0.69556],
            81: [0.09722, 0.68333, 0, 0.11111, 0.81667],
            82: [0, 0.68333, 0, 0.08334, 0.8475],
            83: [0, 0.68333, 0.075, 0.13889, 0.60556],
            84: [0, 0.68333, 0.25417, 0, 0.54464],
            85: [0, 0.68333, 0.09931, 0.08334, 0.62583],
            86: [0, 0.68333, 0.08222, 0, 0.61278],
            87: [0, 0.68333, 0.08222, 0.08334, 0.98778],
            88: [0, 0.68333, 0.14643, 0.13889, 0.7133],
            89: [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],
            90: [0, 0.68333, 0.07944, 0.13889, 0.72473],
            160: [0, 0, 0, 0, 0.25],
        },
        "Fraktur-Regular": {
            32: [0, 0, 0, 0, 0.25],
            33: [0, 0.69141, 0, 0, 0.29574],
            34: [0, 0.69141, 0, 0, 0.21471],
            38: [0, 0.69141, 0, 0, 0.73786],
            39: [0, 0.69141, 0, 0, 0.21201],
            40: [0.24982, 0.74947, 0, 0, 0.38865],
            41: [0.24982, 0.74947, 0, 0, 0.38865],
            42: [0, 0.62119, 0, 0, 0.27764],
            43: [0.08319, 0.58283, 0, 0, 0.75623],
            44: [0, 0.10803, 0, 0, 0.27764],
            45: [0.08319, 0.58283, 0, 0, 0.75623],
            46: [0, 0.10803, 0, 0, 0.27764],
            47: [0.24982, 0.74947, 0, 0, 0.50181],
            48: [0, 0.47534, 0, 0, 0.50181],
            49: [0, 0.47534, 0, 0, 0.50181],
            50: [0, 0.47534, 0, 0, 0.50181],
            51: [0.18906, 0.47534, 0, 0, 0.50181],
            52: [0.18906, 0.47534, 0, 0, 0.50181],
            53: [0.18906, 0.47534, 0, 0, 0.50181],
            54: [0, 0.69141, 0, 0, 0.50181],
            55: [0.18906, 0.47534, 0, 0, 0.50181],
            56: [0, 0.69141, 0, 0, 0.50181],
            57: [0.18906, 0.47534, 0, 0, 0.50181],
            58: [0, 0.47534, 0, 0, 0.21606],
            59: [0.12604, 0.47534, 0, 0, 0.21606],
            61: [-0.13099, 0.36866, 0, 0, 0.75623],
            63: [0, 0.69141, 0, 0, 0.36245],
            65: [0, 0.69141, 0, 0, 0.7176],
            66: [0, 0.69141, 0, 0, 0.88397],
            67: [0, 0.69141, 0, 0, 0.61254],
            68: [0, 0.69141, 0, 0, 0.83158],
            69: [0, 0.69141, 0, 0, 0.66278],
            70: [0.12604, 0.69141, 0, 0, 0.61119],
            71: [0, 0.69141, 0, 0, 0.78539],
            72: [0.06302, 0.69141, 0, 0, 0.7203],
            73: [0, 0.69141, 0, 0, 0.55448],
            74: [0.12604, 0.69141, 0, 0, 0.55231],
            75: [0, 0.69141, 0, 0, 0.66845],
            76: [0, 0.69141, 0, 0, 0.66602],
            77: [0, 0.69141, 0, 0, 1.04953],
            78: [0, 0.69141, 0, 0, 0.83212],
            79: [0, 0.69141, 0, 0, 0.82699],
            80: [0.18906, 0.69141, 0, 0, 0.82753],
            81: [0.03781, 0.69141, 0, 0, 0.82699],
            82: [0, 0.69141, 0, 0, 0.82807],
            83: [0, 0.69141, 0, 0, 0.82861],
            84: [0, 0.69141, 0, 0, 0.66899],
            85: [0, 0.69141, 0, 0, 0.64576],
            86: [0, 0.69141, 0, 0, 0.83131],
            87: [0, 0.69141, 0, 0, 1.04602],
            88: [0, 0.69141, 0, 0, 0.71922],
            89: [0.18906, 0.69141, 0, 0, 0.83293],
            90: [0.12604, 0.69141, 0, 0, 0.60201],
            91: [0.24982, 0.74947, 0, 0, 0.27764],
            93: [0.24982, 0.74947, 0, 0, 0.27764],
            94: [0, 0.69141, 0, 0, 0.49965],
            97: [0, 0.47534, 0, 0, 0.50046],
            98: [0, 0.69141, 0, 0, 0.51315],
            99: [0, 0.47534, 0, 0, 0.38946],
            100: [0, 0.62119, 0, 0, 0.49857],
            101: [0, 0.47534, 0, 0, 0.40053],
            102: [0.18906, 0.69141, 0, 0, 0.32626],
            103: [0.18906, 0.47534, 0, 0, 0.5037],
            104: [0.18906, 0.69141, 0, 0, 0.52126],
            105: [0, 0.69141, 0, 0, 0.27899],
            106: [0, 0.69141, 0, 0, 0.28088],
            107: [0, 0.69141, 0, 0, 0.38946],
            108: [0, 0.69141, 0, 0, 0.27953],
            109: [0, 0.47534, 0, 0, 0.76676],
            110: [0, 0.47534, 0, 0, 0.52666],
            111: [0, 0.47534, 0, 0, 0.48885],
            112: [0.18906, 0.52396, 0, 0, 0.50046],
            113: [0.18906, 0.47534, 0, 0, 0.48912],
            114: [0, 0.47534, 0, 0, 0.38919],
            115: [0, 0.47534, 0, 0, 0.44266],
            116: [0, 0.62119, 0, 0, 0.33301],
            117: [0, 0.47534, 0, 0, 0.5172],
            118: [0, 0.52396, 0, 0, 0.5118],
            119: [0, 0.52396, 0, 0, 0.77351],
            120: [0.18906, 0.47534, 0, 0, 0.38865],
            121: [0.18906, 0.47534, 0, 0, 0.49884],
            122: [0.18906, 0.47534, 0, 0, 0.39054],
            160: [0, 0, 0, 0, 0.25],
            8216: [0, 0.69141, 0, 0, 0.21471],
            8217: [0, 0.69141, 0, 0, 0.21471],
            58112: [0, 0.62119, 0, 0, 0.49749],
            58113: [0, 0.62119, 0, 0, 0.4983],
            58114: [0.18906, 0.69141, 0, 0, 0.33328],
            58115: [0.18906, 0.69141, 0, 0, 0.32923],
            58116: [0.18906, 0.47534, 0, 0, 0.50343],
            58117: [0, 0.69141, 0, 0, 0.33301],
            58118: [0, 0.62119, 0, 0, 0.33409],
            58119: [0, 0.47534, 0, 0, 0.50073],
        },
        "Main-Bold": {
            32: [0, 0, 0, 0, 0.25],
            33: [0, 0.69444, 0, 0, 0.35],
            34: [0, 0.69444, 0, 0, 0.60278],
            35: [0.19444, 0.69444, 0, 0, 0.95833],
            36: [0.05556, 0.75, 0, 0, 0.575],
            37: [0.05556, 0.75, 0, 0, 0.95833],
            38: [0, 0.69444, 0, 0, 0.89444],
            39: [0, 0.69444, 0, 0, 0.31944],
            40: [0.25, 0.75, 0, 0, 0.44722],
            41: [0.25, 0.75, 0, 0, 0.44722],
            42: [0, 0.75, 0, 0, 0.575],
            43: [0.13333, 0.63333, 0, 0, 0.89444],
            44: [0.19444, 0.15556, 0, 0, 0.31944],
            45: [0, 0.44444, 0, 0, 0.38333],
            46: [0, 0.15556, 0, 0, 0.31944],
            47: [0.25, 0.75, 0, 0, 0.575],
            48: [0, 0.64444, 0, 0, 0.575],
            49: [0, 0.64444, 0, 0, 0.575],
            50: [0, 0.64444, 0, 0, 0.575],
            51: [0, 0.64444, 0, 0, 0.575],
            52: [0, 0.64444, 0, 0, 0.575],
            53: [0, 0.64444, 0, 0, 0.575],
            54: [0, 0.64444, 0, 0, 0.575],
            55: [0, 0.64444, 0, 0, 0.575],
            56: [0, 0.64444, 0, 0, 0.575],
            57: [0, 0.64444, 0, 0, 0.575],
            58: [0, 0.44444, 0, 0, 0.31944],
            59: [0.19444, 0.44444, 0, 0, 0.31944],
            60: [0.08556, 0.58556, 0, 0, 0.89444],
            61: [-0.10889, 0.39111, 0, 0, 0.89444],
            62: [0.08556, 0.58556, 0, 0, 0.89444],
            63: [0, 0.69444, 0, 0, 0.54305],
            64: [0, 0.69444, 0, 0, 0.89444],
            65: [0, 0.68611, 0, 0, 0.86944],
            66: [0, 0.68611, 0, 0, 0.81805],
            67: [0, 0.68611, 0, 0, 0.83055],
            68: [0, 0.68611, 0, 0, 0.88194],
            69: [0, 0.68611, 0, 0, 0.75555],
            70: [0, 0.68611, 0, 0, 0.72361],
            71: [0, 0.68611, 0, 0, 0.90416],
            72: [0, 0.68611, 0, 0, 0.9],
            73: [0, 0.68611, 0, 0, 0.43611],
            74: [0, 0.68611, 0, 0, 0.59444],
            75: [0, 0.68611, 0, 0, 0.90138],
            76: [0, 0.68611, 0, 0, 0.69166],
            77: [0, 0.68611, 0, 0, 1.09166],
            78: [0, 0.68611, 0, 0, 0.9],
            79: [0, 0.68611, 0, 0, 0.86388],
            80: [0, 0.68611, 0, 0, 0.78611],
            81: [0.19444, 0.68611, 0, 0, 0.86388],
            82: [0, 0.68611, 0, 0, 0.8625],
            83: [0, 0.68611, 0, 0, 0.63889],
            84: [0, 0.68611, 0, 0, 0.8],
            85: [0, 0.68611, 0, 0, 0.88472],
            86: [0, 0.68611, 0.01597, 0, 0.86944],
            87: [0, 0.68611, 0.01597, 0, 1.18888],
            88: [0, 0.68611, 0, 0, 0.86944],
            89: [0, 0.68611, 0.02875, 0, 0.86944],
            90: [0, 0.68611, 0, 0, 0.70277],
            91: [0.25, 0.75, 0, 0, 0.31944],
            92: [0.25, 0.75, 0, 0, 0.575],
            93: [0.25, 0.75, 0, 0, 0.31944],
            94: [0, 0.69444, 0, 0, 0.575],
            95: [0.31, 0.13444, 0.03194, 0, 0.575],
            97: [0, 0.44444, 0, 0, 0.55902],
            98: [0, 0.69444, 0, 0, 0.63889],
            99: [0, 0.44444, 0, 0, 0.51111],
            100: [0, 0.69444, 0, 0, 0.63889],
            101: [0, 0.44444, 0, 0, 0.52708],
            102: [0, 0.69444, 0.10903, 0, 0.35139],
            103: [0.19444, 0.44444, 0.01597, 0, 0.575],
            104: [0, 0.69444, 0, 0, 0.63889],
            105: [0, 0.69444, 0, 0, 0.31944],
            106: [0.19444, 0.69444, 0, 0, 0.35139],
            107: [0, 0.69444, 0, 0, 0.60694],
            108: [0, 0.69444, 0, 0, 0.31944],
            109: [0, 0.44444, 0, 0, 0.95833],
            110: [0, 0.44444, 0, 0, 0.63889],
            111: [0, 0.44444, 0, 0, 0.575],
            112: [0.19444, 0.44444, 0, 0, 0.63889],
            113: [0.19444, 0.44444, 0, 0, 0.60694],
            114: [0, 0.44444, 0, 0, 0.47361],
            115: [0, 0.44444, 0, 0, 0.45361],
            116: [0, 0.63492, 0, 0, 0.44722],
            117: [0, 0.44444, 0, 0, 0.63889],
            118: [0, 0.44444, 0.01597, 0, 0.60694],
            119: [0, 0.44444, 0.01597, 0, 0.83055],
            120: [0, 0.44444, 0, 0, 0.60694],
            121: [0.19444, 0.44444, 0.01597, 0, 0.60694],
            122: [0, 0.44444, 0, 0, 0.51111],
            123: [0.25, 0.75, 0, 0, 0.575],
            124: [0.25, 0.75, 0, 0, 0.31944],
            125: [0.25, 0.75, 0, 0, 0.575],
            126: [0.35, 0.34444, 0, 0, 0.575],
            160: [0, 0, 0, 0, 0.25],
            163: [0, 0.69444, 0, 0, 0.86853],
            168: [0, 0.69444, 0, 0, 0.575],
            172: [0, 0.44444, 0, 0, 0.76666],
            176: [0, 0.69444, 0, 0, 0.86944],
            177: [0.13333, 0.63333, 0, 0, 0.89444],
            184: [0.17014, 0, 0, 0, 0.51111],
            198: [0, 0.68611, 0, 0, 1.04166],
            215: [0.13333, 0.63333, 0, 0, 0.89444],
            216: [0.04861, 0.73472, 0, 0, 0.89444],
            223: [0, 0.69444, 0, 0, 0.59722],
            230: [0, 0.44444, 0, 0, 0.83055],
            247: [0.13333, 0.63333, 0, 0, 0.89444],
            248: [0.09722, 0.54167, 0, 0, 0.575],
            305: [0, 0.44444, 0, 0, 0.31944],
            338: [0, 0.68611, 0, 0, 1.16944],
            339: [0, 0.44444, 0, 0, 0.89444],
            567: [0.19444, 0.44444, 0, 0, 0.35139],
            710: [0, 0.69444, 0, 0, 0.575],
            711: [0, 0.63194, 0, 0, 0.575],
            713: [0, 0.59611, 0, 0, 0.575],
            714: [0, 0.69444, 0, 0, 0.575],
            715: [0, 0.69444, 0, 0, 0.575],
            728: [0, 0.69444, 0, 0, 0.575],
            729: [0, 0.69444, 0, 0, 0.31944],
            730: [0, 0.69444, 0, 0, 0.86944],
            732: [0, 0.69444, 0, 0, 0.575],
            733: [0, 0.69444, 0, 0, 0.575],
            915: [0, 0.68611, 0, 0, 0.69166],
            916: [0, 0.68611, 0, 0, 0.95833],
            920: [0, 0.68611, 0, 0, 0.89444],
            923: [0, 0.68611, 0, 0, 0.80555],
            926: [0, 0.68611, 0, 0, 0.76666],
            928: [0, 0.68611, 0, 0, 0.9],
            931: [0, 0.68611, 0, 0, 0.83055],
            933: [0, 0.68611, 0, 0, 0.89444],
            934: [0, 0.68611, 0, 0, 0.83055],
            936: [0, 0.68611, 0, 0, 0.89444],
            937: [0, 0.68611, 0, 0, 0.83055],
            8211: [0, 0.44444, 0.03194, 0, 0.575],
            8212: [0, 0.44444, 0.03194, 0, 1.14999],
            8216: [0, 0.69444, 0, 0, 0.31944],
            8217: [0, 0.69444, 0, 0, 0.31944],
            8220: [0, 0.69444, 0, 0, 0.60278],
            8221: [0, 0.69444, 0, 0, 0.60278],
            8224: [0.19444, 0.69444, 0, 0, 0.51111],
            8225: [0.19444, 0.69444, 0, 0, 0.51111],
            8242: [0, 0.55556, 0, 0, 0.34444],
            8407: [0, 0.72444, 0.15486, 0, 0.575],
            8463: [0, 0.69444, 0, 0, 0.66759],
            8465: [0, 0.69444, 0, 0, 0.83055],
            8467: [0, 0.69444, 0, 0, 0.47361],
            8472: [0.19444, 0.44444, 0, 0, 0.74027],
            8476: [0, 0.69444, 0, 0, 0.83055],
            8501: [0, 0.69444, 0, 0, 0.70277],
            8592: [-0.10889, 0.39111, 0, 0, 1.14999],
            8593: [0.19444, 0.69444, 0, 0, 0.575],
            8594: [-0.10889, 0.39111, 0, 0, 1.14999],
            8595: [0.19444, 0.69444, 0, 0, 0.575],
            8596: [-0.10889, 0.39111, 0, 0, 1.14999],
            8597: [0.25, 0.75, 0, 0, 0.575],
            8598: [0.19444, 0.69444, 0, 0, 1.14999],
            8599: [0.19444, 0.69444, 0, 0, 1.14999],
            8600: [0.19444, 0.69444, 0, 0, 1.14999],
            8601: [0.19444, 0.69444, 0, 0, 1.14999],
            8636: [-0.10889, 0.39111, 0, 0, 1.14999],
            8637: [-0.10889, 0.39111, 0, 0, 1.14999],
            8640: [-0.10889, 0.39111, 0, 0, 1.14999],
            8641: [-0.10889, 0.39111, 0, 0, 1.14999],
            8656: [-0.10889, 0.39111, 0, 0, 1.14999],
            8657: [0.19444, 0.69444, 0, 0, 0.70277],
            8658: [-0.10889, 0.39111, 0, 0, 1.14999],
            8659: [0.19444, 0.69444, 0, 0, 0.70277],
            8660: [-0.10889, 0.39111, 0, 0, 1.14999],
            8661: [0.25, 0.75, 0, 0, 0.70277],
            8704: [0, 0.69444, 0, 0, 0.63889],
            8706: [0, 0.69444, 0.06389, 0, 0.62847],
            8707: [0, 0.69444, 0, 0, 0.63889],
            8709: [0.05556, 0.75, 0, 0, 0.575],
            8711: [0, 0.68611, 0, 0, 0.95833],
            8712: [0.08556, 0.58556, 0, 0, 0.76666],
            8715: [0.08556, 0.58556, 0, 0, 0.76666],
            8722: [0.13333, 0.63333, 0, 0, 0.89444],
            8723: [0.13333, 0.63333, 0, 0, 0.89444],
            8725: [0.25, 0.75, 0, 0, 0.575],
            8726: [0.25, 0.75, 0, 0, 0.575],
            8727: [-0.02778, 0.47222, 0, 0, 0.575],
            8728: [-0.02639, 0.47361, 0, 0, 0.575],
            8729: [-0.02639, 0.47361, 0, 0, 0.575],
            8730: [0.18, 0.82, 0, 0, 0.95833],
            8733: [0, 0.44444, 0, 0, 0.89444],
            8734: [0, 0.44444, 0, 0, 1.14999],
            8736: [0, 0.69224, 0, 0, 0.72222],
            8739: [0.25, 0.75, 0, 0, 0.31944],
            8741: [0.25, 0.75, 0, 0, 0.575],
            8743: [0, 0.55556, 0, 0, 0.76666],
            8744: [0, 0.55556, 0, 0, 0.76666],
            8745: [0, 0.55556, 0, 0, 0.76666],
            8746: [0, 0.55556, 0, 0, 0.76666],
            8747: [0.19444, 0.69444, 0.12778, 0, 0.56875],
            8764: [-0.10889, 0.39111, 0, 0, 0.89444],
            8768: [0.19444, 0.69444, 0, 0, 0.31944],
            8771: [0.00222, 0.50222, 0, 0, 0.89444],
            8773: [0.027, 0.638, 0, 0, 0.894],
            8776: [0.02444, 0.52444, 0, 0, 0.89444],
            8781: [0.00222, 0.50222, 0, 0, 0.89444],
            8801: [0.00222, 0.50222, 0, 0, 0.89444],
            8804: [0.19667, 0.69667, 0, 0, 0.89444],
            8805: [0.19667, 0.69667, 0, 0, 0.89444],
            8810: [0.08556, 0.58556, 0, 0, 1.14999],
            8811: [0.08556, 0.58556, 0, 0, 1.14999],
            8826: [0.08556, 0.58556, 0, 0, 0.89444],
            8827: [0.08556, 0.58556, 0, 0, 0.89444],
            8834: [0.08556, 0.58556, 0, 0, 0.89444],
            8835: [0.08556, 0.58556, 0, 0, 0.89444],
            8838: [0.19667, 0.69667, 0, 0, 0.89444],
            8839: [0.19667, 0.69667, 0, 0, 0.89444],
            8846: [0, 0.55556, 0, 0, 0.76666],
            8849: [0.19667, 0.69667, 0, 0, 0.89444],
            8850: [0.19667, 0.69667, 0, 0, 0.89444],
            8851: [0, 0.55556, 0, 0, 0.76666],
            8852: [0, 0.55556, 0, 0, 0.76666],
            8853: [0.13333, 0.63333, 0, 0, 0.89444],
            8854: [0.13333, 0.63333, 0, 0, 0.89444],
            8855: [0.13333, 0.63333, 0, 0, 0.89444],
            8856: [0.13333, 0.63333, 0, 0, 0.89444],
            8857: [0.13333, 0.63333, 0, 0, 0.89444],
            8866: [0, 0.69444, 0, 0, 0.70277],
            8867: [0, 0.69444, 0, 0, 0.70277],
            8868: [0, 0.69444, 0, 0, 0.89444],
            8869: [0, 0.69444, 0, 0, 0.89444],
            8900: [-0.02639, 0.47361, 0, 0, 0.575],
            8901: [-0.02639, 0.47361, 0, 0, 0.31944],
            8902: [-0.02778, 0.47222, 0, 0, 0.575],
            8968: [0.25, 0.75, 0, 0, 0.51111],
            8969: [0.25, 0.75, 0, 0, 0.51111],
            8970: [0.25, 0.75, 0, 0, 0.51111],
            8971: [0.25, 0.75, 0, 0, 0.51111],
            8994: [-0.13889, 0.36111, 0, 0, 1.14999],
            8995: [-0.13889, 0.36111, 0, 0, 1.14999],
            9651: [0.19444, 0.69444, 0, 0, 1.02222],
            9657: [-0.02778, 0.47222, 0, 0, 0.575],
            9661: [0.19444, 0.69444, 0, 0, 1.02222],
            9667: [-0.02778, 0.47222, 0, 0, 0.575],
            9711: [0.19444, 0.69444, 0, 0, 1.14999],
            9824: [0.12963, 0.69444, 0, 0, 0.89444],
            9825: [0.12963, 0.69444, 0, 0, 0.89444],
            9826: [0.12963, 0.69444, 0, 0, 0.89444],
            9827: [0.12963, 0.69444, 0, 0, 0.89444],
            9837: [0, 0.75, 0, 0, 0.44722],
            9838: [0.19444, 0.69444, 0, 0, 0.44722],
            9839: [0.19444, 0.69444, 0, 0, 0.44722],
            10216: [0.25, 0.75, 0, 0, 0.44722],
            10217: [0.25, 0.75, 0, 0, 0.44722],
            10815: [0, 0.68611, 0, 0, 0.9],
            10927: [0.19667, 0.69667, 0, 0, 0.89444],
            10928: [0.19667, 0.69667, 0, 0, 0.89444],
            57376: [0.19444, 0.69444, 0, 0, 0],
        },
        "Main-BoldItalic": {
            32: [0, 0, 0, 0, 0.25],
            33: [0, 0.69444, 0.11417, 0, 0.38611],
            34: [0, 0.69444, 0.07939, 0, 0.62055],
            35: [0.19444, 0.69444, 0.06833, 0, 0.94444],
            37: [0.05556, 0.75, 0.12861, 0, 0.94444],
            38: [0, 0.69444, 0.08528, 0, 0.88555],
            39: [0, 0.69444, 0.12945, 0, 0.35555],
            40: [0.25, 0.75, 0.15806, 0, 0.47333],
            41: [0.25, 0.75, 0.03306, 0, 0.47333],
            42: [0, 0.75, 0.14333, 0, 0.59111],
            43: [0.10333, 0.60333, 0.03306, 0, 0.88555],
            44: [0.19444, 0.14722, 0, 0, 0.35555],
            45: [0, 0.44444, 0.02611, 0, 0.41444],
            46: [0, 0.14722, 0, 0, 0.35555],
            47: [0.25, 0.75, 0.15806, 0, 0.59111],
            48: [0, 0.64444, 0.13167, 0, 0.59111],
            49: [0, 0.64444, 0.13167, 0, 0.59111],
            50: [0, 0.64444, 0.13167, 0, 0.59111],
            51: [0, 0.64444, 0.13167, 0, 0.59111],
            52: [0.19444, 0.64444, 0.13167, 0, 0.59111],
            53: [0, 0.64444, 0.13167, 0, 0.59111],
            54: [0, 0.64444, 0.13167, 0, 0.59111],
            55: [0.19444, 0.64444, 0.13167, 0, 0.59111],
            56: [0, 0.64444, 0.13167, 0, 0.59111],
            57: [0, 0.64444, 0.13167, 0, 0.59111],
            58: [0, 0.44444, 0.06695, 0, 0.35555],
            59: [0.19444, 0.44444, 0.06695, 0, 0.35555],
            61: [-0.10889, 0.39111, 0.06833, 0, 0.88555],
            63: [0, 0.69444, 0.11472, 0, 0.59111],
            64: [0, 0.69444, 0.09208, 0, 0.88555],
            65: [0, 0.68611, 0, 0, 0.86555],
            66: [0, 0.68611, 0.0992, 0, 0.81666],
            67: [0, 0.68611, 0.14208, 0, 0.82666],
            68: [0, 0.68611, 0.09062, 0, 0.87555],
            69: [0, 0.68611, 0.11431, 0, 0.75666],
            70: [0, 0.68611, 0.12903, 0, 0.72722],
            71: [0, 0.68611, 0.07347, 0, 0.89527],
            72: [0, 0.68611, 0.17208, 0, 0.8961],
            73: [0, 0.68611, 0.15681, 0, 0.47166],
            74: [0, 0.68611, 0.145, 0, 0.61055],
            75: [0, 0.68611, 0.14208, 0, 0.89499],
            76: [0, 0.68611, 0, 0, 0.69777],
            77: [0, 0.68611, 0.17208, 0, 1.07277],
            78: [0, 0.68611, 0.17208, 0, 0.8961],
            79: [0, 0.68611, 0.09062, 0, 0.85499],
            80: [0, 0.68611, 0.0992, 0, 0.78721],
            81: [0.19444, 0.68611, 0.09062, 0, 0.85499],
            82: [0, 0.68611, 0.02559, 0, 0.85944],
            83: [0, 0.68611, 0.11264, 0, 0.64999],
            84: [0, 0.68611, 0.12903, 0, 0.7961],
            85: [0, 0.68611, 0.17208, 0, 0.88083],
            86: [0, 0.68611, 0.18625, 0, 0.86555],
            87: [0, 0.68611, 0.18625, 0, 1.15999],
            88: [0, 0.68611, 0.15681, 0, 0.86555],
            89: [0, 0.68611, 0.19803, 0, 0.86555],
            90: [0, 0.68611, 0.14208, 0, 0.70888],
            91: [0.25, 0.75, 0.1875, 0, 0.35611],
            93: [0.25, 0.75, 0.09972, 0, 0.35611],
            94: [0, 0.69444, 0.06709, 0, 0.59111],
            95: [0.31, 0.13444, 0.09811, 0, 0.59111],
            97: [0, 0.44444, 0.09426, 0, 0.59111],
            98: [0, 0.69444, 0.07861, 0, 0.53222],
            99: [0, 0.44444, 0.05222, 0, 0.53222],
            100: [0, 0.69444, 0.10861, 0, 0.59111],
            101: [0, 0.44444, 0.085, 0, 0.53222],
            102: [0.19444, 0.69444, 0.21778, 0, 0.4],
            103: [0.19444, 0.44444, 0.105, 0, 0.53222],
            104: [0, 0.69444, 0.09426, 0, 0.59111],
            105: [0, 0.69326, 0.11387, 0, 0.35555],
            106: [0.19444, 0.69326, 0.1672, 0, 0.35555],
            107: [0, 0.69444, 0.11111, 0, 0.53222],
            108: [0, 0.69444, 0.10861, 0, 0.29666],
            109: [0, 0.44444, 0.09426, 0, 0.94444],
            110: [0, 0.44444, 0.09426, 0, 0.64999],
            111: [0, 0.44444, 0.07861, 0, 0.59111],
            112: [0.19444, 0.44444, 0.07861, 0, 0.59111],
            113: [0.19444, 0.44444, 0.105, 0, 0.53222],
            114: [0, 0.44444, 0.11111, 0, 0.50167],
            115: [0, 0.44444, 0.08167, 0, 0.48694],
            116: [0, 0.63492, 0.09639, 0, 0.385],
            117: [0, 0.44444, 0.09426, 0, 0.62055],
            118: [0, 0.44444, 0.11111, 0, 0.53222],
            119: [0, 0.44444, 0.11111, 0, 0.76777],
            120: [0, 0.44444, 0.12583, 0, 0.56055],
            121: [0.19444, 0.44444, 0.105, 0, 0.56166],
            122: [0, 0.44444, 0.13889, 0, 0.49055],
            126: [0.35, 0.34444, 0.11472, 0, 0.59111],
            160: [0, 0, 0, 0, 0.25],
            168: [0, 0.69444, 0.11473, 0, 0.59111],
            176: [0, 0.69444, 0, 0, 0.94888],
            184: [0.17014, 0, 0, 0, 0.53222],
            198: [0, 0.68611, 0.11431, 0, 1.02277],
            216: [0.04861, 0.73472, 0.09062, 0, 0.88555],
            223: [0.19444, 0.69444, 0.09736, 0, 0.665],
            230: [0, 0.44444, 0.085, 0, 0.82666],
            248: [0.09722, 0.54167, 0.09458, 0, 0.59111],
            305: [0, 0.44444, 0.09426, 0, 0.35555],
            338: [0, 0.68611, 0.11431, 0, 1.14054],
            339: [0, 0.44444, 0.085, 0, 0.82666],
            567: [0.19444, 0.44444, 0.04611, 0, 0.385],
            710: [0, 0.69444, 0.06709, 0, 0.59111],
            711: [0, 0.63194, 0.08271, 0, 0.59111],
            713: [0, 0.59444, 0.10444, 0, 0.59111],
            714: [0, 0.69444, 0.08528, 0, 0.59111],
            715: [0, 0.69444, 0, 0, 0.59111],
            728: [0, 0.69444, 0.10333, 0, 0.59111],
            729: [0, 0.69444, 0.12945, 0, 0.35555],
            730: [0, 0.69444, 0, 0, 0.94888],
            732: [0, 0.69444, 0.11472, 0, 0.59111],
            733: [0, 0.69444, 0.11472, 0, 0.59111],
            915: [0, 0.68611, 0.12903, 0, 0.69777],
            916: [0, 0.68611, 0, 0, 0.94444],
            920: [0, 0.68611, 0.09062, 0, 0.88555],
            923: [0, 0.68611, 0, 0, 0.80666],
            926: [0, 0.68611, 0.15092, 0, 0.76777],
            928: [0, 0.68611, 0.17208, 0, 0.8961],
            931: [0, 0.68611, 0.11431, 0, 0.82666],
            933: [0, 0.68611, 0.10778, 0, 0.88555],
            934: [0, 0.68611, 0.05632, 0, 0.82666],
            936: [0, 0.68611, 0.10778, 0, 0.88555],
            937: [0, 0.68611, 0.0992, 0, 0.82666],
            8211: [0, 0.44444, 0.09811, 0, 0.59111],
            8212: [0, 0.44444, 0.09811, 0, 1.18221],
            8216: [0, 0.69444, 0.12945, 0, 0.35555],
            8217: [0, 0.69444, 0.12945, 0, 0.35555],
            8220: [0, 0.69444, 0.16772, 0, 0.62055],
            8221: [0, 0.69444, 0.07939, 0, 0.62055],
        },
        "Main-Italic": {
            32: [0, 0, 0, 0, 0.25],
            33: [0, 0.69444, 0.12417, 0, 0.30667],
            34: [0, 0.69444, 0.06961, 0, 0.51444],
            35: [0.19444, 0.69444, 0.06616, 0, 0.81777],
            37: [0.05556, 0.75, 0.13639, 0, 0.81777],
            38: [0, 0.69444, 0.09694, 0, 0.76666],
            39: [0, 0.69444, 0.12417, 0, 0.30667],
            40: [0.25, 0.75, 0.16194, 0, 0.40889],
            41: [0.25, 0.75, 0.03694, 0, 0.40889],
            42: [0, 0.75, 0.14917, 0, 0.51111],
            43: [0.05667, 0.56167, 0.03694, 0, 0.76666],
            44: [0.19444, 0.10556, 0, 0, 0.30667],
            45: [0, 0.43056, 0.02826, 0, 0.35778],
            46: [0, 0.10556, 0, 0, 0.30667],
            47: [0.25, 0.75, 0.16194, 0, 0.51111],
            48: [0, 0.64444, 0.13556, 0, 0.51111],
            49: [0, 0.64444, 0.13556, 0, 0.51111],
            50: [0, 0.64444, 0.13556, 0, 0.51111],
            51: [0, 0.64444, 0.13556, 0, 0.51111],
            52: [0.19444, 0.64444, 0.13556, 0, 0.51111],
            53: [0, 0.64444, 0.13556, 0, 0.51111],
            54: [0, 0.64444, 0.13556, 0, 0.51111],
            55: [0.19444, 0.64444, 0.13556, 0, 0.51111],
            56: [0, 0.64444, 0.13556, 0, 0.51111],
            57: [0, 0.64444, 0.13556, 0, 0.51111],
            58: [0, 0.43056, 0.0582, 0, 0.30667],
            59: [0.19444, 0.43056, 0.0582, 0, 0.30667],
            61: [-0.13313, 0.36687, 0.06616, 0, 0.76666],
            63: [0, 0.69444, 0.1225, 0, 0.51111],
            64: [0, 0.69444, 0.09597, 0, 0.76666],
            65: [0, 0.68333, 0, 0, 0.74333],
            66: [0, 0.68333, 0.10257, 0, 0.70389],
            67: [0, 0.68333, 0.14528, 0, 0.71555],
            68: [0, 0.68333, 0.09403, 0, 0.755],
            69: [0, 0.68333, 0.12028, 0, 0.67833],
            70: [0, 0.68333, 0.13305, 0, 0.65277],
            71: [0, 0.68333, 0.08722, 0, 0.77361],
            72: [0, 0.68333, 0.16389, 0, 0.74333],
            73: [0, 0.68333, 0.15806, 0, 0.38555],
            74: [0, 0.68333, 0.14028, 0, 0.525],
            75: [0, 0.68333, 0.14528, 0, 0.76888],
            76: [0, 0.68333, 0, 0, 0.62722],
            77: [0, 0.68333, 0.16389, 0, 0.89666],
            78: [0, 0.68333, 0.16389, 0, 0.74333],
            79: [0, 0.68333, 0.09403, 0, 0.76666],
            80: [0, 0.68333, 0.10257, 0, 0.67833],
            81: [0.19444, 0.68333, 0.09403, 0, 0.76666],
            82: [0, 0.68333, 0.03868, 0, 0.72944],
            83: [0, 0.68333, 0.11972, 0, 0.56222],
            84: [0, 0.68333, 0.13305, 0, 0.71555],
            85: [0, 0.68333, 0.16389, 0, 0.74333],
            86: [0, 0.68333, 0.18361, 0, 0.74333],
            87: [0, 0.68333, 0.18361, 0, 0.99888],
            88: [0, 0.68333, 0.15806, 0, 0.74333],
            89: [0, 0.68333, 0.19383, 0, 0.74333],
            90: [0, 0.68333, 0.14528, 0, 0.61333],
            91: [0.25, 0.75, 0.1875, 0, 0.30667],
            93: [0.25, 0.75, 0.10528, 0, 0.30667],
            94: [0, 0.69444, 0.06646, 0, 0.51111],
            95: [0.31, 0.12056, 0.09208, 0, 0.51111],
            97: [0, 0.43056, 0.07671, 0, 0.51111],
            98: [0, 0.69444, 0.06312, 0, 0.46],
            99: [0, 0.43056, 0.05653, 0, 0.46],
            100: [0, 0.69444, 0.10333, 0, 0.51111],
            101: [0, 0.43056, 0.07514, 0, 0.46],
            102: [0.19444, 0.69444, 0.21194, 0, 0.30667],
            103: [0.19444, 0.43056, 0.08847, 0, 0.46],
            104: [0, 0.69444, 0.07671, 0, 0.51111],
            105: [0, 0.65536, 0.1019, 0, 0.30667],
            106: [0.19444, 0.65536, 0.14467, 0, 0.30667],
            107: [0, 0.69444, 0.10764, 0, 0.46],
            108: [0, 0.69444, 0.10333, 0, 0.25555],
            109: [0, 0.43056, 0.07671, 0, 0.81777],
            110: [0, 0.43056, 0.07671, 0, 0.56222],
            111: [0, 0.43056, 0.06312, 0, 0.51111],
            112: [0.19444, 0.43056, 0.06312, 0, 0.51111],
            113: [0.19444, 0.43056, 0.08847, 0, 0.46],
            114: [0, 0.43056, 0.10764, 0, 0.42166],
            115: [0, 0.43056, 0.08208, 0, 0.40889],
            116: [0, 0.61508, 0.09486, 0, 0.33222],
            117: [0, 0.43056, 0.07671, 0, 0.53666],
            118: [0, 0.43056, 0.10764, 0, 0.46],
            119: [0, 0.43056, 0.10764, 0, 0.66444],
            120: [0, 0.43056, 0.12042, 0, 0.46389],
            121: [0.19444, 0.43056, 0.08847, 0, 0.48555],
            122: [0, 0.43056, 0.12292, 0, 0.40889],
            126: [0.35, 0.31786, 0.11585, 0, 0.51111],
            160: [0, 0, 0, 0, 0.25],
            168: [0, 0.66786, 0.10474, 0, 0.51111],
            176: [0, 0.69444, 0, 0, 0.83129],
            184: [0.17014, 0, 0, 0, 0.46],
            198: [0, 0.68333, 0.12028, 0, 0.88277],
            216: [0.04861, 0.73194, 0.09403, 0, 0.76666],
            223: [0.19444, 0.69444, 0.10514, 0, 0.53666],
            230: [0, 0.43056, 0.07514, 0, 0.71555],
            248: [0.09722, 0.52778, 0.09194, 0, 0.51111],
            338: [0, 0.68333, 0.12028, 0, 0.98499],
            339: [0, 0.43056, 0.07514, 0, 0.71555],
            710: [0, 0.69444, 0.06646, 0, 0.51111],
            711: [0, 0.62847, 0.08295, 0, 0.51111],
            713: [0, 0.56167, 0.10333, 0, 0.51111],
            714: [0, 0.69444, 0.09694, 0, 0.51111],
            715: [0, 0.69444, 0, 0, 0.51111],
            728: [0, 0.69444, 0.10806, 0, 0.51111],
            729: [0, 0.66786, 0.11752, 0, 0.30667],
            730: [0, 0.69444, 0, 0, 0.83129],
            732: [0, 0.66786, 0.11585, 0, 0.51111],
            733: [0, 0.69444, 0.1225, 0, 0.51111],
            915: [0, 0.68333, 0.13305, 0, 0.62722],
            916: [0, 0.68333, 0, 0, 0.81777],
            920: [0, 0.68333, 0.09403, 0, 0.76666],
            923: [0, 0.68333, 0, 0, 0.69222],
            926: [0, 0.68333, 0.15294, 0, 0.66444],
            928: [0, 0.68333, 0.16389, 0, 0.74333],
            931: [0, 0.68333, 0.12028, 0, 0.71555],
            933: [0, 0.68333, 0.11111, 0, 0.76666],
            934: [0, 0.68333, 0.05986, 0, 0.71555],
            936: [0, 0.68333, 0.11111, 0, 0.76666],
            937: [0, 0.68333, 0.10257, 0, 0.71555],
            8211: [0, 0.43056, 0.09208, 0, 0.51111],
            8212: [0, 0.43056, 0.09208, 0, 1.02222],
            8216: [0, 0.69444, 0.12417, 0, 0.30667],
            8217: [0, 0.69444, 0.12417, 0, 0.30667],
            8220: [0, 0.69444, 0.1685, 0, 0.51444],
            8221: [0, 0.69444, 0.06961, 0, 0.51444],
            8463: [0, 0.68889, 0, 0, 0.54028],
        },
        "Main-Regular": {
            32: [0, 0, 0, 0, 0.25],
            33: [0, 0.69444, 0, 0, 0.27778],
            34: [0, 0.69444, 0, 0, 0.5],
            35: [0.19444, 0.69444, 0, 0, 0.83334],
            36: [0.05556, 0.75, 0, 0, 0.5],
            37: [0.05556, 0.75, 0, 0, 0.83334],
            38: [0, 0.69444, 0, 0, 0.77778],
            39: [0, 0.69444, 0, 0, 0.27778],
            40: [0.25, 0.75, 0, 0, 0.38889],
            41: [0.25, 0.75, 0, 0, 0.38889],
            42: [0, 0.75, 0, 0, 0.5],
            43: [0.08333, 0.58333, 0, 0, 0.77778],
            44: [0.19444, 0.10556, 0, 0, 0.27778],
            45: [0, 0.43056, 0, 0, 0.33333],
            46: [0, 0.10556, 0, 0, 0.27778],
            47: [0.25, 0.75, 0, 0, 0.5],
            48: [0, 0.64444, 0, 0, 0.5],
            49: [0, 0.64444, 0, 0, 0.5],
            50: [0, 0.64444, 0, 0, 0.5],
            51: [0, 0.64444, 0, 0, 0.5],
            52: [0, 0.64444, 0, 0, 0.5],
            53: [0, 0.64444, 0, 0, 0.5],
            54: [0, 0.64444, 0, 0, 0.5],
            55: [0, 0.64444, 0, 0, 0.5],
            56: [0, 0.64444, 0, 0, 0.5],
            57: [0, 0.64444, 0, 0, 0.5],
            58: [0, 0.43056, 0, 0, 0.27778],
            59: [0.19444, 0.43056, 0, 0, 0.27778],
            60: [0.0391, 0.5391, 0, 0, 0.77778],
            61: [-0.13313, 0.36687, 0, 0, 0.77778],
            62: [0.0391, 0.5391, 0, 0, 0.77778],
            63: [0, 0.69444, 0, 0, 0.47222],
            64: [0, 0.69444, 0, 0, 0.77778],
            65: [0, 0.68333, 0, 0, 0.75],
            66: [0, 0.68333, 0, 0, 0.70834],
            67: [0, 0.68333, 0, 0, 0.72222],
            68: [0, 0.68333, 0, 0, 0.76389],
            69: [0, 0.68333, 0, 0, 0.68056],
            70: [0, 0.68333, 0, 0, 0.65278],
            71: [0, 0.68333, 0, 0, 0.78472],
            72: [0, 0.68333, 0, 0, 0.75],
            73: [0, 0.68333, 0, 0, 0.36111],
            74: [0, 0.68333, 0, 0, 0.51389],
            75: [0, 0.68333, 0, 0, 0.77778],
            76: [0, 0.68333, 0, 0, 0.625],
            77: [0, 0.68333, 0, 0, 0.91667],
            78: [0, 0.68333, 0, 0, 0.75],
            79: [0, 0.68333, 0, 0, 0.77778],
            80: [0, 0.68333, 0, 0, 0.68056],
            81: [0.19444, 0.68333, 0, 0, 0.77778],
            82: [0, 0.68333, 0, 0, 0.73611],
            83: [0, 0.68333, 0, 0, 0.55556],
            84: [0, 0.68333, 0, 0, 0.72222],
            85: [0, 0.68333, 0, 0, 0.75],
            86: [0, 0.68333, 0.01389, 0, 0.75],
            87: [0, 0.68333, 0.01389, 0, 1.02778],
            88: [0, 0.68333, 0, 0, 0.75],
            89: [0, 0.68333, 0.025, 0, 0.75],
            90: [0, 0.68333, 0, 0, 0.61111],
            91: [0.25, 0.75, 0, 0, 0.27778],
            92: [0.25, 0.75, 0, 0, 0.5],
            93: [0.25, 0.75, 0, 0, 0.27778],
            94: [0, 0.69444, 0, 0, 0.5],
            95: [0.31, 0.12056, 0.02778, 0, 0.5],
            97: [0, 0.43056, 0, 0, 0.5],
            98: [0, 0.69444, 0, 0, 0.55556],
            99: [0, 0.43056, 0, 0, 0.44445],
            100: [0, 0.69444, 0, 0, 0.55556],
            101: [0, 0.43056, 0, 0, 0.44445],
            102: [0, 0.69444, 0.07778, 0, 0.30556],
            103: [0.19444, 0.43056, 0.01389, 0, 0.5],
            104: [0, 0.69444, 0, 0, 0.55556],
            105: [0, 0.66786, 0, 0, 0.27778],
            106: [0.19444, 0.66786, 0, 0, 0.30556],
            107: [0, 0.69444, 0, 0, 0.52778],
            108: [0, 0.69444, 0, 0, 0.27778],
            109: [0, 0.43056, 0, 0, 0.83334],
            110: [0, 0.43056, 0, 0, 0.55556],
            111: [0, 0.43056, 0, 0, 0.5],
            112: [0.19444, 0.43056, 0, 0, 0.55556],
            113: [0.19444, 0.43056, 0, 0, 0.52778],
            114: [0, 0.43056, 0, 0, 0.39167],
            115: [0, 0.43056, 0, 0, 0.39445],
            116: [0, 0.61508, 0, 0, 0.38889],
            117: [0, 0.43056, 0, 0, 0.55556],
            118: [0, 0.43056, 0.01389, 0, 0.52778],
            119: [0, 0.43056, 0.01389, 0, 0.72222],
            120: [0, 0.43056, 0, 0, 0.52778],
            121: [0.19444, 0.43056, 0.01389, 0, 0.52778],
            122: [0, 0.43056, 0, 0, 0.44445],
            123: [0.25, 0.75, 0, 0, 0.5],
            124: [0.25, 0.75, 0, 0, 0.27778],
            125: [0.25, 0.75, 0, 0, 0.5],
            126: [0.35, 0.31786, 0, 0, 0.5],
            160: [0, 0, 0, 0, 0.25],
            163: [0, 0.69444, 0, 0, 0.76909],
            167: [0.19444, 0.69444, 0, 0, 0.44445],
            168: [0, 0.66786, 0, 0, 0.5],
            172: [0, 0.43056, 0, 0, 0.66667],
            176: [0, 0.69444, 0, 0, 0.75],
            177: [0.08333, 0.58333, 0, 0, 0.77778],
            182: [0.19444, 0.69444, 0, 0, 0.61111],
            184: [0.17014, 0, 0, 0, 0.44445],
            198: [0, 0.68333, 0, 0, 0.90278],
            215: [0.08333, 0.58333, 0, 0, 0.77778],
            216: [0.04861, 0.73194, 0, 0, 0.77778],
            223: [0, 0.69444, 0, 0, 0.5],
            230: [0, 0.43056, 0, 0, 0.72222],
            247: [0.08333, 0.58333, 0, 0, 0.77778],
            248: [0.09722, 0.52778, 0, 0, 0.5],
            305: [0, 0.43056, 0, 0, 0.27778],
            338: [0, 0.68333, 0, 0, 1.01389],
            339: [0, 0.43056, 0, 0, 0.77778],
            567: [0.19444, 0.43056, 0, 0, 0.30556],
            710: [0, 0.69444, 0, 0, 0.5],
            711: [0, 0.62847, 0, 0, 0.5],
            713: [0, 0.56778, 0, 0, 0.5],
            714: [0, 0.69444, 0, 0, 0.5],
            715: [0, 0.69444, 0, 0, 0.5],
            728: [0, 0.69444, 0, 0, 0.5],
            729: [0, 0.66786, 0, 0, 0.27778],
            730: [0, 0.69444, 0, 0, 0.75],
            732: [0, 0.66786, 0, 0, 0.5],
            733: [0, 0.69444, 0, 0, 0.5],
            915: [0, 0.68333, 0, 0, 0.625],
            916: [0, 0.68333, 0, 0, 0.83334],
            920: [0, 0.68333, 0, 0, 0.77778],
            923: [0, 0.68333, 0, 0, 0.69445],
            926: [0, 0.68333, 0, 0, 0.66667],
            928: [0, 0.68333, 0, 0, 0.75],
            931: [0, 0.68333, 0, 0, 0.72222],
            933: [0, 0.68333, 0, 0, 0.77778],
            934: [0, 0.68333, 0, 0, 0.72222],
            936: [0, 0.68333, 0, 0, 0.77778],
            937: [0, 0.68333, 0, 0, 0.72222],
            8211: [0, 0.43056, 0.02778, 0, 0.5],
            8212: [0, 0.43056, 0.02778, 0, 1],
            8216: [0, 0.69444, 0, 0, 0.27778],
            8217: [0, 0.69444, 0, 0, 0.27778],
            8220: [0, 0.69444, 0, 0, 0.5],
            8221: [0, 0.69444, 0, 0, 0.5],
            8224: [0.19444, 0.69444, 0, 0, 0.44445],
            8225: [0.19444, 0.69444, 0, 0, 0.44445],
            8230: [0, 0.123, 0, 0, 1.172],
            8242: [0, 0.55556, 0, 0, 0.275],
            8407: [0, 0.71444, 0.15382, 0, 0.5],
            8463: [0, 0.68889, 0, 0, 0.54028],
            8465: [0, 0.69444, 0, 0, 0.72222],
            8467: [0, 0.69444, 0, 0.11111, 0.41667],
            8472: [0.19444, 0.43056, 0, 0.11111, 0.63646],
            8476: [0, 0.69444, 0, 0, 0.72222],
            8501: [0, 0.69444, 0, 0, 0.61111],
            8592: [-0.13313, 0.36687, 0, 0, 1],
            8593: [0.19444, 0.69444, 0, 0, 0.5],
            8594: [-0.13313, 0.36687, 0, 0, 1],
            8595: [0.19444, 0.69444, 0, 0, 0.5],
            8596: [-0.13313, 0.36687, 0, 0, 1],
            8597: [0.25, 0.75, 0, 0, 0.5],
            8598: [0.19444, 0.69444, 0, 0, 1],
            8599: [0.19444, 0.69444, 0, 0, 1],
            8600: [0.19444, 0.69444, 0, 0, 1],
            8601: [0.19444, 0.69444, 0, 0, 1],
            8614: [0.011, 0.511, 0, 0, 1],
            8617: [0.011, 0.511, 0, 0, 1.126],
            8618: [0.011, 0.511, 0, 0, 1.126],
            8636: [-0.13313, 0.36687, 0, 0, 1],
            8637: [-0.13313, 0.36687, 0, 0, 1],
            8640: [-0.13313, 0.36687, 0, 0, 1],
            8641: [-0.13313, 0.36687, 0, 0, 1],
            8652: [0.011, 0.671, 0, 0, 1],
            8656: [-0.13313, 0.36687, 0, 0, 1],
            8657: [0.19444, 0.69444, 0, 0, 0.61111],
            8658: [-0.13313, 0.36687, 0, 0, 1],
            8659: [0.19444, 0.69444, 0, 0, 0.61111],
            8660: [-0.13313, 0.36687, 0, 0, 1],
            8661: [0.25, 0.75, 0, 0, 0.61111],
            8704: [0, 0.69444, 0, 0, 0.55556],
            8706: [0, 0.69444, 0.05556, 0.08334, 0.5309],
            8707: [0, 0.69444, 0, 0, 0.55556],
            8709: [0.05556, 0.75, 0, 0, 0.5],
            8711: [0, 0.68333, 0, 0, 0.83334],
            8712: [0.0391, 0.5391, 0, 0, 0.66667],
            8715: [0.0391, 0.5391, 0, 0, 0.66667],
            8722: [0.08333, 0.58333, 0, 0, 0.77778],
            8723: [0.08333, 0.58333, 0, 0, 0.77778],
            8725: [0.25, 0.75, 0, 0, 0.5],
            8726: [0.25, 0.75, 0, 0, 0.5],
            8727: [-0.03472, 0.46528, 0, 0, 0.5],
            8728: [-0.05555, 0.44445, 0, 0, 0.5],
            8729: [-0.05555, 0.44445, 0, 0, 0.5],
            8730: [0.2, 0.8, 0, 0, 0.83334],
            8733: [0, 0.43056, 0, 0, 0.77778],
            8734: [0, 0.43056, 0, 0, 1],
            8736: [0, 0.69224, 0, 0, 0.72222],
            8739: [0.25, 0.75, 0, 0, 0.27778],
            8741: [0.25, 0.75, 0, 0, 0.5],
            8743: [0, 0.55556, 0, 0, 0.66667],
            8744: [0, 0.55556, 0, 0, 0.66667],
            8745: [0, 0.55556, 0, 0, 0.66667],
            8746: [0, 0.55556, 0, 0, 0.66667],
            8747: [0.19444, 0.69444, 0.11111, 0, 0.41667],
            8764: [-0.13313, 0.36687, 0, 0, 0.77778],
            8768: [0.19444, 0.69444, 0, 0, 0.27778],
            8771: [-0.03625, 0.46375, 0, 0, 0.77778],
            8773: [-0.022, 0.589, 0, 0, 0.778],
            8776: [-0.01688, 0.48312, 0, 0, 0.77778],
            8781: [-0.03625, 0.46375, 0, 0, 0.77778],
            8784: [-0.133, 0.673, 0, 0, 0.778],
            8801: [-0.03625, 0.46375, 0, 0, 0.77778],
            8804: [0.13597, 0.63597, 0, 0, 0.77778],
            8805: [0.13597, 0.63597, 0, 0, 0.77778],
            8810: [0.0391, 0.5391, 0, 0, 1],
            8811: [0.0391, 0.5391, 0, 0, 1],
            8826: [0.0391, 0.5391, 0, 0, 0.77778],
            8827: [0.0391, 0.5391, 0, 0, 0.77778],
            8834: [0.0391, 0.5391, 0, 0, 0.77778],
            8835: [0.0391, 0.5391, 0, 0, 0.77778],
            8838: [0.13597, 0.63597, 0, 0, 0.77778],
            8839: [0.13597, 0.63597, 0, 0, 0.77778],
            8846: [0, 0.55556, 0, 0, 0.66667],
            8849: [0.13597, 0.63597, 0, 0, 0.77778],
            8850: [0.13597, 0.63597, 0, 0, 0.77778],
            8851: [0, 0.55556, 0, 0, 0.66667],
            8852: [0, 0.55556, 0, 0, 0.66667],
            8853: [0.08333, 0.58333, 0, 0, 0.77778],
            8854: [0.08333, 0.58333, 0, 0, 0.77778],
            8855: [0.08333, 0.58333, 0, 0, 0.77778],
            8856: [0.08333, 0.58333, 0, 0, 0.77778],
            8857: [0.08333, 0.58333, 0, 0, 0.77778],
            8866: [0, 0.69444, 0, 0, 0.61111],
            8867: [0, 0.69444, 0, 0, 0.61111],
            8868: [0, 0.69444, 0, 0, 0.77778],
            8869: [0, 0.69444, 0, 0, 0.77778],
            8872: [0.249, 0.75, 0, 0, 0.867],
            8900: [-0.05555, 0.44445, 0, 0, 0.5],
            8901: [-0.05555, 0.44445, 0, 0, 0.27778],
            8902: [-0.03472, 0.46528, 0, 0, 0.5],
            8904: [0.005, 0.505, 0, 0, 0.9],
            8942: [0.03, 0.903, 0, 0, 0.278],
            8943: [-0.19, 0.313, 0, 0, 1.172],
            8945: [-0.1, 0.823, 0, 0, 1.282],
            8968: [0.25, 0.75, 0, 0, 0.44445],
            8969: [0.25, 0.75, 0, 0, 0.44445],
            8970: [0.25, 0.75, 0, 0, 0.44445],
            8971: [0.25, 0.75, 0, 0, 0.44445],
            8994: [-0.14236, 0.35764, 0, 0, 1],
            8995: [-0.14236, 0.35764, 0, 0, 1],
            9136: [0.244, 0.744, 0, 0, 0.412],
            9137: [0.244, 0.745, 0, 0, 0.412],
            9651: [0.19444, 0.69444, 0, 0, 0.88889],
            9657: [-0.03472, 0.46528, 0, 0, 0.5],
            9661: [0.19444, 0.69444, 0, 0, 0.88889],
            9667: [-0.03472, 0.46528, 0, 0, 0.5],
            9711: [0.19444, 0.69444, 0, 0, 1],
            9824: [0.12963, 0.69444, 0, 0, 0.77778],
            9825: [0.12963, 0.69444, 0, 0, 0.77778],
            9826: [0.12963, 0.69444, 0, 0, 0.77778],
            9827: [0.12963, 0.69444, 0, 0, 0.77778],
            9837: [0, 0.75, 0, 0, 0.38889],
            9838: [0.19444, 0.69444, 0, 0, 0.38889],
            9839: [0.19444, 0.69444, 0, 0, 0.38889],
            10216: [0.25, 0.75, 0, 0, 0.38889],
            10217: [0.25, 0.75, 0, 0, 0.38889],
            10222: [0.244, 0.744, 0, 0, 0.412],
            10223: [0.244, 0.745, 0, 0, 0.412],
            10229: [0.011, 0.511, 0, 0, 1.609],
            10230: [0.011, 0.511, 0, 0, 1.638],
            10231: [0.011, 0.511, 0, 0, 1.859],
            10232: [0.024, 0.525, 0, 0, 1.609],
            10233: [0.024, 0.525, 0, 0, 1.638],
            10234: [0.024, 0.525, 0, 0, 1.858],
            10236: [0.011, 0.511, 0, 0, 1.638],
            10815: [0, 0.68333, 0, 0, 0.75],
            10927: [0.13597, 0.63597, 0, 0, 0.77778],
            10928: [0.13597, 0.63597, 0, 0, 0.77778],
            57376: [0.19444, 0.69444, 0, 0, 0],
        },
        "Math-BoldItalic": {
            32: [0, 0, 0, 0, 0.25],
            48: [0, 0.44444, 0, 0, 0.575],
            49: [0, 0.44444, 0, 0, 0.575],
            50: [0, 0.44444, 0, 0, 0.575],
            51: [0.19444, 0.44444, 0, 0, 0.575],
            52: [0.19444, 0.44444, 0, 0, 0.575],
            53: [0.19444, 0.44444, 0, 0, 0.575],
            54: [0, 0.64444, 0, 0, 0.575],
            55: [0.19444, 0.44444, 0, 0, 0.575],
            56: [0, 0.64444, 0, 0, 0.575],
            57: [0.19444, 0.44444, 0, 0, 0.575],
            65: [0, 0.68611, 0, 0, 0.86944],
            66: [0, 0.68611, 0.04835, 0, 0.8664],
            67: [0, 0.68611, 0.06979, 0, 0.81694],
            68: [0, 0.68611, 0.03194, 0, 0.93812],
            69: [0, 0.68611, 0.05451, 0, 0.81007],
            70: [0, 0.68611, 0.15972, 0, 0.68889],
            71: [0, 0.68611, 0, 0, 0.88673],
            72: [0, 0.68611, 0.08229, 0, 0.98229],
            73: [0, 0.68611, 0.07778, 0, 0.51111],
            74: [0, 0.68611, 0.10069, 0, 0.63125],
            75: [0, 0.68611, 0.06979, 0, 0.97118],
            76: [0, 0.68611, 0, 0, 0.75555],
            77: [0, 0.68611, 0.11424, 0, 1.14201],
            78: [0, 0.68611, 0.11424, 0, 0.95034],
            79: [0, 0.68611, 0.03194, 0, 0.83666],
            80: [0, 0.68611, 0.15972, 0, 0.72309],
            81: [0.19444, 0.68611, 0, 0, 0.86861],
            82: [0, 0.68611, 0.00421, 0, 0.87235],
            83: [0, 0.68611, 0.05382, 0, 0.69271],
            84: [0, 0.68611, 0.15972, 0, 0.63663],
            85: [0, 0.68611, 0.11424, 0, 0.80027],
            86: [0, 0.68611, 0.25555, 0, 0.67778],
            87: [0, 0.68611, 0.15972, 0, 1.09305],
            88: [0, 0.68611, 0.07778, 0, 0.94722],
            89: [0, 0.68611, 0.25555, 0, 0.67458],
            90: [0, 0.68611, 0.06979, 0, 0.77257],
            97: [0, 0.44444, 0, 0, 0.63287],
            98: [0, 0.69444, 0, 0, 0.52083],
            99: [0, 0.44444, 0, 0, 0.51342],
            100: [0, 0.69444, 0, 0, 0.60972],
            101: [0, 0.44444, 0, 0, 0.55361],
            102: [0.19444, 0.69444, 0.11042, 0, 0.56806],
            103: [0.19444, 0.44444, 0.03704, 0, 0.5449],
            104: [0, 0.69444, 0, 0, 0.66759],
            105: [0, 0.69326, 0, 0, 0.4048],
            106: [0.19444, 0.69326, 0.0622, 0, 0.47083],
            107: [0, 0.69444, 0.01852, 0, 0.6037],
            108: [0, 0.69444, 0.0088, 0, 0.34815],
            109: [0, 0.44444, 0, 0, 1.0324],
            110: [0, 0.44444, 0, 0, 0.71296],
            111: [0, 0.44444, 0, 0, 0.58472],
            112: [0.19444, 0.44444, 0, 0, 0.60092],
            113: [0.19444, 0.44444, 0.03704, 0, 0.54213],
            114: [0, 0.44444, 0.03194, 0, 0.5287],
            115: [0, 0.44444, 0, 0, 0.53125],
            116: [0, 0.63492, 0, 0, 0.41528],
            117: [0, 0.44444, 0, 0, 0.68102],
            118: [0, 0.44444, 0.03704, 0, 0.56666],
            119: [0, 0.44444, 0.02778, 0, 0.83148],
            120: [0, 0.44444, 0, 0, 0.65903],
            121: [0.19444, 0.44444, 0.03704, 0, 0.59028],
            122: [0, 0.44444, 0.04213, 0, 0.55509],
            160: [0, 0, 0, 0, 0.25],
            915: [0, 0.68611, 0.15972, 0, 0.65694],
            916: [0, 0.68611, 0, 0, 0.95833],
            920: [0, 0.68611, 0.03194, 0, 0.86722],
            923: [0, 0.68611, 0, 0, 0.80555],
            926: [0, 0.68611, 0.07458, 0, 0.84125],
            928: [0, 0.68611, 0.08229, 0, 0.98229],
            931: [0, 0.68611, 0.05451, 0, 0.88507],
            933: [0, 0.68611, 0.15972, 0, 0.67083],
            934: [0, 0.68611, 0, 0, 0.76666],
            936: [0, 0.68611, 0.11653, 0, 0.71402],
            937: [0, 0.68611, 0.04835, 0, 0.8789],
            945: [0, 0.44444, 0, 0, 0.76064],
            946: [0.19444, 0.69444, 0.03403, 0, 0.65972],
            947: [0.19444, 0.44444, 0.06389, 0, 0.59003],
            948: [0, 0.69444, 0.03819, 0, 0.52222],
            949: [0, 0.44444, 0, 0, 0.52882],
            950: [0.19444, 0.69444, 0.06215, 0, 0.50833],
            951: [0.19444, 0.44444, 0.03704, 0, 0.6],
            952: [0, 0.69444, 0.03194, 0, 0.5618],
            953: [0, 0.44444, 0, 0, 0.41204],
            954: [0, 0.44444, 0, 0, 0.66759],
            955: [0, 0.69444, 0, 0, 0.67083],
            956: [0.19444, 0.44444, 0, 0, 0.70787],
            957: [0, 0.44444, 0.06898, 0, 0.57685],
            958: [0.19444, 0.69444, 0.03021, 0, 0.50833],
            959: [0, 0.44444, 0, 0, 0.58472],
            960: [0, 0.44444, 0.03704, 0, 0.68241],
            961: [0.19444, 0.44444, 0, 0, 0.6118],
            962: [0.09722, 0.44444, 0.07917, 0, 0.42361],
            963: [0, 0.44444, 0.03704, 0, 0.68588],
            964: [0, 0.44444, 0.13472, 0, 0.52083],
            965: [0, 0.44444, 0.03704, 0, 0.63055],
            966: [0.19444, 0.44444, 0, 0, 0.74722],
            967: [0.19444, 0.44444, 0, 0, 0.71805],
            968: [0.19444, 0.69444, 0.03704, 0, 0.75833],
            969: [0, 0.44444, 0.03704, 0, 0.71782],
            977: [0, 0.69444, 0, 0, 0.69155],
            981: [0.19444, 0.69444, 0, 0, 0.7125],
            982: [0, 0.44444, 0.03194, 0, 0.975],
            1009: [0.19444, 0.44444, 0, 0, 0.6118],
            1013: [0, 0.44444, 0, 0, 0.48333],
            57649: [0, 0.44444, 0, 0, 0.39352],
            57911: [0.19444, 0.44444, 0, 0, 0.43889],
        },
        "Math-Italic": {
            32: [0, 0, 0, 0, 0.25],
            48: [0, 0.43056, 0, 0, 0.5],
            49: [0, 0.43056, 0, 0, 0.5],
            50: [0, 0.43056, 0, 0, 0.5],
            51: [0.19444, 0.43056, 0, 0, 0.5],
            52: [0.19444, 0.43056, 0, 0, 0.5],
            53: [0.19444, 0.43056, 0, 0, 0.5],
            54: [0, 0.64444, 0, 0, 0.5],
            55: [0.19444, 0.43056, 0, 0, 0.5],
            56: [0, 0.64444, 0, 0, 0.5],
            57: [0.19444, 0.43056, 0, 0, 0.5],
            65: [0, 0.68333, 0, 0.13889, 0.75],
            66: [0, 0.68333, 0.05017, 0.08334, 0.75851],
            67: [0, 0.68333, 0.07153, 0.08334, 0.71472],
            68: [0, 0.68333, 0.02778, 0.05556, 0.82792],
            69: [0, 0.68333, 0.05764, 0.08334, 0.7382],
            70: [0, 0.68333, 0.13889, 0.08334, 0.64306],
            71: [0, 0.68333, 0, 0.08334, 0.78625],
            72: [0, 0.68333, 0.08125, 0.05556, 0.83125],
            73: [0, 0.68333, 0.07847, 0.11111, 0.43958],
            74: [0, 0.68333, 0.09618, 0.16667, 0.55451],
            75: [0, 0.68333, 0.07153, 0.05556, 0.84931],
            76: [0, 0.68333, 0, 0.02778, 0.68056],
            77: [0, 0.68333, 0.10903, 0.08334, 0.97014],
            78: [0, 0.68333, 0.10903, 0.08334, 0.80347],
            79: [0, 0.68333, 0.02778, 0.08334, 0.76278],
            80: [0, 0.68333, 0.13889, 0.08334, 0.64201],
            81: [0.19444, 0.68333, 0, 0.08334, 0.79056],
            82: [0, 0.68333, 0.00773, 0.08334, 0.75929],
            83: [0, 0.68333, 0.05764, 0.08334, 0.6132],
            84: [0, 0.68333, 0.13889, 0.08334, 0.58438],
            85: [0, 0.68333, 0.10903, 0.02778, 0.68278],
            86: [0, 0.68333, 0.22222, 0, 0.58333],
            87: [0, 0.68333, 0.13889, 0, 0.94445],
            88: [0, 0.68333, 0.07847, 0.08334, 0.82847],
            89: [0, 0.68333, 0.22222, 0, 0.58056],
            90: [0, 0.68333, 0.07153, 0.08334, 0.68264],
            97: [0, 0.43056, 0, 0, 0.52859],
            98: [0, 0.69444, 0, 0, 0.42917],
            99: [0, 0.43056, 0, 0.05556, 0.43276],
            100: [0, 0.69444, 0, 0.16667, 0.52049],
            101: [0, 0.43056, 0, 0.05556, 0.46563],
            102: [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],
            103: [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],
            104: [0, 0.69444, 0, 0, 0.57616],
            105: [0, 0.65952, 0, 0, 0.34451],
            106: [0.19444, 0.65952, 0.05724, 0, 0.41181],
            107: [0, 0.69444, 0.03148, 0, 0.5206],
            108: [0, 0.69444, 0.01968, 0.08334, 0.29838],
            109: [0, 0.43056, 0, 0, 0.87801],
            110: [0, 0.43056, 0, 0, 0.60023],
            111: [0, 0.43056, 0, 0.05556, 0.48472],
            112: [0.19444, 0.43056, 0, 0.08334, 0.50313],
            113: [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],
            114: [0, 0.43056, 0.02778, 0.05556, 0.45116],
            115: [0, 0.43056, 0, 0.05556, 0.46875],
            116: [0, 0.61508, 0, 0.08334, 0.36111],
            117: [0, 0.43056, 0, 0.02778, 0.57246],
            118: [0, 0.43056, 0.03588, 0.02778, 0.48472],
            119: [0, 0.43056, 0.02691, 0.08334, 0.71592],
            120: [0, 0.43056, 0, 0.02778, 0.57153],
            121: [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],
            122: [0, 0.43056, 0.04398, 0.05556, 0.46505],
            160: [0, 0, 0, 0, 0.25],
            915: [0, 0.68333, 0.13889, 0.08334, 0.61528],
            916: [0, 0.68333, 0, 0.16667, 0.83334],
            920: [0, 0.68333, 0.02778, 0.08334, 0.76278],
            923: [0, 0.68333, 0, 0.16667, 0.69445],
            926: [0, 0.68333, 0.07569, 0.08334, 0.74236],
            928: [0, 0.68333, 0.08125, 0.05556, 0.83125],
            931: [0, 0.68333, 0.05764, 0.08334, 0.77986],
            933: [0, 0.68333, 0.13889, 0.05556, 0.58333],
            934: [0, 0.68333, 0, 0.08334, 0.66667],
            936: [0, 0.68333, 0.11, 0.05556, 0.61222],
            937: [0, 0.68333, 0.05017, 0.08334, 0.7724],
            945: [0, 0.43056, 0.0037, 0.02778, 0.6397],
            946: [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],
            947: [0.19444, 0.43056, 0.05556, 0, 0.51773],
            948: [0, 0.69444, 0.03785, 0.05556, 0.44444],
            949: [0, 0.43056, 0, 0.08334, 0.46632],
            950: [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],
            951: [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],
            952: [0, 0.69444, 0.02778, 0.08334, 0.46944],
            953: [0, 0.43056, 0, 0.05556, 0.35394],
            954: [0, 0.43056, 0, 0, 0.57616],
            955: [0, 0.69444, 0, 0, 0.58334],
            956: [0.19444, 0.43056, 0, 0.02778, 0.60255],
            957: [0, 0.43056, 0.06366, 0.02778, 0.49398],
            958: [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],
            959: [0, 0.43056, 0, 0.05556, 0.48472],
            960: [0, 0.43056, 0.03588, 0, 0.57003],
            961: [0.19444, 0.43056, 0, 0.08334, 0.51702],
            962: [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],
            963: [0, 0.43056, 0.03588, 0, 0.57141],
            964: [0, 0.43056, 0.1132, 0.02778, 0.43715],
            965: [0, 0.43056, 0.03588, 0.02778, 0.54028],
            966: [0.19444, 0.43056, 0, 0.08334, 0.65417],
            967: [0.19444, 0.43056, 0, 0.05556, 0.62569],
            968: [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],
            969: [0, 0.43056, 0.03588, 0, 0.62245],
            977: [0, 0.69444, 0, 0.08334, 0.59144],
            981: [0.19444, 0.69444, 0, 0.08334, 0.59583],
            982: [0, 0.43056, 0.02778, 0, 0.82813],
            1009: [0.19444, 0.43056, 0, 0.08334, 0.51702],
            1013: [0, 0.43056, 0, 0.05556, 0.4059],
            57649: [0, 0.43056, 0, 0.02778, 0.32246],
            57911: [0.19444, 0.43056, 0, 0.08334, 0.38403],
        },
        "SansSerif-Bold": {
            32: [0, 0, 0, 0, 0.25],
            33: [0, 0.69444, 0, 0, 0.36667],
            34: [0, 0.69444, 0, 0, 0.55834],
            35: [0.19444, 0.69444, 0, 0, 0.91667],
            36: [0.05556, 0.75, 0, 0, 0.55],
            37: [0.05556, 0.75, 0, 0, 1.02912],
            38: [0, 0.69444, 0, 0, 0.83056],
            39: [0, 0.69444, 0, 0, 0.30556],
            40: [0.25, 0.75, 0, 0, 0.42778],
            41: [0.25, 0.75, 0, 0, 0.42778],
            42: [0, 0.75, 0, 0, 0.55],
            43: [0.11667, 0.61667, 0, 0, 0.85556],
            44: [0.10556, 0.13056, 0, 0, 0.30556],
            45: [0, 0.45833, 0, 0, 0.36667],
            46: [0, 0.13056, 0, 0, 0.30556],
            47: [0.25, 0.75, 0, 0, 0.55],
            48: [0, 0.69444, 0, 0, 0.55],
            49: [0, 0.69444, 0, 0, 0.55],
            50: [0, 0.69444, 0, 0, 0.55],
            51: [0, 0.69444, 0, 0, 0.55],
            52: [0, 0.69444, 0, 0, 0.55],
            53: [0, 0.69444, 0, 0, 0.55],
            54: [0, 0.69444, 0, 0, 0.55],
            55: [0, 0.69444, 0, 0, 0.55],
            56: [0, 0.69444, 0, 0, 0.55],
            57: [0, 0.69444, 0, 0, 0.55],
            58: [0, 0.45833, 0, 0, 0.30556],
            59: [0.10556, 0.45833, 0, 0, 0.30556],
            61: [-0.09375, 0.40625, 0, 0, 0.85556],
            63: [0, 0.69444, 0, 0, 0.51945],
            64: [0, 0.69444, 0, 0, 0.73334],
            65: [0, 0.69444, 0, 0, 0.73334],
            66: [0, 0.69444, 0, 0, 0.73334],
            67: [0, 0.69444, 0, 0, 0.70278],
            68: [0, 0.69444, 0, 0, 0.79445],
            69: [0, 0.69444, 0, 0, 0.64167],
            70: [0, 0.69444, 0, 0, 0.61111],
            71: [0, 0.69444, 0, 0, 0.73334],
            72: [0, 0.69444, 0, 0, 0.79445],
            73: [0, 0.69444, 0, 0, 0.33056],
            74: [0, 0.69444, 0, 0, 0.51945],
            75: [0, 0.69444, 0, 0, 0.76389],
            76: [0, 0.69444, 0, 0, 0.58056],
            77: [0, 0.69444, 0, 0, 0.97778],
            78: [0, 0.69444, 0, 0, 0.79445],
            79: [0, 0.69444, 0, 0, 0.79445],
            80: [0, 0.69444, 0, 0, 0.70278],
            81: [0.10556, 0.69444, 0, 0, 0.79445],
            82: [0, 0.69444, 0, 0, 0.70278],
            83: [0, 0.69444, 0, 0, 0.61111],
            84: [0, 0.69444, 0, 0, 0.73334],
            85: [0, 0.69444, 0, 0, 0.76389],
            86: [0, 0.69444, 0.01528, 0, 0.73334],
            87: [0, 0.69444, 0.01528, 0, 1.03889],
            88: [0, 0.69444, 0, 0, 0.73334],
            89: [0, 0.69444, 0.0275, 0, 0.73334],
            90: [0, 0.69444, 0, 0, 0.67223],
            91: [0.25, 0.75, 0, 0, 0.34306],
            93: [0.25, 0.75, 0, 0, 0.34306],
            94: [0, 0.69444, 0, 0, 0.55],
            95: [0.35, 0.10833, 0.03056, 0, 0.55],
            97: [0, 0.45833, 0, 0, 0.525],
            98: [0, 0.69444, 0, 0, 0.56111],
            99: [0, 0.45833, 0, 0, 0.48889],
            100: [0, 0.69444, 0, 0, 0.56111],
            101: [0, 0.45833, 0, 0, 0.51111],
            102: [0, 0.69444, 0.07639, 0, 0.33611],
            103: [0.19444, 0.45833, 0.01528, 0, 0.55],
            104: [0, 0.69444, 0, 0, 0.56111],
            105: [0, 0.69444, 0, 0, 0.25556],
            106: [0.19444, 0.69444, 0, 0, 0.28611],
            107: [0, 0.69444, 0, 0, 0.53056],
            108: [0, 0.69444, 0, 0, 0.25556],
            109: [0, 0.45833, 0, 0, 0.86667],
            110: [0, 0.45833, 0, 0, 0.56111],
            111: [0, 0.45833, 0, 0, 0.55],
            112: [0.19444, 0.45833, 0, 0, 0.56111],
            113: [0.19444, 0.45833, 0, 0, 0.56111],
            114: [0, 0.45833, 0.01528, 0, 0.37222],
            115: [0, 0.45833, 0, 0, 0.42167],
            116: [0, 0.58929, 0, 0, 0.40417],
            117: [0, 0.45833, 0, 0, 0.56111],
            118: [0, 0.45833, 0.01528, 0, 0.5],
            119: [0, 0.45833, 0.01528, 0, 0.74445],
            120: [0, 0.45833, 0, 0, 0.5],
            121: [0.19444, 0.45833, 0.01528, 0, 0.5],
            122: [0, 0.45833, 0, 0, 0.47639],
            126: [0.35, 0.34444, 0, 0, 0.55],
            160: [0, 0, 0, 0, 0.25],
            168: [0, 0.69444, 0, 0, 0.55],
            176: [0, 0.69444, 0, 0, 0.73334],
            180: [0, 0.69444, 0, 0, 0.55],
            184: [0.17014, 0, 0, 0, 0.48889],
            305: [0, 0.45833, 0, 0, 0.25556],
            567: [0.19444, 0.45833, 0, 0, 0.28611],
            710: [0, 0.69444, 0, 0, 0.55],
            711: [0, 0.63542, 0, 0, 0.55],
            713: [0, 0.63778, 0, 0, 0.55],
            728: [0, 0.69444, 0, 0, 0.55],
            729: [0, 0.69444, 0, 0, 0.30556],
            730: [0, 0.69444, 0, 0, 0.73334],
            732: [0, 0.69444, 0, 0, 0.55],
            733: [0, 0.69444, 0, 0, 0.55],
            915: [0, 0.69444, 0, 0, 0.58056],
            916: [0, 0.69444, 0, 0, 0.91667],
            920: [0, 0.69444, 0, 0, 0.85556],
            923: [0, 0.69444, 0, 0, 0.67223],
            926: [0, 0.69444, 0, 0, 0.73334],
            928: [0, 0.69444, 0, 0, 0.79445],
            931: [0, 0.69444, 0, 0, 0.79445],
            933: [0, 0.69444, 0, 0, 0.85556],
            934: [0, 0.69444, 0, 0, 0.79445],
            936: [0, 0.69444, 0, 0, 0.85556],
            937: [0, 0.69444, 0, 0, 0.79445],
            8211: [0, 0.45833, 0.03056, 0, 0.55],
            8212: [0, 0.45833, 0.03056, 0, 1.10001],
            8216: [0, 0.69444, 0, 0, 0.30556],
            8217: [0, 0.69444, 0, 0, 0.30556],
            8220: [0, 0.69444, 0, 0, 0.55834],
            8221: [0, 0.69444, 0, 0, 0.55834],
        },
        "SansSerif-Italic": {
            32: [0, 0, 0, 0, 0.25],
            33: [0, 0.69444, 0.05733, 0, 0.31945],
            34: [0, 0.69444, 0.00316, 0, 0.5],
            35: [0.19444, 0.69444, 0.05087, 0, 0.83334],
            36: [0.05556, 0.75, 0.11156, 0, 0.5],
            37: [0.05556, 0.75, 0.03126, 0, 0.83334],
            38: [0, 0.69444, 0.03058, 0, 0.75834],
            39: [0, 0.69444, 0.07816, 0, 0.27778],
            40: [0.25, 0.75, 0.13164, 0, 0.38889],
            41: [0.25, 0.75, 0.02536, 0, 0.38889],
            42: [0, 0.75, 0.11775, 0, 0.5],
            43: [0.08333, 0.58333, 0.02536, 0, 0.77778],
            44: [0.125, 0.08333, 0, 0, 0.27778],
            45: [0, 0.44444, 0.01946, 0, 0.33333],
            46: [0, 0.08333, 0, 0, 0.27778],
            47: [0.25, 0.75, 0.13164, 0, 0.5],
            48: [0, 0.65556, 0.11156, 0, 0.5],
            49: [0, 0.65556, 0.11156, 0, 0.5],
            50: [0, 0.65556, 0.11156, 0, 0.5],
            51: [0, 0.65556, 0.11156, 0, 0.5],
            52: [0, 0.65556, 0.11156, 0, 0.5],
            53: [0, 0.65556, 0.11156, 0, 0.5],
            54: [0, 0.65556, 0.11156, 0, 0.5],
            55: [0, 0.65556, 0.11156, 0, 0.5],
            56: [0, 0.65556, 0.11156, 0, 0.5],
            57: [0, 0.65556, 0.11156, 0, 0.5],
            58: [0, 0.44444, 0.02502, 0, 0.27778],
            59: [0.125, 0.44444, 0.02502, 0, 0.27778],
            61: [-0.13, 0.37, 0.05087, 0, 0.77778],
            63: [0, 0.69444, 0.11809, 0, 0.47222],
            64: [0, 0.69444, 0.07555, 0, 0.66667],
            65: [0, 0.69444, 0, 0, 0.66667],
            66: [0, 0.69444, 0.08293, 0, 0.66667],
            67: [0, 0.69444, 0.11983, 0, 0.63889],
            68: [0, 0.69444, 0.07555, 0, 0.72223],
            69: [0, 0.69444, 0.11983, 0, 0.59722],
            70: [0, 0.69444, 0.13372, 0, 0.56945],
            71: [0, 0.69444, 0.11983, 0, 0.66667],
            72: [0, 0.69444, 0.08094, 0, 0.70834],
            73: [0, 0.69444, 0.13372, 0, 0.27778],
            74: [0, 0.69444, 0.08094, 0, 0.47222],
            75: [0, 0.69444, 0.11983, 0, 0.69445],
            76: [0, 0.69444, 0, 0, 0.54167],
            77: [0, 0.69444, 0.08094, 0, 0.875],
            78: [0, 0.69444, 0.08094, 0, 0.70834],
            79: [0, 0.69444, 0.07555, 0, 0.73611],
            80: [0, 0.69444, 0.08293, 0, 0.63889],
            81: [0.125, 0.69444, 0.07555, 0, 0.73611],
            82: [0, 0.69444, 0.08293, 0, 0.64584],
            83: [0, 0.69444, 0.09205, 0, 0.55556],
            84: [0, 0.69444, 0.13372, 0, 0.68056],
            85: [0, 0.69444, 0.08094, 0, 0.6875],
            86: [0, 0.69444, 0.1615, 0, 0.66667],
            87: [0, 0.69444, 0.1615, 0, 0.94445],
            88: [0, 0.69444, 0.13372, 0, 0.66667],
            89: [0, 0.69444, 0.17261, 0, 0.66667],
            90: [0, 0.69444, 0.11983, 0, 0.61111],
            91: [0.25, 0.75, 0.15942, 0, 0.28889],
            93: [0.25, 0.75, 0.08719, 0, 0.28889],
            94: [0, 0.69444, 0.0799, 0, 0.5],
            95: [0.35, 0.09444, 0.08616, 0, 0.5],
            97: [0, 0.44444, 0.00981, 0, 0.48056],
            98: [0, 0.69444, 0.03057, 0, 0.51667],
            99: [0, 0.44444, 0.08336, 0, 0.44445],
            100: [0, 0.69444, 0.09483, 0, 0.51667],
            101: [0, 0.44444, 0.06778, 0, 0.44445],
            102: [0, 0.69444, 0.21705, 0, 0.30556],
            103: [0.19444, 0.44444, 0.10836, 0, 0.5],
            104: [0, 0.69444, 0.01778, 0, 0.51667],
            105: [0, 0.67937, 0.09718, 0, 0.23889],
            106: [0.19444, 0.67937, 0.09162, 0, 0.26667],
            107: [0, 0.69444, 0.08336, 0, 0.48889],
            108: [0, 0.69444, 0.09483, 0, 0.23889],
            109: [0, 0.44444, 0.01778, 0, 0.79445],
            110: [0, 0.44444, 0.01778, 0, 0.51667],
            111: [0, 0.44444, 0.06613, 0, 0.5],
            112: [0.19444, 0.44444, 0.0389, 0, 0.51667],
            113: [0.19444, 0.44444, 0.04169, 0, 0.51667],
            114: [0, 0.44444, 0.10836, 0, 0.34167],
            115: [0, 0.44444, 0.0778, 0, 0.38333],
            116: [0, 0.57143, 0.07225, 0, 0.36111],
            117: [0, 0.44444, 0.04169, 0, 0.51667],
            118: [0, 0.44444, 0.10836, 0, 0.46111],
            119: [0, 0.44444, 0.10836, 0, 0.68334],
            120: [0, 0.44444, 0.09169, 0, 0.46111],
            121: [0.19444, 0.44444, 0.10836, 0, 0.46111],
            122: [0, 0.44444, 0.08752, 0, 0.43472],
            126: [0.35, 0.32659, 0.08826, 0, 0.5],
            160: [0, 0, 0, 0, 0.25],
            168: [0, 0.67937, 0.06385, 0, 0.5],
            176: [0, 0.69444, 0, 0, 0.73752],
            184: [0.17014, 0, 0, 0, 0.44445],
            305: [0, 0.44444, 0.04169, 0, 0.23889],
            567: [0.19444, 0.44444, 0.04169, 0, 0.26667],
            710: [0, 0.69444, 0.0799, 0, 0.5],
            711: [0, 0.63194, 0.08432, 0, 0.5],
            713: [0, 0.60889, 0.08776, 0, 0.5],
            714: [0, 0.69444, 0.09205, 0, 0.5],
            715: [0, 0.69444, 0, 0, 0.5],
            728: [0, 0.69444, 0.09483, 0, 0.5],
            729: [0, 0.67937, 0.07774, 0, 0.27778],
            730: [0, 0.69444, 0, 0, 0.73752],
            732: [0, 0.67659, 0.08826, 0, 0.5],
            733: [0, 0.69444, 0.09205, 0, 0.5],
            915: [0, 0.69444, 0.13372, 0, 0.54167],
            916: [0, 0.69444, 0, 0, 0.83334],
            920: [0, 0.69444, 0.07555, 0, 0.77778],
            923: [0, 0.69444, 0, 0, 0.61111],
            926: [0, 0.69444, 0.12816, 0, 0.66667],
            928: [0, 0.69444, 0.08094, 0, 0.70834],
            931: [0, 0.69444, 0.11983, 0, 0.72222],
            933: [0, 0.69444, 0.09031, 0, 0.77778],
            934: [0, 0.69444, 0.04603, 0, 0.72222],
            936: [0, 0.69444, 0.09031, 0, 0.77778],
            937: [0, 0.69444, 0.08293, 0, 0.72222],
            8211: [0, 0.44444, 0.08616, 0, 0.5],
            8212: [0, 0.44444, 0.08616, 0, 1],
            8216: [0, 0.69444, 0.07816, 0, 0.27778],
            8217: [0, 0.69444, 0.07816, 0, 0.27778],
            8220: [0, 0.69444, 0.14205, 0, 0.5],
            8221: [0, 0.69444, 0.00316, 0, 0.5],
        },
        "SansSerif-Regular": {
            32: [0, 0, 0, 0, 0.25],
            33: [0, 0.69444, 0, 0, 0.31945],
            34: [0, 0.69444, 0, 0, 0.5],
            35: [0.19444, 0.69444, 0, 0, 0.83334],
            36: [0.05556, 0.75, 0, 0, 0.5],
            37: [0.05556, 0.75, 0, 0, 0.83334],
            38: [0, 0.69444, 0, 0, 0.75834],
            39: [0, 0.69444, 0, 0, 0.27778],
            40: [0.25, 0.75, 0, 0, 0.38889],
            41: [0.25, 0.75, 0, 0, 0.38889],
            42: [0, 0.75, 0, 0, 0.5],
            43: [0.08333, 0.58333, 0, 0, 0.77778],
            44: [0.125, 0.08333, 0, 0, 0.27778],
            45: [0, 0.44444, 0, 0, 0.33333],
            46: [0, 0.08333, 0, 0, 0.27778],
            47: [0.25, 0.75, 0, 0, 0.5],
            48: [0, 0.65556, 0, 0, 0.5],
            49: [0, 0.65556, 0, 0, 0.5],
            50: [0, 0.65556, 0, 0, 0.5],
            51: [0, 0.65556, 0, 0, 0.5],
            52: [0, 0.65556, 0, 0, 0.5],
            53: [0, 0.65556, 0, 0, 0.5],
            54: [0, 0.65556, 0, 0, 0.5],
            55: [0, 0.65556, 0, 0, 0.5],
            56: [0, 0.65556, 0, 0, 0.5],
            57: [0, 0.65556, 0, 0, 0.5],
            58: [0, 0.44444, 0, 0, 0.27778],
            59: [0.125, 0.44444, 0, 0, 0.27778],
            61: [-0.13, 0.37, 0, 0, 0.77778],
            63: [0, 0.69444, 0, 0, 0.47222],
            64: [0, 0.69444, 0, 0, 0.66667],
            65: [0, 0.69444, 0, 0, 0.66667],
            66: [0, 0.69444, 0, 0, 0.66667],
            67: [0, 0.69444, 0, 0, 0.63889],
            68: [0, 0.69444, 0, 0, 0.72223],
            69: [0, 0.69444, 0, 0, 0.59722],
            70: [0, 0.69444, 0, 0, 0.56945],
            71: [0, 0.69444, 0, 0, 0.66667],
            72: [0, 0.69444, 0, 0, 0.70834],
            73: [0, 0.69444, 0, 0, 0.27778],
            74: [0, 0.69444, 0, 0, 0.47222],
            75: [0, 0.69444, 0, 0, 0.69445],
            76: [0, 0.69444, 0, 0, 0.54167],
            77: [0, 0.69444, 0, 0, 0.875],
            78: [0, 0.69444, 0, 0, 0.70834],
            79: [0, 0.69444, 0, 0, 0.73611],
            80: [0, 0.69444, 0, 0, 0.63889],
            81: [0.125, 0.69444, 0, 0, 0.73611],
            82: [0, 0.69444, 0, 0, 0.64584],
            83: [0, 0.69444, 0, 0, 0.55556],
            84: [0, 0.69444, 0, 0, 0.68056],
            85: [0, 0.69444, 0, 0, 0.6875],
            86: [0, 0.69444, 0.01389, 0, 0.66667],
            87: [0, 0.69444, 0.01389, 0, 0.94445],
            88: [0, 0.69444, 0, 0, 0.66667],
            89: [0, 0.69444, 0.025, 0, 0.66667],
            90: [0, 0.69444, 0, 0, 0.61111],
            91: [0.25, 0.75, 0, 0, 0.28889],
            93: [0.25, 0.75, 0, 0, 0.28889],
            94: [0, 0.69444, 0, 0, 0.5],
            95: [0.35, 0.09444, 0.02778, 0, 0.5],
            97: [0, 0.44444, 0, 0, 0.48056],
            98: [0, 0.69444, 0, 0, 0.51667],
            99: [0, 0.44444, 0, 0, 0.44445],
            100: [0, 0.69444, 0, 0, 0.51667],
            101: [0, 0.44444, 0, 0, 0.44445],
            102: [0, 0.69444, 0.06944, 0, 0.30556],
            103: [0.19444, 0.44444, 0.01389, 0, 0.5],
            104: [0, 0.69444, 0, 0, 0.51667],
            105: [0, 0.67937, 0, 0, 0.23889],
            106: [0.19444, 0.67937, 0, 0, 0.26667],
            107: [0, 0.69444, 0, 0, 0.48889],
            108: [0, 0.69444, 0, 0, 0.23889],
            109: [0, 0.44444, 0, 0, 0.79445],
            110: [0, 0.44444, 0, 0, 0.51667],
            111: [0, 0.44444, 0, 0, 0.5],
            112: [0.19444, 0.44444, 0, 0, 0.51667],
            113: [0.19444, 0.44444, 0, 0, 0.51667],
            114: [0, 0.44444, 0.01389, 0, 0.34167],
            115: [0, 0.44444, 0, 0, 0.38333],
            116: [0, 0.57143, 0, 0, 0.36111],
            117: [0, 0.44444, 0, 0, 0.51667],
            118: [0, 0.44444, 0.01389, 0, 0.46111],
            119: [0, 0.44444, 0.01389, 0, 0.68334],
            120: [0, 0.44444, 0, 0, 0.46111],
            121: [0.19444, 0.44444, 0.01389, 0, 0.46111],
            122: [0, 0.44444, 0, 0, 0.43472],
            126: [0.35, 0.32659, 0, 0, 0.5],
            160: [0, 0, 0, 0, 0.25],
            168: [0, 0.67937, 0, 0, 0.5],
            176: [0, 0.69444, 0, 0, 0.66667],
            184: [0.17014, 0, 0, 0, 0.44445],
            305: [0, 0.44444, 0, 0, 0.23889],
            567: [0.19444, 0.44444, 0, 0, 0.26667],
            710: [0, 0.69444, 0, 0, 0.5],
            711: [0, 0.63194, 0, 0, 0.5],
            713: [0, 0.60889, 0, 0, 0.5],
            714: [0, 0.69444, 0, 0, 0.5],
            715: [0, 0.69444, 0, 0, 0.5],
            728: [0, 0.69444, 0, 0, 0.5],
            729: [0, 0.67937, 0, 0, 0.27778],
            730: [0, 0.69444, 0, 0, 0.66667],
            732: [0, 0.67659, 0, 0, 0.5],
            733: [0, 0.69444, 0, 0, 0.5],
            915: [0, 0.69444, 0, 0, 0.54167],
            916: [0, 0.69444, 0, 0, 0.83334],
            920: [0, 0.69444, 0, 0, 0.77778],
            923: [0, 0.69444, 0, 0, 0.61111],
            926: [0, 0.69444, 0, 0, 0.66667],
            928: [0, 0.69444, 0, 0, 0.70834],
            931: [0, 0.69444, 0, 0, 0.72222],
            933: [0, 0.69444, 0, 0, 0.77778],
            934: [0, 0.69444, 0, 0, 0.72222],
            936: [0, 0.69444, 0, 0, 0.77778],
            937: [0, 0.69444, 0, 0, 0.72222],
            8211: [0, 0.44444, 0.02778, 0, 0.5],
            8212: [0, 0.44444, 0.02778, 0, 1],
            8216: [0, 0.69444, 0, 0, 0.27778],
            8217: [0, 0.69444, 0, 0, 0.27778],
            8220: [0, 0.69444, 0, 0, 0.5],
            8221: [0, 0.69444, 0, 0, 0.5],
        },
        "Script-Regular": {
            32: [0, 0, 0, 0, 0.25],
            65: [0, 0.7, 0.22925, 0, 0.80253],
            66: [0, 0.7, 0.04087, 0, 0.90757],
            67: [0, 0.7, 0.1689, 0, 0.66619],
            68: [0, 0.7, 0.09371, 0, 0.77443],
            69: [0, 0.7, 0.18583, 0, 0.56162],
            70: [0, 0.7, 0.13634, 0, 0.89544],
            71: [0, 0.7, 0.17322, 0, 0.60961],
            72: [0, 0.7, 0.29694, 0, 0.96919],
            73: [0, 0.7, 0.19189, 0, 0.80907],
            74: [0.27778, 0.7, 0.19189, 0, 1.05159],
            75: [0, 0.7, 0.31259, 0, 0.91364],
            76: [0, 0.7, 0.19189, 0, 0.87373],
            77: [0, 0.7, 0.15981, 0, 1.08031],
            78: [0, 0.7, 0.3525, 0, 0.9015],
            79: [0, 0.7, 0.08078, 0, 0.73787],
            80: [0, 0.7, 0.08078, 0, 1.01262],
            81: [0, 0.7, 0.03305, 0, 0.88282],
            82: [0, 0.7, 0.06259, 0, 0.85],
            83: [0, 0.7, 0.19189, 0, 0.86767],
            84: [0, 0.7, 0.29087, 0, 0.74697],
            85: [0, 0.7, 0.25815, 0, 0.79996],
            86: [0, 0.7, 0.27523, 0, 0.62204],
            87: [0, 0.7, 0.27523, 0, 0.80532],
            88: [0, 0.7, 0.26006, 0, 0.94445],
            89: [0, 0.7, 0.2939, 0, 0.70961],
            90: [0, 0.7, 0.24037, 0, 0.8212],
            160: [0, 0, 0, 0, 0.25],
        },
        "Size1-Regular": {
            32: [0, 0, 0, 0, 0.25],
            40: [0.35001, 0.85, 0, 0, 0.45834],
            41: [0.35001, 0.85, 0, 0, 0.45834],
            47: [0.35001, 0.85, 0, 0, 0.57778],
            91: [0.35001, 0.85, 0, 0, 0.41667],
            92: [0.35001, 0.85, 0, 0, 0.57778],
            93: [0.35001, 0.85, 0, 0, 0.41667],
            123: [0.35001, 0.85, 0, 0, 0.58334],
            125: [0.35001, 0.85, 0, 0, 0.58334],
            160: [0, 0, 0, 0, 0.25],
            710: [0, 0.72222, 0, 0, 0.55556],
            732: [0, 0.72222, 0, 0, 0.55556],
            770: [0, 0.72222, 0, 0, 0.55556],
            771: [0, 0.72222, 0, 0, 0.55556],
            8214: [-99e-5, 0.601, 0, 0, 0.77778],
            8593: [1e-5, 0.6, 0, 0, 0.66667],
            8595: [1e-5, 0.6, 0, 0, 0.66667],
            8657: [1e-5, 0.6, 0, 0, 0.77778],
            8659: [1e-5, 0.6, 0, 0, 0.77778],
            8719: [0.25001, 0.75, 0, 0, 0.94445],
            8720: [0.25001, 0.75, 0, 0, 0.94445],
            8721: [0.25001, 0.75, 0, 0, 1.05556],
            8730: [0.35001, 0.85, 0, 0, 1],
            8739: [-0.00599, 0.606, 0, 0, 0.33333],
            8741: [-0.00599, 0.606, 0, 0, 0.55556],
            8747: [0.30612, 0.805, 0.19445, 0, 0.47222],
            8748: [0.306, 0.805, 0.19445, 0, 0.47222],
            8749: [0.306, 0.805, 0.19445, 0, 0.47222],
            8750: [0.30612, 0.805, 0.19445, 0, 0.47222],
            8896: [0.25001, 0.75, 0, 0, 0.83334],
            8897: [0.25001, 0.75, 0, 0, 0.83334],
            8898: [0.25001, 0.75, 0, 0, 0.83334],
            8899: [0.25001, 0.75, 0, 0, 0.83334],
            8968: [0.35001, 0.85, 0, 0, 0.47222],
            8969: [0.35001, 0.85, 0, 0, 0.47222],
            8970: [0.35001, 0.85, 0, 0, 0.47222],
            8971: [0.35001, 0.85, 0, 0, 0.47222],
            9168: [-99e-5, 0.601, 0, 0, 0.66667],
            10216: [0.35001, 0.85, 0, 0, 0.47222],
            10217: [0.35001, 0.85, 0, 0, 0.47222],
            10752: [0.25001, 0.75, 0, 0, 1.11111],
            10753: [0.25001, 0.75, 0, 0, 1.11111],
            10754: [0.25001, 0.75, 0, 0, 1.11111],
            10756: [0.25001, 0.75, 0, 0, 0.83334],
            10758: [0.25001, 0.75, 0, 0, 0.83334],
        },
        "Size2-Regular": {
            32: [0, 0, 0, 0, 0.25],
            40: [0.65002, 1.15, 0, 0, 0.59722],
            41: [0.65002, 1.15, 0, 0, 0.59722],
            47: [0.65002, 1.15, 0, 0, 0.81111],
            91: [0.65002, 1.15, 0, 0, 0.47222],
            92: [0.65002, 1.15, 0, 0, 0.81111],
            93: [0.65002, 1.15, 0, 0, 0.47222],
            123: [0.65002, 1.15, 0, 0, 0.66667],
            125: [0.65002, 1.15, 0, 0, 0.66667],
            160: [0, 0, 0, 0, 0.25],
            710: [0, 0.75, 0, 0, 1],
            732: [0, 0.75, 0, 0, 1],
            770: [0, 0.75, 0, 0, 1],
            771: [0, 0.75, 0, 0, 1],
            8719: [0.55001, 1.05, 0, 0, 1.27778],
            8720: [0.55001, 1.05, 0, 0, 1.27778],
            8721: [0.55001, 1.05, 0, 0, 1.44445],
            8730: [0.65002, 1.15, 0, 0, 1],
            8747: [0.86225, 1.36, 0.44445, 0, 0.55556],
            8748: [0.862, 1.36, 0.44445, 0, 0.55556],
            8749: [0.862, 1.36, 0.44445, 0, 0.55556],
            8750: [0.86225, 1.36, 0.44445, 0, 0.55556],
            8896: [0.55001, 1.05, 0, 0, 1.11111],
            8897: [0.55001, 1.05, 0, 0, 1.11111],
            8898: [0.55001, 1.05, 0, 0, 1.11111],
            8899: [0.55001, 1.05, 0, 0, 1.11111],
            8968: [0.65002, 1.15, 0, 0, 0.52778],
            8969: [0.65002, 1.15, 0, 0, 0.52778],
            8970: [0.65002, 1.15, 0, 0, 0.52778],
            8971: [0.65002, 1.15, 0, 0, 0.52778],
            10216: [0.65002, 1.15, 0, 0, 0.61111],
            10217: [0.65002, 1.15, 0, 0, 0.61111],
            10752: [0.55001, 1.05, 0, 0, 1.51112],
            10753: [0.55001, 1.05, 0, 0, 1.51112],
            10754: [0.55001, 1.05, 0, 0, 1.51112],
            10756: [0.55001, 1.05, 0, 0, 1.11111],
            10758: [0.55001, 1.05, 0, 0, 1.11111],
        },
        "Size3-Regular": {
            32: [0, 0, 0, 0, 0.25],
            40: [0.95003, 1.45, 0, 0, 0.73611],
            41: [0.95003, 1.45, 0, 0, 0.73611],
            47: [0.95003, 1.45, 0, 0, 1.04445],
            91: [0.95003, 1.45, 0, 0, 0.52778],
            92: [0.95003, 1.45, 0, 0, 1.04445],
            93: [0.95003, 1.45, 0, 0, 0.52778],
            123: [0.95003, 1.45, 0, 0, 0.75],
            125: [0.95003, 1.45, 0, 0, 0.75],
            160: [0, 0, 0, 0, 0.25],
            710: [0, 0.75, 0, 0, 1.44445],
            732: [0, 0.75, 0, 0, 1.44445],
            770: [0, 0.75, 0, 0, 1.44445],
            771: [0, 0.75, 0, 0, 1.44445],
            8730: [0.95003, 1.45, 0, 0, 1],
            8968: [0.95003, 1.45, 0, 0, 0.58334],
            8969: [0.95003, 1.45, 0, 0, 0.58334],
            8970: [0.95003, 1.45, 0, 0, 0.58334],
            8971: [0.95003, 1.45, 0, 0, 0.58334],
            10216: [0.95003, 1.45, 0, 0, 0.75],
            10217: [0.95003, 1.45, 0, 0, 0.75],
        },
        "Size4-Regular": {
            32: [0, 0, 0, 0, 0.25],
            40: [1.25003, 1.75, 0, 0, 0.79167],
            41: [1.25003, 1.75, 0, 0, 0.79167],
            47: [1.25003, 1.75, 0, 0, 1.27778],
            91: [1.25003, 1.75, 0, 0, 0.58334],
            92: [1.25003, 1.75, 0, 0, 1.27778],
            93: [1.25003, 1.75, 0, 0, 0.58334],
            123: [1.25003, 1.75, 0, 0, 0.80556],
            125: [1.25003, 1.75, 0, 0, 0.80556],
            160: [0, 0, 0, 0, 0.25],
            710: [0, 0.825, 0, 0, 1.8889],
            732: [0, 0.825, 0, 0, 1.8889],
            770: [0, 0.825, 0, 0, 1.8889],
            771: [0, 0.825, 0, 0, 1.8889],
            8730: [1.25003, 1.75, 0, 0, 1],
            8968: [1.25003, 1.75, 0, 0, 0.63889],
            8969: [1.25003, 1.75, 0, 0, 0.63889],
            8970: [1.25003, 1.75, 0, 0, 0.63889],
            8971: [1.25003, 1.75, 0, 0, 0.63889],
            9115: [0.64502, 1.155, 0, 0, 0.875],
            9116: [1e-5, 0.6, 0, 0, 0.875],
            9117: [0.64502, 1.155, 0, 0, 0.875],
            9118: [0.64502, 1.155, 0, 0, 0.875],
            9119: [1e-5, 0.6, 0, 0, 0.875],
            9120: [0.64502, 1.155, 0, 0, 0.875],
            9121: [0.64502, 1.155, 0, 0, 0.66667],
            9122: [-99e-5, 0.601, 0, 0, 0.66667],
            9123: [0.64502, 1.155, 0, 0, 0.66667],
            9124: [0.64502, 1.155, 0, 0, 0.66667],
            9125: [-99e-5, 0.601, 0, 0, 0.66667],
            9126: [0.64502, 1.155, 0, 0, 0.66667],
            9127: [1e-5, 0.9, 0, 0, 0.88889],
            9128: [0.65002, 1.15, 0, 0, 0.88889],
            9129: [0.90001, 0, 0, 0, 0.88889],
            9130: [0, 0.3, 0, 0, 0.88889],
            9131: [1e-5, 0.9, 0, 0, 0.88889],
            9132: [0.65002, 1.15, 0, 0, 0.88889],
            9133: [0.90001, 0, 0, 0, 0.88889],
            9143: [0.88502, 0.915, 0, 0, 1.05556],
            10216: [1.25003, 1.75, 0, 0, 0.80556],
            10217: [1.25003, 1.75, 0, 0, 0.80556],
            57344: [-0.00499, 0.605, 0, 0, 1.05556],
            57345: [-0.00499, 0.605, 0, 0, 1.05556],
            57680: [0, 0.12, 0, 0, 0.45],
            57681: [0, 0.12, 0, 0, 0.45],
            57682: [0, 0.12, 0, 0, 0.45],
            57683: [0, 0.12, 0, 0, 0.45],
        },
        "Typewriter-Regular": {
            32: [0, 0, 0, 0, 0.525],
            33: [0, 0.61111, 0, 0, 0.525],
            34: [0, 0.61111, 0, 0, 0.525],
            35: [0, 0.61111, 0, 0, 0.525],
            36: [0.08333, 0.69444, 0, 0, 0.525],
            37: [0.08333, 0.69444, 0, 0, 0.525],
            38: [0, 0.61111, 0, 0, 0.525],
            39: [0, 0.61111, 0, 0, 0.525],
            40: [0.08333, 0.69444, 0, 0, 0.525],
            41: [0.08333, 0.69444, 0, 0, 0.525],
            42: [0, 0.52083, 0, 0, 0.525],
            43: [-0.08056, 0.53055, 0, 0, 0.525],
            44: [0.13889, 0.125, 0, 0, 0.525],
            45: [-0.08056, 0.53055, 0, 0, 0.525],
            46: [0, 0.125, 0, 0, 0.525],
            47: [0.08333, 0.69444, 0, 0, 0.525],
            48: [0, 0.61111, 0, 0, 0.525],
            49: [0, 0.61111, 0, 0, 0.525],
            50: [0, 0.61111, 0, 0, 0.525],
            51: [0, 0.61111, 0, 0, 0.525],
            52: [0, 0.61111, 0, 0, 0.525],
            53: [0, 0.61111, 0, 0, 0.525],
            54: [0, 0.61111, 0, 0, 0.525],
            55: [0, 0.61111, 0, 0, 0.525],
            56: [0, 0.61111, 0, 0, 0.525],
            57: [0, 0.61111, 0, 0, 0.525],
            58: [0, 0.43056, 0, 0, 0.525],
            59: [0.13889, 0.43056, 0, 0, 0.525],
            60: [-0.05556, 0.55556, 0, 0, 0.525],
            61: [-0.19549, 0.41562, 0, 0, 0.525],
            62: [-0.05556, 0.55556, 0, 0, 0.525],
            63: [0, 0.61111, 0, 0, 0.525],
            64: [0, 0.61111, 0, 0, 0.525],
            65: [0, 0.61111, 0, 0, 0.525],
            66: [0, 0.61111, 0, 0, 0.525],
            67: [0, 0.61111, 0, 0, 0.525],
            68: [0, 0.61111, 0, 0, 0.525],
            69: [0, 0.61111, 0, 0, 0.525],
            70: [0, 0.61111, 0, 0, 0.525],
            71: [0, 0.61111, 0, 0, 0.525],
            72: [0, 0.61111, 0, 0, 0.525],
            73: [0, 0.61111, 0, 0, 0.525],
            74: [0, 0.61111, 0, 0, 0.525],
            75: [0, 0.61111, 0, 0, 0.525],
            76: [0, 0.61111, 0, 0, 0.525],
            77: [0, 0.61111, 0, 0, 0.525],
            78: [0, 0.61111, 0, 0, 0.525],
            79: [0, 0.61111, 0, 0, 0.525],
            80: [0, 0.61111, 0, 0, 0.525],
            81: [0.13889, 0.61111, 0, 0, 0.525],
            82: [0, 0.61111, 0, 0, 0.525],
            83: [0, 0.61111, 0, 0, 0.525],
            84: [0, 0.61111, 0, 0, 0.525],
            85: [0, 0.61111, 0, 0, 0.525],
            86: [0, 0.61111, 0, 0, 0.525],
            87: [0, 0.61111, 0, 0, 0.525],
            88: [0, 0.61111, 0, 0, 0.525],
            89: [0, 0.61111, 0, 0, 0.525],
            90: [0, 0.61111, 0, 0, 0.525],
            91: [0.08333, 0.69444, 0, 0, 0.525],
            92: [0.08333, 0.69444, 0, 0, 0.525],
            93: [0.08333, 0.69444, 0, 0, 0.525],
            94: [0, 0.61111, 0, 0, 0.525],
            95: [0.09514, 0, 0, 0, 0.525],
            96: [0, 0.61111, 0, 0, 0.525],
            97: [0, 0.43056, 0, 0, 0.525],
            98: [0, 0.61111, 0, 0, 0.525],
            99: [0, 0.43056, 0, 0, 0.525],
            100: [0, 0.61111, 0, 0, 0.525],
            101: [0, 0.43056, 0, 0, 0.525],
            102: [0, 0.61111, 0, 0, 0.525],
            103: [0.22222, 0.43056, 0, 0, 0.525],
            104: [0, 0.61111, 0, 0, 0.525],
            105: [0, 0.61111, 0, 0, 0.525],
            106: [0.22222, 0.61111, 0, 0, 0.525],
            107: [0, 0.61111, 0, 0, 0.525],
            108: [0, 0.61111, 0, 0, 0.525],
            109: [0, 0.43056, 0, 0, 0.525],
            110: [0, 0.43056, 0, 0, 0.525],
            111: [0, 0.43056, 0, 0, 0.525],
            112: [0.22222, 0.43056, 0, 0, 0.525],
            113: [0.22222, 0.43056, 0, 0, 0.525],
            114: [0, 0.43056, 0, 0, 0.525],
            115: [0, 0.43056, 0, 0, 0.525],
            116: [0, 0.55358, 0, 0, 0.525],
            117: [0, 0.43056, 0, 0, 0.525],
            118: [0, 0.43056, 0, 0, 0.525],
            119: [0, 0.43056, 0, 0, 0.525],
            120: [0, 0.43056, 0, 0, 0.525],
            121: [0.22222, 0.43056, 0, 0, 0.525],
            122: [0, 0.43056, 0, 0, 0.525],
            123: [0.08333, 0.69444, 0, 0, 0.525],
            124: [0.08333, 0.69444, 0, 0, 0.525],
            125: [0.08333, 0.69444, 0, 0, 0.525],
            126: [0, 0.61111, 0, 0, 0.525],
            127: [0, 0.61111, 0, 0, 0.525],
            160: [0, 0, 0, 0, 0.525],
            176: [0, 0.61111, 0, 0, 0.525],
            184: [0.19445, 0, 0, 0, 0.525],
            305: [0, 0.43056, 0, 0, 0.525],
            567: [0.22222, 0.43056, 0, 0, 0.525],
            711: [0, 0.56597, 0, 0, 0.525],
            713: [0, 0.56555, 0, 0, 0.525],
            714: [0, 0.61111, 0, 0, 0.525],
            715: [0, 0.61111, 0, 0, 0.525],
            728: [0, 0.61111, 0, 0, 0.525],
            730: [0, 0.61111, 0, 0, 0.525],
            770: [0, 0.61111, 0, 0, 0.525],
            771: [0, 0.61111, 0, 0, 0.525],
            776: [0, 0.61111, 0, 0, 0.525],
            915: [0, 0.61111, 0, 0, 0.525],
            916: [0, 0.61111, 0, 0, 0.525],
            920: [0, 0.61111, 0, 0, 0.525],
            923: [0, 0.61111, 0, 0, 0.525],
            926: [0, 0.61111, 0, 0, 0.525],
            928: [0, 0.61111, 0, 0, 0.525],
            931: [0, 0.61111, 0, 0, 0.525],
            933: [0, 0.61111, 0, 0, 0.525],
            934: [0, 0.61111, 0, 0, 0.525],
            936: [0, 0.61111, 0, 0, 0.525],
            937: [0, 0.61111, 0, 0, 0.525],
            8216: [0, 0.61111, 0, 0, 0.525],
            8217: [0, 0.61111, 0, 0, 0.525],
            8242: [0, 0.61111, 0, 0, 0.525],
            9251: [0.11111, 0.21944, 0, 0, 0.525],
        },
    },
    jo = {
        slant: [0.25, 0.25, 0.25],
        space: [0, 0, 0],
        stretch: [0, 0, 0],
        shrink: [0, 0, 0],
        xHeight: [0.431, 0.431, 0.431],
        quad: [1, 1.171, 1.472],
        extraSpace: [0, 0, 0],
        num1: [0.677, 0.732, 0.925],
        num2: [0.394, 0.384, 0.387],
        num3: [0.444, 0.471, 0.504],
        denom1: [0.686, 0.752, 1.025],
        denom2: [0.345, 0.344, 0.532],
        sup1: [0.413, 0.503, 0.504],
        sup2: [0.363, 0.431, 0.404],
        sup3: [0.289, 0.286, 0.294],
        sub1: [0.15, 0.143, 0.2],
        sub2: [0.247, 0.286, 0.4],
        supDrop: [0.386, 0.353, 0.494],
        subDrop: [0.05, 0.071, 0.1],
        delim1: [2.39, 1.7, 1.98],
        delim2: [1.01, 1.157, 1.42],
        axisHeight: [0.25, 0.25, 0.25],
        defaultRuleThickness: [0.04, 0.049, 0.049],
        bigOpSpacing1: [0.111, 0.111, 0.111],
        bigOpSpacing2: [0.166, 0.166, 0.166],
        bigOpSpacing3: [0.2, 0.2, 0.2],
        bigOpSpacing4: [0.6, 0.611, 0.611],
        bigOpSpacing5: [0.1, 0.143, 0.143],
        sqrtRuleThickness: [0.04, 0.04, 0.04],
        ptPerEm: [10, 10, 10],
        doubleRuleSep: [0.2, 0.2, 0.2],
        arrayRuleWidth: [0.04, 0.04, 0.04],
        fboxsep: [0.3, 0.3, 0.3],
        fboxrule: [0.04, 0.04, 0.04],
    },
    iw = {
        Å: "A",
        Ð: "D",
        Þ: "o",
        å: "a",
        ð: "d",
        þ: "o",
        А: "A",
        Б: "B",
        В: "B",
        Г: "F",
        Д: "A",
        Е: "E",
        Ж: "K",
        З: "3",
        И: "N",
        Й: "N",
        К: "K",
        Л: "N",
        М: "M",
        Н: "H",
        О: "O",
        П: "N",
        Р: "P",
        С: "C",
        Т: "T",
        У: "y",
        Ф: "O",
        Х: "X",
        Ц: "U",
        Ч: "h",
        Ш: "W",
        Щ: "W",
        Ъ: "B",
        Ы: "X",
        Ь: "B",
        Э: "3",
        Ю: "X",
        Я: "R",
        а: "a",
        б: "b",
        в: "a",
        г: "r",
        д: "y",
        е: "e",
        ж: "m",
        з: "e",
        и: "n",
        й: "n",
        к: "n",
        л: "n",
        м: "m",
        н: "n",
        о: "o",
        п: "n",
        р: "p",
        с: "c",
        т: "o",
        у: "y",
        ф: "b",
        х: "x",
        ц: "n",
        ч: "n",
        ш: "w",
        щ: "w",
        ъ: "a",
        ы: "m",
        ь: "a",
        э: "e",
        ю: "m",
        я: "r",
    };
function kq(e, t) {
    An[e] = t;
}
function Qg(e, t, n) {
    if (!An[t]) throw new Error("Font metrics not found for font: " + t + ".");
    var r = e.charCodeAt(0),
        a = An[t][r];
    if ((!a && e[0] in iw && ((r = iw[e[0]].charCodeAt(0)), (a = An[t][r])), !a && n === "text" && ax(r) && (a = An[t][77]), a))
        return { depth: a[0], height: a[1], italic: a[2], skew: a[3], width: a[4] };
}
var _f = {};
function Tq(e) {
    var t;
    if ((e >= 5 ? (t = 0) : e >= 3 ? (t = 1) : (t = 2), !_f[t])) {
        var n = (_f[t] = { cssEmPerMu: jo.quad[t] / 18 });
        for (var r in jo) jo.hasOwnProperty(r) && (n[r] = jo[r][t]);
    }
    return _f[t];
}
var Aq = [
        [1, 1, 1],
        [2, 1, 1],
        [3, 1, 1],
        [4, 2, 1],
        [5, 2, 1],
        [6, 3, 1],
        [7, 4, 2],
        [8, 6, 3],
        [9, 7, 6],
        [10, 8, 7],
        [11, 10, 9],
    ],
    ow = [0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.2, 1.44, 1.728, 2.074, 2.488],
    lw = function (t, n) {
        return n.size < 2 ? t : Aq[t - 1][n.size - 1];
    };
class Un {
    constructor(t) {
        (this.style = void 0),
            (this.color = void 0),
            (this.size = void 0),
            (this.textSize = void 0),
            (this.phantom = void 0),
            (this.font = void 0),
            (this.fontFamily = void 0),
            (this.fontWeight = void 0),
            (this.fontShape = void 0),
            (this.sizeMultiplier = void 0),
            (this.maxSize = void 0),
            (this.minRuleThickness = void 0),
            (this._fontMetrics = void 0),
            (this.style = t.style),
            (this.color = t.color),
            (this.size = t.size || Un.BASESIZE),
            (this.textSize = t.textSize || this.size),
            (this.phantom = !!t.phantom),
            (this.font = t.font || ""),
            (this.fontFamily = t.fontFamily || ""),
            (this.fontWeight = t.fontWeight || ""),
            (this.fontShape = t.fontShape || ""),
            (this.sizeMultiplier = ow[this.size - 1]),
            (this.maxSize = t.maxSize),
            (this.minRuleThickness = t.minRuleThickness),
            (this._fontMetrics = void 0);
    }
    extend(t) {
        var n = {
            style: this.style,
            size: this.size,
            textSize: this.textSize,
            color: this.color,
            phantom: this.phantom,
            font: this.font,
            fontFamily: this.fontFamily,
            fontWeight: this.fontWeight,
            fontShape: this.fontShape,
            maxSize: this.maxSize,
            minRuleThickness: this.minRuleThickness,
        };
        for (var r in t) t.hasOwnProperty(r) && (n[r] = t[r]);
        return new Un(n);
    }
    havingStyle(t) {
        return this.style === t ? this : this.extend({ style: t, size: lw(this.textSize, t) });
    }
    havingCrampedStyle() {
        return this.havingStyle(this.style.cramp());
    }
    havingSize(t) {
        return this.size === t && this.textSize === t ? this : this.extend({ style: this.style.text(), size: t, textSize: t, sizeMultiplier: ow[t - 1] });
    }
    havingBaseStyle(t) {
        t = t || this.style.text();
        var n = lw(Un.BASESIZE, t);
        return this.size === n && this.textSize === Un.BASESIZE && this.style === t ? this : this.extend({ style: t, size: n });
    }
    havingBaseSizing() {
        var t;
        switch (this.style.id) {
            case 4:
            case 5:
                t = 3;
                break;
            case 6:
            case 7:
                t = 1;
                break;
            default:
                t = 6;
        }
        return this.extend({ style: this.style.text(), size: t });
    }
    withColor(t) {
        return this.extend({ color: t });
    }
    withPhantom() {
        return this.extend({ phantom: !0 });
    }
    withFont(t) {
        return this.extend({ font: t });
    }
    withTextFontFamily(t) {
        return this.extend({ fontFamily: t, font: "" });
    }
    withTextFontWeight(t) {
        return this.extend({ fontWeight: t, font: "" });
    }
    withTextFontShape(t) {
        return this.extend({ fontShape: t, font: "" });
    }
    sizingClasses(t) {
        return t.size !== this.size ? ["sizing", "reset-size" + t.size, "size" + this.size] : [];
    }
    baseSizingClasses() {
        return this.size !== Un.BASESIZE ? ["sizing", "reset-size" + this.size, "size" + Un.BASESIZE] : [];
    }
    fontMetrics() {
        return this._fontMetrics || (this._fontMetrics = Tq(this.size)), this._fontMetrics;
    }
    getColor() {
        return this.phantom ? "transparent" : this.color;
    }
}
Un.BASESIZE = 6;
var ah = {
        pt: 1,
        mm: 7227 / 2540,
        cm: 7227 / 254,
        in: 72.27,
        bp: 803 / 800,
        pc: 12,
        dd: 1238 / 1157,
        cc: 14856 / 1157,
        nd: 685 / 642,
        nc: 1370 / 107,
        sp: 1 / 65536,
        px: 803 / 800,
    },
    xq = { ex: !0, em: !0, mu: !0 },
    ix = function (t) {
        return typeof t != "string" && (t = t.unit), t in ah || t in xq || t === "ex";
    },
    Ue = function (t, n) {
        var r;
        if (t.unit in ah) r = ah[t.unit] / n.fontMetrics().ptPerEm / n.sizeMultiplier;
        else if (t.unit === "mu") r = n.fontMetrics().cssEmPerMu;
        else {
            var a;
            if ((n.style.isTight() ? (a = n.havingStyle(n.style.text())) : (a = n), t.unit === "ex")) r = a.fontMetrics().xHeight;
            else if (t.unit === "em") r = a.fontMetrics().quad;
            else throw new H("Invalid unit: '" + t.unit + "'");
            a !== n && (r *= a.sizeMultiplier / n.sizeMultiplier);
        }
        return Math.min(t.number * r, n.maxSize);
    },
    K = function (t) {
        return +t.toFixed(4) + "em";
    },
    Tr = function (t) {
        return t.filter(n => n).join(" ");
    },
    ox = function (t, n, r) {
        if (((this.classes = t || []), (this.attributes = {}), (this.height = 0), (this.depth = 0), (this.maxFontSize = 0), (this.style = r || {}), n)) {
            n.style.isTight() && this.classes.push("mtight");
            var a = n.getColor();
            a && (this.style.color = a);
        }
    },
    lx = function (t) {
        var n = document.createElement(t);
        n.className = Tr(this.classes);
        for (var r in this.style) this.style.hasOwnProperty(r) && (n.style[r] = this.style[r]);
        for (var a in this.attributes) this.attributes.hasOwnProperty(a) && n.setAttribute(a, this.attributes[a]);
        for (var i = 0; i < this.children.length; i++) n.appendChild(this.children[i].toNode());
        return n;
    },
    Rq = /[\s"'>/=\x00-\x1f]/,
    sx = function (t) {
        var n = "<" + t;
        this.classes.length && (n += ' class="' + ie.escape(Tr(this.classes)) + '"');
        var r = "";
        for (var a in this.style) this.style.hasOwnProperty(a) && (r += ie.hyphenate(a) + ":" + this.style[a] + ";");
        r && (n += ' style="' + ie.escape(r) + '"');
        for (var i in this.attributes)
            if (this.attributes.hasOwnProperty(i)) {
                if (Rq.test(i)) throw new H("Invalid attribute name '" + i + "'");
                n += " " + i + '="' + ie.escape(this.attributes[i]) + '"';
            }
        n += ">";
        for (var o = 0; o < this.children.length; o++) n += this.children[o].toMarkup();
        return (n += "</" + t + ">"), n;
    };
class Eo {
    constructor(t, n, r, a) {
        (this.children = void 0),
            (this.attributes = void 0),
            (this.classes = void 0),
            (this.height = void 0),
            (this.depth = void 0),
            (this.width = void 0),
            (this.maxFontSize = void 0),
            (this.style = void 0),
            ox.call(this, t, r, a),
            (this.children = n || []);
    }
    setAttribute(t, n) {
        this.attributes[t] = n;
    }
    hasClass(t) {
        return ie.contains(this.classes, t);
    }
    toNode() {
        return lx.call(this, "span");
    }
    toMarkup() {
        return sx.call(this, "span");
    }
}
class Jg {
    constructor(t, n, r, a) {
        (this.children = void 0),
            (this.attributes = void 0),
            (this.classes = void 0),
            (this.height = void 0),
            (this.depth = void 0),
            (this.maxFontSize = void 0),
            (this.style = void 0),
            ox.call(this, n, a),
            (this.children = r || []),
            this.setAttribute("href", t);
    }
    setAttribute(t, n) {
        this.attributes[t] = n;
    }
    hasClass(t) {
        return ie.contains(this.classes, t);
    }
    toNode() {
        return lx.call(this, "a");
    }
    toMarkup() {
        return sx.call(this, "a");
    }
}
class Iq {
    constructor(t, n, r) {
        (this.src = void 0),
            (this.alt = void 0),
            (this.classes = void 0),
            (this.height = void 0),
            (this.depth = void 0),
            (this.maxFontSize = void 0),
            (this.style = void 0),
            (this.alt = n),
            (this.src = t),
            (this.classes = ["mord"]),
            (this.style = r);
    }
    hasClass(t) {
        return ie.contains(this.classes, t);
    }
    toNode() {
        var t = document.createElement("img");
        (t.src = this.src), (t.alt = this.alt), (t.className = "mord");
        for (var n in this.style) this.style.hasOwnProperty(n) && (t.style[n] = this.style[n]);
        return t;
    }
    toMarkup() {
        var t = '<img src="' + ie.escape(this.src) + '"' + (' alt="' + ie.escape(this.alt) + '"'),
            n = "";
        for (var r in this.style) this.style.hasOwnProperty(r) && (n += ie.hyphenate(r) + ":" + this.style[r] + ";");
        return n && (t += ' style="' + ie.escape(n) + '"'), (t += "'/>"), t;
    }
}
var Nq = { î: "ı̂", ï: "ı̈", í: "ı́", ì: "ı̀" };
class rn {
    constructor(t, n, r, a, i, o, l, s) {
        (this.text = void 0),
            (this.height = void 0),
            (this.depth = void 0),
            (this.italic = void 0),
            (this.skew = void 0),
            (this.width = void 0),
            (this.maxFontSize = void 0),
            (this.classes = void 0),
            (this.style = void 0),
            (this.text = t),
            (this.height = n || 0),
            (this.depth = r || 0),
            (this.italic = a || 0),
            (this.skew = i || 0),
            (this.width = o || 0),
            (this.classes = l || []),
            (this.style = s || {}),
            (this.maxFontSize = 0);
        var u = pq(this.text.charCodeAt(0));
        u && this.classes.push(u + "_fallback"), /[îïíì]/.test(this.text) && (this.text = Nq[this.text]);
    }
    hasClass(t) {
        return ie.contains(this.classes, t);
    }
    toNode() {
        var t = document.createTextNode(this.text),
            n = null;
        this.italic > 0 && ((n = document.createElement("span")), (n.style.marginRight = K(this.italic))),
            this.classes.length > 0 && ((n = n || document.createElement("span")), (n.className = Tr(this.classes)));
        for (var r in this.style) this.style.hasOwnProperty(r) && ((n = n || document.createElement("span")), (n.style[r] = this.style[r]));
        return n ? (n.appendChild(t), n) : t;
    }
    toMarkup() {
        var t = !1,
            n = "<span";
        this.classes.length && ((t = !0), (n += ' class="'), (n += ie.escape(Tr(this.classes))), (n += '"'));
        var r = "";
        this.italic > 0 && (r += "margin-right:" + this.italic + "em;");
        for (var a in this.style) this.style.hasOwnProperty(a) && (r += ie.hyphenate(a) + ":" + this.style[a] + ";");
        r && ((t = !0), (n += ' style="' + ie.escape(r) + '"'));
        var i = ie.escape(this.text);
        return t ? ((n += ">"), (n += i), (n += "</span>"), n) : i;
    }
}
class Xn {
    constructor(t, n) {
        (this.children = void 0), (this.attributes = void 0), (this.children = t || []), (this.attributes = n || {});
    }
    toNode() {
        var t = "http://www.w3.org/2000/svg",
            n = document.createElementNS(t, "svg");
        for (var r in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, r) && n.setAttribute(r, this.attributes[r]);
        for (var a = 0; a < this.children.length; a++) n.appendChild(this.children[a].toNode());
        return n;
    }
    toMarkup() {
        var t = '<svg xmlns="http://www.w3.org/2000/svg"';
        for (var n in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, n) && (t += " " + n + '="' + ie.escape(this.attributes[n]) + '"');
        t += ">";
        for (var r = 0; r < this.children.length; r++) t += this.children[r].toMarkup();
        return (t += "</svg>"), t;
    }
}
class Ar {
    constructor(t, n) {
        (this.pathName = void 0), (this.alternate = void 0), (this.pathName = t), (this.alternate = n);
    }
    toNode() {
        var t = "http://www.w3.org/2000/svg",
            n = document.createElementNS(t, "path");
        return this.alternate ? n.setAttribute("d", this.alternate) : n.setAttribute("d", aw[this.pathName]), n;
    }
    toMarkup() {
        return this.alternate ? '<path d="' + ie.escape(this.alternate) + '"/>' : '<path d="' + ie.escape(aw[this.pathName]) + '"/>';
    }
}
class ih {
    constructor(t) {
        (this.attributes = void 0), (this.attributes = t || {});
    }
    toNode() {
        var t = "http://www.w3.org/2000/svg",
            n = document.createElementNS(t, "line");
        for (var r in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, r) && n.setAttribute(r, this.attributes[r]);
        return n;
    }
    toMarkup() {
        var t = "<line";
        for (var n in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, n) && (t += " " + n + '="' + ie.escape(this.attributes[n]) + '"');
        return (t += "/>"), t;
    }
}
function sw(e) {
    if (e instanceof rn) return e;
    throw new Error("Expected symbolNode but got " + String(e) + ".");
}
function _q(e) {
    if (e instanceof Eo) return e;
    throw new Error("Expected span<HtmlDomNode> but got " + String(e) + ".");
}
var Cq = { bin: 1, close: 1, inner: 1, open: 1, punct: 1, rel: 1 },
    Oq = { "accent-token": 1, mathord: 1, "op-token": 1, spacing: 1, textord: 1 },
    Ce = { math: {}, text: {} };
function p(e, t, n, r, a, i) {
    (Ce[e][a] = { font: t, group: n, replace: r }), i && r && (Ce[e][r] = Ce[e][a]);
}
var h = "math",
    q = "text",
    S = "main",
    N = "ams",
    Fe = "accent-token",
    ee = "bin",
    wt = "close",
    Ja = "inner",
    oe = "mathord",
    Xe = "op-token",
    Vt = "open",
    Rs = "punct",
    _ = "rel",
    tr = "spacing",
    D = "textord";
p(h, S, _, "≡", "\\equiv", !0);
p(h, S, _, "≺", "\\prec", !0);
p(h, S, _, "≻", "\\succ", !0);
p(h, S, _, "∼", "\\sim", !0);
p(h, S, _, "⊥", "\\perp");
p(h, S, _, "⪯", "\\preceq", !0);
p(h, S, _, "⪰", "\\succeq", !0);
p(h, S, _, "≃", "\\simeq", !0);
p(h, S, _, "∣", "\\mid", !0);
p(h, S, _, "≪", "\\ll", !0);
p(h, S, _, "≫", "\\gg", !0);
p(h, S, _, "≍", "\\asymp", !0);
p(h, S, _, "∥", "\\parallel");
p(h, S, _, "⋈", "\\bowtie", !0);
p(h, S, _, "⌣", "\\smile", !0);
p(h, S, _, "⊑", "\\sqsubseteq", !0);
p(h, S, _, "⊒", "\\sqsupseteq", !0);
p(h, S, _, "≐", "\\doteq", !0);
p(h, S, _, "⌢", "\\frown", !0);
p(h, S, _, "∋", "\\ni", !0);
p(h, S, _, "∝", "\\propto", !0);
p(h, S, _, "⊢", "\\vdash", !0);
p(h, S, _, "⊣", "\\dashv", !0);
p(h, S, _, "∋", "\\owns");
p(h, S, Rs, ".", "\\ldotp");
p(h, S, Rs, "⋅", "\\cdotp");
p(h, S, D, "#", "\\#");
p(q, S, D, "#", "\\#");
p(h, S, D, "&", "\\&");
p(q, S, D, "&", "\\&");
p(h, S, D, "ℵ", "\\aleph", !0);
p(h, S, D, "∀", "\\forall", !0);
p(h, S, D, "ℏ", "\\hbar", !0);
p(h, S, D, "∃", "\\exists", !0);
p(h, S, D, "∇", "\\nabla", !0);
p(h, S, D, "♭", "\\flat", !0);
p(h, S, D, "ℓ", "\\ell", !0);
p(h, S, D, "♮", "\\natural", !0);
p(h, S, D, "♣", "\\clubsuit", !0);
p(h, S, D, "℘", "\\wp", !0);
p(h, S, D, "♯", "\\sharp", !0);
p(h, S, D, "♢", "\\diamondsuit", !0);
p(h, S, D, "ℜ", "\\Re", !0);
p(h, S, D, "♡", "\\heartsuit", !0);
p(h, S, D, "ℑ", "\\Im", !0);
p(h, S, D, "♠", "\\spadesuit", !0);
p(h, S, D, "§", "\\S", !0);
p(q, S, D, "§", "\\S");
p(h, S, D, "¶", "\\P", !0);
p(q, S, D, "¶", "\\P");
p(h, S, D, "†", "\\dag");
p(q, S, D, "†", "\\dag");
p(q, S, D, "†", "\\textdagger");
p(h, S, D, "‡", "\\ddag");
p(q, S, D, "‡", "\\ddag");
p(q, S, D, "‡", "\\textdaggerdbl");
p(h, S, wt, "⎱", "\\rmoustache", !0);
p(h, S, Vt, "⎰", "\\lmoustache", !0);
p(h, S, wt, "⟯", "\\rgroup", !0);
p(h, S, Vt, "⟮", "\\lgroup", !0);
p(h, S, ee, "∓", "\\mp", !0);
p(h, S, ee, "⊖", "\\ominus", !0);
p(h, S, ee, "⊎", "\\uplus", !0);
p(h, S, ee, "⊓", "\\sqcap", !0);
p(h, S, ee, "∗", "\\ast");
p(h, S, ee, "⊔", "\\sqcup", !0);
p(h, S, ee, "◯", "\\bigcirc", !0);
p(h, S, ee, "∙", "\\bullet", !0);
p(h, S, ee, "‡", "\\ddagger");
p(h, S, ee, "≀", "\\wr", !0);
p(h, S, ee, "⨿", "\\amalg");
p(h, S, ee, "&", "\\And");
p(h, S, _, "⟵", "\\longleftarrow", !0);
p(h, S, _, "⇐", "\\Leftarrow", !0);
p(h, S, _, "⟸", "\\Longleftarrow", !0);
p(h, S, _, "⟶", "\\longrightarrow", !0);
p(h, S, _, "⇒", "\\Rightarrow", !0);
p(h, S, _, "⟹", "\\Longrightarrow", !0);
p(h, S, _, "↔", "\\leftrightarrow", !0);
p(h, S, _, "⟷", "\\longleftrightarrow", !0);
p(h, S, _, "⇔", "\\Leftrightarrow", !0);
p(h, S, _, "⟺", "\\Longleftrightarrow", !0);
p(h, S, _, "↦", "\\mapsto", !0);
p(h, S, _, "⟼", "\\longmapsto", !0);
p(h, S, _, "↗", "\\nearrow", !0);
p(h, S, _, "↩", "\\hookleftarrow", !0);
p(h, S, _, "↪", "\\hookrightarrow", !0);
p(h, S, _, "↘", "\\searrow", !0);
p(h, S, _, "↼", "\\leftharpoonup", !0);
p(h, S, _, "⇀", "\\rightharpoonup", !0);
p(h, S, _, "↙", "\\swarrow", !0);
p(h, S, _, "↽", "\\leftharpoondown", !0);
p(h, S, _, "⇁", "\\rightharpoondown", !0);
p(h, S, _, "↖", "\\nwarrow", !0);
p(h, S, _, "⇌", "\\rightleftharpoons", !0);
p(h, N, _, "≮", "\\nless", !0);
p(h, N, _, "", "\\@nleqslant");
p(h, N, _, "", "\\@nleqq");
p(h, N, _, "⪇", "\\lneq", !0);
p(h, N, _, "≨", "\\lneqq", !0);
p(h, N, _, "", "\\@lvertneqq");
p(h, N, _, "⋦", "\\lnsim", !0);
p(h, N, _, "⪉", "\\lnapprox", !0);
p(h, N, _, "⊀", "\\nprec", !0);
p(h, N, _, "⋠", "\\npreceq", !0);
p(h, N, _, "⋨", "\\precnsim", !0);
p(h, N, _, "⪹", "\\precnapprox", !0);
p(h, N, _, "≁", "\\nsim", !0);
p(h, N, _, "", "\\@nshortmid");
p(h, N, _, "∤", "\\nmid", !0);
p(h, N, _, "⊬", "\\nvdash", !0);
p(h, N, _, "⊭", "\\nvDash", !0);
p(h, N, _, "⋪", "\\ntriangleleft");
p(h, N, _, "⋬", "\\ntrianglelefteq", !0);
p(h, N, _, "⊊", "\\subsetneq", !0);
p(h, N, _, "", "\\@varsubsetneq");
p(h, N, _, "⫋", "\\subsetneqq", !0);
p(h, N, _, "", "\\@varsubsetneqq");
p(h, N, _, "≯", "\\ngtr", !0);
p(h, N, _, "", "\\@ngeqslant");
p(h, N, _, "", "\\@ngeqq");
p(h, N, _, "⪈", "\\gneq", !0);
p(h, N, _, "≩", "\\gneqq", !0);
p(h, N, _, "", "\\@gvertneqq");
p(h, N, _, "⋧", "\\gnsim", !0);
p(h, N, _, "⪊", "\\gnapprox", !0);
p(h, N, _, "⊁", "\\nsucc", !0);
p(h, N, _, "⋡", "\\nsucceq", !0);
p(h, N, _, "⋩", "\\succnsim", !0);
p(h, N, _, "⪺", "\\succnapprox", !0);
p(h, N, _, "≆", "\\ncong", !0);
p(h, N, _, "", "\\@nshortparallel");
p(h, N, _, "∦", "\\nparallel", !0);
p(h, N, _, "⊯", "\\nVDash", !0);
p(h, N, _, "⋫", "\\ntriangleright");
p(h, N, _, "⋭", "\\ntrianglerighteq", !0);
p(h, N, _, "", "\\@nsupseteqq");
p(h, N, _, "⊋", "\\supsetneq", !0);
p(h, N, _, "", "\\@varsupsetneq");
p(h, N, _, "⫌", "\\supsetneqq", !0);
p(h, N, _, "", "\\@varsupsetneqq");
p(h, N, _, "⊮", "\\nVdash", !0);
p(h, N, _, "⪵", "\\precneqq", !0);
p(h, N, _, "⪶", "\\succneqq", !0);
p(h, N, _, "", "\\@nsubseteqq");
p(h, N, ee, "⊴", "\\unlhd");
p(h, N, ee, "⊵", "\\unrhd");
p(h, N, _, "↚", "\\nleftarrow", !0);
p(h, N, _, "↛", "\\nrightarrow", !0);
p(h, N, _, "⇍", "\\nLeftarrow", !0);
p(h, N, _, "⇏", "\\nRightarrow", !0);
p(h, N, _, "↮", "\\nleftrightarrow", !0);
p(h, N, _, "⇎", "\\nLeftrightarrow", !0);
p(h, N, _, "△", "\\vartriangle");
p(h, N, D, "ℏ", "\\hslash");
p(h, N, D, "▽", "\\triangledown");
p(h, N, D, "◊", "\\lozenge");
p(h, N, D, "Ⓢ", "\\circledS");
p(h, N, D, "®", "\\circledR");
p(q, N, D, "®", "\\circledR");
p(h, N, D, "∡", "\\measuredangle", !0);
p(h, N, D, "∄", "\\nexists");
p(h, N, D, "℧", "\\mho");
p(h, N, D, "Ⅎ", "\\Finv", !0);
p(h, N, D, "⅁", "\\Game", !0);
p(h, N, D, "‵", "\\backprime");
p(h, N, D, "▲", "\\blacktriangle");
p(h, N, D, "▼", "\\blacktriangledown");
p(h, N, D, "■", "\\blacksquare");
p(h, N, D, "⧫", "\\blacklozenge");
p(h, N, D, "★", "\\bigstar");
p(h, N, D, "∢", "\\sphericalangle", !0);
p(h, N, D, "∁", "\\complement", !0);
p(h, N, D, "ð", "\\eth", !0);
p(q, S, D, "ð", "ð");
p(h, N, D, "╱", "\\diagup");
p(h, N, D, "╲", "\\diagdown");
p(h, N, D, "□", "\\square");
p(h, N, D, "□", "\\Box");
p(h, N, D, "◊", "\\Diamond");
p(h, N, D, "¥", "\\yen", !0);
p(q, N, D, "¥", "\\yen", !0);
p(h, N, D, "✓", "\\checkmark", !0);
p(q, N, D, "✓", "\\checkmark");
p(h, N, D, "ℶ", "\\beth", !0);
p(h, N, D, "ℸ", "\\daleth", !0);
p(h, N, D, "ℷ", "\\gimel", !0);
p(h, N, D, "ϝ", "\\digamma", !0);
p(h, N, D, "ϰ", "\\varkappa");
p(h, N, Vt, "┌", "\\@ulcorner", !0);
p(h, N, wt, "┐", "\\@urcorner", !0);
p(h, N, Vt, "└", "\\@llcorner", !0);
p(h, N, wt, "┘", "\\@lrcorner", !0);
p(h, N, _, "≦", "\\leqq", !0);
p(h, N, _, "⩽", "\\leqslant", !0);
p(h, N, _, "⪕", "\\eqslantless", !0);
p(h, N, _, "≲", "\\lesssim", !0);
p(h, N, _, "⪅", "\\lessapprox", !0);
p(h, N, _, "≊", "\\approxeq", !0);
p(h, N, ee, "⋖", "\\lessdot");
p(h, N, _, "⋘", "\\lll", !0);
p(h, N, _, "≶", "\\lessgtr", !0);
p(h, N, _, "⋚", "\\lesseqgtr", !0);
p(h, N, _, "⪋", "\\lesseqqgtr", !0);
p(h, N, _, "≑", "\\doteqdot");
p(h, N, _, "≓", "\\risingdotseq", !0);
p(h, N, _, "≒", "\\fallingdotseq", !0);
p(h, N, _, "∽", "\\backsim", !0);
p(h, N, _, "⋍", "\\backsimeq", !0);
p(h, N, _, "⫅", "\\subseteqq", !0);
p(h, N, _, "⋐", "\\Subset", !0);
p(h, N, _, "⊏", "\\sqsubset", !0);
p(h, N, _, "≼", "\\preccurlyeq", !0);
p(h, N, _, "⋞", "\\curlyeqprec", !0);
p(h, N, _, "≾", "\\precsim", !0);
p(h, N, _, "⪷", "\\precapprox", !0);
p(h, N, _, "⊲", "\\vartriangleleft");
p(h, N, _, "⊴", "\\trianglelefteq");
p(h, N, _, "⊨", "\\vDash", !0);
p(h, N, _, "⊪", "\\Vvdash", !0);
p(h, N, _, "⌣", "\\smallsmile");
p(h, N, _, "⌢", "\\smallfrown");
p(h, N, _, "≏", "\\bumpeq", !0);
p(h, N, _, "≎", "\\Bumpeq", !0);
p(h, N, _, "≧", "\\geqq", !0);
p(h, N, _, "⩾", "\\geqslant", !0);
p(h, N, _, "⪖", "\\eqslantgtr", !0);
p(h, N, _, "≳", "\\gtrsim", !0);
p(h, N, _, "⪆", "\\gtrapprox", !0);
p(h, N, ee, "⋗", "\\gtrdot");
p(h, N, _, "⋙", "\\ggg", !0);
p(h, N, _, "≷", "\\gtrless", !0);
p(h, N, _, "⋛", "\\gtreqless", !0);
p(h, N, _, "⪌", "\\gtreqqless", !0);
p(h, N, _, "≖", "\\eqcirc", !0);
p(h, N, _, "≗", "\\circeq", !0);
p(h, N, _, "≜", "\\triangleq", !0);
p(h, N, _, "∼", "\\thicksim");
p(h, N, _, "≈", "\\thickapprox");
p(h, N, _, "⫆", "\\supseteqq", !0);
p(h, N, _, "⋑", "\\Supset", !0);
p(h, N, _, "⊐", "\\sqsupset", !0);
p(h, N, _, "≽", "\\succcurlyeq", !0);
p(h, N, _, "⋟", "\\curlyeqsucc", !0);
p(h, N, _, "≿", "\\succsim", !0);
p(h, N, _, "⪸", "\\succapprox", !0);
p(h, N, _, "⊳", "\\vartriangleright");
p(h, N, _, "⊵", "\\trianglerighteq");
p(h, N, _, "⊩", "\\Vdash", !0);
p(h, N, _, "∣", "\\shortmid");
p(h, N, _, "∥", "\\shortparallel");
p(h, N, _, "≬", "\\between", !0);
p(h, N, _, "⋔", "\\pitchfork", !0);
p(h, N, _, "∝", "\\varpropto");
p(h, N, _, "◀", "\\blacktriangleleft");
p(h, N, _, "∴", "\\therefore", !0);
p(h, N, _, "∍", "\\backepsilon");
p(h, N, _, "▶", "\\blacktriangleright");
p(h, N, _, "∵", "\\because", !0);
p(h, N, _, "⋘", "\\llless");
p(h, N, _, "⋙", "\\gggtr");
p(h, N, ee, "⊲", "\\lhd");
p(h, N, ee, "⊳", "\\rhd");
p(h, N, _, "≂", "\\eqsim", !0);
p(h, S, _, "⋈", "\\Join");
p(h, N, _, "≑", "\\Doteq", !0);
p(h, N, ee, "∔", "\\dotplus", !0);
p(h, N, ee, "∖", "\\smallsetminus");
p(h, N, ee, "⋒", "\\Cap", !0);
p(h, N, ee, "⋓", "\\Cup", !0);
p(h, N, ee, "⩞", "\\doublebarwedge", !0);
p(h, N, ee, "⊟", "\\boxminus", !0);
p(h, N, ee, "⊞", "\\boxplus", !0);
p(h, N, ee, "⋇", "\\divideontimes", !0);
p(h, N, ee, "⋉", "\\ltimes", !0);
p(h, N, ee, "⋊", "\\rtimes", !0);
p(h, N, ee, "⋋", "\\leftthreetimes", !0);
p(h, N, ee, "⋌", "\\rightthreetimes", !0);
p(h, N, ee, "⋏", "\\curlywedge", !0);
p(h, N, ee, "⋎", "\\curlyvee", !0);
p(h, N, ee, "⊝", "\\circleddash", !0);
p(h, N, ee, "⊛", "\\circledast", !0);
p(h, N, ee, "⋅", "\\centerdot");
p(h, N, ee, "⊺", "\\intercal", !0);
p(h, N, ee, "⋒", "\\doublecap");
p(h, N, ee, "⋓", "\\doublecup");
p(h, N, ee, "⊠", "\\boxtimes", !0);
p(h, N, _, "⇢", "\\dashrightarrow", !0);
p(h, N, _, "⇠", "\\dashleftarrow", !0);
p(h, N, _, "⇇", "\\leftleftarrows", !0);
p(h, N, _, "⇆", "\\leftrightarrows", !0);
p(h, N, _, "⇚", "\\Lleftarrow", !0);
p(h, N, _, "↞", "\\twoheadleftarrow", !0);
p(h, N, _, "↢", "\\leftarrowtail", !0);
p(h, N, _, "↫", "\\looparrowleft", !0);
p(h, N, _, "⇋", "\\leftrightharpoons", !0);
p(h, N, _, "↶", "\\curvearrowleft", !0);
p(h, N, _, "↺", "\\circlearrowleft", !0);
p(h, N, _, "↰", "\\Lsh", !0);
p(h, N, _, "⇈", "\\upuparrows", !0);
p(h, N, _, "↿", "\\upharpoonleft", !0);
p(h, N, _, "⇃", "\\downharpoonleft", !0);
p(h, S, _, "⊶", "\\origof", !0);
p(h, S, _, "⊷", "\\imageof", !0);
p(h, N, _, "⊸", "\\multimap", !0);
p(h, N, _, "↭", "\\leftrightsquigarrow", !0);
p(h, N, _, "⇉", "\\rightrightarrows", !0);
p(h, N, _, "⇄", "\\rightleftarrows", !0);
p(h, N, _, "↠", "\\twoheadrightarrow", !0);
p(h, N, _, "↣", "\\rightarrowtail", !0);
p(h, N, _, "↬", "\\looparrowright", !0);
p(h, N, _, "↷", "\\curvearrowright", !0);
p(h, N, _, "↻", "\\circlearrowright", !0);
p(h, N, _, "↱", "\\Rsh", !0);
p(h, N, _, "⇊", "\\downdownarrows", !0);
p(h, N, _, "↾", "\\upharpoonright", !0);
p(h, N, _, "⇂", "\\downharpoonright", !0);
p(h, N, _, "⇝", "\\rightsquigarrow", !0);
p(h, N, _, "⇝", "\\leadsto");
p(h, N, _, "⇛", "\\Rrightarrow", !0);
p(h, N, _, "↾", "\\restriction");
p(h, S, D, "‘", "`");
p(h, S, D, "$", "\\$");
p(q, S, D, "$", "\\$");
p(q, S, D, "$", "\\textdollar");
p(h, S, D, "%", "\\%");
p(q, S, D, "%", "\\%");
p(h, S, D, "_", "\\_");
p(q, S, D, "_", "\\_");
p(q, S, D, "_", "\\textunderscore");
p(h, S, D, "∠", "\\angle", !0);
p(h, S, D, "∞", "\\infty", !0);
p(h, S, D, "′", "\\prime");
p(h, S, D, "△", "\\triangle");
p(h, S, D, "Γ", "\\Gamma", !0);
p(h, S, D, "Δ", "\\Delta", !0);
p(h, S, D, "Θ", "\\Theta", !0);
p(h, S, D, "Λ", "\\Lambda", !0);
p(h, S, D, "Ξ", "\\Xi", !0);
p(h, S, D, "Π", "\\Pi", !0);
p(h, S, D, "Σ", "\\Sigma", !0);
p(h, S, D, "Υ", "\\Upsilon", !0);
p(h, S, D, "Φ", "\\Phi", !0);
p(h, S, D, "Ψ", "\\Psi", !0);
p(h, S, D, "Ω", "\\Omega", !0);
p(h, S, D, "A", "Α");
p(h, S, D, "B", "Β");
p(h, S, D, "E", "Ε");
p(h, S, D, "Z", "Ζ");
p(h, S, D, "H", "Η");
p(h, S, D, "I", "Ι");
p(h, S, D, "K", "Κ");
p(h, S, D, "M", "Μ");
p(h, S, D, "N", "Ν");
p(h, S, D, "O", "Ο");
p(h, S, D, "P", "Ρ");
p(h, S, D, "T", "Τ");
p(h, S, D, "X", "Χ");
p(h, S, D, "¬", "\\neg", !0);
p(h, S, D, "¬", "\\lnot");
p(h, S, D, "⊤", "\\top");
p(h, S, D, "⊥", "\\bot");
p(h, S, D, "∅", "\\emptyset");
p(h, N, D, "∅", "\\varnothing");
p(h, S, oe, "α", "\\alpha", !0);
p(h, S, oe, "β", "\\beta", !0);
p(h, S, oe, "γ", "\\gamma", !0);
p(h, S, oe, "δ", "\\delta", !0);
p(h, S, oe, "ϵ", "\\epsilon", !0);
p(h, S, oe, "ζ", "\\zeta", !0);
p(h, S, oe, "η", "\\eta", !0);
p(h, S, oe, "θ", "\\theta", !0);
p(h, S, oe, "ι", "\\iota", !0);
p(h, S, oe, "κ", "\\kappa", !0);
p(h, S, oe, "λ", "\\lambda", !0);
p(h, S, oe, "μ", "\\mu", !0);
p(h, S, oe, "ν", "\\nu", !0);
p(h, S, oe, "ξ", "\\xi", !0);
p(h, S, oe, "ο", "\\omicron", !0);
p(h, S, oe, "π", "\\pi", !0);
p(h, S, oe, "ρ", "\\rho", !0);
p(h, S, oe, "σ", "\\sigma", !0);
p(h, S, oe, "τ", "\\tau", !0);
p(h, S, oe, "υ", "\\upsilon", !0);
p(h, S, oe, "ϕ", "\\phi", !0);
p(h, S, oe, "χ", "\\chi", !0);
p(h, S, oe, "ψ", "\\psi", !0);
p(h, S, oe, "ω", "\\omega", !0);
p(h, S, oe, "ε", "\\varepsilon", !0);
p(h, S, oe, "ϑ", "\\vartheta", !0);
p(h, S, oe, "ϖ", "\\varpi", !0);
p(h, S, oe, "ϱ", "\\varrho", !0);
p(h, S, oe, "ς", "\\varsigma", !0);
p(h, S, oe, "φ", "\\varphi", !0);
p(h, S, ee, "∗", "*", !0);
p(h, S, ee, "+", "+");
p(h, S, ee, "−", "-", !0);
p(h, S, ee, "⋅", "\\cdot", !0);
p(h, S, ee, "∘", "\\circ", !0);
p(h, S, ee, "÷", "\\div", !0);
p(h, S, ee, "±", "\\pm", !0);
p(h, S, ee, "×", "\\times", !0);
p(h, S, ee, "∩", "\\cap", !0);
p(h, S, ee, "∪", "\\cup", !0);
p(h, S, ee, "∖", "\\setminus", !0);
p(h, S, ee, "∧", "\\land");
p(h, S, ee, "∨", "\\lor");
p(h, S, ee, "∧", "\\wedge", !0);
p(h, S, ee, "∨", "\\vee", !0);
p(h, S, D, "√", "\\surd");
p(h, S, Vt, "⟨", "\\langle", !0);
p(h, S, Vt, "∣", "\\lvert");
p(h, S, Vt, "∥", "\\lVert");
p(h, S, wt, "?", "?");
p(h, S, wt, "!", "!");
p(h, S, wt, "⟩", "\\rangle", !0);
p(h, S, wt, "∣", "\\rvert");
p(h, S, wt, "∥", "\\rVert");
p(h, S, _, "=", "=");
p(h, S, _, ":", ":");
p(h, S, _, "≈", "\\approx", !0);
p(h, S, _, "≅", "\\cong", !0);
p(h, S, _, "≥", "\\ge");
p(h, S, _, "≥", "\\geq", !0);
p(h, S, _, "←", "\\gets");
p(h, S, _, ">", "\\gt", !0);
p(h, S, _, "∈", "\\in", !0);
p(h, S, _, "", "\\@not");
p(h, S, _, "⊂", "\\subset", !0);
p(h, S, _, "⊃", "\\supset", !0);
p(h, S, _, "⊆", "\\subseteq", !0);
p(h, S, _, "⊇", "\\supseteq", !0);
p(h, N, _, "⊈", "\\nsubseteq", !0);
p(h, N, _, "⊉", "\\nsupseteq", !0);
p(h, S, _, "⊨", "\\models");
p(h, S, _, "←", "\\leftarrow", !0);
p(h, S, _, "≤", "\\le");
p(h, S, _, "≤", "\\leq", !0);
p(h, S, _, "<", "\\lt", !0);
p(h, S, _, "→", "\\rightarrow", !0);
p(h, S, _, "→", "\\to");
p(h, N, _, "≱", "\\ngeq", !0);
p(h, N, _, "≰", "\\nleq", !0);
p(h, S, tr, " ", "\\ ");
p(h, S, tr, " ", "\\space");
p(h, S, tr, " ", "\\nobreakspace");
p(q, S, tr, " ", "\\ ");
p(q, S, tr, " ", " ");
p(q, S, tr, " ", "\\space");
p(q, S, tr, " ", "\\nobreakspace");
p(h, S, tr, null, "\\nobreak");
p(h, S, tr, null, "\\allowbreak");
p(h, S, Rs, ",", ",");
p(h, S, Rs, ";", ";");
p(h, N, ee, "⊼", "\\barwedge", !0);
p(h, N, ee, "⊻", "\\veebar", !0);
p(h, S, ee, "⊙", "\\odot", !0);
p(h, S, ee, "⊕", "\\oplus", !0);
p(h, S, ee, "⊗", "\\otimes", !0);
p(h, S, D, "∂", "\\partial", !0);
p(h, S, ee, "⊘", "\\oslash", !0);
p(h, N, ee, "⊚", "\\circledcirc", !0);
p(h, N, ee, "⊡", "\\boxdot", !0);
p(h, S, ee, "△", "\\bigtriangleup");
p(h, S, ee, "▽", "\\bigtriangledown");
p(h, S, ee, "†", "\\dagger");
p(h, S, ee, "⋄", "\\diamond");
p(h, S, ee, "⋆", "\\star");
p(h, S, ee, "◃", "\\triangleleft");
p(h, S, ee, "▹", "\\triangleright");
p(h, S, Vt, "{", "\\{");
p(q, S, D, "{", "\\{");
p(q, S, D, "{", "\\textbraceleft");
p(h, S, wt, "}", "\\}");
p(q, S, D, "}", "\\}");
p(q, S, D, "}", "\\textbraceright");
p(h, S, Vt, "{", "\\lbrace");
p(h, S, wt, "}", "\\rbrace");
p(h, S, Vt, "[", "\\lbrack", !0);
p(q, S, D, "[", "\\lbrack", !0);
p(h, S, wt, "]", "\\rbrack", !0);
p(q, S, D, "]", "\\rbrack", !0);
p(h, S, Vt, "(", "\\lparen", !0);
p(h, S, wt, ")", "\\rparen", !0);
p(q, S, D, "<", "\\textless", !0);
p(q, S, D, ">", "\\textgreater", !0);
p(h, S, Vt, "⌊", "\\lfloor", !0);
p(h, S, wt, "⌋", "\\rfloor", !0);
p(h, S, Vt, "⌈", "\\lceil", !0);
p(h, S, wt, "⌉", "\\rceil", !0);
p(h, S, D, "\\", "\\backslash");
p(h, S, D, "∣", "|");
p(h, S, D, "∣", "\\vert");
p(q, S, D, "|", "\\textbar", !0);
p(h, S, D, "∥", "\\|");
p(h, S, D, "∥", "\\Vert");
p(q, S, D, "∥", "\\textbardbl");
p(q, S, D, "~", "\\textasciitilde");
p(q, S, D, "\\", "\\textbackslash");
p(q, S, D, "^", "\\textasciicircum");
p(h, S, _, "↑", "\\uparrow", !0);
p(h, S, _, "⇑", "\\Uparrow", !0);
p(h, S, _, "↓", "\\downarrow", !0);
p(h, S, _, "⇓", "\\Downarrow", !0);
p(h, S, _, "↕", "\\updownarrow", !0);
p(h, S, _, "⇕", "\\Updownarrow", !0);
p(h, S, Xe, "∐", "\\coprod");
p(h, S, Xe, "⋁", "\\bigvee");
p(h, S, Xe, "⋀", "\\bigwedge");
p(h, S, Xe, "⨄", "\\biguplus");
p(h, S, Xe, "⋂", "\\bigcap");
p(h, S, Xe, "⋃", "\\bigcup");
p(h, S, Xe, "∫", "\\int");
p(h, S, Xe, "∫", "\\intop");
p(h, S, Xe, "∬", "\\iint");
p(h, S, Xe, "∭", "\\iiint");
p(h, S, Xe, "∏", "\\prod");
p(h, S, Xe, "∑", "\\sum");
p(h, S, Xe, "⨂", "\\bigotimes");
p(h, S, Xe, "⨁", "\\bigoplus");
p(h, S, Xe, "⨀", "\\bigodot");
p(h, S, Xe, "∮", "\\oint");
p(h, S, Xe, "∯", "\\oiint");
p(h, S, Xe, "∰", "\\oiiint");
p(h, S, Xe, "⨆", "\\bigsqcup");
p(h, S, Xe, "∫", "\\smallint");
p(q, S, Ja, "…", "\\textellipsis");
p(h, S, Ja, "…", "\\mathellipsis");
p(q, S, Ja, "…", "\\ldots", !0);
p(h, S, Ja, "…", "\\ldots", !0);
p(h, S, Ja, "⋯", "\\@cdots", !0);
p(h, S, Ja, "⋱", "\\ddots", !0);
p(h, S, D, "⋮", "\\varvdots");
p(q, S, D, "⋮", "\\varvdots");
p(h, S, Fe, "ˊ", "\\acute");
p(h, S, Fe, "ˋ", "\\grave");
p(h, S, Fe, "¨", "\\ddot");
p(h, S, Fe, "~", "\\tilde");
p(h, S, Fe, "ˉ", "\\bar");
p(h, S, Fe, "˘", "\\breve");
p(h, S, Fe, "ˇ", "\\check");
p(h, S, Fe, "^", "\\hat");
p(h, S, Fe, "⃗", "\\vec");
p(h, S, Fe, "˙", "\\dot");
p(h, S, Fe, "˚", "\\mathring");
p(h, S, oe, "", "\\@imath");
p(h, S, oe, "", "\\@jmath");
p(h, S, D, "ı", "ı");
p(h, S, D, "ȷ", "ȷ");
p(q, S, D, "ı", "\\i", !0);
p(q, S, D, "ȷ", "\\j", !0);
p(q, S, D, "ß", "\\ss", !0);
p(q, S, D, "æ", "\\ae", !0);
p(q, S, D, "œ", "\\oe", !0);
p(q, S, D, "ø", "\\o", !0);
p(q, S, D, "Æ", "\\AE", !0);
p(q, S, D, "Œ", "\\OE", !0);
p(q, S, D, "Ø", "\\O", !0);
p(q, S, Fe, "ˊ", "\\'");
p(q, S, Fe, "ˋ", "\\`");
p(q, S, Fe, "ˆ", "\\^");
p(q, S, Fe, "˜", "\\~");
p(q, S, Fe, "ˉ", "\\=");
p(q, S, Fe, "˘", "\\u");
p(q, S, Fe, "˙", "\\.");
p(q, S, Fe, "¸", "\\c");
p(q, S, Fe, "˚", "\\r");
p(q, S, Fe, "ˇ", "\\v");
p(q, S, Fe, "¨", '\\"');
p(q, S, Fe, "˝", "\\H");
p(q, S, Fe, "◯", "\\textcircled");
var ux = { "--": !0, "---": !0, "``": !0, "''": !0 };
p(q, S, D, "–", "--", !0);
p(q, S, D, "–", "\\textendash");
p(q, S, D, "—", "---", !0);
p(q, S, D, "—", "\\textemdash");
p(q, S, D, "‘", "`", !0);
p(q, S, D, "‘", "\\textquoteleft");
p(q, S, D, "’", "'", !0);
p(q, S, D, "’", "\\textquoteright");
p(q, S, D, "“", "``", !0);
p(q, S, D, "“", "\\textquotedblleft");
p(q, S, D, "”", "''", !0);
p(q, S, D, "”", "\\textquotedblright");
p(h, S, D, "°", "\\degree", !0);
p(q, S, D, "°", "\\degree");
p(q, S, D, "°", "\\textdegree", !0);
p(h, S, D, "£", "\\pounds");
p(h, S, D, "£", "\\mathsterling", !0);
p(q, S, D, "£", "\\pounds");
p(q, S, D, "£", "\\textsterling", !0);
p(h, N, D, "✠", "\\maltese");
p(q, N, D, "✠", "\\maltese");
var uw = '0123456789/@."';
for (var Cf = 0; Cf < uw.length; Cf++) {
    var cw = uw.charAt(Cf);
    p(h, S, D, cw, cw);
}
var dw = '0123456789!@*()-=+";:?/.,';
for (var Of = 0; Of < dw.length; Of++) {
    var pw = dw.charAt(Of);
    p(q, S, D, pw, pw);
}
var Wl = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
for (var Lf = 0; Lf < Wl.length; Lf++) {
    var Vo = Wl.charAt(Lf);
    p(h, S, oe, Vo, Vo), p(q, S, D, Vo, Vo);
}
p(h, N, D, "C", "ℂ");
p(q, N, D, "C", "ℂ");
p(h, N, D, "H", "ℍ");
p(q, N, D, "H", "ℍ");
p(h, N, D, "N", "ℕ");
p(q, N, D, "N", "ℕ");
p(h, N, D, "P", "ℙ");
p(q, N, D, "P", "ℙ");
p(h, N, D, "Q", "ℚ");
p(q, N, D, "Q", "ℚ");
p(h, N, D, "R", "ℝ");
p(q, N, D, "R", "ℝ");
p(h, N, D, "Z", "ℤ");
p(q, N, D, "Z", "ℤ");
p(h, S, oe, "h", "ℎ");
p(q, S, oe, "h", "ℎ");
var ue = "";
for (var mt = 0; mt < Wl.length; mt++) {
    var qe = Wl.charAt(mt);
    (ue = String.fromCharCode(55349, 56320 + mt)),
        p(h, S, oe, qe, ue),
        p(q, S, D, qe, ue),
        (ue = String.fromCharCode(55349, 56372 + mt)),
        p(h, S, oe, qe, ue),
        p(q, S, D, qe, ue),
        (ue = String.fromCharCode(55349, 56424 + mt)),
        p(h, S, oe, qe, ue),
        p(q, S, D, qe, ue),
        (ue = String.fromCharCode(55349, 56580 + mt)),
        p(h, S, oe, qe, ue),
        p(q, S, D, qe, ue),
        (ue = String.fromCharCode(55349, 56684 + mt)),
        p(h, S, oe, qe, ue),
        p(q, S, D, qe, ue),
        (ue = String.fromCharCode(55349, 56736 + mt)),
        p(h, S, oe, qe, ue),
        p(q, S, D, qe, ue),
        (ue = String.fromCharCode(55349, 56788 + mt)),
        p(h, S, oe, qe, ue),
        p(q, S, D, qe, ue),
        (ue = String.fromCharCode(55349, 56840 + mt)),
        p(h, S, oe, qe, ue),
        p(q, S, D, qe, ue),
        (ue = String.fromCharCode(55349, 56944 + mt)),
        p(h, S, oe, qe, ue),
        p(q, S, D, qe, ue),
        mt < 26 &&
            ((ue = String.fromCharCode(55349, 56632 + mt)),
            p(h, S, oe, qe, ue),
            p(q, S, D, qe, ue),
            (ue = String.fromCharCode(55349, 56476 + mt)),
            p(h, S, oe, qe, ue),
            p(q, S, D, qe, ue));
}
ue = String.fromCharCode(55349, 56668);
p(h, S, oe, "k", ue);
p(q, S, D, "k", ue);
for (var Br = 0; Br < 10; Br++) {
    var ir = Br.toString();
    (ue = String.fromCharCode(55349, 57294 + Br)),
        p(h, S, oe, ir, ue),
        p(q, S, D, ir, ue),
        (ue = String.fromCharCode(55349, 57314 + Br)),
        p(h, S, oe, ir, ue),
        p(q, S, D, ir, ue),
        (ue = String.fromCharCode(55349, 57324 + Br)),
        p(h, S, oe, ir, ue),
        p(q, S, D, ir, ue),
        (ue = String.fromCharCode(55349, 57334 + Br)),
        p(h, S, oe, ir, ue),
        p(q, S, D, ir, ue);
}
var oh = "ÐÞþ";
for (var Df = 0; Df < oh.length; Df++) {
    var Wo = oh.charAt(Df);
    p(h, S, oe, Wo, Wo), p(q, S, D, Wo, Wo);
}
var Yo = [
        ["mathbf", "textbf", "Main-Bold"],
        ["mathbf", "textbf", "Main-Bold"],
        ["mathnormal", "textit", "Math-Italic"],
        ["mathnormal", "textit", "Math-Italic"],
        ["boldsymbol", "boldsymbol", "Main-BoldItalic"],
        ["boldsymbol", "boldsymbol", "Main-BoldItalic"],
        ["mathscr", "textscr", "Script-Regular"],
        ["", "", ""],
        ["", "", ""],
        ["", "", ""],
        ["mathfrak", "textfrak", "Fraktur-Regular"],
        ["mathfrak", "textfrak", "Fraktur-Regular"],
        ["mathbb", "textbb", "AMS-Regular"],
        ["mathbb", "textbb", "AMS-Regular"],
        ["mathboldfrak", "textboldfrak", "Fraktur-Regular"],
        ["mathboldfrak", "textboldfrak", "Fraktur-Regular"],
        ["mathsf", "textsf", "SansSerif-Regular"],
        ["mathsf", "textsf", "SansSerif-Regular"],
        ["mathboldsf", "textboldsf", "SansSerif-Bold"],
        ["mathboldsf", "textboldsf", "SansSerif-Bold"],
        ["mathitsf", "textitsf", "SansSerif-Italic"],
        ["mathitsf", "textitsf", "SansSerif-Italic"],
        ["", "", ""],
        ["", "", ""],
        ["mathtt", "texttt", "Typewriter-Regular"],
        ["mathtt", "texttt", "Typewriter-Regular"],
    ],
    fw = [
        ["mathbf", "textbf", "Main-Bold"],
        ["", "", ""],
        ["mathsf", "textsf", "SansSerif-Regular"],
        ["mathboldsf", "textboldsf", "SansSerif-Bold"],
        ["mathtt", "texttt", "Typewriter-Regular"],
    ],
    Lq = function (t, n) {
        var r = t.charCodeAt(0),
            a = t.charCodeAt(1),
            i = (r - 55296) * 1024 + (a - 56320) + 65536,
            o = n === "math" ? 0 : 1;
        if (119808 <= i && i < 120484) {
            var l = Math.floor((i - 119808) / 26);
            return [Yo[l][2], Yo[l][o]];
        } else if (120782 <= i && i <= 120831) {
            var s = Math.floor((i - 120782) / 10);
            return [fw[s][2], fw[s][o]];
        } else {
            if (i === 120485 || i === 120486) return [Yo[0][2], Yo[0][o]];
            if (120486 < i && i < 120782) return ["", ""];
            throw new H("Unsupported character: " + t);
        }
    },
    Is = function (t, n, r) {
        return Ce[r][t] && Ce[r][t].replace && (t = Ce[r][t].replace), { value: t, metrics: Qg(t, n, r) };
    },
    fn = function (t, n, r, a, i) {
        var o = Is(t, n, r),
            l = o.metrics;
        t = o.value;
        var s;
        if (l) {
            var u = l.italic;
            (r === "text" || (a && a.font === "mathit")) && (u = 0), (s = new rn(t, l.height, l.depth, u, l.skew, l.width, i));
        } else
            typeof console < "u" && console.warn("No character metrics " + ("for '" + t + "' in style '" + n + "' and mode '" + r + "'")),
                (s = new rn(t, 0, 0, 0, 0, 0, i));
        if (a) {
            (s.maxFontSize = a.sizeMultiplier), a.style.isTight() && s.classes.push("mtight");
            var c = a.getColor();
            c && (s.style.color = c);
        }
        return s;
    },
    Dq = function (t, n, r, a) {
        return (
            a === void 0 && (a = []),
            r.font === "boldsymbol" && Is(t, "Main-Bold", n).metrics
                ? fn(t, "Main-Bold", n, r, a.concat(["mathbf"]))
                : t === "\\" || Ce[n][t].font === "main"
                  ? fn(t, "Main-Regular", n, r, a)
                  : fn(t, "AMS-Regular", n, r, a.concat(["amsrm"]))
        );
    },
    Mq = function (t, n, r, a, i) {
        return i !== "textord" && Is(t, "Math-BoldItalic", n).metrics
            ? { fontName: "Math-BoldItalic", fontClass: "boldsymbol" }
            : { fontName: "Main-Bold", fontClass: "mathbf" };
    },
    Fq = function (t, n, r) {
        var a = t.mode,
            i = t.text,
            o = ["mord"],
            l = a === "math" || (a === "text" && n.font),
            s = l ? n.font : n.fontFamily,
            u = "",
            c = "";
        if ((i.charCodeAt(0) === 55349 && ([u, c] = Lq(i, a)), u.length > 0)) return fn(i, u, a, n, o.concat(c));
        if (s) {
            var d, m;
            if (s === "boldsymbol") {
                var f = Mq(i, a, n, o, r);
                (d = f.fontName), (m = [f.fontClass]);
            } else l ? ((d = px[s].fontName), (m = [s])) : ((d = Ko(s, n.fontWeight, n.fontShape)), (m = [s, n.fontWeight, n.fontShape]));
            if (Is(i, d, a).metrics) return fn(i, d, a, n, o.concat(m));
            if (ux.hasOwnProperty(i) && d.slice(0, 10) === "Typewriter") {
                for (var b = [], E = 0; E < i.length; E++) b.push(fn(i[E], d, a, n, o.concat(m)));
                return dx(b);
            }
        }
        if (r === "mathord") return fn(i, "Math-Italic", a, n, o.concat(["mathnormal"]));
        if (r === "textord") {
            var I = Ce[a][i] && Ce[a][i].font;
            if (I === "ams") {
                var y = Ko("amsrm", n.fontWeight, n.fontShape);
                return fn(i, y, a, n, o.concat("amsrm", n.fontWeight, n.fontShape));
            } else if (I === "main" || !I) {
                var g = Ko("textrm", n.fontWeight, n.fontShape);
                return fn(i, g, a, n, o.concat(n.fontWeight, n.fontShape));
            } else {
                var v = Ko(I, n.fontWeight, n.fontShape);
                return fn(i, v, a, n, o.concat(v, n.fontWeight, n.fontShape));
            }
        } else throw new Error("unexpected type: " + r + " in makeOrd");
    },
    Pq = (e, t) => {
        if (Tr(e.classes) !== Tr(t.classes) || e.skew !== t.skew || e.maxFontSize !== t.maxFontSize) return !1;
        if (e.classes.length === 1) {
            var n = e.classes[0];
            if (n === "mbin" || n === "mord") return !1;
        }
        for (var r in e.style) if (e.style.hasOwnProperty(r) && e.style[r] !== t.style[r]) return !1;
        for (var a in t.style) if (t.style.hasOwnProperty(a) && e.style[a] !== t.style[a]) return !1;
        return !0;
    },
    Bq = e => {
        for (var t = 0; t < e.length - 1; t++) {
            var n = e[t],
                r = e[t + 1];
            n instanceof rn &&
                r instanceof rn &&
                Pq(n, r) &&
                ((n.text += r.text),
                (n.height = Math.max(n.height, r.height)),
                (n.depth = Math.max(n.depth, r.depth)),
                (n.italic = r.italic),
                e.splice(t + 1, 1),
                t--);
        }
        return e;
    },
    e1 = function (t) {
        for (var n = 0, r = 0, a = 0, i = 0; i < t.children.length; i++) {
            var o = t.children[i];
            o.height > n && (n = o.height), o.depth > r && (r = o.depth), o.maxFontSize > a && (a = o.maxFontSize);
        }
        (t.height = n), (t.depth = r), (t.maxFontSize = a);
    },
    At = function (t, n, r, a) {
        var i = new Eo(t, n, r, a);
        return e1(i), i;
    },
    cx = (e, t, n, r) => new Eo(e, t, n, r),
    Uq = function (t, n, r) {
        var a = At([t], [], n);
        return (
            (a.height = Math.max(r || n.fontMetrics().defaultRuleThickness, n.minRuleThickness)),
            (a.style.borderBottomWidth = K(a.height)),
            (a.maxFontSize = 1),
            a
        );
    },
    zq = function (t, n, r, a) {
        var i = new Jg(t, n, r, a);
        return e1(i), i;
    },
    dx = function (t) {
        var n = new vo(t);
        return e1(n), n;
    },
    $q = function (t, n) {
        return t instanceof vo ? At([], [t], n) : t;
    },
    qq = function (t) {
        if (t.positionType === "individualShift") {
            for (var n = t.children, r = [n[0]], a = -n[0].shift - n[0].elem.depth, i = a, o = 1; o < n.length; o++) {
                var l = -n[o].shift - i - n[o].elem.depth,
                    s = l - (n[o - 1].elem.height + n[o - 1].elem.depth);
                (i = i + l), r.push({ type: "kern", size: s }), r.push(n[o]);
            }
            return { children: r, depth: a };
        }
        var u;
        if (t.positionType === "top") {
            for (var c = t.positionData, d = 0; d < t.children.length; d++) {
                var m = t.children[d];
                c -= m.type === "kern" ? m.size : m.elem.height + m.elem.depth;
            }
            u = c;
        } else if (t.positionType === "bottom") u = -t.positionData;
        else {
            var f = t.children[0];
            if (f.type !== "elem") throw new Error('First child must have type "elem".');
            if (t.positionType === "shift") u = -f.elem.depth - t.positionData;
            else if (t.positionType === "firstBaseline") u = -f.elem.depth;
            else throw new Error("Invalid positionType " + t.positionType + ".");
        }
        return { children: t.children, depth: u };
    },
    Gq = function (t, n) {
        for (var { children: r, depth: a } = qq(t), i = 0, o = 0; o < r.length; o++) {
            var l = r[o];
            if (l.type === "elem") {
                var s = l.elem;
                i = Math.max(i, s.maxFontSize, s.height);
            }
        }
        i += 2;
        var u = At(["pstrut"], []);
        u.style.height = K(i);
        for (var c = [], d = a, m = a, f = a, b = 0; b < r.length; b++) {
            var E = r[b];
            if (E.type === "kern") f += E.size;
            else {
                var I = E.elem,
                    y = E.wrapperClasses || [],
                    g = E.wrapperStyle || {},
                    v = At(y, [u, I], void 0, g);
                (v.style.top = K(-i - f - I.depth)),
                    E.marginLeft && (v.style.marginLeft = E.marginLeft),
                    E.marginRight && (v.style.marginRight = E.marginRight),
                    c.push(v),
                    (f += I.height + I.depth);
            }
            (d = Math.min(d, f)), (m = Math.max(m, f));
        }
        var T = At(["vlist"], c);
        T.style.height = K(m);
        var R;
        if (d < 0) {
            var k = At([], []),
                L = At(["vlist"], [k]);
            L.style.height = K(-d);
            var F = At(["vlist-s"], [new rn("​")]);
            R = [At(["vlist-r"], [T, F]), At(["vlist-r"], [L])];
        } else R = [At(["vlist-r"], [T])];
        var M = At(["vlist-t"], R);
        return R.length === 2 && M.classes.push("vlist-t2"), (M.height = m), (M.depth = -d), M;
    },
    Hq = (e, t) => {
        var n = At(["mspace"], [], t),
            r = Ue(e, t);
        return (n.style.marginRight = K(r)), n;
    },
    Ko = function (t, n, r) {
        var a = "";
        switch (t) {
            case "amsrm":
                a = "AMS";
                break;
            case "textrm":
                a = "Main";
                break;
            case "textsf":
                a = "SansSerif";
                break;
            case "texttt":
                a = "Typewriter";
                break;
            default:
                a = t;
        }
        var i;
        return (
            n === "textbf" && r === "textit" ? (i = "BoldItalic") : n === "textbf" ? (i = "Bold") : n === "textit" ? (i = "Italic") : (i = "Regular"),
            a + "-" + i
        );
    },
    px = {
        mathbf: { variant: "bold", fontName: "Main-Bold" },
        mathrm: { variant: "normal", fontName: "Main-Regular" },
        textit: { variant: "italic", fontName: "Main-Italic" },
        mathit: { variant: "italic", fontName: "Main-Italic" },
        mathnormal: { variant: "italic", fontName: "Math-Italic" },
        mathsfit: { variant: "sans-serif-italic", fontName: "SansSerif-Italic" },
        mathbb: { variant: "double-struck", fontName: "AMS-Regular" },
        mathcal: { variant: "script", fontName: "Caligraphic-Regular" },
        mathfrak: { variant: "fraktur", fontName: "Fraktur-Regular" },
        mathscr: { variant: "script", fontName: "Script-Regular" },
        mathsf: { variant: "sans-serif", fontName: "SansSerif-Regular" },
        mathtt: { variant: "monospace", fontName: "Typewriter-Regular" },
    },
    fx = {
        vec: ["vec", 0.471, 0.714],
        oiintSize1: ["oiintSize1", 0.957, 0.499],
        oiintSize2: ["oiintSize2", 1.472, 0.659],
        oiiintSize1: ["oiiintSize1", 1.304, 0.499],
        oiiintSize2: ["oiiintSize2", 1.98, 0.659],
    },
    jq = function (t, n) {
        var [r, a, i] = fx[t],
            o = new Ar(r),
            l = new Xn([o], { width: K(a), height: K(i), style: "width:" + K(a), viewBox: "0 0 " + 1e3 * a + " " + 1e3 * i, preserveAspectRatio: "xMinYMin" }),
            s = cx(["overlay"], [l], n);
        return (s.height = i), (s.style.height = K(i)), (s.style.width = K(a)), s;
    },
    P = {
        fontMap: px,
        makeSymbol: fn,
        mathsym: Dq,
        makeSpan: At,
        makeSvgSpan: cx,
        makeLineSpan: Uq,
        makeAnchor: zq,
        makeFragment: dx,
        wrapFragment: $q,
        makeVList: Gq,
        makeOrd: Fq,
        makeGlue: Hq,
        staticSvg: jq,
        svgData: fx,
        tryCombineChars: Bq,
    },
    Pe = { number: 3, unit: "mu" },
    Ur = { number: 4, unit: "mu" },
    Fn = { number: 5, unit: "mu" },
    Vq = {
        mord: { mop: Pe, mbin: Ur, mrel: Fn, minner: Pe },
        mop: { mord: Pe, mop: Pe, mrel: Fn, minner: Pe },
        mbin: { mord: Ur, mop: Ur, mopen: Ur, minner: Ur },
        mrel: { mord: Fn, mop: Fn, mopen: Fn, minner: Fn },
        mopen: {},
        mclose: { mop: Pe, mbin: Ur, mrel: Fn, minner: Pe },
        mpunct: { mord: Pe, mop: Pe, mrel: Fn, mopen: Pe, mclose: Pe, mpunct: Pe, minner: Pe },
        minner: { mord: Pe, mop: Pe, mbin: Ur, mrel: Fn, mopen: Pe, mpunct: Pe, minner: Pe },
    },
    Wq = { mord: { mop: Pe }, mop: { mord: Pe, mop: Pe }, mbin: {}, mrel: {}, mopen: {}, mclose: { mop: Pe }, mpunct: {}, minner: { mop: Pe } },
    mx = {},
    Yl = {},
    Kl = {};
function Z(e) {
    for (
        var { type: t, names: n, props: r, handler: a, htmlBuilder: i, mathmlBuilder: o } = e,
            l = {
                type: t,
                numArgs: r.numArgs,
                argTypes: r.argTypes,
                allowedInArgument: !!r.allowedInArgument,
                allowedInText: !!r.allowedInText,
                allowedInMath: r.allowedInMath === void 0 ? !0 : r.allowedInMath,
                numOptionalArgs: r.numOptionalArgs || 0,
                infix: !!r.infix,
                primitive: !!r.primitive,
                handler: a,
            },
            s = 0;
        s < n.length;
        ++s
    )
        mx[n[s]] = l;
    t && (i && (Yl[t] = i), o && (Kl[t] = o));
}
function ia(e) {
    var { type: t, htmlBuilder: n, mathmlBuilder: r } = e;
    Z({
        type: t,
        names: [],
        props: { numArgs: 0 },
        handler() {
            throw new Error("Should never be called.");
        },
        htmlBuilder: n,
        mathmlBuilder: r,
    });
}
var Xl = function (t) {
        return t.type === "ordgroup" && t.body.length === 1 ? t.body[0] : t;
    },
    Ve = function (t) {
        return t.type === "ordgroup" ? t.body : [t];
    },
    Zn = P.makeSpan,
    Yq = ["leftmost", "mbin", "mopen", "mrel", "mop", "mpunct"],
    Kq = ["rightmost", "mrel", "mclose", "mpunct"],
    Xq = { display: le.DISPLAY, text: le.TEXT, script: le.SCRIPT, scriptscript: le.SCRIPTSCRIPT },
    Zq = { mord: "mord", mop: "mop", mbin: "mbin", mrel: "mrel", mopen: "mopen", mclose: "mclose", mpunct: "mpunct", minner: "minner" },
    Je = function (t, n, r, a) {
        a === void 0 && (a = [null, null]);
        for (var i = [], o = 0; o < t.length; o++) {
            var l = we(t[o], n);
            if (l instanceof vo) {
                var s = l.children;
                i.push(...s);
            } else i.push(l);
        }
        if ((P.tryCombineChars(i), !r)) return i;
        var u = n;
        if (t.length === 1) {
            var c = t[0];
            c.type === "sizing" ? (u = n.havingSize(c.size)) : c.type === "styling" && (u = n.havingStyle(Xq[c.style]));
        }
        var d = Zn([a[0] || "leftmost"], [], n),
            m = Zn([a[1] || "rightmost"], [], n),
            f = r === "root";
        return (
            mw(
                i,
                (b, E) => {
                    var I = E.classes[0],
                        y = b.classes[0];
                    I === "mbin" && ie.contains(Kq, y) ? (E.classes[0] = "mord") : y === "mbin" && ie.contains(Yq, I) && (b.classes[0] = "mord");
                },
                { node: d },
                m,
                f,
            ),
            mw(
                i,
                (b, E) => {
                    var I = lh(E),
                        y = lh(b),
                        g = I && y ? (b.hasClass("mtight") ? Wq[I][y] : Vq[I][y]) : null;
                    if (g) return P.makeGlue(g, u);
                },
                { node: d },
                m,
                f,
            ),
            i
        );
    },
    mw = function e(t, n, r, a, i) {
        a && t.push(a);
        for (var o = 0; o < t.length; o++) {
            var l = t[o],
                s = hx(l);
            if (s) {
                e(s.children, n, r, null, i);
                continue;
            }
            var u = !l.hasClass("mspace");
            if (u) {
                var c = n(l, r.node);
                c && (r.insertAfter ? r.insertAfter(c) : (t.unshift(c), o++));
            }
            u ? (r.node = l) : i && l.hasClass("newline") && (r.node = Zn(["leftmost"])),
                (r.insertAfter = (d => m => {
                    t.splice(d + 1, 0, m), o++;
                })(o));
        }
        a && t.pop();
    },
    hx = function (t) {
        return t instanceof vo || t instanceof Jg || (t instanceof Eo && t.hasClass("enclosing")) ? t : null;
    },
    Qq = function e(t, n) {
        var r = hx(t);
        if (r) {
            var a = r.children;
            if (a.length) {
                if (n === "right") return e(a[a.length - 1], "right");
                if (n === "left") return e(a[0], "left");
            }
        }
        return t;
    },
    lh = function (t, n) {
        return t ? (n && (t = Qq(t, n)), Zq[t.classes[0]] || null) : null;
    },
    io = function (t, n) {
        var r = ["nulldelimiter"].concat(t.baseSizingClasses());
        return Zn(n.concat(r));
    },
    we = function (t, n, r) {
        if (!t) return Zn();
        if (Yl[t.type]) {
            var a = Yl[t.type](t, n);
            if (r && n.size !== r.size) {
                a = Zn(n.sizingClasses(r), [a], n);
                var i = n.sizeMultiplier / r.sizeMultiplier;
                (a.height *= i), (a.depth *= i);
            }
            return a;
        } else throw new H("Got group of unknown type: '" + t.type + "'");
    };
function Xo(e, t) {
    var n = Zn(["base"], e, t),
        r = Zn(["strut"]);
    return (r.style.height = K(n.height + n.depth)), n.depth && (r.style.verticalAlign = K(-n.depth)), n.children.unshift(r), n;
}
function sh(e, t) {
    var n = null;
    e.length === 1 && e[0].type === "tag" && ((n = e[0].tag), (e = e[0].body));
    var r = Je(e, t, "root"),
        a;
    r.length === 2 && r[1].hasClass("tag") && (a = r.pop());
    for (var i = [], o = [], l = 0; l < r.length; l++)
        if ((o.push(r[l]), r[l].hasClass("mbin") || r[l].hasClass("mrel") || r[l].hasClass("allowbreak"))) {
            for (var s = !1; l < r.length - 1 && r[l + 1].hasClass("mspace") && !r[l + 1].hasClass("newline"); )
                l++, o.push(r[l]), r[l].hasClass("nobreak") && (s = !0);
            s || (i.push(Xo(o, t)), (o = []));
        } else r[l].hasClass("newline") && (o.pop(), o.length > 0 && (i.push(Xo(o, t)), (o = [])), i.push(r[l]));
    o.length > 0 && i.push(Xo(o, t));
    var u;
    n ? ((u = Xo(Je(n, t, !0))), (u.classes = ["tag"]), i.push(u)) : a && i.push(a);
    var c = Zn(["katex-html"], i);
    if ((c.setAttribute("aria-hidden", "true"), u)) {
        var d = u.children[0];
        (d.style.height = K(c.height + c.depth)), c.depth && (d.style.verticalAlign = K(-c.depth));
    }
    return c;
}
function gx(e) {
    return new vo(e);
}
class Ut {
    constructor(t, n, r) {
        (this.type = void 0),
            (this.attributes = void 0),
            (this.children = void 0),
            (this.classes = void 0),
            (this.type = t),
            (this.attributes = {}),
            (this.children = n || []),
            (this.classes = r || []);
    }
    setAttribute(t, n) {
        this.attributes[t] = n;
    }
    getAttribute(t) {
        return this.attributes[t];
    }
    toNode() {
        var t = document.createElementNS("http://www.w3.org/1998/Math/MathML", this.type);
        for (var n in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, n) && t.setAttribute(n, this.attributes[n]);
        this.classes.length > 0 && (t.className = Tr(this.classes));
        for (var r = 0; r < this.children.length; r++)
            if (this.children[r] instanceof xn && this.children[r + 1] instanceof xn) {
                for (var a = this.children[r].toText() + this.children[++r].toText(); this.children[r + 1] instanceof xn; ) a += this.children[++r].toText();
                t.appendChild(new xn(a).toNode());
            } else t.appendChild(this.children[r].toNode());
        return t;
    }
    toMarkup() {
        var t = "<" + this.type;
        for (var n in this.attributes)
            Object.prototype.hasOwnProperty.call(this.attributes, n) && ((t += " " + n + '="'), (t += ie.escape(this.attributes[n])), (t += '"'));
        this.classes.length > 0 && (t += ' class ="' + ie.escape(Tr(this.classes)) + '"'), (t += ">");
        for (var r = 0; r < this.children.length; r++) t += this.children[r].toMarkup();
        return (t += "</" + this.type + ">"), t;
    }
    toText() {
        return this.children.map(t => t.toText()).join("");
    }
}
class xn {
    constructor(t) {
        (this.text = void 0), (this.text = t);
    }
    toNode() {
        return document.createTextNode(this.text);
    }
    toMarkup() {
        return ie.escape(this.toText());
    }
    toText() {
        return this.text;
    }
}
class Jq {
    constructor(t) {
        (this.width = void 0),
            (this.character = void 0),
            (this.width = t),
            t >= 0.05555 && t <= 0.05556
                ? (this.character = " ")
                : t >= 0.1666 && t <= 0.1667
                  ? (this.character = " ")
                  : t >= 0.2222 && t <= 0.2223
                    ? (this.character = " ")
                    : t >= 0.2777 && t <= 0.2778
                      ? (this.character = "  ")
                      : t >= -0.05556 && t <= -0.05555
                        ? (this.character = " ⁣")
                        : t >= -0.1667 && t <= -0.1666
                          ? (this.character = " ⁣")
                          : t >= -0.2223 && t <= -0.2222
                            ? (this.character = " ⁣")
                            : t >= -0.2778 && t <= -0.2777
                              ? (this.character = " ⁣")
                              : (this.character = null);
    }
    toNode() {
        if (this.character) return document.createTextNode(this.character);
        var t = document.createElementNS("http://www.w3.org/1998/Math/MathML", "mspace");
        return t.setAttribute("width", K(this.width)), t;
    }
    toMarkup() {
        return this.character ? "<mtext>" + this.character + "</mtext>" : '<mspace width="' + K(this.width) + '"/>';
    }
    toText() {
        return this.character ? this.character : " ";
    }
}
var G = { MathNode: Ut, TextNode: xn, SpaceNode: Jq, newDocumentFragment: gx },
    an = function (t, n, r) {
        return (
            Ce[n][t] &&
                Ce[n][t].replace &&
                t.charCodeAt(0) !== 55349 &&
                !(ux.hasOwnProperty(t) && r && ((r.fontFamily && r.fontFamily.slice(4, 6) === "tt") || (r.font && r.font.slice(4, 6) === "tt"))) &&
                (t = Ce[n][t].replace),
            new G.TextNode(t)
        );
    },
    t1 = function (t) {
        return t.length === 1 ? t[0] : new G.MathNode("mrow", t);
    },
    n1 = function (t, n) {
        if (n.fontFamily === "texttt") return "monospace";
        if (n.fontFamily === "textsf")
            return n.fontShape === "textit" && n.fontWeight === "textbf"
                ? "sans-serif-bold-italic"
                : n.fontShape === "textit"
                  ? "sans-serif-italic"
                  : n.fontWeight === "textbf"
                    ? "bold-sans-serif"
                    : "sans-serif";
        if (n.fontShape === "textit" && n.fontWeight === "textbf") return "bold-italic";
        if (n.fontShape === "textit") return "italic";
        if (n.fontWeight === "textbf") return "bold";
        var r = n.font;
        if (!r || r === "mathnormal") return null;
        var a = t.mode;
        if (r === "mathit") return "italic";
        if (r === "boldsymbol") return t.type === "textord" ? "bold" : "bold-italic";
        if (r === "mathbf") return "bold";
        if (r === "mathbb") return "double-struck";
        if (r === "mathsfit") return "sans-serif-italic";
        if (r === "mathfrak") return "fraktur";
        if (r === "mathscr" || r === "mathcal") return "script";
        if (r === "mathsf") return "sans-serif";
        if (r === "mathtt") return "monospace";
        var i = t.text;
        if (ie.contains(["\\imath", "\\jmath"], i)) return null;
        Ce[a][i] && Ce[a][i].replace && (i = Ce[a][i].replace);
        var o = P.fontMap[r].fontName;
        return Qg(i, o, a) ? P.fontMap[r].variant : null;
    };
function Mf(e) {
    if (!e) return !1;
    if (e.type === "mi" && e.children.length === 1) {
        var t = e.children[0];
        return t instanceof xn && t.text === ".";
    } else if (
        e.type === "mo" &&
        e.children.length === 1 &&
        e.getAttribute("separator") === "true" &&
        e.getAttribute("lspace") === "0em" &&
        e.getAttribute("rspace") === "0em"
    ) {
        var n = e.children[0];
        return n instanceof xn && n.text === ",";
    } else return !1;
}
var Dt = function (t, n, r) {
        if (t.length === 1) {
            var a = Ie(t[0], n);
            return r && a instanceof Ut && a.type === "mo" && (a.setAttribute("lspace", "0em"), a.setAttribute("rspace", "0em")), [a];
        }
        for (var i = [], o, l = 0; l < t.length; l++) {
            var s = Ie(t[l], n);
            if (s instanceof Ut && o instanceof Ut) {
                if (s.type === "mtext" && o.type === "mtext" && s.getAttribute("mathvariant") === o.getAttribute("mathvariant")) {
                    o.children.push(...s.children);
                    continue;
                } else if (s.type === "mn" && o.type === "mn") {
                    o.children.push(...s.children);
                    continue;
                } else if (Mf(s) && o.type === "mn") {
                    o.children.push(...s.children);
                    continue;
                } else if (s.type === "mn" && Mf(o)) (s.children = [...o.children, ...s.children]), i.pop();
                else if ((s.type === "msup" || s.type === "msub") && s.children.length >= 1 && (o.type === "mn" || Mf(o))) {
                    var u = s.children[0];
                    u instanceof Ut && u.type === "mn" && ((u.children = [...o.children, ...u.children]), i.pop());
                } else if (o.type === "mi" && o.children.length === 1) {
                    var c = o.children[0];
                    if (c instanceof xn && c.text === "̸" && (s.type === "mo" || s.type === "mi" || s.type === "mn")) {
                        var d = s.children[0];
                        d instanceof xn && d.text.length > 0 && ((d.text = d.text.slice(0, 1) + "̸" + d.text.slice(1)), i.pop());
                    }
                }
            }
            i.push(s), (o = s);
        }
        return i;
    },
    xr = function (t, n, r) {
        return t1(Dt(t, n, r));
    },
    Ie = function (t, n) {
        if (!t) return new G.MathNode("mrow");
        if (Kl[t.type]) {
            var r = Kl[t.type](t, n);
            return r;
        } else throw new H("Got group of unknown type: '" + t.type + "'");
    };
function hw(e, t, n, r, a) {
    var i = Dt(e, n),
        o;
    i.length === 1 && i[0] instanceof Ut && ie.contains(["mrow", "mtable"], i[0].type) ? (o = i[0]) : (o = new G.MathNode("mrow", i));
    var l = new G.MathNode("annotation", [new G.TextNode(t)]);
    l.setAttribute("encoding", "application/x-tex");
    var s = new G.MathNode("semantics", [o, l]),
        u = new G.MathNode("math", [s]);
    u.setAttribute("xmlns", "http://www.w3.org/1998/Math/MathML"), r && u.setAttribute("display", "block");
    var c = a ? "katex" : "katex-mathml";
    return P.makeSpan([c], [u]);
}
var bx = function (t) {
        return new Un({ style: t.displayMode ? le.DISPLAY : le.TEXT, maxSize: t.maxSize, minRuleThickness: t.minRuleThickness });
    },
    yx = function (t, n) {
        if (n.displayMode) {
            var r = ["katex-display"];
            n.leqno && r.push("leqno"), n.fleqn && r.push("fleqn"), (t = P.makeSpan(r, [t]));
        }
        return t;
    },
    eG = function (t, n, r) {
        var a = bx(r),
            i;
        if (r.output === "mathml") return hw(t, n, a, r.displayMode, !0);
        if (r.output === "html") {
            var o = sh(t, a);
            i = P.makeSpan(["katex"], [o]);
        } else {
            var l = hw(t, n, a, r.displayMode, !1),
                s = sh(t, a);
            i = P.makeSpan(["katex"], [l, s]);
        }
        return yx(i, r);
    },
    tG = function (t, n, r) {
        var a = bx(r),
            i = sh(t, a),
            o = P.makeSpan(["katex"], [i]);
        return yx(o, r);
    },
    nG = {
        widehat: "^",
        widecheck: "ˇ",
        widetilde: "~",
        utilde: "~",
        overleftarrow: "←",
        underleftarrow: "←",
        xleftarrow: "←",
        overrightarrow: "→",
        underrightarrow: "→",
        xrightarrow: "→",
        underbrace: "⏟",
        overbrace: "⏞",
        overgroup: "⏠",
        undergroup: "⏡",
        overleftrightarrow: "↔",
        underleftrightarrow: "↔",
        xleftrightarrow: "↔",
        Overrightarrow: "⇒",
        xRightarrow: "⇒",
        overleftharpoon: "↼",
        xleftharpoonup: "↼",
        overrightharpoon: "⇀",
        xrightharpoonup: "⇀",
        xLeftarrow: "⇐",
        xLeftrightarrow: "⇔",
        xhookleftarrow: "↩",
        xhookrightarrow: "↪",
        xmapsto: "↦",
        xrightharpoondown: "⇁",
        xleftharpoondown: "↽",
        xrightleftharpoons: "⇌",
        xleftrightharpoons: "⇋",
        xtwoheadleftarrow: "↞",
        xtwoheadrightarrow: "↠",
        xlongequal: "=",
        xtofrom: "⇄",
        xrightleftarrows: "⇄",
        xrightequilibrium: "⇌",
        xleftequilibrium: "⇋",
        "\\cdrightarrow": "→",
        "\\cdleftarrow": "←",
        "\\cdlongequal": "=",
    },
    rG = function (t) {
        var n = new G.MathNode("mo", [new G.TextNode(nG[t.replace(/^\\/, "")])]);
        return n.setAttribute("stretchy", "true"), n;
    },
    aG = {
        overrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"],
        overleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"],
        underrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"],
        underleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"],
        xrightarrow: [["rightarrow"], 1.469, 522, "xMaxYMin"],
        "\\cdrightarrow": [["rightarrow"], 3, 522, "xMaxYMin"],
        xleftarrow: [["leftarrow"], 1.469, 522, "xMinYMin"],
        "\\cdleftarrow": [["leftarrow"], 3, 522, "xMinYMin"],
        Overrightarrow: [["doublerightarrow"], 0.888, 560, "xMaxYMin"],
        xRightarrow: [["doublerightarrow"], 1.526, 560, "xMaxYMin"],
        xLeftarrow: [["doubleleftarrow"], 1.526, 560, "xMinYMin"],
        overleftharpoon: [["leftharpoon"], 0.888, 522, "xMinYMin"],
        xleftharpoonup: [["leftharpoon"], 0.888, 522, "xMinYMin"],
        xleftharpoondown: [["leftharpoondown"], 0.888, 522, "xMinYMin"],
        overrightharpoon: [["rightharpoon"], 0.888, 522, "xMaxYMin"],
        xrightharpoonup: [["rightharpoon"], 0.888, 522, "xMaxYMin"],
        xrightharpoondown: [["rightharpoondown"], 0.888, 522, "xMaxYMin"],
        xlongequal: [["longequal"], 0.888, 334, "xMinYMin"],
        "\\cdlongequal": [["longequal"], 3, 334, "xMinYMin"],
        xtwoheadleftarrow: [["twoheadleftarrow"], 0.888, 334, "xMinYMin"],
        xtwoheadrightarrow: [["twoheadrightarrow"], 0.888, 334, "xMaxYMin"],
        overleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522],
        overbrace: [["leftbrace", "midbrace", "rightbrace"], 1.6, 548],
        underbrace: [["leftbraceunder", "midbraceunder", "rightbraceunder"], 1.6, 548],
        underleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522],
        xleftrightarrow: [["leftarrow", "rightarrow"], 1.75, 522],
        xLeftrightarrow: [["doubleleftarrow", "doublerightarrow"], 1.75, 560],
        xrightleftharpoons: [["leftharpoondownplus", "rightharpoonplus"], 1.75, 716],
        xleftrightharpoons: [["leftharpoonplus", "rightharpoondownplus"], 1.75, 716],
        xhookleftarrow: [["leftarrow", "righthook"], 1.08, 522],
        xhookrightarrow: [["lefthook", "rightarrow"], 1.08, 522],
        overlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522],
        underlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522],
        overgroup: [["leftgroup", "rightgroup"], 0.888, 342],
        undergroup: [["leftgroupunder", "rightgroupunder"], 0.888, 342],
        xmapsto: [["leftmapsto", "rightarrow"], 1.5, 522],
        xtofrom: [["leftToFrom", "rightToFrom"], 1.75, 528],
        xrightleftarrows: [["baraboveleftarrow", "rightarrowabovebar"], 1.75, 901],
        xrightequilibrium: [["baraboveshortleftharpoon", "rightharpoonaboveshortbar"], 1.75, 716],
        xleftequilibrium: [["shortbaraboveleftharpoon", "shortrightharpoonabovebar"], 1.75, 716],
    },
    iG = function (t) {
        return t.type === "ordgroup" ? t.body.length : 1;
    },
    oG = function (t, n) {
        function r() {
            var l = 4e5,
                s = t.label.slice(1);
            if (ie.contains(["widehat", "widecheck", "widetilde", "utilde"], s)) {
                var u = t,
                    c = iG(u.base),
                    d,
                    m,
                    f;
                if (c > 5)
                    s === "widehat" || s === "widecheck"
                        ? ((d = 420), (l = 2364), (f = 0.42), (m = s + "4"))
                        : ((d = 312), (l = 2340), (f = 0.34), (m = "tilde4"));
                else {
                    var b = [1, 1, 2, 2, 3, 3][c];
                    s === "widehat" || s === "widecheck"
                        ? ((l = [0, 1062, 2364, 2364, 2364][b]), (d = [0, 239, 300, 360, 420][b]), (f = [0, 0.24, 0.3, 0.3, 0.36, 0.42][b]), (m = s + b))
                        : ((l = [0, 600, 1033, 2339, 2340][b]),
                          (d = [0, 260, 286, 306, 312][b]),
                          (f = [0, 0.26, 0.286, 0.3, 0.306, 0.34][b]),
                          (m = "tilde" + b));
                }
                var E = new Ar(m),
                    I = new Xn([E], { width: "100%", height: K(f), viewBox: "0 0 " + l + " " + d, preserveAspectRatio: "none" });
                return { span: P.makeSvgSpan([], [I], n), minWidth: 0, height: f };
            } else {
                var y = [],
                    g = aG[s],
                    [v, T, R] = g,
                    k = R / 1e3,
                    L = v.length,
                    F,
                    M;
                if (L === 1) {
                    var O = g[3];
                    (F = ["hide-tail"]), (M = [O]);
                } else if (L === 2) (F = ["halfarrow-left", "halfarrow-right"]), (M = ["xMinYMin", "xMaxYMin"]);
                else if (L === 3) (F = ["brace-left", "brace-center", "brace-right"]), (M = ["xMinYMin", "xMidYMin", "xMaxYMin"]);
                else
                    throw new Error(
                        `Correct katexImagesData or update code here to support
                    ` +
                            L +
                            " children.",
                    );
                for (var B = 0; B < L; B++) {
                    var $ = new Ar(v[B]),
                        ne = new Xn([$], { width: "400em", height: K(k), viewBox: "0 0 " + l + " " + R, preserveAspectRatio: M[B] + " slice" }),
                        re = P.makeSvgSpan([F[B]], [ne], n);
                    if (L === 1) return { span: re, minWidth: T, height: k };
                    (re.style.height = K(k)), y.push(re);
                }
                return { span: P.makeSpan(["stretchy"], y, n), minWidth: T, height: k };
            }
        }
        var { span: a, minWidth: i, height: o } = r();
        return (a.height = o), (a.style.height = K(o)), i > 0 && (a.style.minWidth = K(i)), a;
    },
    lG = function (t, n, r, a, i) {
        var o,
            l = t.height + t.depth + r + a;
        if (/fbox|color|angl/.test(n)) {
            if (((o = P.makeSpan(["stretchy", n], [], i)), n === "fbox")) {
                var s = i.color && i.getColor();
                s && (o.style.borderColor = s);
            }
        } else {
            var u = [];
            /^[bx]cancel$/.test(n) && u.push(new ih({ x1: "0", y1: "0", x2: "100%", y2: "100%", "stroke-width": "0.046em" })),
                /^x?cancel$/.test(n) && u.push(new ih({ x1: "0", y1: "100%", x2: "100%", y2: "0", "stroke-width": "0.046em" }));
            var c = new Xn(u, { width: "100%", height: K(l) });
            o = P.makeSvgSpan([], [c], i);
        }
        return (o.height = l), (o.style.height = K(l)), o;
    },
    Qn = { encloseSpan: lG, mathMLnode: rG, svgSpan: oG };
function me(e, t) {
    if (!e || e.type !== t) throw new Error("Expected node of type " + t + ", but got " + (e ? "node of type " + e.type : String(e)));
    return e;
}
function r1(e) {
    var t = Ns(e);
    if (!t) throw new Error("Expected node of symbol group type, but got " + (e ? "node of type " + e.type : String(e)));
    return t;
}
function Ns(e) {
    return e && (e.type === "atom" || Oq.hasOwnProperty(e.type)) ? e : null;
}
var a1 = (e, t) => {
        var n, r, a;
        e && e.type === "supsub"
            ? ((r = me(e.base, "accent")), (n = r.base), (e.base = n), (a = _q(we(e, t))), (e.base = r))
            : ((r = me(e, "accent")), (n = r.base));
        var i = we(n, t.havingCrampedStyle()),
            o = r.isShifty && ie.isCharacterBox(n),
            l = 0;
        if (o) {
            var s = ie.getBaseElem(n),
                u = we(s, t.havingCrampedStyle());
            l = sw(u).skew;
        }
        var c = r.label === "\\c",
            d = c ? i.height + i.depth : Math.min(i.height, t.fontMetrics().xHeight),
            m;
        if (r.isStretchy)
            (m = Qn.svgSpan(r, t)),
                (m = P.makeVList(
                    {
                        positionType: "firstBaseline",
                        children: [
                            { type: "elem", elem: i },
                            {
                                type: "elem",
                                elem: m,
                                wrapperClasses: ["svg-align"],
                                wrapperStyle: l > 0 ? { width: "calc(100% - " + K(2 * l) + ")", marginLeft: K(2 * l) } : void 0,
                            },
                        ],
                    },
                    t,
                ));
        else {
            var f, b;
            r.label === "\\vec"
                ? ((f = P.staticSvg("vec", t)), (b = P.svgData.vec[1]))
                : ((f = P.makeOrd({ mode: r.mode, text: r.label }, t, "textord")), (f = sw(f)), (f.italic = 0), (b = f.width), c && (d += f.depth)),
                (m = P.makeSpan(["accent-body"], [f]));
            var E = r.label === "\\textcircled";
            E && (m.classes.push("accent-full"), (d = i.height));
            var I = l;
            E || (I -= b / 2),
                (m.style.left = K(I)),
                r.label === "\\textcircled" && (m.style.top = ".2em"),
                (m = P.makeVList(
                    {
                        positionType: "firstBaseline",
                        children: [
                            { type: "elem", elem: i },
                            { type: "kern", size: -d },
                            { type: "elem", elem: m },
                        ],
                    },
                    t,
                ));
        }
        var y = P.makeSpan(["mord", "accent"], [m], t);
        return a ? ((a.children[0] = y), (a.height = Math.max(y.height, a.height)), (a.classes[0] = "mord"), a) : y;
    },
    vx = (e, t) => {
        var n = e.isStretchy ? Qn.mathMLnode(e.label) : new G.MathNode("mo", [an(e.label, e.mode)]),
            r = new G.MathNode("mover", [Ie(e.base, t), n]);
        return r.setAttribute("accent", "true"), r;
    },
    sG = new RegExp(
        ["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring"].map(e => "\\" + e).join("|"),
    );
Z({
    type: "accent",
    names: [
        "\\acute",
        "\\grave",
        "\\ddot",
        "\\tilde",
        "\\bar",
        "\\breve",
        "\\check",
        "\\hat",
        "\\vec",
        "\\dot",
        "\\mathring",
        "\\widecheck",
        "\\widehat",
        "\\widetilde",
        "\\overrightarrow",
        "\\overleftarrow",
        "\\Overrightarrow",
        "\\overleftrightarrow",
        "\\overgroup",
        "\\overlinesegment",
        "\\overleftharpoon",
        "\\overrightharpoon",
    ],
    props: { numArgs: 1 },
    handler: (e, t) => {
        var n = Xl(t[0]),
            r = !sG.test(e.funcName),
            a = !r || e.funcName === "\\widehat" || e.funcName === "\\widetilde" || e.funcName === "\\widecheck";
        return { type: "accent", mode: e.parser.mode, label: e.funcName, isStretchy: r, isShifty: a, base: n };
    },
    htmlBuilder: a1,
    mathmlBuilder: vx,
});
Z({
    type: "accent",
    names: ["\\'", "\\`", "\\^", "\\~", "\\=", "\\u", "\\.", '\\"', "\\c", "\\r", "\\H", "\\v", "\\textcircled"],
    props: { numArgs: 1, allowedInText: !0, allowedInMath: !0, argTypes: ["primitive"] },
    handler: (e, t) => {
        var n = t[0],
            r = e.parser.mode;
        return (
            r === "math" && (e.parser.settings.reportNonstrict("mathVsTextAccents", "LaTeX's accent " + e.funcName + " works only in text mode"), (r = "text")),
            { type: "accent", mode: r, label: e.funcName, isStretchy: !1, isShifty: !0, base: n }
        );
    },
    htmlBuilder: a1,
    mathmlBuilder: vx,
});
Z({
    type: "accentUnder",
    names: ["\\underleftarrow", "\\underrightarrow", "\\underleftrightarrow", "\\undergroup", "\\underlinesegment", "\\utilde"],
    props: { numArgs: 1 },
    handler: (e, t) => {
        var { parser: n, funcName: r } = e,
            a = t[0];
        return { type: "accentUnder", mode: n.mode, label: r, base: a };
    },
    htmlBuilder: (e, t) => {
        var n = we(e.base, t),
            r = Qn.svgSpan(e, t),
            a = e.label === "\\utilde" ? 0.12 : 0,
            i = P.makeVList(
                {
                    positionType: "top",
                    positionData: n.height,
                    children: [
                        { type: "elem", elem: r, wrapperClasses: ["svg-align"] },
                        { type: "kern", size: a },
                        { type: "elem", elem: n },
                    ],
                },
                t,
            );
        return P.makeSpan(["mord", "accentunder"], [i], t);
    },
    mathmlBuilder: (e, t) => {
        var n = Qn.mathMLnode(e.label),
            r = new G.MathNode("munder", [Ie(e.base, t), n]);
        return r.setAttribute("accentunder", "true"), r;
    },
});
var Zo = e => {
    var t = new G.MathNode("mpadded", e ? [e] : []);
    return t.setAttribute("width", "+0.6em"), t.setAttribute("lspace", "0.3em"), t;
};
Z({
    type: "xArrow",
    names: [
        "\\xleftarrow",
        "\\xrightarrow",
        "\\xLeftarrow",
        "\\xRightarrow",
        "\\xleftrightarrow",
        "\\xLeftrightarrow",
        "\\xhookleftarrow",
        "\\xhookrightarrow",
        "\\xmapsto",
        "\\xrightharpoondown",
        "\\xrightharpoonup",
        "\\xleftharpoondown",
        "\\xleftharpoonup",
        "\\xrightleftharpoons",
        "\\xleftrightharpoons",
        "\\xlongequal",
        "\\xtwoheadrightarrow",
        "\\xtwoheadleftarrow",
        "\\xtofrom",
        "\\xrightleftarrows",
        "\\xrightequilibrium",
        "\\xleftequilibrium",
        "\\\\cdrightarrow",
        "\\\\cdleftarrow",
        "\\\\cdlongequal",
    ],
    props: { numArgs: 1, numOptionalArgs: 1 },
    handler(e, t, n) {
        var { parser: r, funcName: a } = e;
        return { type: "xArrow", mode: r.mode, label: a, body: t[0], below: n[0] };
    },
    htmlBuilder(e, t) {
        var n = t.style,
            r = t.havingStyle(n.sup()),
            a = P.wrapFragment(we(e.body, r, t), t),
            i = e.label.slice(0, 2) === "\\x" ? "x" : "cd";
        a.classes.push(i + "-arrow-pad");
        var o;
        e.below && ((r = t.havingStyle(n.sub())), (o = P.wrapFragment(we(e.below, r, t), t)), o.classes.push(i + "-arrow-pad"));
        var l = Qn.svgSpan(e, t),
            s = -t.fontMetrics().axisHeight + 0.5 * l.height,
            u = -t.fontMetrics().axisHeight - 0.5 * l.height - 0.111;
        (a.depth > 0.25 || e.label === "\\xleftequilibrium") && (u -= a.depth);
        var c;
        if (o) {
            var d = -t.fontMetrics().axisHeight + o.height + 0.5 * l.height + 0.111;
            c = P.makeVList(
                {
                    positionType: "individualShift",
                    children: [
                        { type: "elem", elem: a, shift: u },
                        { type: "elem", elem: l, shift: s },
                        { type: "elem", elem: o, shift: d },
                    ],
                },
                t,
            );
        } else
            c = P.makeVList(
                {
                    positionType: "individualShift",
                    children: [
                        { type: "elem", elem: a, shift: u },
                        { type: "elem", elem: l, shift: s },
                    ],
                },
                t,
            );
        return c.children[0].children[0].children[1].classes.push("svg-align"), P.makeSpan(["mrel", "x-arrow"], [c], t);
    },
    mathmlBuilder(e, t) {
        var n = Qn.mathMLnode(e.label);
        n.setAttribute("minsize", e.label.charAt(0) === "x" ? "1.75em" : "3.0em");
        var r;
        if (e.body) {
            var a = Zo(Ie(e.body, t));
            if (e.below) {
                var i = Zo(Ie(e.below, t));
                r = new G.MathNode("munderover", [n, i, a]);
            } else r = new G.MathNode("mover", [n, a]);
        } else if (e.below) {
            var o = Zo(Ie(e.below, t));
            r = new G.MathNode("munder", [n, o]);
        } else (r = Zo()), (r = new G.MathNode("mover", [n, r]));
        return r;
    },
});
var uG = P.makeSpan;
function Ex(e, t) {
    var n = Je(e.body, t, !0);
    return uG([e.mclass], n, t);
}
function Sx(e, t) {
    var n,
        r = Dt(e.body, t);
    return (
        e.mclass === "minner"
            ? (n = new G.MathNode("mpadded", r))
            : e.mclass === "mord"
              ? e.isCharacterBox
                  ? ((n = r[0]), (n.type = "mi"))
                  : (n = new G.MathNode("mi", r))
              : (e.isCharacterBox ? ((n = r[0]), (n.type = "mo")) : (n = new G.MathNode("mo", r)),
                e.mclass === "mbin"
                    ? ((n.attributes.lspace = "0.22em"), (n.attributes.rspace = "0.22em"))
                    : e.mclass === "mpunct"
                      ? ((n.attributes.lspace = "0em"), (n.attributes.rspace = "0.17em"))
                      : e.mclass === "mopen" || e.mclass === "mclose"
                        ? ((n.attributes.lspace = "0em"), (n.attributes.rspace = "0em"))
                        : e.mclass === "minner" && ((n.attributes.lspace = "0.0556em"), (n.attributes.width = "+0.1111em"))),
        n
    );
}
Z({
    type: "mclass",
    names: ["\\mathord", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathinner"],
    props: { numArgs: 1, primitive: !0 },
    handler(e, t) {
        var { parser: n, funcName: r } = e,
            a = t[0];
        return { type: "mclass", mode: n.mode, mclass: "m" + r.slice(5), body: Ve(a), isCharacterBox: ie.isCharacterBox(a) };
    },
    htmlBuilder: Ex,
    mathmlBuilder: Sx,
});
var _s = e => {
    var t = e.type === "ordgroup" && e.body.length ? e.body[0] : e;
    return t.type === "atom" && (t.family === "bin" || t.family === "rel") ? "m" + t.family : "mord";
};
Z({
    type: "mclass",
    names: ["\\@binrel"],
    props: { numArgs: 2 },
    handler(e, t) {
        var { parser: n } = e;
        return { type: "mclass", mode: n.mode, mclass: _s(t[0]), body: Ve(t[1]), isCharacterBox: ie.isCharacterBox(t[1]) };
    },
});
Z({
    type: "mclass",
    names: ["\\stackrel", "\\overset", "\\underset"],
    props: { numArgs: 2 },
    handler(e, t) {
        var { parser: n, funcName: r } = e,
            a = t[1],
            i = t[0],
            o;
        r !== "\\stackrel" ? (o = _s(a)) : (o = "mrel");
        var l = {
                type: "op",
                mode: a.mode,
                limits: !0,
                alwaysHandleSupSub: !0,
                parentIsSupSub: !1,
                symbol: !1,
                suppressBaseShift: r !== "\\stackrel",
                body: Ve(a),
            },
            s = { type: "supsub", mode: i.mode, base: l, sup: r === "\\underset" ? null : i, sub: r === "\\underset" ? i : null };
        return { type: "mclass", mode: n.mode, mclass: o, body: [s], isCharacterBox: ie.isCharacterBox(s) };
    },
    htmlBuilder: Ex,
    mathmlBuilder: Sx,
});
Z({
    type: "pmb",
    names: ["\\pmb"],
    props: { numArgs: 1, allowedInText: !0 },
    handler(e, t) {
        var { parser: n } = e;
        return { type: "pmb", mode: n.mode, mclass: _s(t[0]), body: Ve(t[0]) };
    },
    htmlBuilder(e, t) {
        var n = Je(e.body, t, !0),
            r = P.makeSpan([e.mclass], n, t);
        return (r.style.textShadow = "0.02em 0.01em 0.04px"), r;
    },
    mathmlBuilder(e, t) {
        var n = Dt(e.body, t),
            r = new G.MathNode("mstyle", n);
        return r.setAttribute("style", "text-shadow: 0.02em 0.01em 0.04px"), r;
    },
});
var cG = { ">": "\\\\cdrightarrow", "<": "\\\\cdleftarrow", "=": "\\\\cdlongequal", A: "\\uparrow", V: "\\downarrow", "|": "\\Vert", ".": "no arrow" },
    gw = () => ({ type: "styling", body: [], mode: "math", style: "display" }),
    bw = e => e.type === "textord" && e.text === "@",
    dG = (e, t) => (e.type === "mathord" || e.type === "atom") && e.text === t;
function pG(e, t, n) {
    var r = cG[e];
    switch (r) {
        case "\\\\cdrightarrow":
        case "\\\\cdleftarrow":
            return n.callFunction(r, [t[0]], [t[1]]);
        case "\\uparrow":
        case "\\downarrow": {
            var a = n.callFunction("\\\\cdleft", [t[0]], []),
                i = { type: "atom", text: r, mode: "math", family: "rel" },
                o = n.callFunction("\\Big", [i], []),
                l = n.callFunction("\\\\cdright", [t[1]], []),
                s = { type: "ordgroup", mode: "math", body: [a, o, l] };
            return n.callFunction("\\\\cdparent", [s], []);
        }
        case "\\\\cdlongequal":
            return n.callFunction("\\\\cdlongequal", [], []);
        case "\\Vert": {
            var u = { type: "textord", text: "\\Vert", mode: "math" };
            return n.callFunction("\\Big", [u], []);
        }
        default:
            return { type: "textord", text: " ", mode: "math" };
    }
}
function fG(e) {
    var t = [];
    for (e.gullet.beginGroup(), e.gullet.macros.set("\\cr", "\\\\\\relax"), e.gullet.beginGroup(); ; ) {
        t.push(e.parseExpression(!1, "\\\\")), e.gullet.endGroup(), e.gullet.beginGroup();
        var n = e.fetch().text;
        if (n === "&" || n === "\\\\") e.consume();
        else if (n === "\\end") {
            t[t.length - 1].length === 0 && t.pop();
            break;
        } else throw new H("Expected \\\\ or \\cr or \\end", e.nextToken);
    }
    for (var r = [], a = [r], i = 0; i < t.length; i++) {
        for (var o = t[i], l = gw(), s = 0; s < o.length; s++)
            if (!bw(o[s])) l.body.push(o[s]);
            else {
                r.push(l), (s += 1);
                var u = r1(o[s]).text,
                    c = new Array(2);
                if (((c[0] = { type: "ordgroup", mode: "math", body: [] }), (c[1] = { type: "ordgroup", mode: "math", body: [] }), !("=|.".indexOf(u) > -1)))
                    if ("<>AV".indexOf(u) > -1)
                        for (var d = 0; d < 2; d++) {
                            for (var m = !0, f = s + 1; f < o.length; f++) {
                                if (dG(o[f], u)) {
                                    (m = !1), (s = f);
                                    break;
                                }
                                if (bw(o[f])) throw new H("Missing a " + u + " character to complete a CD arrow.", o[f]);
                                c[d].body.push(o[f]);
                            }
                            if (m) throw new H("Missing a " + u + " character to complete a CD arrow.", o[s]);
                        }
                    else throw new H('Expected one of "<>AV=|." after @', o[s]);
                var b = pG(u, c, e),
                    E = { type: "styling", body: [b], mode: "math", style: "display" };
                r.push(E), (l = gw());
            }
        i % 2 === 0 ? r.push(l) : r.shift(), (r = []), a.push(r);
    }
    e.gullet.endGroup(), e.gullet.endGroup();
    var I = new Array(a[0].length).fill({ type: "align", align: "c", pregap: 0.25, postgap: 0.25 });
    return {
        type: "array",
        mode: "math",
        body: a,
        arraystretch: 1,
        addJot: !0,
        rowGaps: [null],
        cols: I,
        colSeparationType: "CD",
        hLinesBeforeRow: new Array(a.length + 1).fill([]),
    };
}
Z({
    type: "cdlabel",
    names: ["\\\\cdleft", "\\\\cdright"],
    props: { numArgs: 1 },
    handler(e, t) {
        var { parser: n, funcName: r } = e;
        return { type: "cdlabel", mode: n.mode, side: r.slice(4), label: t[0] };
    },
    htmlBuilder(e, t) {
        var n = t.havingStyle(t.style.sup()),
            r = P.wrapFragment(we(e.label, n, t), t);
        return r.classes.push("cd-label-" + e.side), (r.style.bottom = K(0.8 - r.depth)), (r.height = 0), (r.depth = 0), r;
    },
    mathmlBuilder(e, t) {
        var n = new G.MathNode("mrow", [Ie(e.label, t)]);
        return (
            (n = new G.MathNode("mpadded", [n])),
            n.setAttribute("width", "0"),
            e.side === "left" && n.setAttribute("lspace", "-1width"),
            n.setAttribute("voffset", "0.7em"),
            (n = new G.MathNode("mstyle", [n])),
            n.setAttribute("displaystyle", "false"),
            n.setAttribute("scriptlevel", "1"),
            n
        );
    },
});
Z({
    type: "cdlabelparent",
    names: ["\\\\cdparent"],
    props: { numArgs: 1 },
    handler(e, t) {
        var { parser: n } = e;
        return { type: "cdlabelparent", mode: n.mode, fragment: t[0] };
    },
    htmlBuilder(e, t) {
        var n = P.wrapFragment(we(e.fragment, t), t);
        return n.classes.push("cd-vert-arrow"), n;
    },
    mathmlBuilder(e, t) {
        return new G.MathNode("mrow", [Ie(e.fragment, t)]);
    },
});
Z({
    type: "textord",
    names: ["\\@char"],
    props: { numArgs: 1, allowedInText: !0 },
    handler(e, t) {
        for (var { parser: n } = e, r = me(t[0], "ordgroup"), a = r.body, i = "", o = 0; o < a.length; o++) {
            var l = me(a[o], "textord");
            i += l.text;
        }
        var s = parseInt(i),
            u;
        if (isNaN(s)) throw new H("\\@char has non-numeric argument " + i);
        if (s < 0 || s >= 1114111) throw new H("\\@char with invalid code point " + i);
        return (
            s <= 65535 ? (u = String.fromCharCode(s)) : ((s -= 65536), (u = String.fromCharCode((s >> 10) + 55296, (s & 1023) + 56320))),
            { type: "textord", mode: n.mode, text: u }
        );
    },
});
var wx = (e, t) => {
        var n = Je(e.body, t.withColor(e.color), !1);
        return P.makeFragment(n);
    },
    kx = (e, t) => {
        var n = Dt(e.body, t.withColor(e.color)),
            r = new G.MathNode("mstyle", n);
        return r.setAttribute("mathcolor", e.color), r;
    };
Z({
    type: "color",
    names: ["\\textcolor"],
    props: { numArgs: 2, allowedInText: !0, argTypes: ["color", "original"] },
    handler(e, t) {
        var { parser: n } = e,
            r = me(t[0], "color-token").color,
            a = t[1];
        return { type: "color", mode: n.mode, color: r, body: Ve(a) };
    },
    htmlBuilder: wx,
    mathmlBuilder: kx,
});
Z({
    type: "color",
    names: ["\\color"],
    props: { numArgs: 1, allowedInText: !0, argTypes: ["color"] },
    handler(e, t) {
        var { parser: n, breakOnTokenText: r } = e,
            a = me(t[0], "color-token").color;
        n.gullet.macros.set("\\current@color", a);
        var i = n.parseExpression(!0, r);
        return { type: "color", mode: n.mode, color: a, body: i };
    },
    htmlBuilder: wx,
    mathmlBuilder: kx,
});
Z({
    type: "cr",
    names: ["\\\\"],
    props: { numArgs: 0, numOptionalArgs: 0, allowedInText: !0 },
    handler(e, t, n) {
        var { parser: r } = e,
            a = r.gullet.future().text === "[" ? r.parseSizeGroup(!0) : null,
            i = !r.settings.displayMode || !r.settings.useStrictBehavior("newLineInDisplayMode", "In LaTeX, \\\\ or \\newline does nothing in display mode");
        return { type: "cr", mode: r.mode, newLine: i, size: a && me(a, "size").value };
    },
    htmlBuilder(e, t) {
        var n = P.makeSpan(["mspace"], [], t);
        return e.newLine && (n.classes.push("newline"), e.size && (n.style.marginTop = K(Ue(e.size, t)))), n;
    },
    mathmlBuilder(e, t) {
        var n = new G.MathNode("mspace");
        return e.newLine && (n.setAttribute("linebreak", "newline"), e.size && n.setAttribute("height", K(Ue(e.size, t)))), n;
    },
});
var uh = {
        "\\global": "\\global",
        "\\long": "\\\\globallong",
        "\\\\globallong": "\\\\globallong",
        "\\def": "\\gdef",
        "\\gdef": "\\gdef",
        "\\edef": "\\xdef",
        "\\xdef": "\\xdef",
        "\\let": "\\\\globallet",
        "\\futurelet": "\\\\globalfuture",
    },
    Tx = e => {
        var t = e.text;
        if (/^(?:[\\{}$&#^_]|EOF)$/.test(t)) throw new H("Expected a control sequence", e);
        return t;
    },
    mG = e => {
        var t = e.gullet.popToken();
        return t.text === "=" && ((t = e.gullet.popToken()), t.text === " " && (t = e.gullet.popToken())), t;
    },
    Ax = (e, t, n, r) => {
        var a = e.gullet.macros.get(n.text);
        a == null && ((n.noexpand = !0), (a = { tokens: [n], numArgs: 0, unexpandable: !e.gullet.isExpandable(n.text) })), e.gullet.macros.set(t, a, r);
    };
Z({
    type: "internal",
    names: ["\\global", "\\long", "\\\\globallong"],
    props: { numArgs: 0, allowedInText: !0 },
    handler(e) {
        var { parser: t, funcName: n } = e;
        t.consumeSpaces();
        var r = t.fetch();
        if (uh[r.text]) return (n === "\\global" || n === "\\\\globallong") && (r.text = uh[r.text]), me(t.parseFunction(), "internal");
        throw new H("Invalid token after macro prefix", r);
    },
});
Z({
    type: "internal",
    names: ["\\def", "\\gdef", "\\edef", "\\xdef"],
    props: { numArgs: 0, allowedInText: !0, primitive: !0 },
    handler(e) {
        var { parser: t, funcName: n } = e,
            r = t.gullet.popToken(),
            a = r.text;
        if (/^(?:[\\{}$&#^_]|EOF)$/.test(a)) throw new H("Expected a control sequence", r);
        for (var i = 0, o, l = [[]]; t.gullet.future().text !== "{"; )
            if (((r = t.gullet.popToken()), r.text === "#")) {
                if (t.gullet.future().text === "{") {
                    (o = t.gullet.future()), l[i].push("{");
                    break;
                }
                if (((r = t.gullet.popToken()), !/^[1-9]$/.test(r.text))) throw new H('Invalid argument number "' + r.text + '"');
                if (parseInt(r.text) !== i + 1) throw new H('Argument number "' + r.text + '" out of order');
                i++, l.push([]);
            } else {
                if (r.text === "EOF") throw new H("Expected a macro definition");
                l[i].push(r.text);
            }
        var { tokens: s } = t.gullet.consumeArg();
        return (
            o && s.unshift(o),
            (n === "\\edef" || n === "\\xdef") && ((s = t.gullet.expandTokens(s)), s.reverse()),
            t.gullet.macros.set(a, { tokens: s, numArgs: i, delimiters: l }, n === uh[n]),
            { type: "internal", mode: t.mode }
        );
    },
});
Z({
    type: "internal",
    names: ["\\let", "\\\\globallet"],
    props: { numArgs: 0, allowedInText: !0, primitive: !0 },
    handler(e) {
        var { parser: t, funcName: n } = e,
            r = Tx(t.gullet.popToken());
        t.gullet.consumeSpaces();
        var a = mG(t);
        return Ax(t, r, a, n === "\\\\globallet"), { type: "internal", mode: t.mode };
    },
});
Z({
    type: "internal",
    names: ["\\futurelet", "\\\\globalfuture"],
    props: { numArgs: 0, allowedInText: !0, primitive: !0 },
    handler(e) {
        var { parser: t, funcName: n } = e,
            r = Tx(t.gullet.popToken()),
            a = t.gullet.popToken(),
            i = t.gullet.popToken();
        return Ax(t, r, i, n === "\\\\globalfuture"), t.gullet.pushToken(i), t.gullet.pushToken(a), { type: "internal", mode: t.mode };
    },
});
var Ti = function (t, n, r) {
        var a = Ce.math[t] && Ce.math[t].replace,
            i = Qg(a || t, n, r);
        if (!i) throw new Error("Unsupported symbol " + t + " and font size " + n + ".");
        return i;
    },
    i1 = function (t, n, r, a) {
        var i = r.havingBaseStyle(n),
            o = P.makeSpan(a.concat(i.sizingClasses(r)), [t], r),
            l = i.sizeMultiplier / r.sizeMultiplier;
        return (o.height *= l), (o.depth *= l), (o.maxFontSize = i.sizeMultiplier), o;
    },
    xx = function (t, n, r) {
        var a = n.havingBaseStyle(r),
            i = (1 - n.sizeMultiplier / a.sizeMultiplier) * n.fontMetrics().axisHeight;
        t.classes.push("delimcenter"), (t.style.top = K(i)), (t.height -= i), (t.depth += i);
    },
    hG = function (t, n, r, a, i, o) {
        var l = P.makeSymbol(t, "Main-Regular", i, a),
            s = i1(l, n, a, o);
        return r && xx(s, a, n), s;
    },
    gG = function (t, n, r, a) {
        return P.makeSymbol(t, "Size" + n + "-Regular", r, a);
    },
    Rx = function (t, n, r, a, i, o) {
        var l = gG(t, n, i, a),
            s = i1(P.makeSpan(["delimsizing", "size" + n], [l], a), le.TEXT, a, o);
        return r && xx(s, a, le.TEXT), s;
    },
    Ff = function (t, n, r) {
        var a;
        n === "Size1-Regular" ? (a = "delim-size1") : (a = "delim-size4");
        var i = P.makeSpan(["delimsizinginner", a], [P.makeSpan([], [P.makeSymbol(t, n, r)])]);
        return { type: "elem", elem: i };
    },
    Pf = function (t, n, r) {
        var a = An["Size4-Regular"][t.charCodeAt(0)] ? An["Size4-Regular"][t.charCodeAt(0)][4] : An["Size1-Regular"][t.charCodeAt(0)][4],
            i = new Ar("inner", Sq(t, Math.round(1e3 * n))),
            o = new Xn([i], {
                width: K(a),
                height: K(n),
                style: "width:" + K(a),
                viewBox: "0 0 " + 1e3 * a + " " + Math.round(1e3 * n),
                preserveAspectRatio: "xMinYMin",
            }),
            l = P.makeSvgSpan([], [o], r);
        return (l.height = n), (l.style.height = K(n)), (l.style.width = K(a)), { type: "elem", elem: l };
    },
    ch = 0.008,
    Qo = { type: "kern", size: -1 * ch },
    bG = ["|", "\\lvert", "\\rvert", "\\vert"],
    yG = ["\\|", "\\lVert", "\\rVert", "\\Vert"],
    Ix = function (t, n, r, a, i, o) {
        var l,
            s,
            u,
            c,
            d = "",
            m = 0;
        (l = u = c = t), (s = null);
        var f = "Size1-Regular";
        t === "\\uparrow"
            ? (u = c = "⏐")
            : t === "\\Uparrow"
              ? (u = c = "‖")
              : t === "\\downarrow"
                ? (l = u = "⏐")
                : t === "\\Downarrow"
                  ? (l = u = "‖")
                  : t === "\\updownarrow"
                    ? ((l = "\\uparrow"), (u = "⏐"), (c = "\\downarrow"))
                    : t === "\\Updownarrow"
                      ? ((l = "\\Uparrow"), (u = "‖"), (c = "\\Downarrow"))
                      : ie.contains(bG, t)
                        ? ((u = "∣"), (d = "vert"), (m = 333))
                        : ie.contains(yG, t)
                          ? ((u = "∥"), (d = "doublevert"), (m = 556))
                          : t === "[" || t === "\\lbrack"
                            ? ((l = "⎡"), (u = "⎢"), (c = "⎣"), (f = "Size4-Regular"), (d = "lbrack"), (m = 667))
                            : t === "]" || t === "\\rbrack"
                              ? ((l = "⎤"), (u = "⎥"), (c = "⎦"), (f = "Size4-Regular"), (d = "rbrack"), (m = 667))
                              : t === "\\lfloor" || t === "⌊"
                                ? ((u = l = "⎢"), (c = "⎣"), (f = "Size4-Regular"), (d = "lfloor"), (m = 667))
                                : t === "\\lceil" || t === "⌈"
                                  ? ((l = "⎡"), (u = c = "⎢"), (f = "Size4-Regular"), (d = "lceil"), (m = 667))
                                  : t === "\\rfloor" || t === "⌋"
                                    ? ((u = l = "⎥"), (c = "⎦"), (f = "Size4-Regular"), (d = "rfloor"), (m = 667))
                                    : t === "\\rceil" || t === "⌉"
                                      ? ((l = "⎤"), (u = c = "⎥"), (f = "Size4-Regular"), (d = "rceil"), (m = 667))
                                      : t === "(" || t === "\\lparen"
                                        ? ((l = "⎛"), (u = "⎜"), (c = "⎝"), (f = "Size4-Regular"), (d = "lparen"), (m = 875))
                                        : t === ")" || t === "\\rparen"
                                          ? ((l = "⎞"), (u = "⎟"), (c = "⎠"), (f = "Size4-Regular"), (d = "rparen"), (m = 875))
                                          : t === "\\{" || t === "\\lbrace"
                                            ? ((l = "⎧"), (s = "⎨"), (c = "⎩"), (u = "⎪"), (f = "Size4-Regular"))
                                            : t === "\\}" || t === "\\rbrace"
                                              ? ((l = "⎫"), (s = "⎬"), (c = "⎭"), (u = "⎪"), (f = "Size4-Regular"))
                                              : t === "\\lgroup" || t === "⟮"
                                                ? ((l = "⎧"), (c = "⎩"), (u = "⎪"), (f = "Size4-Regular"))
                                                : t === "\\rgroup" || t === "⟯"
                                                  ? ((l = "⎫"), (c = "⎭"), (u = "⎪"), (f = "Size4-Regular"))
                                                  : t === "\\lmoustache" || t === "⎰"
                                                    ? ((l = "⎧"), (c = "⎭"), (u = "⎪"), (f = "Size4-Regular"))
                                                    : (t === "\\rmoustache" || t === "⎱") && ((l = "⎫"), (c = "⎩"), (u = "⎪"), (f = "Size4-Regular"));
        var b = Ti(l, f, i),
            E = b.height + b.depth,
            I = Ti(u, f, i),
            y = I.height + I.depth,
            g = Ti(c, f, i),
            v = g.height + g.depth,
            T = 0,
            R = 1;
        if (s !== null) {
            var k = Ti(s, f, i);
            (T = k.height + k.depth), (R = 2);
        }
        var L = E + v + T,
            F = Math.max(0, Math.ceil((n - L) / (R * y))),
            M = L + F * R * y,
            O = a.fontMetrics().axisHeight;
        r && (O *= a.sizeMultiplier);
        var B = M / 2 - O,
            $ = [];
        if (d.length > 0) {
            var ne = M - E - v,
                re = Math.round(M * 1e3),
                J = wq(d, Math.round(ne * 1e3)),
                se = new Ar(d, J),
                ce = (m / 1e3).toFixed(3) + "em",
                U = (re / 1e3).toFixed(3) + "em",
                W = new Xn([se], { width: ce, height: U, viewBox: "0 0 " + m + " " + re }),
                A = P.makeSvgSpan([], [W], a);
            (A.height = re / 1e3), (A.style.width = ce), (A.style.height = U), $.push({ type: "elem", elem: A });
        } else {
            if (($.push(Ff(c, f, i)), $.push(Qo), s === null)) {
                var Y = M - E - v + 2 * ch;
                $.push(Pf(u, Y, a));
            } else {
                var Q = (M - E - v - T) / 2 + 2 * ch;
                $.push(Pf(u, Q, a)), $.push(Qo), $.push(Ff(s, f, i)), $.push(Qo), $.push(Pf(u, Q, a));
            }
            $.push(Qo), $.push(Ff(l, f, i));
        }
        var C = a.havingBaseStyle(le.TEXT),
            he = P.makeVList({ positionType: "bottom", positionData: B, children: $ }, C);
        return i1(P.makeSpan(["delimsizing", "mult"], [he], C), le.TEXT, a, o);
    },
    Bf = 80,
    Uf = 0.08,
    zf = function (t, n, r, a, i) {
        var o = Eq(t, a, r),
            l = new Ar(t, o),
            s = new Xn([l], { width: "400em", height: K(n), viewBox: "0 0 400000 " + r, preserveAspectRatio: "xMinYMin slice" });
        return P.makeSvgSpan(["hide-tail"], [s], i);
    },
    vG = function (t, n) {
        var r = n.havingBaseSizing(),
            a = Ox("\\surd", t * r.sizeMultiplier, Cx, r),
            i = r.sizeMultiplier,
            o = Math.max(0, n.minRuleThickness - n.fontMetrics().sqrtRuleThickness),
            l,
            s = 0,
            u = 0,
            c = 0,
            d;
        return (
            a.type === "small"
                ? ((c = 1e3 + 1e3 * o + Bf),
                  t < 1 ? (i = 1) : t < 1.4 && (i = 0.7),
                  (s = (1 + o + Uf) / i),
                  (u = (1 + o) / i),
                  (l = zf("sqrtMain", s, c, o, n)),
                  (l.style.minWidth = "0.853em"),
                  (d = 0.833 / i))
                : a.type === "large"
                  ? ((c = (1e3 + Bf) * Fi[a.size]),
                    (u = (Fi[a.size] + o) / i),
                    (s = (Fi[a.size] + o + Uf) / i),
                    (l = zf("sqrtSize" + a.size, s, c, o, n)),
                    (l.style.minWidth = "1.02em"),
                    (d = 1 / i))
                  : ((s = t + o + Uf),
                    (u = t + o),
                    (c = Math.floor(1e3 * t + o) + Bf),
                    (l = zf("sqrtTall", s, c, o, n)),
                    (l.style.minWidth = "0.742em"),
                    (d = 1.056)),
            (l.height = u),
            (l.style.height = K(s)),
            { span: l, advanceWidth: d, ruleWidth: (n.fontMetrics().sqrtRuleThickness + o) * i }
        );
    },
    Nx = [
        "(",
        "\\lparen",
        ")",
        "\\rparen",
        "[",
        "\\lbrack",
        "]",
        "\\rbrack",
        "\\{",
        "\\lbrace",
        "\\}",
        "\\rbrace",
        "\\lfloor",
        "\\rfloor",
        "⌊",
        "⌋",
        "\\lceil",
        "\\rceil",
        "⌈",
        "⌉",
        "\\surd",
    ],
    EG = [
        "\\uparrow",
        "\\downarrow",
        "\\updownarrow",
        "\\Uparrow",
        "\\Downarrow",
        "\\Updownarrow",
        "|",
        "\\|",
        "\\vert",
        "\\Vert",
        "\\lvert",
        "\\rvert",
        "\\lVert",
        "\\rVert",
        "\\lgroup",
        "\\rgroup",
        "⟮",
        "⟯",
        "\\lmoustache",
        "\\rmoustache",
        "⎰",
        "⎱",
    ],
    _x = ["<", ">", "\\langle", "\\rangle", "/", "\\backslash", "\\lt", "\\gt"],
    Fi = [0, 1.2, 1.8, 2.4, 3],
    SG = function (t, n, r, a, i) {
        if (
            (t === "<" || t === "\\lt" || t === "⟨" ? (t = "\\langle") : (t === ">" || t === "\\gt" || t === "⟩") && (t = "\\rangle"),
            ie.contains(Nx, t) || ie.contains(_x, t))
        )
            return Rx(t, n, !1, r, a, i);
        if (ie.contains(EG, t)) return Ix(t, Fi[n], !1, r, a, i);
        throw new H("Illegal delimiter: '" + t + "'");
    },
    wG = [
        { type: "small", style: le.SCRIPTSCRIPT },
        { type: "small", style: le.SCRIPT },
        { type: "small", style: le.TEXT },
        { type: "large", size: 1 },
        { type: "large", size: 2 },
        { type: "large", size: 3 },
        { type: "large", size: 4 },
    ],
    kG = [{ type: "small", style: le.SCRIPTSCRIPT }, { type: "small", style: le.SCRIPT }, { type: "small", style: le.TEXT }, { type: "stack" }],
    Cx = [
        { type: "small", style: le.SCRIPTSCRIPT },
        { type: "small", style: le.SCRIPT },
        { type: "small", style: le.TEXT },
        { type: "large", size: 1 },
        { type: "large", size: 2 },
        { type: "large", size: 3 },
        { type: "large", size: 4 },
        { type: "stack" },
    ],
    TG = function (t) {
        if (t.type === "small") return "Main-Regular";
        if (t.type === "large") return "Size" + t.size + "-Regular";
        if (t.type === "stack") return "Size4-Regular";
        throw new Error("Add support for delim type '" + t.type + "' here.");
    },
    Ox = function (t, n, r, a) {
        for (var i = Math.min(2, 3 - a.style.size), o = i; o < r.length && r[o].type !== "stack"; o++) {
            var l = Ti(t, TG(r[o]), "math"),
                s = l.height + l.depth;
            if (r[o].type === "small") {
                var u = a.havingBaseStyle(r[o].style);
                s *= u.sizeMultiplier;
            }
            if (s > n) return r[o];
        }
        return r[r.length - 1];
    },
    Lx = function (t, n, r, a, i, o) {
        t === "<" || t === "\\lt" || t === "⟨" ? (t = "\\langle") : (t === ">" || t === "\\gt" || t === "⟩") && (t = "\\rangle");
        var l;
        ie.contains(_x, t) ? (l = wG) : ie.contains(Nx, t) ? (l = Cx) : (l = kG);
        var s = Ox(t, n, l, a);
        return s.type === "small" ? hG(t, s.style, r, a, i, o) : s.type === "large" ? Rx(t, s.size, r, a, i, o) : Ix(t, n, r, a, i, o);
    },
    AG = function (t, n, r, a, i, o) {
        var l = a.fontMetrics().axisHeight * a.sizeMultiplier,
            s = 901,
            u = 5 / a.fontMetrics().ptPerEm,
            c = Math.max(n - l, r + l),
            d = Math.max((c / 500) * s, 2 * c - u);
        return Lx(t, d, !0, a, i, o);
    },
    jn = { sqrtImage: vG, sizedDelim: SG, sizeToMaxHeight: Fi, customSizedDelim: Lx, leftRightDelim: AG },
    yw = {
        "\\bigl": { mclass: "mopen", size: 1 },
        "\\Bigl": { mclass: "mopen", size: 2 },
        "\\biggl": { mclass: "mopen", size: 3 },
        "\\Biggl": { mclass: "mopen", size: 4 },
        "\\bigr": { mclass: "mclose", size: 1 },
        "\\Bigr": { mclass: "mclose", size: 2 },
        "\\biggr": { mclass: "mclose", size: 3 },
        "\\Biggr": { mclass: "mclose", size: 4 },
        "\\bigm": { mclass: "mrel", size: 1 },
        "\\Bigm": { mclass: "mrel", size: 2 },
        "\\biggm": { mclass: "mrel", size: 3 },
        "\\Biggm": { mclass: "mrel", size: 4 },
        "\\big": { mclass: "mord", size: 1 },
        "\\Big": { mclass: "mord", size: 2 },
        "\\bigg": { mclass: "mord", size: 3 },
        "\\Bigg": { mclass: "mord", size: 4 },
    },
    xG = [
        "(",
        "\\lparen",
        ")",
        "\\rparen",
        "[",
        "\\lbrack",
        "]",
        "\\rbrack",
        "\\{",
        "\\lbrace",
        "\\}",
        "\\rbrace",
        "\\lfloor",
        "\\rfloor",
        "⌊",
        "⌋",
        "\\lceil",
        "\\rceil",
        "⌈",
        "⌉",
        "<",
        ">",
        "\\langle",
        "⟨",
        "\\rangle",
        "⟩",
        "\\lt",
        "\\gt",
        "\\lvert",
        "\\rvert",
        "\\lVert",
        "\\rVert",
        "\\lgroup",
        "\\rgroup",
        "⟮",
        "⟯",
        "\\lmoustache",
        "\\rmoustache",
        "⎰",
        "⎱",
        "/",
        "\\backslash",
        "|",
        "\\vert",
        "\\|",
        "\\Vert",
        "\\uparrow",
        "\\Uparrow",
        "\\downarrow",
        "\\Downarrow",
        "\\updownarrow",
        "\\Updownarrow",
        ".",
    ];
function Cs(e, t) {
    var n = Ns(e);
    if (n && ie.contains(xG, n.text)) return n;
    throw n ? new H("Invalid delimiter '" + n.text + "' after '" + t.funcName + "'", e) : new H("Invalid delimiter type '" + e.type + "'", e);
}
Z({
    type: "delimsizing",
    names: [
        "\\bigl",
        "\\Bigl",
        "\\biggl",
        "\\Biggl",
        "\\bigr",
        "\\Bigr",
        "\\biggr",
        "\\Biggr",
        "\\bigm",
        "\\Bigm",
        "\\biggm",
        "\\Biggm",
        "\\big",
        "\\Big",
        "\\bigg",
        "\\Bigg",
    ],
    props: { numArgs: 1, argTypes: ["primitive"] },
    handler: (e, t) => {
        var n = Cs(t[0], e);
        return { type: "delimsizing", mode: e.parser.mode, size: yw[e.funcName].size, mclass: yw[e.funcName].mclass, delim: n.text };
    },
    htmlBuilder: (e, t) => (e.delim === "." ? P.makeSpan([e.mclass]) : jn.sizedDelim(e.delim, e.size, t, e.mode, [e.mclass])),
    mathmlBuilder: e => {
        var t = [];
        e.delim !== "." && t.push(an(e.delim, e.mode));
        var n = new G.MathNode("mo", t);
        e.mclass === "mopen" || e.mclass === "mclose" ? n.setAttribute("fence", "true") : n.setAttribute("fence", "false"), n.setAttribute("stretchy", "true");
        var r = K(jn.sizeToMaxHeight[e.size]);
        return n.setAttribute("minsize", r), n.setAttribute("maxsize", r), n;
    },
});
function vw(e) {
    if (!e.body) throw new Error("Bug: The leftright ParseNode wasn't fully parsed.");
}
Z({
    type: "leftright-right",
    names: ["\\right"],
    props: { numArgs: 1, primitive: !0 },
    handler: (e, t) => {
        var n = e.parser.gullet.macros.get("\\current@color");
        if (n && typeof n != "string") throw new H("\\current@color set to non-string in \\right");
        return { type: "leftright-right", mode: e.parser.mode, delim: Cs(t[0], e).text, color: n };
    },
});
Z({
    type: "leftright",
    names: ["\\left"],
    props: { numArgs: 1, primitive: !0 },
    handler: (e, t) => {
        var n = Cs(t[0], e),
            r = e.parser;
        ++r.leftrightDepth;
        var a = r.parseExpression(!1);
        --r.leftrightDepth, r.expect("\\right", !1);
        var i = me(r.parseFunction(), "leftright-right");
        return { type: "leftright", mode: r.mode, body: a, left: n.text, right: i.delim, rightColor: i.color };
    },
    htmlBuilder: (e, t) => {
        vw(e);
        for (var n = Je(e.body, t, !0, ["mopen", "mclose"]), r = 0, a = 0, i = !1, o = 0; o < n.length; o++)
            n[o].isMiddle ? (i = !0) : ((r = Math.max(n[o].height, r)), (a = Math.max(n[o].depth, a)));
        (r *= t.sizeMultiplier), (a *= t.sizeMultiplier);
        var l;
        if ((e.left === "." ? (l = io(t, ["mopen"])) : (l = jn.leftRightDelim(e.left, r, a, t, e.mode, ["mopen"])), n.unshift(l), i))
            for (var s = 1; s < n.length; s++) {
                var u = n[s],
                    c = u.isMiddle;
                c && (n[s] = jn.leftRightDelim(c.delim, r, a, c.options, e.mode, []));
            }
        var d;
        if (e.right === ".") d = io(t, ["mclose"]);
        else {
            var m = e.rightColor ? t.withColor(e.rightColor) : t;
            d = jn.leftRightDelim(e.right, r, a, m, e.mode, ["mclose"]);
        }
        return n.push(d), P.makeSpan(["minner"], n, t);
    },
    mathmlBuilder: (e, t) => {
        vw(e);
        var n = Dt(e.body, t);
        if (e.left !== ".") {
            var r = new G.MathNode("mo", [an(e.left, e.mode)]);
            r.setAttribute("fence", "true"), n.unshift(r);
        }
        if (e.right !== ".") {
            var a = new G.MathNode("mo", [an(e.right, e.mode)]);
            a.setAttribute("fence", "true"), e.rightColor && a.setAttribute("mathcolor", e.rightColor), n.push(a);
        }
        return t1(n);
    },
});
Z({
    type: "middle",
    names: ["\\middle"],
    props: { numArgs: 1, primitive: !0 },
    handler: (e, t) => {
        var n = Cs(t[0], e);
        if (!e.parser.leftrightDepth) throw new H("\\middle without preceding \\left", n);
        return { type: "middle", mode: e.parser.mode, delim: n.text };
    },
    htmlBuilder: (e, t) => {
        var n;
        if (e.delim === ".") n = io(t, []);
        else {
            n = jn.sizedDelim(e.delim, 1, t, e.mode, []);
            var r = { delim: e.delim, options: t };
            n.isMiddle = r;
        }
        return n;
    },
    mathmlBuilder: (e, t) => {
        var n = e.delim === "\\vert" || e.delim === "|" ? an("|", "text") : an(e.delim, e.mode),
            r = new G.MathNode("mo", [n]);
        return r.setAttribute("fence", "true"), r.setAttribute("lspace", "0.05em"), r.setAttribute("rspace", "0.05em"), r;
    },
});
var o1 = (e, t) => {
        var n = P.wrapFragment(we(e.body, t), t),
            r = e.label.slice(1),
            a = t.sizeMultiplier,
            i,
            o = 0,
            l = ie.isCharacterBox(e.body);
        if (r === "sout") (i = P.makeSpan(["stretchy", "sout"])), (i.height = t.fontMetrics().defaultRuleThickness / a), (o = -0.5 * t.fontMetrics().xHeight);
        else if (r === "phase") {
            var s = Ue({ number: 0.6, unit: "pt" }, t),
                u = Ue({ number: 0.35, unit: "ex" }, t),
                c = t.havingBaseSizing();
            a = a / c.sizeMultiplier;
            var d = n.height + n.depth + s + u;
            n.style.paddingLeft = K(d / 2 + s);
            var m = Math.floor(1e3 * d * a),
                f = yq(m),
                b = new Xn([new Ar("phase", f)], { width: "400em", height: K(m / 1e3), viewBox: "0 0 400000 " + m, preserveAspectRatio: "xMinYMin slice" });
            (i = P.makeSvgSpan(["hide-tail"], [b], t)), (i.style.height = K(d)), (o = n.depth + s + u);
        } else {
            /cancel/.test(r) ? l || n.classes.push("cancel-pad") : r === "angl" ? n.classes.push("anglpad") : n.classes.push("boxpad");
            var E = 0,
                I = 0,
                y = 0;
            /box/.test(r)
                ? ((y = Math.max(t.fontMetrics().fboxrule, t.minRuleThickness)), (E = t.fontMetrics().fboxsep + (r === "colorbox" ? 0 : y)), (I = E))
                : r === "angl"
                  ? ((y = Math.max(t.fontMetrics().defaultRuleThickness, t.minRuleThickness)), (E = 4 * y), (I = Math.max(0, 0.25 - n.depth)))
                  : ((E = l ? 0.2 : 0), (I = E)),
                (i = Qn.encloseSpan(n, r, E, I, t)),
                /fbox|boxed|fcolorbox/.test(r)
                    ? ((i.style.borderStyle = "solid"), (i.style.borderWidth = K(y)))
                    : r === "angl" && y !== 0.049 && ((i.style.borderTopWidth = K(y)), (i.style.borderRightWidth = K(y))),
                (o = n.depth + I),
                e.backgroundColor && ((i.style.backgroundColor = e.backgroundColor), e.borderColor && (i.style.borderColor = e.borderColor));
        }
        var g;
        if (e.backgroundColor)
            g = P.makeVList(
                {
                    positionType: "individualShift",
                    children: [
                        { type: "elem", elem: i, shift: o },
                        { type: "elem", elem: n, shift: 0 },
                    ],
                },
                t,
            );
        else {
            var v = /cancel|phase/.test(r) ? ["svg-align"] : [];
            g = P.makeVList(
                {
                    positionType: "individualShift",
                    children: [
                        { type: "elem", elem: n, shift: 0 },
                        { type: "elem", elem: i, shift: o, wrapperClasses: v },
                    ],
                },
                t,
            );
        }
        return (
            /cancel/.test(r) && ((g.height = n.height), (g.depth = n.depth)),
            /cancel/.test(r) && !l ? P.makeSpan(["mord", "cancel-lap"], [g], t) : P.makeSpan(["mord"], [g], t)
        );
    },
    l1 = (e, t) => {
        var n = 0,
            r = new G.MathNode(e.label.indexOf("colorbox") > -1 ? "mpadded" : "menclose", [Ie(e.body, t)]);
        switch (e.label) {
            case "\\cancel":
                r.setAttribute("notation", "updiagonalstrike");
                break;
            case "\\bcancel":
                r.setAttribute("notation", "downdiagonalstrike");
                break;
            case "\\phase":
                r.setAttribute("notation", "phasorangle");
                break;
            case "\\sout":
                r.setAttribute("notation", "horizontalstrike");
                break;
            case "\\fbox":
                r.setAttribute("notation", "box");
                break;
            case "\\angl":
                r.setAttribute("notation", "actuarial");
                break;
            case "\\fcolorbox":
            case "\\colorbox":
                if (
                    ((n = t.fontMetrics().fboxsep * t.fontMetrics().ptPerEm),
                    r.setAttribute("width", "+" + 2 * n + "pt"),
                    r.setAttribute("height", "+" + 2 * n + "pt"),
                    r.setAttribute("lspace", n + "pt"),
                    r.setAttribute("voffset", n + "pt"),
                    e.label === "\\fcolorbox")
                ) {
                    var a = Math.max(t.fontMetrics().fboxrule, t.minRuleThickness);
                    r.setAttribute("style", "border: " + a + "em solid " + String(e.borderColor));
                }
                break;
            case "\\xcancel":
                r.setAttribute("notation", "updiagonalstrike downdiagonalstrike");
                break;
        }
        return e.backgroundColor && r.setAttribute("mathbackground", e.backgroundColor), r;
    };
Z({
    type: "enclose",
    names: ["\\colorbox"],
    props: { numArgs: 2, allowedInText: !0, argTypes: ["color", "text"] },
    handler(e, t, n) {
        var { parser: r, funcName: a } = e,
            i = me(t[0], "color-token").color,
            o = t[1];
        return { type: "enclose", mode: r.mode, label: a, backgroundColor: i, body: o };
    },
    htmlBuilder: o1,
    mathmlBuilder: l1,
});
Z({
    type: "enclose",
    names: ["\\fcolorbox"],
    props: { numArgs: 3, allowedInText: !0, argTypes: ["color", "color", "text"] },
    handler(e, t, n) {
        var { parser: r, funcName: a } = e,
            i = me(t[0], "color-token").color,
            o = me(t[1], "color-token").color,
            l = t[2];
        return { type: "enclose", mode: r.mode, label: a, backgroundColor: o, borderColor: i, body: l };
    },
    htmlBuilder: o1,
    mathmlBuilder: l1,
});
Z({
    type: "enclose",
    names: ["\\fbox"],
    props: { numArgs: 1, argTypes: ["hbox"], allowedInText: !0 },
    handler(e, t) {
        var { parser: n } = e;
        return { type: "enclose", mode: n.mode, label: "\\fbox", body: t[0] };
    },
});
Z({
    type: "enclose",
    names: ["\\cancel", "\\bcancel", "\\xcancel", "\\sout", "\\phase"],
    props: { numArgs: 1 },
    handler(e, t) {
        var { parser: n, funcName: r } = e,
            a = t[0];
        return { type: "enclose", mode: n.mode, label: r, body: a };
    },
    htmlBuilder: o1,
    mathmlBuilder: l1,
});
Z({
    type: "enclose",
    names: ["\\angl"],
    props: { numArgs: 1, argTypes: ["hbox"], allowedInText: !1 },
    handler(e, t) {
        var { parser: n } = e;
        return { type: "enclose", mode: n.mode, label: "\\angl", body: t[0] };
    },
});
var Dx = {};
function Cn(e) {
    for (
        var { type: t, names: n, props: r, handler: a, htmlBuilder: i, mathmlBuilder: o } = e,
            l = { type: t, numArgs: r.numArgs || 0, allowedInText: !1, numOptionalArgs: 0, handler: a },
            s = 0;
        s < n.length;
        ++s
    )
        Dx[n[s]] = l;
    i && (Yl[t] = i), o && (Kl[t] = o);
}
var Mx = {};
function w(e, t) {
    Mx[e] = t;
}
function Ew(e) {
    var t = [];
    e.consumeSpaces();
    var n = e.fetch().text;
    for (n === "\\relax" && (e.consume(), e.consumeSpaces(), (n = e.fetch().text)); n === "\\hline" || n === "\\hdashline"; )
        e.consume(), t.push(n === "\\hdashline"), e.consumeSpaces(), (n = e.fetch().text);
    return t;
}
var Os = e => {
    var t = e.parser.settings;
    if (!t.displayMode) throw new H("{" + e.envName + "} can be used only in display mode.");
};
function s1(e) {
    if (e.indexOf("ed") === -1) return e.indexOf("*") === -1;
}
function Or(e, t, n) {
    var {
        hskipBeforeAndAfter: r,
        addJot: a,
        cols: i,
        arraystretch: o,
        colSeparationType: l,
        autoTag: s,
        singleRow: u,
        emptySingleRow: c,
        maxNumCols: d,
        leqno: m,
    } = t;
    if ((e.gullet.beginGroup(), u || e.gullet.macros.set("\\cr", "\\\\\\relax"), !o)) {
        var f = e.gullet.expandMacroAsText("\\arraystretch");
        if (f == null) o = 1;
        else if (((o = parseFloat(f)), !o || o < 0)) throw new H("Invalid \\arraystretch: " + f);
    }
    e.gullet.beginGroup();
    var b = [],
        E = [b],
        I = [],
        y = [],
        g = s != null ? [] : void 0;
    function v() {
        s && e.gullet.macros.set("\\@eqnsw", "1", !0);
    }
    function T() {
        g &&
            (e.gullet.macros.get("\\df@tag")
                ? (g.push(e.subparse([new en("\\df@tag")])), e.gullet.macros.set("\\df@tag", void 0, !0))
                : g.push(!!s && e.gullet.macros.get("\\@eqnsw") === "1"));
    }
    for (v(), y.push(Ew(e)); ; ) {
        var R = e.parseExpression(!1, u ? "\\end" : "\\\\");
        e.gullet.endGroup(),
            e.gullet.beginGroup(),
            (R = { type: "ordgroup", mode: e.mode, body: R }),
            n && (R = { type: "styling", mode: e.mode, style: n, body: [R] }),
            b.push(R);
        var k = e.fetch().text;
        if (k === "&") {
            if (d && b.length === d) {
                if (u || l) throw new H("Too many tab characters: &", e.nextToken);
                e.settings.reportNonstrict("textEnv", "Too few columns specified in the {array} column argument.");
            }
            e.consume();
        } else if (k === "\\end") {
            T(),
                b.length === 1 && R.type === "styling" && R.body[0].body.length === 0 && (E.length > 1 || !c) && E.pop(),
                y.length < E.length + 1 && y.push([]);
            break;
        } else if (k === "\\\\") {
            e.consume();
            var L = void 0;
            e.gullet.future().text !== " " && (L = e.parseSizeGroup(!0)), I.push(L ? L.value : null), T(), y.push(Ew(e)), (b = []), E.push(b), v();
        } else throw new H("Expected & or \\\\ or \\cr or \\end", e.nextToken);
    }
    return (
        e.gullet.endGroup(),
        e.gullet.endGroup(),
        {
            type: "array",
            mode: e.mode,
            addJot: a,
            arraystretch: o,
            body: E,
            cols: i,
            rowGaps: I,
            hskipBeforeAndAfter: r,
            hLinesBeforeRow: y,
            colSeparationType: l,
            tags: g,
            leqno: m,
        }
    );
}
function u1(e) {
    return e.slice(0, 1) === "d" ? "display" : "text";
}
var On = function (t, n) {
        var r,
            a,
            i = t.body.length,
            o = t.hLinesBeforeRow,
            l = 0,
            s = new Array(i),
            u = [],
            c = Math.max(n.fontMetrics().arrayRuleWidth, n.minRuleThickness),
            d = 1 / n.fontMetrics().ptPerEm,
            m = 5 * d;
        if (t.colSeparationType && t.colSeparationType === "small") {
            var f = n.havingStyle(le.SCRIPT).sizeMultiplier;
            m = 0.2778 * (f / n.sizeMultiplier);
        }
        var b = t.colSeparationType === "CD" ? Ue({ number: 3, unit: "ex" }, n) : 12 * d,
            E = 3 * d,
            I = t.arraystretch * b,
            y = 0.7 * I,
            g = 0.3 * I,
            v = 0;
        function T(sa) {
            for (var Dr = 0; Dr < sa.length; ++Dr) Dr > 0 && (v += 0.25), u.push({ pos: v, isDashed: sa[Dr] });
        }
        for (T(o[0]), r = 0; r < t.body.length; ++r) {
            var R = t.body[r],
                k = y,
                L = g;
            l < R.length && (l = R.length);
            var F = new Array(R.length);
            for (a = 0; a < R.length; ++a) {
                var M = we(R[a], n);
                L < M.depth && (L = M.depth), k < M.height && (k = M.height), (F[a] = M);
            }
            var O = t.rowGaps[r],
                B = 0;
            O && ((B = Ue(O, n)), B > 0 && ((B += g), L < B && (L = B), (B = 0))),
                t.addJot && (L += E),
                (F.height = k),
                (F.depth = L),
                (v += k),
                (F.pos = v),
                (v += L + B),
                (s[r] = F),
                T(o[r + 1]);
        }
        var $ = v / 2 + n.fontMetrics().axisHeight,
            ne = t.cols || [],
            re = [],
            J,
            se,
            ce = [];
        if (t.tags && t.tags.some(sa => sa))
            for (r = 0; r < i; ++r) {
                var U = s[r],
                    W = U.pos - $,
                    A = t.tags[r],
                    Y = void 0;
                A === !0 ? (Y = P.makeSpan(["eqn-num"], [], n)) : A === !1 ? (Y = P.makeSpan([], [], n)) : (Y = P.makeSpan([], Je(A, n, !0), n)),
                    (Y.depth = U.depth),
                    (Y.height = U.height),
                    ce.push({ type: "elem", elem: Y, shift: W });
            }
        for (a = 0, se = 0; a < l || se < ne.length; ++a, ++se) {
            for (var Q = ne[se] || {}, C = !0; Q.type === "separator"; ) {
                if (
                    (C || ((J = P.makeSpan(["arraycolsep"], [])), (J.style.width = K(n.fontMetrics().doubleRuleSep)), re.push(J)),
                    Q.separator === "|" || Q.separator === ":")
                ) {
                    var he = Q.separator === "|" ? "solid" : "dashed",
                        ke = P.makeSpan(["vertical-separator"], [], n);
                    (ke.style.height = K(v)), (ke.style.borderRightWidth = K(c)), (ke.style.borderRightStyle = he), (ke.style.margin = "0 " + K(-c / 2));
                    var de = v - $;
                    de && (ke.style.verticalAlign = K(-de)), re.push(ke);
                } else throw new H("Invalid separator type: " + Q.separator);
                se++, (Q = ne[se] || {}), (C = !1);
            }
            if (!(a >= l)) {
                var Te = void 0;
                (a > 0 || t.hskipBeforeAndAfter) &&
                    ((Te = ie.deflt(Q.pregap, m)), Te !== 0 && ((J = P.makeSpan(["arraycolsep"], [])), (J.style.width = K(Te)), re.push(J)));
                var He = [];
                for (r = 0; r < i; ++r) {
                    var it = s[r],
                        pt = it[a];
                    if (pt) {
                        var sn = it.pos - $;
                        (pt.depth = it.depth), (pt.height = it.height), He.push({ type: "elem", elem: pt, shift: sn });
                    }
                }
                (He = P.makeVList({ positionType: "individualShift", children: He }, n)),
                    (He = P.makeSpan(["col-align-" + (Q.align || "c")], [He])),
                    re.push(He),
                    (a < l - 1 || t.hskipBeforeAndAfter) &&
                        ((Te = ie.deflt(Q.postgap, m)), Te !== 0 && ((J = P.makeSpan(["arraycolsep"], [])), (J.style.width = K(Te)), re.push(J)));
            }
        }
        if (((s = P.makeSpan(["mtable"], re)), u.length > 0)) {
            for (var ti = P.makeLineSpan("hline", n, c), Lr = P.makeLineSpan("hdashline", n, c), ni = [{ type: "elem", elem: s, shift: 0 }]; u.length > 0; ) {
                var ri = u.pop(),
                    ai = ri.pos - $;
                ri.isDashed ? ni.push({ type: "elem", elem: Lr, shift: ai }) : ni.push({ type: "elem", elem: ti, shift: ai });
            }
            s = P.makeVList({ positionType: "individualShift", children: ni }, n);
        }
        if (ce.length === 0) return P.makeSpan(["mord"], [s], n);
        var la = P.makeVList({ positionType: "individualShift", children: ce }, n);
        return (la = P.makeSpan(["tag"], [la], n)), P.makeFragment([s, la]);
    },
    RG = { c: "center ", l: "left ", r: "right " },
    Ln = function (t, n) {
        for (var r = [], a = new G.MathNode("mtd", [], ["mtr-glue"]), i = new G.MathNode("mtd", [], ["mml-eqn-num"]), o = 0; o < t.body.length; o++) {
            for (var l = t.body[o], s = [], u = 0; u < l.length; u++) s.push(new G.MathNode("mtd", [Ie(l[u], n)]));
            t.tags && t.tags[o] && (s.unshift(a), s.push(a), t.leqno ? s.unshift(i) : s.push(i)), r.push(new G.MathNode("mtr", s));
        }
        var c = new G.MathNode("mtable", r),
            d = t.arraystretch === 0.5 ? 0.1 : 0.16 + t.arraystretch - 1 + (t.addJot ? 0.09 : 0);
        c.setAttribute("rowspacing", K(d));
        var m = "",
            f = "";
        if (t.cols && t.cols.length > 0) {
            var b = t.cols,
                E = "",
                I = !1,
                y = 0,
                g = b.length;
            b[0].type === "separator" && ((m += "top "), (y = 1)), b[b.length - 1].type === "separator" && ((m += "bottom "), (g -= 1));
            for (var v = y; v < g; v++)
                b[v].type === "align"
                    ? ((f += RG[b[v].align]), I && (E += "none "), (I = !0))
                    : b[v].type === "separator" && I && ((E += b[v].separator === "|" ? "solid " : "dashed "), (I = !1));
            c.setAttribute("columnalign", f.trim()), /[sd]/.test(E) && c.setAttribute("columnlines", E.trim());
        }
        if (t.colSeparationType === "align") {
            for (var T = t.cols || [], R = "", k = 1; k < T.length; k++) R += k % 2 ? "0em " : "1em ";
            c.setAttribute("columnspacing", R.trim());
        } else
            t.colSeparationType === "alignat" || t.colSeparationType === "gather"
                ? c.setAttribute("columnspacing", "0em")
                : t.colSeparationType === "small"
                  ? c.setAttribute("columnspacing", "0.2778em")
                  : t.colSeparationType === "CD"
                    ? c.setAttribute("columnspacing", "0.5em")
                    : c.setAttribute("columnspacing", "1em");
        var L = "",
            F = t.hLinesBeforeRow;
        (m += F[0].length > 0 ? "left " : ""), (m += F[F.length - 1].length > 0 ? "right " : "");
        for (var M = 1; M < F.length - 1; M++) L += F[M].length === 0 ? "none " : F[M][0] ? "dashed " : "solid ";
        return (
            /[sd]/.test(L) && c.setAttribute("rowlines", L.trim()),
            m !== "" && ((c = new G.MathNode("menclose", [c])), c.setAttribute("notation", m.trim())),
            t.arraystretch && t.arraystretch < 1 && ((c = new G.MathNode("mstyle", [c])), c.setAttribute("scriptlevel", "1")),
            c
        );
    },
    Fx = function (t, n) {
        t.envName.indexOf("ed") === -1 && Os(t);
        var r = [],
            a = t.envName.indexOf("at") > -1 ? "alignat" : "align",
            i = t.envName === "split",
            o = Or(
                t.parser,
                {
                    cols: r,
                    addJot: !0,
                    autoTag: i ? void 0 : s1(t.envName),
                    emptySingleRow: !0,
                    colSeparationType: a,
                    maxNumCols: i ? 2 : void 0,
                    leqno: t.parser.settings.leqno,
                },
                "display",
            ),
            l,
            s = 0,
            u = { type: "ordgroup", mode: t.mode, body: [] };
        if (n[0] && n[0].type === "ordgroup") {
            for (var c = "", d = 0; d < n[0].body.length; d++) {
                var m = me(n[0].body[d], "textord");
                c += m.text;
            }
            (l = Number(c)), (s = l * 2);
        }
        var f = !s;
        o.body.forEach(function (y) {
            for (var g = 1; g < y.length; g += 2) {
                var v = me(y[g], "styling"),
                    T = me(v.body[0], "ordgroup");
                T.body.unshift(u);
            }
            if (f) s < y.length && (s = y.length);
            else {
                var R = y.length / 2;
                if (l < R) throw new H("Too many math in a row: " + ("expected " + l + ", but got " + R), y[0]);
            }
        });
        for (var b = 0; b < s; ++b) {
            var E = "r",
                I = 0;
            b % 2 === 1 ? (E = "l") : b > 0 && f && (I = 1), (r[b] = { type: "align", align: E, pregap: I, postgap: 0 });
        }
        return (o.colSeparationType = f ? "align" : "alignat"), o;
    };
Cn({
    type: "array",
    names: ["array", "darray"],
    props: { numArgs: 1 },
    handler(e, t) {
        var n = Ns(t[0]),
            r = n ? [t[0]] : me(t[0], "ordgroup").body,
            a = r.map(function (o) {
                var l = r1(o),
                    s = l.text;
                if ("lcr".indexOf(s) !== -1) return { type: "align", align: s };
                if (s === "|") return { type: "separator", separator: "|" };
                if (s === ":") return { type: "separator", separator: ":" };
                throw new H("Unknown column alignment: " + s, o);
            }),
            i = { cols: a, hskipBeforeAndAfter: !0, maxNumCols: a.length };
        return Or(e.parser, i, u1(e.envName));
    },
    htmlBuilder: On,
    mathmlBuilder: Ln,
});
Cn({
    type: "array",
    names: ["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix", "matrix*", "pmatrix*", "bmatrix*", "Bmatrix*", "vmatrix*", "Vmatrix*"],
    props: { numArgs: 0 },
    handler(e) {
        var t = { matrix: null, pmatrix: ["(", ")"], bmatrix: ["[", "]"], Bmatrix: ["\\{", "\\}"], vmatrix: ["|", "|"], Vmatrix: ["\\Vert", "\\Vert"] }[
                e.envName.replace("*", "")
            ],
            n = "c",
            r = { hskipBeforeAndAfter: !1, cols: [{ type: "align", align: n }] };
        if (e.envName.charAt(e.envName.length - 1) === "*") {
            var a = e.parser;
            if ((a.consumeSpaces(), a.fetch().text === "[")) {
                if ((a.consume(), a.consumeSpaces(), (n = a.fetch().text), "lcr".indexOf(n) === -1)) throw new H("Expected l or c or r", a.nextToken);
                a.consume(), a.consumeSpaces(), a.expect("]"), a.consume(), (r.cols = [{ type: "align", align: n }]);
            }
        }
        var i = Or(e.parser, r, u1(e.envName)),
            o = Math.max(0, ...i.body.map(l => l.length));
        return (
            (i.cols = new Array(o).fill({ type: "align", align: n })),
            t ? { type: "leftright", mode: e.mode, body: [i], left: t[0], right: t[1], rightColor: void 0 } : i
        );
    },
    htmlBuilder: On,
    mathmlBuilder: Ln,
});
Cn({
    type: "array",
    names: ["smallmatrix"],
    props: { numArgs: 0 },
    handler(e) {
        var t = { arraystretch: 0.5 },
            n = Or(e.parser, t, "script");
        return (n.colSeparationType = "small"), n;
    },
    htmlBuilder: On,
    mathmlBuilder: Ln,
});
Cn({
    type: "array",
    names: ["subarray"],
    props: { numArgs: 1 },
    handler(e, t) {
        var n = Ns(t[0]),
            r = n ? [t[0]] : me(t[0], "ordgroup").body,
            a = r.map(function (o) {
                var l = r1(o),
                    s = l.text;
                if ("lc".indexOf(s) !== -1) return { type: "align", align: s };
                throw new H("Unknown column alignment: " + s, o);
            });
        if (a.length > 1) throw new H("{subarray} can contain only one column");
        var i = { cols: a, hskipBeforeAndAfter: !1, arraystretch: 0.5 };
        if (((i = Or(e.parser, i, "script")), i.body.length > 0 && i.body[0].length > 1)) throw new H("{subarray} can contain only one column");
        return i;
    },
    htmlBuilder: On,
    mathmlBuilder: Ln,
});
Cn({
    type: "array",
    names: ["cases", "dcases", "rcases", "drcases"],
    props: { numArgs: 0 },
    handler(e) {
        var t = {
                arraystretch: 1.2,
                cols: [
                    { type: "align", align: "l", pregap: 0, postgap: 1 },
                    { type: "align", align: "l", pregap: 0, postgap: 0 },
                ],
            },
            n = Or(e.parser, t, u1(e.envName));
        return {
            type: "leftright",
            mode: e.mode,
            body: [n],
            left: e.envName.indexOf("r") > -1 ? "." : "\\{",
            right: e.envName.indexOf("r") > -1 ? "\\}" : ".",
            rightColor: void 0,
        };
    },
    htmlBuilder: On,
    mathmlBuilder: Ln,
});
Cn({ type: "array", names: ["align", "align*", "aligned", "split"], props: { numArgs: 0 }, handler: Fx, htmlBuilder: On, mathmlBuilder: Ln });
Cn({
    type: "array",
    names: ["gathered", "gather", "gather*"],
    props: { numArgs: 0 },
    handler(e) {
        ie.contains(["gather", "gather*"], e.envName) && Os(e);
        var t = {
            cols: [{ type: "align", align: "c" }],
            addJot: !0,
            colSeparationType: "gather",
            autoTag: s1(e.envName),
            emptySingleRow: !0,
            leqno: e.parser.settings.leqno,
        };
        return Or(e.parser, t, "display");
    },
    htmlBuilder: On,
    mathmlBuilder: Ln,
});
Cn({ type: "array", names: ["alignat", "alignat*", "alignedat"], props: { numArgs: 1 }, handler: Fx, htmlBuilder: On, mathmlBuilder: Ln });
Cn({
    type: "array",
    names: ["equation", "equation*"],
    props: { numArgs: 0 },
    handler(e) {
        Os(e);
        var t = { autoTag: s1(e.envName), emptySingleRow: !0, singleRow: !0, maxNumCols: 1, leqno: e.parser.settings.leqno };
        return Or(e.parser, t, "display");
    },
    htmlBuilder: On,
    mathmlBuilder: Ln,
});
Cn({
    type: "array",
    names: ["CD"],
    props: { numArgs: 0 },
    handler(e) {
        return Os(e), fG(e.parser);
    },
    htmlBuilder: On,
    mathmlBuilder: Ln,
});
w("\\nonumber", "\\gdef\\@eqnsw{0}");
w("\\notag", "\\nonumber");
Z({
    type: "text",
    names: ["\\hline", "\\hdashline"],
    props: { numArgs: 0, allowedInText: !0, allowedInMath: !0 },
    handler(e, t) {
        throw new H(e.funcName + " valid only within array environment");
    },
});
var Sw = Dx;
Z({
    type: "environment",
    names: ["\\begin", "\\end"],
    props: { numArgs: 1, argTypes: ["text"] },
    handler(e, t) {
        var { parser: n, funcName: r } = e,
            a = t[0];
        if (a.type !== "ordgroup") throw new H("Invalid environment name", a);
        for (var i = "", o = 0; o < a.body.length; ++o) i += me(a.body[o], "textord").text;
        if (r === "\\begin") {
            if (!Sw.hasOwnProperty(i)) throw new H("No such environment: " + i, a);
            var l = Sw[i],
                { args: s, optArgs: u } = n.parseArguments("\\begin{" + i + "}", l),
                c = { mode: n.mode, envName: i, parser: n },
                d = l.handler(c, s, u);
            n.expect("\\end", !1);
            var m = n.nextToken,
                f = me(n.parseFunction(), "environment");
            if (f.name !== i) throw new H("Mismatch: \\begin{" + i + "} matched by \\end{" + f.name + "}", m);
            return d;
        }
        return { type: "environment", mode: n.mode, name: i, nameGroup: a };
    },
});
var Px = (e, t) => {
        var n = e.font,
            r = t.withFont(n);
        return we(e.body, r);
    },
    Bx = (e, t) => {
        var n = e.font,
            r = t.withFont(n);
        return Ie(e.body, r);
    },
    ww = { "\\Bbb": "\\mathbb", "\\bold": "\\mathbf", "\\frak": "\\mathfrak", "\\bm": "\\boldsymbol" };
Z({
    type: "font",
    names: [
        "\\mathrm",
        "\\mathit",
        "\\mathbf",
        "\\mathnormal",
        "\\mathsfit",
        "\\mathbb",
        "\\mathcal",
        "\\mathfrak",
        "\\mathscr",
        "\\mathsf",
        "\\mathtt",
        "\\Bbb",
        "\\bold",
        "\\frak",
    ],
    props: { numArgs: 1, allowedInArgument: !0 },
    handler: (e, t) => {
        var { parser: n, funcName: r } = e,
            a = Xl(t[0]),
            i = r;
        return i in ww && (i = ww[i]), { type: "font", mode: n.mode, font: i.slice(1), body: a };
    },
    htmlBuilder: Px,
    mathmlBuilder: Bx,
});
Z({
    type: "mclass",
    names: ["\\boldsymbol", "\\bm"],
    props: { numArgs: 1 },
    handler: (e, t) => {
        var { parser: n } = e,
            r = t[0],
            a = ie.isCharacterBox(r);
        return { type: "mclass", mode: n.mode, mclass: _s(r), body: [{ type: "font", mode: n.mode, font: "boldsymbol", body: r }], isCharacterBox: a };
    },
});
Z({
    type: "font",
    names: ["\\rm", "\\sf", "\\tt", "\\bf", "\\it", "\\cal"],
    props: { numArgs: 0, allowedInText: !0 },
    handler: (e, t) => {
        var { parser: n, funcName: r, breakOnTokenText: a } = e,
            { mode: i } = n,
            o = n.parseExpression(!0, a),
            l = "math" + r.slice(1);
        return { type: "font", mode: i, font: l, body: { type: "ordgroup", mode: n.mode, body: o } };
    },
    htmlBuilder: Px,
    mathmlBuilder: Bx,
});
var Ux = (e, t) => {
        var n = t;
        return (
            e === "display"
                ? (n = n.id >= le.SCRIPT.id ? n.text() : le.DISPLAY)
                : e === "text" && n.size === le.DISPLAY.size
                  ? (n = le.TEXT)
                  : e === "script"
                    ? (n = le.SCRIPT)
                    : e === "scriptscript" && (n = le.SCRIPTSCRIPT),
            n
        );
    },
    c1 = (e, t) => {
        var n = Ux(e.size, t.style),
            r = n.fracNum(),
            a = n.fracDen(),
            i;
        i = t.havingStyle(r);
        var o = we(e.numer, i, t);
        if (e.continued) {
            var l = 8.5 / t.fontMetrics().ptPerEm,
                s = 3.5 / t.fontMetrics().ptPerEm;
            (o.height = o.height < l ? l : o.height), (o.depth = o.depth < s ? s : o.depth);
        }
        i = t.havingStyle(a);
        var u = we(e.denom, i, t),
            c,
            d,
            m;
        e.hasBarLine
            ? (e.barSize ? ((d = Ue(e.barSize, t)), (c = P.makeLineSpan("frac-line", t, d))) : (c = P.makeLineSpan("frac-line", t)),
              (d = c.height),
              (m = c.height))
            : ((c = null), (d = 0), (m = t.fontMetrics().defaultRuleThickness));
        var f, b, E;
        n.size === le.DISPLAY.size || e.size === "display"
            ? ((f = t.fontMetrics().num1), d > 0 ? (b = 3 * m) : (b = 7 * m), (E = t.fontMetrics().denom1))
            : (d > 0 ? ((f = t.fontMetrics().num2), (b = m)) : ((f = t.fontMetrics().num3), (b = 3 * m)), (E = t.fontMetrics().denom2));
        var I;
        if (c) {
            var g = t.fontMetrics().axisHeight;
            f - o.depth - (g + 0.5 * d) < b && (f += b - (f - o.depth - (g + 0.5 * d))),
                g - 0.5 * d - (u.height - E) < b && (E += b - (g - 0.5 * d - (u.height - E)));
            var v = -(g - 0.5 * d);
            I = P.makeVList(
                {
                    positionType: "individualShift",
                    children: [
                        { type: "elem", elem: u, shift: E },
                        { type: "elem", elem: c, shift: v },
                        { type: "elem", elem: o, shift: -f },
                    ],
                },
                t,
            );
        } else {
            var y = f - o.depth - (u.height - E);
            y < b && ((f += 0.5 * (b - y)), (E += 0.5 * (b - y))),
                (I = P.makeVList(
                    {
                        positionType: "individualShift",
                        children: [
                            { type: "elem", elem: u, shift: E },
                            { type: "elem", elem: o, shift: -f },
                        ],
                    },
                    t,
                ));
        }
        (i = t.havingStyle(n)), (I.height *= i.sizeMultiplier / t.sizeMultiplier), (I.depth *= i.sizeMultiplier / t.sizeMultiplier);
        var T;
        n.size === le.DISPLAY.size
            ? (T = t.fontMetrics().delim1)
            : n.size === le.SCRIPTSCRIPT.size
              ? (T = t.havingStyle(le.SCRIPT).fontMetrics().delim2)
              : (T = t.fontMetrics().delim2);
        var R, k;
        return (
            e.leftDelim == null ? (R = io(t, ["mopen"])) : (R = jn.customSizedDelim(e.leftDelim, T, !0, t.havingStyle(n), e.mode, ["mopen"])),
            e.continued
                ? (k = P.makeSpan([]))
                : e.rightDelim == null
                  ? (k = io(t, ["mclose"]))
                  : (k = jn.customSizedDelim(e.rightDelim, T, !0, t.havingStyle(n), e.mode, ["mclose"])),
            P.makeSpan(["mord"].concat(i.sizingClasses(t)), [R, P.makeSpan(["mfrac"], [I]), k], t)
        );
    },
    d1 = (e, t) => {
        var n = new G.MathNode("mfrac", [Ie(e.numer, t), Ie(e.denom, t)]);
        if (!e.hasBarLine) n.setAttribute("linethickness", "0px");
        else if (e.barSize) {
            var r = Ue(e.barSize, t);
            n.setAttribute("linethickness", K(r));
        }
        var a = Ux(e.size, t.style);
        if (a.size !== t.style.size) {
            n = new G.MathNode("mstyle", [n]);
            var i = a.size === le.DISPLAY.size ? "true" : "false";
            n.setAttribute("displaystyle", i), n.setAttribute("scriptlevel", "0");
        }
        if (e.leftDelim != null || e.rightDelim != null) {
            var o = [];
            if (e.leftDelim != null) {
                var l = new G.MathNode("mo", [new G.TextNode(e.leftDelim.replace("\\", ""))]);
                l.setAttribute("fence", "true"), o.push(l);
            }
            if ((o.push(n), e.rightDelim != null)) {
                var s = new G.MathNode("mo", [new G.TextNode(e.rightDelim.replace("\\", ""))]);
                s.setAttribute("fence", "true"), o.push(s);
            }
            return t1(o);
        }
        return n;
    };
Z({
    type: "genfrac",
    names: ["\\dfrac", "\\frac", "\\tfrac", "\\dbinom", "\\binom", "\\tbinom", "\\\\atopfrac", "\\\\bracefrac", "\\\\brackfrac"],
    props: { numArgs: 2, allowedInArgument: !0 },
    handler: (e, t) => {
        var { parser: n, funcName: r } = e,
            a = t[0],
            i = t[1],
            o,
            l = null,
            s = null,
            u = "auto";
        switch (r) {
            case "\\dfrac":
            case "\\frac":
            case "\\tfrac":
                o = !0;
                break;
            case "\\\\atopfrac":
                o = !1;
                break;
            case "\\dbinom":
            case "\\binom":
            case "\\tbinom":
                (o = !1), (l = "("), (s = ")");
                break;
            case "\\\\bracefrac":
                (o = !1), (l = "\\{"), (s = "\\}");
                break;
            case "\\\\brackfrac":
                (o = !1), (l = "["), (s = "]");
                break;
            default:
                throw new Error("Unrecognized genfrac command");
        }
        switch (r) {
            case "\\dfrac":
            case "\\dbinom":
                u = "display";
                break;
            case "\\tfrac":
            case "\\tbinom":
                u = "text";
                break;
        }
        return { type: "genfrac", mode: n.mode, continued: !1, numer: a, denom: i, hasBarLine: o, leftDelim: l, rightDelim: s, size: u, barSize: null };
    },
    htmlBuilder: c1,
    mathmlBuilder: d1,
});
Z({
    type: "genfrac",
    names: ["\\cfrac"],
    props: { numArgs: 2 },
    handler: (e, t) => {
        var { parser: n, funcName: r } = e,
            a = t[0],
            i = t[1];
        return {
            type: "genfrac",
            mode: n.mode,
            continued: !0,
            numer: a,
            denom: i,
            hasBarLine: !0,
            leftDelim: null,
            rightDelim: null,
            size: "display",
            barSize: null,
        };
    },
});
Z({
    type: "infix",
    names: ["\\over", "\\choose", "\\atop", "\\brace", "\\brack"],
    props: { numArgs: 0, infix: !0 },
    handler(e) {
        var { parser: t, funcName: n, token: r } = e,
            a;
        switch (n) {
            case "\\over":
                a = "\\frac";
                break;
            case "\\choose":
                a = "\\binom";
                break;
            case "\\atop":
                a = "\\\\atopfrac";
                break;
            case "\\brace":
                a = "\\\\bracefrac";
                break;
            case "\\brack":
                a = "\\\\brackfrac";
                break;
            default:
                throw new Error("Unrecognized infix genfrac command");
        }
        return { type: "infix", mode: t.mode, replaceWith: a, token: r };
    },
});
var kw = ["display", "text", "script", "scriptscript"],
    Tw = function (t) {
        var n = null;
        return t.length > 0 && ((n = t), (n = n === "." ? null : n)), n;
    };
Z({
    type: "genfrac",
    names: ["\\genfrac"],
    props: { numArgs: 6, allowedInArgument: !0, argTypes: ["math", "math", "size", "text", "math", "math"] },
    handler(e, t) {
        var { parser: n } = e,
            r = t[4],
            a = t[5],
            i = Xl(t[0]),
            o = i.type === "atom" && i.family === "open" ? Tw(i.text) : null,
            l = Xl(t[1]),
            s = l.type === "atom" && l.family === "close" ? Tw(l.text) : null,
            u = me(t[2], "size"),
            c,
            d = null;
        u.isBlank ? (c = !0) : ((d = u.value), (c = d.number > 0));
        var m = "auto",
            f = t[3];
        if (f.type === "ordgroup") {
            if (f.body.length > 0) {
                var b = me(f.body[0], "textord");
                m = kw[Number(b.text)];
            }
        } else (f = me(f, "textord")), (m = kw[Number(f.text)]);
        return { type: "genfrac", mode: n.mode, numer: r, denom: a, continued: !1, hasBarLine: c, barSize: d, leftDelim: o, rightDelim: s, size: m };
    },
    htmlBuilder: c1,
    mathmlBuilder: d1,
});
Z({
    type: "infix",
    names: ["\\above"],
    props: { numArgs: 1, argTypes: ["size"], infix: !0 },
    handler(e, t) {
        var { parser: n, funcName: r, token: a } = e;
        return { type: "infix", mode: n.mode, replaceWith: "\\\\abovefrac", size: me(t[0], "size").value, token: a };
    },
});
Z({
    type: "genfrac",
    names: ["\\\\abovefrac"],
    props: { numArgs: 3, argTypes: ["math", "size", "math"] },
    handler: (e, t) => {
        var { parser: n, funcName: r } = e,
            a = t[0],
            i = rq(me(t[1], "infix").size),
            o = t[2],
            l = i.number > 0;
        return { type: "genfrac", mode: n.mode, numer: a, denom: o, continued: !1, hasBarLine: l, barSize: i, leftDelim: null, rightDelim: null, size: "auto" };
    },
    htmlBuilder: c1,
    mathmlBuilder: d1,
});
var zx = (e, t) => {
        var n = t.style,
            r,
            a;
        e.type === "supsub"
            ? ((r = e.sup ? we(e.sup, t.havingStyle(n.sup()), t) : we(e.sub, t.havingStyle(n.sub()), t)), (a = me(e.base, "horizBrace")))
            : (a = me(e, "horizBrace"));
        var i = we(a.base, t.havingBaseStyle(le.DISPLAY)),
            o = Qn.svgSpan(a, t),
            l;
        if (
            (a.isOver
                ? ((l = P.makeVList(
                      {
                          positionType: "firstBaseline",
                          children: [
                              { type: "elem", elem: i },
                              { type: "kern", size: 0.1 },
                              { type: "elem", elem: o },
                          ],
                      },
                      t,
                  )),
                  l.children[0].children[0].children[1].classes.push("svg-align"))
                : ((l = P.makeVList(
                      {
                          positionType: "bottom",
                          positionData: i.depth + 0.1 + o.height,
                          children: [
                              { type: "elem", elem: o },
                              { type: "kern", size: 0.1 },
                              { type: "elem", elem: i },
                          ],
                      },
                      t,
                  )),
                  l.children[0].children[0].children[0].classes.push("svg-align")),
            r)
        ) {
            var s = P.makeSpan(["mord", a.isOver ? "mover" : "munder"], [l], t);
            a.isOver
                ? (l = P.makeVList(
                      {
                          positionType: "firstBaseline",
                          children: [
                              { type: "elem", elem: s },
                              { type: "kern", size: 0.2 },
                              { type: "elem", elem: r },
                          ],
                      },
                      t,
                  ))
                : (l = P.makeVList(
                      {
                          positionType: "bottom",
                          positionData: s.depth + 0.2 + r.height + r.depth,
                          children: [
                              { type: "elem", elem: r },
                              { type: "kern", size: 0.2 },
                              { type: "elem", elem: s },
                          ],
                      },
                      t,
                  ));
        }
        return P.makeSpan(["mord", a.isOver ? "mover" : "munder"], [l], t);
    },
    IG = (e, t) => {
        var n = Qn.mathMLnode(e.label);
        return new G.MathNode(e.isOver ? "mover" : "munder", [Ie(e.base, t), n]);
    };
Z({
    type: "horizBrace",
    names: ["\\overbrace", "\\underbrace"],
    props: { numArgs: 1 },
    handler(e, t) {
        var { parser: n, funcName: r } = e;
        return { type: "horizBrace", mode: n.mode, label: r, isOver: /^\\over/.test(r), base: t[0] };
    },
    htmlBuilder: zx,
    mathmlBuilder: IG,
});
Z({
    type: "href",
    names: ["\\href"],
    props: { numArgs: 2, argTypes: ["url", "original"], allowedInText: !0 },
    handler: (e, t) => {
        var { parser: n } = e,
            r = t[1],
            a = me(t[0], "url").url;
        return n.settings.isTrusted({ command: "\\href", url: a }) ? { type: "href", mode: n.mode, href: a, body: Ve(r) } : n.formatUnsupportedCmd("\\href");
    },
    htmlBuilder: (e, t) => {
        var n = Je(e.body, t, !1);
        return P.makeAnchor(e.href, [], n, t);
    },
    mathmlBuilder: (e, t) => {
        var n = xr(e.body, t);
        return n instanceof Ut || (n = new Ut("mrow", [n])), n.setAttribute("href", e.href), n;
    },
});
Z({
    type: "href",
    names: ["\\url"],
    props: { numArgs: 1, argTypes: ["url"], allowedInText: !0 },
    handler: (e, t) => {
        var { parser: n } = e,
            r = me(t[0], "url").url;
        if (!n.settings.isTrusted({ command: "\\url", url: r })) return n.formatUnsupportedCmd("\\url");
        for (var a = [], i = 0; i < r.length; i++) {
            var o = r[i];
            o === "~" && (o = "\\textasciitilde"), a.push({ type: "textord", mode: "text", text: o });
        }
        var l = { type: "text", mode: n.mode, font: "\\texttt", body: a };
        return { type: "href", mode: n.mode, href: r, body: Ve(l) };
    },
});
Z({
    type: "hbox",
    names: ["\\hbox"],
    props: { numArgs: 1, argTypes: ["text"], allowedInText: !0, primitive: !0 },
    handler(e, t) {
        var { parser: n } = e;
        return { type: "hbox", mode: n.mode, body: Ve(t[0]) };
    },
    htmlBuilder(e, t) {
        var n = Je(e.body, t, !1);
        return P.makeFragment(n);
    },
    mathmlBuilder(e, t) {
        return new G.MathNode("mrow", Dt(e.body, t));
    },
});
Z({
    type: "html",
    names: ["\\htmlClass", "\\htmlId", "\\htmlStyle", "\\htmlData"],
    props: { numArgs: 2, argTypes: ["raw", "original"], allowedInText: !0 },
    handler: (e, t) => {
        var { parser: n, funcName: r, token: a } = e,
            i = me(t[0], "raw").string,
            o = t[1];
        n.settings.strict && n.settings.reportNonstrict("htmlExtension", "HTML extension is disabled on strict mode");
        var l,
            s = {};
        switch (r) {
            case "\\htmlClass":
                (s.class = i), (l = { command: "\\htmlClass", class: i });
                break;
            case "\\htmlId":
                (s.id = i), (l = { command: "\\htmlId", id: i });
                break;
            case "\\htmlStyle":
                (s.style = i), (l = { command: "\\htmlStyle", style: i });
                break;
            case "\\htmlData": {
                for (var u = i.split(","), c = 0; c < u.length; c++) {
                    var d = u[c].split("=");
                    if (d.length !== 2) throw new H("Error parsing key-value for \\htmlData");
                    s["data-" + d[0].trim()] = d[1].trim();
                }
                l = { command: "\\htmlData", attributes: s };
                break;
            }
            default:
                throw new Error("Unrecognized html command");
        }
        return n.settings.isTrusted(l) ? { type: "html", mode: n.mode, attributes: s, body: Ve(o) } : n.formatUnsupportedCmd(r);
    },
    htmlBuilder: (e, t) => {
        var n = Je(e.body, t, !1),
            r = ["enclosing"];
        e.attributes.class && r.push(...e.attributes.class.trim().split(/\s+/));
        var a = P.makeSpan(r, n, t);
        for (var i in e.attributes) i !== "class" && e.attributes.hasOwnProperty(i) && a.setAttribute(i, e.attributes[i]);
        return a;
    },
    mathmlBuilder: (e, t) => xr(e.body, t),
});
Z({
    type: "htmlmathml",
    names: ["\\html@mathml"],
    props: { numArgs: 2, allowedInText: !0 },
    handler: (e, t) => {
        var { parser: n } = e;
        return { type: "htmlmathml", mode: n.mode, html: Ve(t[0]), mathml: Ve(t[1]) };
    },
    htmlBuilder: (e, t) => {
        var n = Je(e.html, t, !1);
        return P.makeFragment(n);
    },
    mathmlBuilder: (e, t) => xr(e.mathml, t),
});
var $f = function (t) {
    if (/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(t)) return { number: +t, unit: "bp" };
    var n = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t);
    if (!n) throw new H("Invalid size: '" + t + "' in \\includegraphics");
    var r = { number: +(n[1] + n[2]), unit: n[3] };
    if (!ix(r)) throw new H("Invalid unit: '" + r.unit + "' in \\includegraphics.");
    return r;
};
Z({
    type: "includegraphics",
    names: ["\\includegraphics"],
    props: { numArgs: 1, numOptionalArgs: 1, argTypes: ["raw", "url"], allowedInText: !1 },
    handler: (e, t, n) => {
        var { parser: r } = e,
            a = { number: 0, unit: "em" },
            i = { number: 0.9, unit: "em" },
            o = { number: 0, unit: "em" },
            l = "";
        if (n[0])
            for (var s = me(n[0], "raw").string, u = s.split(","), c = 0; c < u.length; c++) {
                var d = u[c].split("=");
                if (d.length === 2) {
                    var m = d[1].trim();
                    switch (d[0].trim()) {
                        case "alt":
                            l = m;
                            break;
                        case "width":
                            a = $f(m);
                            break;
                        case "height":
                            i = $f(m);
                            break;
                        case "totalheight":
                            o = $f(m);
                            break;
                        default:
                            throw new H("Invalid key: '" + d[0] + "' in \\includegraphics.");
                    }
                }
            }
        var f = me(t[0], "url").url;
        return (
            l === "" && ((l = f), (l = l.replace(/^.*[\\/]/, "")), (l = l.substring(0, l.lastIndexOf(".")))),
            r.settings.isTrusted({ command: "\\includegraphics", url: f })
                ? { type: "includegraphics", mode: r.mode, alt: l, width: a, height: i, totalheight: o, src: f }
                : r.formatUnsupportedCmd("\\includegraphics")
        );
    },
    htmlBuilder: (e, t) => {
        var n = Ue(e.height, t),
            r = 0;
        e.totalheight.number > 0 && (r = Ue(e.totalheight, t) - n);
        var a = 0;
        e.width.number > 0 && (a = Ue(e.width, t));
        var i = { height: K(n + r) };
        a > 0 && (i.width = K(a)), r > 0 && (i.verticalAlign = K(-r));
        var o = new Iq(e.src, e.alt, i);
        return (o.height = n), (o.depth = r), o;
    },
    mathmlBuilder: (e, t) => {
        var n = new G.MathNode("mglyph", []);
        n.setAttribute("alt", e.alt);
        var r = Ue(e.height, t),
            a = 0;
        if (
            (e.totalheight.number > 0 && ((a = Ue(e.totalheight, t) - r), n.setAttribute("valign", K(-a))),
            n.setAttribute("height", K(r + a)),
            e.width.number > 0)
        ) {
            var i = Ue(e.width, t);
            n.setAttribute("width", K(i));
        }
        return n.setAttribute("src", e.src), n;
    },
});
Z({
    type: "kern",
    names: ["\\kern", "\\mkern", "\\hskip", "\\mskip"],
    props: { numArgs: 1, argTypes: ["size"], primitive: !0, allowedInText: !0 },
    handler(e, t) {
        var { parser: n, funcName: r } = e,
            a = me(t[0], "size");
        if (n.settings.strict) {
            var i = r[1] === "m",
                o = a.value.unit === "mu";
            i
                ? (o || n.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + r + " supports only mu units, " + ("not " + a.value.unit + " units")),
                  n.mode !== "math" && n.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + r + " works only in math mode"))
                : o && n.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + r + " doesn't support mu units");
        }
        return { type: "kern", mode: n.mode, dimension: a.value };
    },
    htmlBuilder(e, t) {
        return P.makeGlue(e.dimension, t);
    },
    mathmlBuilder(e, t) {
        var n = Ue(e.dimension, t);
        return new G.SpaceNode(n);
    },
});
Z({
    type: "lap",
    names: ["\\mathllap", "\\mathrlap", "\\mathclap"],
    props: { numArgs: 1, allowedInText: !0 },
    handler: (e, t) => {
        var { parser: n, funcName: r } = e,
            a = t[0];
        return { type: "lap", mode: n.mode, alignment: r.slice(5), body: a };
    },
    htmlBuilder: (e, t) => {
        var n;
        e.alignment === "clap" ? ((n = P.makeSpan([], [we(e.body, t)])), (n = P.makeSpan(["inner"], [n], t))) : (n = P.makeSpan(["inner"], [we(e.body, t)]));
        var r = P.makeSpan(["fix"], []),
            a = P.makeSpan([e.alignment], [n, r], t),
            i = P.makeSpan(["strut"]);
        return (
            (i.style.height = K(a.height + a.depth)),
            a.depth && (i.style.verticalAlign = K(-a.depth)),
            a.children.unshift(i),
            (a = P.makeSpan(["thinbox"], [a], t)),
            P.makeSpan(["mord", "vbox"], [a], t)
        );
    },
    mathmlBuilder: (e, t) => {
        var n = new G.MathNode("mpadded", [Ie(e.body, t)]);
        if (e.alignment !== "rlap") {
            var r = e.alignment === "llap" ? "-1" : "-0.5";
            n.setAttribute("lspace", r + "width");
        }
        return n.setAttribute("width", "0px"), n;
    },
});
Z({
    type: "styling",
    names: ["\\(", "$"],
    props: { numArgs: 0, allowedInText: !0, allowedInMath: !1 },
    handler(e, t) {
        var { funcName: n, parser: r } = e,
            a = r.mode;
        r.switchMode("math");
        var i = n === "\\(" ? "\\)" : "$",
            o = r.parseExpression(!1, i);
        return r.expect(i), r.switchMode(a), { type: "styling", mode: r.mode, style: "text", body: o };
    },
});
Z({
    type: "text",
    names: ["\\)", "\\]"],
    props: { numArgs: 0, allowedInText: !0, allowedInMath: !1 },
    handler(e, t) {
        throw new H("Mismatched " + e.funcName);
    },
});
var Aw = (e, t) => {
    switch (t.style.size) {
        case le.DISPLAY.size:
            return e.display;
        case le.TEXT.size:
            return e.text;
        case le.SCRIPT.size:
            return e.script;
        case le.SCRIPTSCRIPT.size:
            return e.scriptscript;
        default:
            return e.text;
    }
};
Z({
    type: "mathchoice",
    names: ["\\mathchoice"],
    props: { numArgs: 4, primitive: !0 },
    handler: (e, t) => {
        var { parser: n } = e;
        return { type: "mathchoice", mode: n.mode, display: Ve(t[0]), text: Ve(t[1]), script: Ve(t[2]), scriptscript: Ve(t[3]) };
    },
    htmlBuilder: (e, t) => {
        var n = Aw(e, t),
            r = Je(n, t, !1);
        return P.makeFragment(r);
    },
    mathmlBuilder: (e, t) => {
        var n = Aw(e, t);
        return xr(n, t);
    },
});
var $x = (e, t, n, r, a, i, o) => {
        e = P.makeSpan([], [e]);
        var l = n && ie.isCharacterBox(n),
            s,
            u;
        if (t) {
            var c = we(t, r.havingStyle(a.sup()), r);
            u = { elem: c, kern: Math.max(r.fontMetrics().bigOpSpacing1, r.fontMetrics().bigOpSpacing3 - c.depth) };
        }
        if (n) {
            var d = we(n, r.havingStyle(a.sub()), r);
            s = { elem: d, kern: Math.max(r.fontMetrics().bigOpSpacing2, r.fontMetrics().bigOpSpacing4 - d.height) };
        }
        var m;
        if (u && s) {
            var f = r.fontMetrics().bigOpSpacing5 + s.elem.height + s.elem.depth + s.kern + e.depth + o;
            m = P.makeVList(
                {
                    positionType: "bottom",
                    positionData: f,
                    children: [
                        { type: "kern", size: r.fontMetrics().bigOpSpacing5 },
                        { type: "elem", elem: s.elem, marginLeft: K(-i) },
                        { type: "kern", size: s.kern },
                        { type: "elem", elem: e },
                        { type: "kern", size: u.kern },
                        { type: "elem", elem: u.elem, marginLeft: K(i) },
                        { type: "kern", size: r.fontMetrics().bigOpSpacing5 },
                    ],
                },
                r,
            );
        } else if (s) {
            var b = e.height - o;
            m = P.makeVList(
                {
                    positionType: "top",
                    positionData: b,
                    children: [
                        { type: "kern", size: r.fontMetrics().bigOpSpacing5 },
                        { type: "elem", elem: s.elem, marginLeft: K(-i) },
                        { type: "kern", size: s.kern },
                        { type: "elem", elem: e },
                    ],
                },
                r,
            );
        } else if (u) {
            var E = e.depth + o;
            m = P.makeVList(
                {
                    positionType: "bottom",
                    positionData: E,
                    children: [
                        { type: "elem", elem: e },
                        { type: "kern", size: u.kern },
                        { type: "elem", elem: u.elem, marginLeft: K(i) },
                        { type: "kern", size: r.fontMetrics().bigOpSpacing5 },
                    ],
                },
                r,
            );
        } else return e;
        var I = [m];
        if (s && i !== 0 && !l) {
            var y = P.makeSpan(["mspace"], [], r);
            (y.style.marginRight = K(i)), I.unshift(y);
        }
        return P.makeSpan(["mop", "op-limits"], I, r);
    },
    qx = ["\\smallint"],
    ei = (e, t) => {
        var n,
            r,
            a = !1,
            i;
        e.type === "supsub" ? ((n = e.sup), (r = e.sub), (i = me(e.base, "op")), (a = !0)) : (i = me(e, "op"));
        var o = t.style,
            l = !1;
        o.size === le.DISPLAY.size && i.symbol && !ie.contains(qx, i.name) && (l = !0);
        var s;
        if (i.symbol) {
            var u = l ? "Size2-Regular" : "Size1-Regular",
                c = "";
            if (
                ((i.name === "\\oiint" || i.name === "\\oiiint") && ((c = i.name.slice(1)), (i.name = c === "oiint" ? "\\iint" : "\\iiint")),
                (s = P.makeSymbol(i.name, u, "math", t, ["mop", "op-symbol", l ? "large-op" : "small-op"])),
                c.length > 0)
            ) {
                var d = s.italic,
                    m = P.staticSvg(c + "Size" + (l ? "2" : "1"), t);
                (s = P.makeVList(
                    {
                        positionType: "individualShift",
                        children: [
                            { type: "elem", elem: s, shift: 0 },
                            { type: "elem", elem: m, shift: l ? 0.08 : 0 },
                        ],
                    },
                    t,
                )),
                    (i.name = "\\" + c),
                    s.classes.unshift("mop"),
                    (s.italic = d);
            }
        } else if (i.body) {
            var f = Je(i.body, t, !0);
            f.length === 1 && f[0] instanceof rn ? ((s = f[0]), (s.classes[0] = "mop")) : (s = P.makeSpan(["mop"], f, t));
        } else {
            for (var b = [], E = 1; E < i.name.length; E++) b.push(P.mathsym(i.name[E], i.mode, t));
            s = P.makeSpan(["mop"], b, t);
        }
        var I = 0,
            y = 0;
        return (
            (s instanceof rn || i.name === "\\oiint" || i.name === "\\oiiint") &&
                !i.suppressBaseShift &&
                ((I = (s.height - s.depth) / 2 - t.fontMetrics().axisHeight), (y = s.italic)),
            a ? $x(s, n, r, t, o, y, I) : (I && ((s.style.position = "relative"), (s.style.top = K(I))), s)
        );
    },
    So = (e, t) => {
        var n;
        if (e.symbol) (n = new Ut("mo", [an(e.name, e.mode)])), ie.contains(qx, e.name) && n.setAttribute("largeop", "false");
        else if (e.body) n = new Ut("mo", Dt(e.body, t));
        else {
            n = new Ut("mi", [new xn(e.name.slice(1))]);
            var r = new Ut("mo", [an("⁡", "text")]);
            e.parentIsSupSub ? (n = new Ut("mrow", [n, r])) : (n = gx([n, r]));
        }
        return n;
    },
    NG = {
        "∏": "\\prod",
        "∐": "\\coprod",
        "∑": "\\sum",
        "⋀": "\\bigwedge",
        "⋁": "\\bigvee",
        "⋂": "\\bigcap",
        "⋃": "\\bigcup",
        "⨀": "\\bigodot",
        "⨁": "\\bigoplus",
        "⨂": "\\bigotimes",
        "⨄": "\\biguplus",
        "⨆": "\\bigsqcup",
    };
Z({
    type: "op",
    names: [
        "\\coprod",
        "\\bigvee",
        "\\bigwedge",
        "\\biguplus",
        "\\bigcap",
        "\\bigcup",
        "\\intop",
        "\\prod",
        "\\sum",
        "\\bigotimes",
        "\\bigoplus",
        "\\bigodot",
        "\\bigsqcup",
        "\\smallint",
        "∏",
        "∐",
        "∑",
        "⋀",
        "⋁",
        "⋂",
        "⋃",
        "⨀",
        "⨁",
        "⨂",
        "⨄",
        "⨆",
    ],
    props: { numArgs: 0 },
    handler: (e, t) => {
        var { parser: n, funcName: r } = e,
            a = r;
        return a.length === 1 && (a = NG[a]), { type: "op", mode: n.mode, limits: !0, parentIsSupSub: !1, symbol: !0, name: a };
    },
    htmlBuilder: ei,
    mathmlBuilder: So,
});
Z({
    type: "op",
    names: ["\\mathop"],
    props: { numArgs: 1, primitive: !0 },
    handler: (e, t) => {
        var { parser: n } = e,
            r = t[0];
        return { type: "op", mode: n.mode, limits: !1, parentIsSupSub: !1, symbol: !1, body: Ve(r) };
    },
    htmlBuilder: ei,
    mathmlBuilder: So,
});
var _G = { "∫": "\\int", "∬": "\\iint", "∭": "\\iiint", "∮": "\\oint", "∯": "\\oiint", "∰": "\\oiiint" };
Z({
    type: "op",
    names: [
        "\\arcsin",
        "\\arccos",
        "\\arctan",
        "\\arctg",
        "\\arcctg",
        "\\arg",
        "\\ch",
        "\\cos",
        "\\cosec",
        "\\cosh",
        "\\cot",
        "\\cotg",
        "\\coth",
        "\\csc",
        "\\ctg",
        "\\cth",
        "\\deg",
        "\\dim",
        "\\exp",
        "\\hom",
        "\\ker",
        "\\lg",
        "\\ln",
        "\\log",
        "\\sec",
        "\\sin",
        "\\sinh",
        "\\sh",
        "\\tan",
        "\\tanh",
        "\\tg",
        "\\th",
    ],
    props: { numArgs: 0 },
    handler(e) {
        var { parser: t, funcName: n } = e;
        return { type: "op", mode: t.mode, limits: !1, parentIsSupSub: !1, symbol: !1, name: n };
    },
    htmlBuilder: ei,
    mathmlBuilder: So,
});
Z({
    type: "op",
    names: ["\\det", "\\gcd", "\\inf", "\\lim", "\\max", "\\min", "\\Pr", "\\sup"],
    props: { numArgs: 0 },
    handler(e) {
        var { parser: t, funcName: n } = e;
        return { type: "op", mode: t.mode, limits: !0, parentIsSupSub: !1, symbol: !1, name: n };
    },
    htmlBuilder: ei,
    mathmlBuilder: So,
});
Z({
    type: "op",
    names: ["\\int", "\\iint", "\\iiint", "\\oint", "\\oiint", "\\oiiint", "∫", "∬", "∭", "∮", "∯", "∰"],
    props: { numArgs: 0 },
    handler(e) {
        var { parser: t, funcName: n } = e,
            r = n;
        return r.length === 1 && (r = _G[r]), { type: "op", mode: t.mode, limits: !1, parentIsSupSub: !1, symbol: !0, name: r };
    },
    htmlBuilder: ei,
    mathmlBuilder: So,
});
var Gx = (e, t) => {
        var n,
            r,
            a = !1,
            i;
        e.type === "supsub" ? ((n = e.sup), (r = e.sub), (i = me(e.base, "operatorname")), (a = !0)) : (i = me(e, "operatorname"));
        var o;
        if (i.body.length > 0) {
            for (
                var l = i.body.map(d => {
                        var m = d.text;
                        return typeof m == "string" ? { type: "textord", mode: d.mode, text: m } : d;
                    }),
                    s = Je(l, t.withFont("mathrm"), !0),
                    u = 0;
                u < s.length;
                u++
            ) {
                var c = s[u];
                c instanceof rn && (c.text = c.text.replace(/\u2212/, "-").replace(/\u2217/, "*"));
            }
            o = P.makeSpan(["mop"], s, t);
        } else o = P.makeSpan(["mop"], [], t);
        return a ? $x(o, n, r, t, t.style, 0, 0) : o;
    },
    CG = (e, t) => {
        for (var n = Dt(e.body, t.withFont("mathrm")), r = !0, a = 0; a < n.length; a++) {
            var i = n[a];
            if (!(i instanceof G.SpaceNode))
                if (i instanceof G.MathNode)
                    switch (i.type) {
                        case "mi":
                        case "mn":
                        case "ms":
                        case "mspace":
                        case "mtext":
                            break;
                        case "mo": {
                            var o = i.children[0];
                            i.children.length === 1 && o instanceof G.TextNode ? (o.text = o.text.replace(/\u2212/, "-").replace(/\u2217/, "*")) : (r = !1);
                            break;
                        }
                        default:
                            r = !1;
                    }
                else r = !1;
        }
        if (r) {
            var l = n.map(c => c.toText()).join("");
            n = [new G.TextNode(l)];
        }
        var s = new G.MathNode("mi", n);
        s.setAttribute("mathvariant", "normal");
        var u = new G.MathNode("mo", [an("⁡", "text")]);
        return e.parentIsSupSub ? new G.MathNode("mrow", [s, u]) : G.newDocumentFragment([s, u]);
    };
Z({
    type: "operatorname",
    names: ["\\operatorname@", "\\operatornamewithlimits"],
    props: { numArgs: 1 },
    handler: (e, t) => {
        var { parser: n, funcName: r } = e,
            a = t[0];
        return { type: "operatorname", mode: n.mode, body: Ve(a), alwaysHandleSupSub: r === "\\operatornamewithlimits", limits: !1, parentIsSupSub: !1 };
    },
    htmlBuilder: Gx,
    mathmlBuilder: CG,
});
w("\\operatorname", "\\@ifstar\\operatornamewithlimits\\operatorname@");
ia({
    type: "ordgroup",
    htmlBuilder(e, t) {
        return e.semisimple ? P.makeFragment(Je(e.body, t, !1)) : P.makeSpan(["mord"], Je(e.body, t, !0), t);
    },
    mathmlBuilder(e, t) {
        return xr(e.body, t, !0);
    },
});
Z({
    type: "overline",
    names: ["\\overline"],
    props: { numArgs: 1 },
    handler(e, t) {
        var { parser: n } = e,
            r = t[0];
        return { type: "overline", mode: n.mode, body: r };
    },
    htmlBuilder(e, t) {
        var n = we(e.body, t.havingCrampedStyle()),
            r = P.makeLineSpan("overline-line", t),
            a = t.fontMetrics().defaultRuleThickness,
            i = P.makeVList(
                {
                    positionType: "firstBaseline",
                    children: [
                        { type: "elem", elem: n },
                        { type: "kern", size: 3 * a },
                        { type: "elem", elem: r },
                        { type: "kern", size: a },
                    ],
                },
                t,
            );
        return P.makeSpan(["mord", "overline"], [i], t);
    },
    mathmlBuilder(e, t) {
        var n = new G.MathNode("mo", [new G.TextNode("‾")]);
        n.setAttribute("stretchy", "true");
        var r = new G.MathNode("mover", [Ie(e.body, t), n]);
        return r.setAttribute("accent", "true"), r;
    },
});
Z({
    type: "phantom",
    names: ["\\phantom"],
    props: { numArgs: 1, allowedInText: !0 },
    handler: (e, t) => {
        var { parser: n } = e,
            r = t[0];
        return { type: "phantom", mode: n.mode, body: Ve(r) };
    },
    htmlBuilder: (e, t) => {
        var n = Je(e.body, t.withPhantom(), !1);
        return P.makeFragment(n);
    },
    mathmlBuilder: (e, t) => {
        var n = Dt(e.body, t);
        return new G.MathNode("mphantom", n);
    },
});
Z({
    type: "hphantom",
    names: ["\\hphantom"],
    props: { numArgs: 1, allowedInText: !0 },
    handler: (e, t) => {
        var { parser: n } = e,
            r = t[0];
        return { type: "hphantom", mode: n.mode, body: r };
    },
    htmlBuilder: (e, t) => {
        var n = P.makeSpan([], [we(e.body, t.withPhantom())]);
        if (((n.height = 0), (n.depth = 0), n.children)) for (var r = 0; r < n.children.length; r++) (n.children[r].height = 0), (n.children[r].depth = 0);
        return (n = P.makeVList({ positionType: "firstBaseline", children: [{ type: "elem", elem: n }] }, t)), P.makeSpan(["mord"], [n], t);
    },
    mathmlBuilder: (e, t) => {
        var n = Dt(Ve(e.body), t),
            r = new G.MathNode("mphantom", n),
            a = new G.MathNode("mpadded", [r]);
        return a.setAttribute("height", "0px"), a.setAttribute("depth", "0px"), a;
    },
});
Z({
    type: "vphantom",
    names: ["\\vphantom"],
    props: { numArgs: 1, allowedInText: !0 },
    handler: (e, t) => {
        var { parser: n } = e,
            r = t[0];
        return { type: "vphantom", mode: n.mode, body: r };
    },
    htmlBuilder: (e, t) => {
        var n = P.makeSpan(["inner"], [we(e.body, t.withPhantom())]),
            r = P.makeSpan(["fix"], []);
        return P.makeSpan(["mord", "rlap"], [n, r], t);
    },
    mathmlBuilder: (e, t) => {
        var n = Dt(Ve(e.body), t),
            r = new G.MathNode("mphantom", n),
            a = new G.MathNode("mpadded", [r]);
        return a.setAttribute("width", "0px"), a;
    },
});
Z({
    type: "raisebox",
    names: ["\\raisebox"],
    props: { numArgs: 2, argTypes: ["size", "hbox"], allowedInText: !0 },
    handler(e, t) {
        var { parser: n } = e,
            r = me(t[0], "size").value,
            a = t[1];
        return { type: "raisebox", mode: n.mode, dy: r, body: a };
    },
    htmlBuilder(e, t) {
        var n = we(e.body, t),
            r = Ue(e.dy, t);
        return P.makeVList({ positionType: "shift", positionData: -r, children: [{ type: "elem", elem: n }] }, t);
    },
    mathmlBuilder(e, t) {
        var n = new G.MathNode("mpadded", [Ie(e.body, t)]),
            r = e.dy.number + e.dy.unit;
        return n.setAttribute("voffset", r), n;
    },
});
Z({
    type: "internal",
    names: ["\\relax"],
    props: { numArgs: 0, allowedInText: !0 },
    handler(e) {
        var { parser: t } = e;
        return { type: "internal", mode: t.mode };
    },
});
Z({
    type: "rule",
    names: ["\\rule"],
    props: { numArgs: 2, numOptionalArgs: 1, allowedInText: !0, allowedInMath: !0, argTypes: ["size", "size", "size"] },
    handler(e, t, n) {
        var { parser: r } = e,
            a = n[0],
            i = me(t[0], "size"),
            o = me(t[1], "size");
        return { type: "rule", mode: r.mode, shift: a && me(a, "size").value, width: i.value, height: o.value };
    },
    htmlBuilder(e, t) {
        var n = P.makeSpan(["mord", "rule"], [], t),
            r = Ue(e.width, t),
            a = Ue(e.height, t),
            i = e.shift ? Ue(e.shift, t) : 0;
        return (
            (n.style.borderRightWidth = K(r)),
            (n.style.borderTopWidth = K(a)),
            (n.style.bottom = K(i)),
            (n.width = r),
            (n.height = a + i),
            (n.depth = -i),
            (n.maxFontSize = a * 1.125 * t.sizeMultiplier),
            n
        );
    },
    mathmlBuilder(e, t) {
        var n = Ue(e.width, t),
            r = Ue(e.height, t),
            a = e.shift ? Ue(e.shift, t) : 0,
            i = (t.color && t.getColor()) || "black",
            o = new G.MathNode("mspace");
        o.setAttribute("mathbackground", i), o.setAttribute("width", K(n)), o.setAttribute("height", K(r));
        var l = new G.MathNode("mpadded", [o]);
        return a >= 0 ? l.setAttribute("height", K(a)) : (l.setAttribute("height", K(a)), l.setAttribute("depth", K(-a))), l.setAttribute("voffset", K(a)), l;
    },
});
function Hx(e, t, n) {
    for (var r = Je(e, t, !1), a = t.sizeMultiplier / n.sizeMultiplier, i = 0; i < r.length; i++) {
        var o = r[i].classes.indexOf("sizing");
        o < 0
            ? Array.prototype.push.apply(r[i].classes, t.sizingClasses(n))
            : r[i].classes[o + 1] === "reset-size" + t.size && (r[i].classes[o + 1] = "reset-size" + n.size),
            (r[i].height *= a),
            (r[i].depth *= a);
    }
    return P.makeFragment(r);
}
var xw = ["\\tiny", "\\sixptsize", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"],
    OG = (e, t) => {
        var n = t.havingSize(e.size);
        return Hx(e.body, n, t);
    };
Z({
    type: "sizing",
    names: xw,
    props: { numArgs: 0, allowedInText: !0 },
    handler: (e, t) => {
        var { breakOnTokenText: n, funcName: r, parser: a } = e,
            i = a.parseExpression(!1, n);
        return { type: "sizing", mode: a.mode, size: xw.indexOf(r) + 1, body: i };
    },
    htmlBuilder: OG,
    mathmlBuilder: (e, t) => {
        var n = t.havingSize(e.size),
            r = Dt(e.body, n),
            a = new G.MathNode("mstyle", r);
        return a.setAttribute("mathsize", K(n.sizeMultiplier)), a;
    },
});
Z({
    type: "smash",
    names: ["\\smash"],
    props: { numArgs: 1, numOptionalArgs: 1, allowedInText: !0 },
    handler: (e, t, n) => {
        var { parser: r } = e,
            a = !1,
            i = !1,
            o = n[0] && me(n[0], "ordgroup");
        if (o)
            for (var l = "", s = 0; s < o.body.length; ++s) {
                var u = o.body[s];
                if (((l = u.text), l === "t")) a = !0;
                else if (l === "b") i = !0;
                else {
                    (a = !1), (i = !1);
                    break;
                }
            }
        else (a = !0), (i = !0);
        var c = t[0];
        return { type: "smash", mode: r.mode, body: c, smashHeight: a, smashDepth: i };
    },
    htmlBuilder: (e, t) => {
        var n = P.makeSpan([], [we(e.body, t)]);
        if (!e.smashHeight && !e.smashDepth) return n;
        if (e.smashHeight && ((n.height = 0), n.children)) for (var r = 0; r < n.children.length; r++) n.children[r].height = 0;
        if (e.smashDepth && ((n.depth = 0), n.children)) for (var a = 0; a < n.children.length; a++) n.children[a].depth = 0;
        var i = P.makeVList({ positionType: "firstBaseline", children: [{ type: "elem", elem: n }] }, t);
        return P.makeSpan(["mord"], [i], t);
    },
    mathmlBuilder: (e, t) => {
        var n = new G.MathNode("mpadded", [Ie(e.body, t)]);
        return e.smashHeight && n.setAttribute("height", "0px"), e.smashDepth && n.setAttribute("depth", "0px"), n;
    },
});
Z({
    type: "sqrt",
    names: ["\\sqrt"],
    props: { numArgs: 1, numOptionalArgs: 1 },
    handler(e, t, n) {
        var { parser: r } = e,
            a = n[0],
            i = t[0];
        return { type: "sqrt", mode: r.mode, body: i, index: a };
    },
    htmlBuilder(e, t) {
        var n = we(e.body, t.havingCrampedStyle());
        n.height === 0 && (n.height = t.fontMetrics().xHeight), (n = P.wrapFragment(n, t));
        var r = t.fontMetrics(),
            a = r.defaultRuleThickness,
            i = a;
        t.style.id < le.TEXT.id && (i = t.fontMetrics().xHeight);
        var o = a + i / 4,
            l = n.height + n.depth + o + a,
            { span: s, ruleWidth: u, advanceWidth: c } = jn.sqrtImage(l, t),
            d = s.height - u;
        d > n.height + n.depth + o && (o = (o + d - n.height - n.depth) / 2);
        var m = s.height - n.height - o - u;
        n.style.paddingLeft = K(c);
        var f = P.makeVList(
            {
                positionType: "firstBaseline",
                children: [
                    { type: "elem", elem: n, wrapperClasses: ["svg-align"] },
                    { type: "kern", size: -(n.height + m) },
                    { type: "elem", elem: s },
                    { type: "kern", size: u },
                ],
            },
            t,
        );
        if (e.index) {
            var b = t.havingStyle(le.SCRIPTSCRIPT),
                E = we(e.index, b, t),
                I = 0.6 * (f.height - f.depth),
                y = P.makeVList({ positionType: "shift", positionData: -I, children: [{ type: "elem", elem: E }] }, t),
                g = P.makeSpan(["root"], [y]);
            return P.makeSpan(["mord", "sqrt"], [g, f], t);
        } else return P.makeSpan(["mord", "sqrt"], [f], t);
    },
    mathmlBuilder(e, t) {
        var { body: n, index: r } = e;
        return r ? new G.MathNode("mroot", [Ie(n, t), Ie(r, t)]) : new G.MathNode("msqrt", [Ie(n, t)]);
    },
});
var Rw = { display: le.DISPLAY, text: le.TEXT, script: le.SCRIPT, scriptscript: le.SCRIPTSCRIPT };
Z({
    type: "styling",
    names: ["\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle"],
    props: { numArgs: 0, allowedInText: !0, primitive: !0 },
    handler(e, t) {
        var { breakOnTokenText: n, funcName: r, parser: a } = e,
            i = a.parseExpression(!0, n),
            o = r.slice(1, r.length - 5);
        return { type: "styling", mode: a.mode, style: o, body: i };
    },
    htmlBuilder(e, t) {
        var n = Rw[e.style],
            r = t.havingStyle(n).withFont("");
        return Hx(e.body, r, t);
    },
    mathmlBuilder(e, t) {
        var n = Rw[e.style],
            r = t.havingStyle(n),
            a = Dt(e.body, r),
            i = new G.MathNode("mstyle", a),
            o = { display: ["0", "true"], text: ["0", "false"], script: ["1", "false"], scriptscript: ["2", "false"] },
            l = o[e.style];
        return i.setAttribute("scriptlevel", l[0]), i.setAttribute("displaystyle", l[1]), i;
    },
});
var LG = function (t, n) {
    var r = t.base;
    if (r)
        if (r.type === "op") {
            var a = r.limits && (n.style.size === le.DISPLAY.size || r.alwaysHandleSupSub);
            return a ? ei : null;
        } else if (r.type === "operatorname") {
            var i = r.alwaysHandleSupSub && (n.style.size === le.DISPLAY.size || r.limits);
            return i ? Gx : null;
        } else {
            if (r.type === "accent") return ie.isCharacterBox(r.base) ? a1 : null;
            if (r.type === "horizBrace") {
                var o = !t.sub;
                return o === r.isOver ? zx : null;
            } else return null;
        }
    else return null;
};
ia({
    type: "supsub",
    htmlBuilder(e, t) {
        var n = LG(e, t);
        if (n) return n(e, t);
        var { base: r, sup: a, sub: i } = e,
            o = we(r, t),
            l,
            s,
            u = t.fontMetrics(),
            c = 0,
            d = 0,
            m = r && ie.isCharacterBox(r);
        if (a) {
            var f = t.havingStyle(t.style.sup());
            (l = we(a, f, t)), m || (c = o.height - (f.fontMetrics().supDrop * f.sizeMultiplier) / t.sizeMultiplier);
        }
        if (i) {
            var b = t.havingStyle(t.style.sub());
            (s = we(i, b, t)), m || (d = o.depth + (b.fontMetrics().subDrop * b.sizeMultiplier) / t.sizeMultiplier);
        }
        var E;
        t.style === le.DISPLAY ? (E = u.sup1) : t.style.cramped ? (E = u.sup3) : (E = u.sup2);
        var I = t.sizeMultiplier,
            y = K(0.5 / u.ptPerEm / I),
            g = null;
        if (s) {
            var v = e.base && e.base.type === "op" && e.base.name && (e.base.name === "\\oiint" || e.base.name === "\\oiiint");
            (o instanceof rn || v) && (g = K(-o.italic));
        }
        var T;
        if (l && s) {
            (c = Math.max(c, E, l.depth + 0.25 * u.xHeight)), (d = Math.max(d, u.sub2));
            var R = u.defaultRuleThickness,
                k = 4 * R;
            if (c - l.depth - (s.height - d) < k) {
                d = k - (c - l.depth) + s.height;
                var L = 0.8 * u.xHeight - (c - l.depth);
                L > 0 && ((c += L), (d -= L));
            }
            var F = [
                { type: "elem", elem: s, shift: d, marginRight: y, marginLeft: g },
                { type: "elem", elem: l, shift: -c, marginRight: y },
            ];
            T = P.makeVList({ positionType: "individualShift", children: F }, t);
        } else if (s) {
            d = Math.max(d, u.sub1, s.height - 0.8 * u.xHeight);
            var M = [{ type: "elem", elem: s, marginLeft: g, marginRight: y }];
            T = P.makeVList({ positionType: "shift", positionData: d, children: M }, t);
        } else if (l)
            (c = Math.max(c, E, l.depth + 0.25 * u.xHeight)),
                (T = P.makeVList({ positionType: "shift", positionData: -c, children: [{ type: "elem", elem: l, marginRight: y }] }, t));
        else throw new Error("supsub must have either sup or sub.");
        var O = lh(o, "right") || "mord";
        return P.makeSpan([O], [o, P.makeSpan(["msupsub"], [T])], t);
    },
    mathmlBuilder(e, t) {
        var n = !1,
            r,
            a;
        e.base && e.base.type === "horizBrace" && ((a = !!e.sup), a === e.base.isOver && ((n = !0), (r = e.base.isOver))),
            e.base && (e.base.type === "op" || e.base.type === "operatorname") && (e.base.parentIsSupSub = !0);
        var i = [Ie(e.base, t)];
        e.sub && i.push(Ie(e.sub, t)), e.sup && i.push(Ie(e.sup, t));
        var o;
        if (n) o = r ? "mover" : "munder";
        else if (e.sub)
            if (e.sup) {
                var u = e.base;
                (u && u.type === "op" && u.limits && t.style === le.DISPLAY) ||
                (u && u.type === "operatorname" && u.alwaysHandleSupSub && (t.style === le.DISPLAY || u.limits))
                    ? (o = "munderover")
                    : (o = "msubsup");
            } else {
                var s = e.base;
                (s && s.type === "op" && s.limits && (t.style === le.DISPLAY || s.alwaysHandleSupSub)) ||
                (s && s.type === "operatorname" && s.alwaysHandleSupSub && (s.limits || t.style === le.DISPLAY))
                    ? (o = "munder")
                    : (o = "msub");
            }
        else {
            var l = e.base;
            (l && l.type === "op" && l.limits && (t.style === le.DISPLAY || l.alwaysHandleSupSub)) ||
            (l && l.type === "operatorname" && l.alwaysHandleSupSub && (l.limits || t.style === le.DISPLAY))
                ? (o = "mover")
                : (o = "msup");
        }
        return new G.MathNode(o, i);
    },
});
ia({
    type: "atom",
    htmlBuilder(e, t) {
        return P.mathsym(e.text, e.mode, t, ["m" + e.family]);
    },
    mathmlBuilder(e, t) {
        var n = new G.MathNode("mo", [an(e.text, e.mode)]);
        if (e.family === "bin") {
            var r = n1(e, t);
            r === "bold-italic" && n.setAttribute("mathvariant", r);
        } else
            e.family === "punct" ? n.setAttribute("separator", "true") : (e.family === "open" || e.family === "close") && n.setAttribute("stretchy", "false");
        return n;
    },
});
var jx = { mi: "italic", mn: "normal", mtext: "normal" };
ia({
    type: "mathord",
    htmlBuilder(e, t) {
        return P.makeOrd(e, t, "mathord");
    },
    mathmlBuilder(e, t) {
        var n = new G.MathNode("mi", [an(e.text, e.mode, t)]),
            r = n1(e, t) || "italic";
        return r !== jx[n.type] && n.setAttribute("mathvariant", r), n;
    },
});
ia({
    type: "textord",
    htmlBuilder(e, t) {
        return P.makeOrd(e, t, "textord");
    },
    mathmlBuilder(e, t) {
        var n = an(e.text, e.mode, t),
            r = n1(e, t) || "normal",
            a;
        return (
            e.mode === "text"
                ? (a = new G.MathNode("mtext", [n]))
                : /[0-9]/.test(e.text)
                  ? (a = new G.MathNode("mn", [n]))
                  : e.text === "\\prime"
                    ? (a = new G.MathNode("mo", [n]))
                    : (a = new G.MathNode("mi", [n])),
            r !== jx[a.type] && a.setAttribute("mathvariant", r),
            a
        );
    },
});
var qf = { "\\nobreak": "nobreak", "\\allowbreak": "allowbreak" },
    Gf = { " ": {}, "\\ ": {}, "~": { className: "nobreak" }, "\\space": {}, "\\nobreakspace": { className: "nobreak" } };
ia({
    type: "spacing",
    htmlBuilder(e, t) {
        if (Gf.hasOwnProperty(e.text)) {
            var n = Gf[e.text].className || "";
            if (e.mode === "text") {
                var r = P.makeOrd(e, t, "textord");
                return r.classes.push(n), r;
            } else return P.makeSpan(["mspace", n], [P.mathsym(e.text, e.mode, t)], t);
        } else {
            if (qf.hasOwnProperty(e.text)) return P.makeSpan(["mspace", qf[e.text]], [], t);
            throw new H('Unknown type of space "' + e.text + '"');
        }
    },
    mathmlBuilder(e, t) {
        var n;
        if (Gf.hasOwnProperty(e.text)) n = new G.MathNode("mtext", [new G.TextNode(" ")]);
        else {
            if (qf.hasOwnProperty(e.text)) return new G.MathNode("mspace");
            throw new H('Unknown type of space "' + e.text + '"');
        }
        return n;
    },
});
var Iw = () => {
    var e = new G.MathNode("mtd", []);
    return e.setAttribute("width", "50%"), e;
};
ia({
    type: "tag",
    mathmlBuilder(e, t) {
        var n = new G.MathNode("mtable", [new G.MathNode("mtr", [Iw(), new G.MathNode("mtd", [xr(e.body, t)]), Iw(), new G.MathNode("mtd", [xr(e.tag, t)])])]);
        return n.setAttribute("width", "100%"), n;
    },
});
var Nw = { "\\text": void 0, "\\textrm": "textrm", "\\textsf": "textsf", "\\texttt": "texttt", "\\textnormal": "textrm" },
    _w = { "\\textbf": "textbf", "\\textmd": "textmd" },
    DG = { "\\textit": "textit", "\\textup": "textup" },
    Cw = (e, t) => {
        var n = e.font;
        if (n) {
            if (Nw[n]) return t.withTextFontFamily(Nw[n]);
            if (_w[n]) return t.withTextFontWeight(_w[n]);
            if (n === "\\emph") return t.fontShape === "textit" ? t.withTextFontShape("textup") : t.withTextFontShape("textit");
        } else return t;
        return t.withTextFontShape(DG[n]);
    };
Z({
    type: "text",
    names: ["\\text", "\\textrm", "\\textsf", "\\texttt", "\\textnormal", "\\textbf", "\\textmd", "\\textit", "\\textup", "\\emph"],
    props: { numArgs: 1, argTypes: ["text"], allowedInArgument: !0, allowedInText: !0 },
    handler(e, t) {
        var { parser: n, funcName: r } = e,
            a = t[0];
        return { type: "text", mode: n.mode, body: Ve(a), font: r };
    },
    htmlBuilder(e, t) {
        var n = Cw(e, t),
            r = Je(e.body, n, !0);
        return P.makeSpan(["mord", "text"], r, n);
    },
    mathmlBuilder(e, t) {
        var n = Cw(e, t);
        return xr(e.body, n);
    },
});
Z({
    type: "underline",
    names: ["\\underline"],
    props: { numArgs: 1, allowedInText: !0 },
    handler(e, t) {
        var { parser: n } = e;
        return { type: "underline", mode: n.mode, body: t[0] };
    },
    htmlBuilder(e, t) {
        var n = we(e.body, t),
            r = P.makeLineSpan("underline-line", t),
            a = t.fontMetrics().defaultRuleThickness,
            i = P.makeVList(
                {
                    positionType: "top",
                    positionData: n.height,
                    children: [
                        { type: "kern", size: a },
                        { type: "elem", elem: r },
                        { type: "kern", size: 3 * a },
                        { type: "elem", elem: n },
                    ],
                },
                t,
            );
        return P.makeSpan(["mord", "underline"], [i], t);
    },
    mathmlBuilder(e, t) {
        var n = new G.MathNode("mo", [new G.TextNode("‾")]);
        n.setAttribute("stretchy", "true");
        var r = new G.MathNode("munder", [Ie(e.body, t), n]);
        return r.setAttribute("accentunder", "true"), r;
    },
});
Z({
    type: "vcenter",
    names: ["\\vcenter"],
    props: { numArgs: 1, argTypes: ["original"], allowedInText: !1 },
    handler(e, t) {
        var { parser: n } = e;
        return { type: "vcenter", mode: n.mode, body: t[0] };
    },
    htmlBuilder(e, t) {
        var n = we(e.body, t),
            r = t.fontMetrics().axisHeight,
            a = 0.5 * (n.height - r - (n.depth + r));
        return P.makeVList({ positionType: "shift", positionData: a, children: [{ type: "elem", elem: n }] }, t);
    },
    mathmlBuilder(e, t) {
        return new G.MathNode("mpadded", [Ie(e.body, t)], ["vcenter"]);
    },
});
Z({
    type: "verb",
    names: ["\\verb"],
    props: { numArgs: 0, allowedInText: !0 },
    handler(e, t, n) {
        throw new H("\\verb ended by end of line instead of matching delimiter");
    },
    htmlBuilder(e, t) {
        for (var n = Ow(e), r = [], a = t.havingStyle(t.style.text()), i = 0; i < n.length; i++) {
            var o = n[i];
            o === "~" && (o = "\\textasciitilde"), r.push(P.makeSymbol(o, "Typewriter-Regular", e.mode, a, ["mord", "texttt"]));
        }
        return P.makeSpan(["mord", "text"].concat(a.sizingClasses(t)), P.tryCombineChars(r), a);
    },
    mathmlBuilder(e, t) {
        var n = new G.TextNode(Ow(e)),
            r = new G.MathNode("mtext", [n]);
        return r.setAttribute("mathvariant", "monospace"), r;
    },
});
var Ow = e => e.body.replace(/ /g, e.star ? "␣" : " "),
    fr = mx,
    Vx = `[ \r
	]`,
    MG = "\\\\[a-zA-Z@]+",
    FG = "\\\\[^\uD800-\uDFFF]",
    PG = "(" + MG + ")" + Vx + "*",
    BG = `\\\\(
|[ \r	]+
?)[ \r	]*`,
    dh = "[̀-ͯ]",
    UG = new RegExp(dh + "+$"),
    zG =
        "(" +
        Vx +
        "+)|" +
        (BG + "|") +
        "([!-\\[\\]-‧‪-퟿豈-￿]" +
        (dh + "*") +
        "|[\uD800-\uDBFF][\uDC00-\uDFFF]" +
        (dh + "*") +
        "|\\\\verb\\*([^]).*?\\4|\\\\verb([^*a-zA-Z]).*?\\5" +
        ("|" + PG) +
        ("|" + FG + ")");
class Lw {
    constructor(t, n) {
        (this.input = void 0),
            (this.settings = void 0),
            (this.tokenRegex = void 0),
            (this.catcodes = void 0),
            (this.input = t),
            (this.settings = n),
            (this.tokenRegex = new RegExp(zG, "g")),
            (this.catcodes = { "%": 14, "~": 13 });
    }
    setCatcode(t, n) {
        this.catcodes[t] = n;
    }
    lex() {
        var t = this.input,
            n = this.tokenRegex.lastIndex;
        if (n === t.length) return new en("EOF", new Bt(this, n, n));
        var r = this.tokenRegex.exec(t);
        if (r === null || r.index !== n) throw new H("Unexpected character: '" + t[n] + "'", new en(t[n], new Bt(this, n, n + 1)));
        var a = r[6] || r[3] || (r[2] ? "\\ " : " ");
        if (this.catcodes[a] === 14) {
            var i = t.indexOf(
                `
`,
                this.tokenRegex.lastIndex,
            );
            return (
                i === -1
                    ? ((this.tokenRegex.lastIndex = t.length),
                      this.settings.reportNonstrict(
                          "commentAtEnd",
                          "% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)",
                      ))
                    : (this.tokenRegex.lastIndex = i + 1),
                this.lex()
            );
        }
        return new en(a, new Bt(this, n, this.tokenRegex.lastIndex));
    }
}
class $G {
    constructor(t, n) {
        t === void 0 && (t = {}),
            n === void 0 && (n = {}),
            (this.current = void 0),
            (this.builtins = void 0),
            (this.undefStack = void 0),
            (this.current = n),
            (this.builtins = t),
            (this.undefStack = []);
    }
    beginGroup() {
        this.undefStack.push({});
    }
    endGroup() {
        if (this.undefStack.length === 0) throw new H("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug");
        var t = this.undefStack.pop();
        for (var n in t) t.hasOwnProperty(n) && (t[n] == null ? delete this.current[n] : (this.current[n] = t[n]));
    }
    endGroups() {
        for (; this.undefStack.length > 0; ) this.endGroup();
    }
    has(t) {
        return this.current.hasOwnProperty(t) || this.builtins.hasOwnProperty(t);
    }
    get(t) {
        return this.current.hasOwnProperty(t) ? this.current[t] : this.builtins[t];
    }
    set(t, n, r) {
        if ((r === void 0 && (r = !1), r)) {
            for (var a = 0; a < this.undefStack.length; a++) delete this.undefStack[a][t];
            this.undefStack.length > 0 && (this.undefStack[this.undefStack.length - 1][t] = n);
        } else {
            var i = this.undefStack[this.undefStack.length - 1];
            i && !i.hasOwnProperty(t) && (i[t] = this.current[t]);
        }
        n == null ? delete this.current[t] : (this.current[t] = n);
    }
}
var qG = Mx;
w("\\noexpand", function (e) {
    var t = e.popToken();
    return e.isExpandable(t.text) && ((t.noexpand = !0), (t.treatAsRelax = !0)), { tokens: [t], numArgs: 0 };
});
w("\\expandafter", function (e) {
    var t = e.popToken();
    return e.expandOnce(!0), { tokens: [t], numArgs: 0 };
});
w("\\@firstoftwo", function (e) {
    var t = e.consumeArgs(2);
    return { tokens: t[0], numArgs: 0 };
});
w("\\@secondoftwo", function (e) {
    var t = e.consumeArgs(2);
    return { tokens: t[1], numArgs: 0 };
});
w("\\@ifnextchar", function (e) {
    var t = e.consumeArgs(3);
    e.consumeSpaces();
    var n = e.future();
    return t[0].length === 1 && t[0][0].text === n.text ? { tokens: t[1], numArgs: 0 } : { tokens: t[2], numArgs: 0 };
});
w("\\@ifstar", "\\@ifnextchar *{\\@firstoftwo{#1}}");
w("\\TextOrMath", function (e) {
    var t = e.consumeArgs(2);
    return e.mode === "text" ? { tokens: t[0], numArgs: 0 } : { tokens: t[1], numArgs: 0 };
});
var Dw = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, a: 10, A: 10, b: 11, B: 11, c: 12, C: 12, d: 13, D: 13, e: 14, E: 14, f: 15, F: 15 };
w("\\char", function (e) {
    var t = e.popToken(),
        n,
        r = "";
    if (t.text === "'") (n = 8), (t = e.popToken());
    else if (t.text === '"') (n = 16), (t = e.popToken());
    else if (t.text === "`")
        if (((t = e.popToken()), t.text[0] === "\\")) r = t.text.charCodeAt(1);
        else {
            if (t.text === "EOF") throw new H("\\char` missing argument");
            r = t.text.charCodeAt(0);
        }
    else n = 10;
    if (n) {
        if (((r = Dw[t.text]), r == null || r >= n)) throw new H("Invalid base-" + n + " digit " + t.text);
        for (var a; (a = Dw[e.future().text]) != null && a < n; ) (r *= n), (r += a), e.popToken();
    }
    return "\\@char{" + r + "}";
});
var p1 = (e, t, n, r) => {
    var a = e.consumeArg().tokens;
    if (a.length !== 1) throw new H("\\newcommand's first argument must be a macro name");
    var i = a[0].text,
        o = e.isDefined(i);
    if (o && !t) throw new H("\\newcommand{" + i + "} attempting to redefine " + (i + "; use \\renewcommand"));
    if (!o && !n) throw new H("\\renewcommand{" + i + "} when command " + i + " does not yet exist; use \\newcommand");
    var l = 0;
    if (((a = e.consumeArg().tokens), a.length === 1 && a[0].text === "[")) {
        for (var s = "", u = e.expandNextToken(); u.text !== "]" && u.text !== "EOF"; ) (s += u.text), (u = e.expandNextToken());
        if (!s.match(/^\s*[0-9]+\s*$/)) throw new H("Invalid number of arguments: " + s);
        (l = parseInt(s)), (a = e.consumeArg().tokens);
    }
    return (o && r) || e.macros.set(i, { tokens: a, numArgs: l }), "";
};
w("\\newcommand", e => p1(e, !1, !0, !1));
w("\\renewcommand", e => p1(e, !0, !1, !1));
w("\\providecommand", e => p1(e, !0, !0, !0));
w("\\message", e => {
    var t = e.consumeArgs(1)[0];
    return (
        console.log(
            t
                .reverse()
                .map(n => n.text)
                .join(""),
        ),
        ""
    );
});
w("\\errmessage", e => {
    var t = e.consumeArgs(1)[0];
    return (
        console.error(
            t
                .reverse()
                .map(n => n.text)
                .join(""),
        ),
        ""
    );
});
w("\\show", e => {
    var t = e.popToken(),
        n = t.text;
    return console.log(t, e.macros.get(n), fr[n], Ce.math[n], Ce.text[n]), "";
});
w("\\bgroup", "{");
w("\\egroup", "}");
w("~", "\\nobreakspace");
w("\\lq", "`");
w("\\rq", "'");
w("\\aa", "\\r a");
w("\\AA", "\\r A");
w("\\textcopyright", "\\html@mathml{\\textcircled{c}}{\\char`©}");
w("\\copyright", "\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}");
w("\\textregistered", "\\html@mathml{\\textcircled{\\scriptsize R}}{\\char`®}");
w("ℬ", "\\mathscr{B}");
w("ℰ", "\\mathscr{E}");
w("ℱ", "\\mathscr{F}");
w("ℋ", "\\mathscr{H}");
w("ℐ", "\\mathscr{I}");
w("ℒ", "\\mathscr{L}");
w("ℳ", "\\mathscr{M}");
w("ℛ", "\\mathscr{R}");
w("ℭ", "\\mathfrak{C}");
w("ℌ", "\\mathfrak{H}");
w("ℨ", "\\mathfrak{Z}");
w("\\Bbbk", "\\Bbb{k}");
w("·", "\\cdotp");
w("\\llap", "\\mathllap{\\textrm{#1}}");
w("\\rlap", "\\mathrlap{\\textrm{#1}}");
w("\\clap", "\\mathclap{\\textrm{#1}}");
w("\\mathstrut", "\\vphantom{(}");
w("\\underbar", "\\underline{\\text{#1}}");
w("\\not", '\\html@mathml{\\mathrel{\\mathrlap\\@not}}{\\char"338}');
w("\\neq", "\\html@mathml{\\mathrel{\\not=}}{\\mathrel{\\char`≠}}");
w("\\ne", "\\neq");
w("≠", "\\neq");
w("\\notin", "\\html@mathml{\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}}{\\mathrel{\\char`∉}}");
w("∉", "\\notin");
w("≘", "\\html@mathml{\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}}{\\mathrel{\\char`≘}}");
w("≙", "\\html@mathml{\\stackrel{\\tiny\\wedge}{=}}{\\mathrel{\\char`≘}}");
w("≚", "\\html@mathml{\\stackrel{\\tiny\\vee}{=}}{\\mathrel{\\char`≚}}");
w("≛", "\\html@mathml{\\stackrel{\\scriptsize\\star}{=}}{\\mathrel{\\char`≛}}");
w("≝", "\\html@mathml{\\stackrel{\\tiny\\mathrm{def}}{=}}{\\mathrel{\\char`≝}}");
w("≞", "\\html@mathml{\\stackrel{\\tiny\\mathrm{m}}{=}}{\\mathrel{\\char`≞}}");
w("≟", "\\html@mathml{\\stackrel{\\tiny?}{=}}{\\mathrel{\\char`≟}}");
w("⟂", "\\perp");
w("‼", "\\mathclose{!\\mkern-0.8mu!}");
w("∌", "\\notni");
w("⌜", "\\ulcorner");
w("⌝", "\\urcorner");
w("⌞", "\\llcorner");
w("⌟", "\\lrcorner");
w("©", "\\copyright");
w("®", "\\textregistered");
w("️", "\\textregistered");
w("\\ulcorner", '\\html@mathml{\\@ulcorner}{\\mathop{\\char"231c}}');
w("\\urcorner", '\\html@mathml{\\@urcorner}{\\mathop{\\char"231d}}');
w("\\llcorner", '\\html@mathml{\\@llcorner}{\\mathop{\\char"231e}}');
w("\\lrcorner", '\\html@mathml{\\@lrcorner}{\\mathop{\\char"231f}}');
w("\\vdots", "{\\varvdots\\rule{0pt}{15pt}}");
w("⋮", "\\vdots");
w("\\varGamma", "\\mathit{\\Gamma}");
w("\\varDelta", "\\mathit{\\Delta}");
w("\\varTheta", "\\mathit{\\Theta}");
w("\\varLambda", "\\mathit{\\Lambda}");
w("\\varXi", "\\mathit{\\Xi}");
w("\\varPi", "\\mathit{\\Pi}");
w("\\varSigma", "\\mathit{\\Sigma}");
w("\\varUpsilon", "\\mathit{\\Upsilon}");
w("\\varPhi", "\\mathit{\\Phi}");
w("\\varPsi", "\\mathit{\\Psi}");
w("\\varOmega", "\\mathit{\\Omega}");
w("\\substack", "\\begin{subarray}{c}#1\\end{subarray}");
w("\\colon", "\\nobreak\\mskip2mu\\mathpunct{}\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu\\relax");
w("\\boxed", "\\fbox{$\\displaystyle{#1}$}");
w("\\iff", "\\DOTSB\\;\\Longleftrightarrow\\;");
w("\\implies", "\\DOTSB\\;\\Longrightarrow\\;");
w("\\impliedby", "\\DOTSB\\;\\Longleftarrow\\;");
w("\\dddot", "{\\overset{\\raisebox{-0.1ex}{\\normalsize ...}}{#1}}");
w("\\ddddot", "{\\overset{\\raisebox{-0.1ex}{\\normalsize ....}}{#1}}");
var Mw = {
    ",": "\\dotsc",
    "\\not": "\\dotsb",
    "+": "\\dotsb",
    "=": "\\dotsb",
    "<": "\\dotsb",
    ">": "\\dotsb",
    "-": "\\dotsb",
    "*": "\\dotsb",
    ":": "\\dotsb",
    "\\DOTSB": "\\dotsb",
    "\\coprod": "\\dotsb",
    "\\bigvee": "\\dotsb",
    "\\bigwedge": "\\dotsb",
    "\\biguplus": "\\dotsb",
    "\\bigcap": "\\dotsb",
    "\\bigcup": "\\dotsb",
    "\\prod": "\\dotsb",
    "\\sum": "\\dotsb",
    "\\bigotimes": "\\dotsb",
    "\\bigoplus": "\\dotsb",
    "\\bigodot": "\\dotsb",
    "\\bigsqcup": "\\dotsb",
    "\\And": "\\dotsb",
    "\\longrightarrow": "\\dotsb",
    "\\Longrightarrow": "\\dotsb",
    "\\longleftarrow": "\\dotsb",
    "\\Longleftarrow": "\\dotsb",
    "\\longleftrightarrow": "\\dotsb",
    "\\Longleftrightarrow": "\\dotsb",
    "\\mapsto": "\\dotsb",
    "\\longmapsto": "\\dotsb",
    "\\hookrightarrow": "\\dotsb",
    "\\doteq": "\\dotsb",
    "\\mathbin": "\\dotsb",
    "\\mathrel": "\\dotsb",
    "\\relbar": "\\dotsb",
    "\\Relbar": "\\dotsb",
    "\\xrightarrow": "\\dotsb",
    "\\xleftarrow": "\\dotsb",
    "\\DOTSI": "\\dotsi",
    "\\int": "\\dotsi",
    "\\oint": "\\dotsi",
    "\\iint": "\\dotsi",
    "\\iiint": "\\dotsi",
    "\\iiiint": "\\dotsi",
    "\\idotsint": "\\dotsi",
    "\\DOTSX": "\\dotsx",
};
w("\\dots", function (e) {
    var t = "\\dotso",
        n = e.expandAfterFuture().text;
    return n in Mw ? (t = Mw[n]) : (n.slice(0, 4) === "\\not" || (n in Ce.math && ie.contains(["bin", "rel"], Ce.math[n].group))) && (t = "\\dotsb"), t;
});
var f1 = {
    ")": !0,
    "]": !0,
    "\\rbrack": !0,
    "\\}": !0,
    "\\rbrace": !0,
    "\\rangle": !0,
    "\\rceil": !0,
    "\\rfloor": !0,
    "\\rgroup": !0,
    "\\rmoustache": !0,
    "\\right": !0,
    "\\bigr": !0,
    "\\biggr": !0,
    "\\Bigr": !0,
    "\\Biggr": !0,
    $: !0,
    ";": !0,
    ".": !0,
    ",": !0,
};
w("\\dotso", function (e) {
    var t = e.future().text;
    return t in f1 ? "\\ldots\\," : "\\ldots";
});
w("\\dotsc", function (e) {
    var t = e.future().text;
    return t in f1 && t !== "," ? "\\ldots\\," : "\\ldots";
});
w("\\cdots", function (e) {
    var t = e.future().text;
    return t in f1 ? "\\@cdots\\," : "\\@cdots";
});
w("\\dotsb", "\\cdots");
w("\\dotsm", "\\cdots");
w("\\dotsi", "\\!\\cdots");
w("\\dotsx", "\\ldots\\,");
w("\\DOTSI", "\\relax");
w("\\DOTSB", "\\relax");
w("\\DOTSX", "\\relax");
w("\\tmspace", "\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax");
w("\\,", "\\tmspace+{3mu}{.1667em}");
w("\\thinspace", "\\,");
w("\\>", "\\mskip{4mu}");
w("\\:", "\\tmspace+{4mu}{.2222em}");
w("\\medspace", "\\:");
w("\\;", "\\tmspace+{5mu}{.2777em}");
w("\\thickspace", "\\;");
w("\\!", "\\tmspace-{3mu}{.1667em}");
w("\\negthinspace", "\\!");
w("\\negmedspace", "\\tmspace-{4mu}{.2222em}");
w("\\negthickspace", "\\tmspace-{5mu}{.277em}");
w("\\enspace", "\\kern.5em ");
w("\\enskip", "\\hskip.5em\\relax");
w("\\quad", "\\hskip1em\\relax");
w("\\qquad", "\\hskip2em\\relax");
w("\\tag", "\\@ifstar\\tag@literal\\tag@paren");
w("\\tag@paren", "\\tag@literal{({#1})}");
w("\\tag@literal", e => {
    if (e.macros.get("\\df@tag")) throw new H("Multiple \\tag");
    return "\\gdef\\df@tag{\\text{#1}}";
});
w("\\bmod", "\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}\\mathbin{\\rm mod}\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}");
w("\\pod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)");
w("\\pmod", "\\pod{{\\rm mod}\\mkern6mu#1}");
w("\\mod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}{\\rm mod}\\,\\,#1");
w("\\newline", "\\\\\\relax");
w("\\TeX", "\\textrm{\\html@mathml{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}{TeX}}");
var Wx = K(An["Main-Regular"]["T".charCodeAt(0)][1] - 0.7 * An["Main-Regular"]["A".charCodeAt(0)][1]);
w("\\LaTeX", "\\textrm{\\html@mathml{" + ("L\\kern-.36em\\raisebox{" + Wx + "}{\\scriptstyle A}") + "\\kern-.15em\\TeX}{LaTeX}}");
w("\\KaTeX", "\\textrm{\\html@mathml{" + ("K\\kern-.17em\\raisebox{" + Wx + "}{\\scriptstyle A}") + "\\kern-.15em\\TeX}{KaTeX}}");
w("\\hspace", "\\@ifstar\\@hspacer\\@hspace");
w("\\@hspace", "\\hskip #1\\relax");
w("\\@hspacer", "\\rule{0pt}{0pt}\\hskip #1\\relax");
w("\\ordinarycolon", ":");
w("\\vcentcolon", "\\mathrel{\\mathop\\ordinarycolon}");
w("\\dblcolon", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}}{\\mathop{\\char"2237}}');
w("\\coloneqq", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2254}}');
w("\\Coloneqq", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2237\\char"3d}}');
w("\\coloneq", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"3a\\char"2212}}');
w("\\Coloneq", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"2237\\char"2212}}');
w("\\eqqcolon", '\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2255}}');
w("\\Eqqcolon", '\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"3d\\char"2237}}');
w("\\eqcolon", '\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2239}}');
w("\\Eqcolon", '\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"2212\\char"2237}}');
w("\\colonapprox", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"3a\\char"2248}}');
w("\\Colonapprox", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"2237\\char"2248}}');
w("\\colonsim", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"3a\\char"223c}}');
w("\\Colonsim", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"2237\\char"223c}}');
w("∷", "\\dblcolon");
w("∹", "\\eqcolon");
w("≔", "\\coloneqq");
w("≕", "\\eqqcolon");
w("⩴", "\\Coloneqq");
w("\\ratio", "\\vcentcolon");
w("\\coloncolon", "\\dblcolon");
w("\\colonequals", "\\coloneqq");
w("\\coloncolonequals", "\\Coloneqq");
w("\\equalscolon", "\\eqqcolon");
w("\\equalscoloncolon", "\\Eqqcolon");
w("\\colonminus", "\\coloneq");
w("\\coloncolonminus", "\\Coloneq");
w("\\minuscolon", "\\eqcolon");
w("\\minuscoloncolon", "\\Eqcolon");
w("\\coloncolonapprox", "\\Colonapprox");
w("\\coloncolonsim", "\\Colonsim");
w("\\simcolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}");
w("\\simcoloncolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}");
w("\\approxcolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}");
w("\\approxcoloncolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}");
w("\\notni", "\\html@mathml{\\not\\ni}{\\mathrel{\\char`∌}}");
w("\\limsup", "\\DOTSB\\operatorname*{lim\\,sup}");
w("\\liminf", "\\DOTSB\\operatorname*{lim\\,inf}");
w("\\injlim", "\\DOTSB\\operatorname*{inj\\,lim}");
w("\\projlim", "\\DOTSB\\operatorname*{proj\\,lim}");
w("\\varlimsup", "\\DOTSB\\operatorname*{\\overline{lim}}");
w("\\varliminf", "\\DOTSB\\operatorname*{\\underline{lim}}");
w("\\varinjlim", "\\DOTSB\\operatorname*{\\underrightarrow{lim}}");
w("\\varprojlim", "\\DOTSB\\operatorname*{\\underleftarrow{lim}}");
w("\\gvertneqq", "\\html@mathml{\\@gvertneqq}{≩}");
w("\\lvertneqq", "\\html@mathml{\\@lvertneqq}{≨}");
w("\\ngeqq", "\\html@mathml{\\@ngeqq}{≱}");
w("\\ngeqslant", "\\html@mathml{\\@ngeqslant}{≱}");
w("\\nleqq", "\\html@mathml{\\@nleqq}{≰}");
w("\\nleqslant", "\\html@mathml{\\@nleqslant}{≰}");
w("\\nshortmid", "\\html@mathml{\\@nshortmid}{∤}");
w("\\nshortparallel", "\\html@mathml{\\@nshortparallel}{∦}");
w("\\nsubseteqq", "\\html@mathml{\\@nsubseteqq}{⊈}");
w("\\nsupseteqq", "\\html@mathml{\\@nsupseteqq}{⊉}");
w("\\varsubsetneq", "\\html@mathml{\\@varsubsetneq}{⊊}");
w("\\varsubsetneqq", "\\html@mathml{\\@varsubsetneqq}{⫋}");
w("\\varsupsetneq", "\\html@mathml{\\@varsupsetneq}{⊋}");
w("\\varsupsetneqq", "\\html@mathml{\\@varsupsetneqq}{⫌}");
w("\\imath", "\\html@mathml{\\@imath}{ı}");
w("\\jmath", "\\html@mathml{\\@jmath}{ȷ}");
w("\\llbracket", "\\html@mathml{\\mathopen{[\\mkern-3.2mu[}}{\\mathopen{\\char`⟦}}");
w("\\rrbracket", "\\html@mathml{\\mathclose{]\\mkern-3.2mu]}}{\\mathclose{\\char`⟧}}");
w("⟦", "\\llbracket");
w("⟧", "\\rrbracket");
w("\\lBrace", "\\html@mathml{\\mathopen{\\{\\mkern-3.2mu[}}{\\mathopen{\\char`⦃}}");
w("\\rBrace", "\\html@mathml{\\mathclose{]\\mkern-3.2mu\\}}}{\\mathclose{\\char`⦄}}");
w("⦃", "\\lBrace");
w("⦄", "\\rBrace");
w("\\minuso", "\\mathbin{\\html@mathml{{\\mathrlap{\\mathchoice{\\kern{0.145em}}{\\kern{0.145em}}{\\kern{0.1015em}}{\\kern{0.0725em}}\\circ}{-}}}{\\char`⦵}}");
w("⦵", "\\minuso");
w("\\darr", "\\downarrow");
w("\\dArr", "\\Downarrow");
w("\\Darr", "\\Downarrow");
w("\\lang", "\\langle");
w("\\rang", "\\rangle");
w("\\uarr", "\\uparrow");
w("\\uArr", "\\Uparrow");
w("\\Uarr", "\\Uparrow");
w("\\N", "\\mathbb{N}");
w("\\R", "\\mathbb{R}");
w("\\Z", "\\mathbb{Z}");
w("\\alef", "\\aleph");
w("\\alefsym", "\\aleph");
w("\\Alpha", "\\mathrm{A}");
w("\\Beta", "\\mathrm{B}");
w("\\bull", "\\bullet");
w("\\Chi", "\\mathrm{X}");
w("\\clubs", "\\clubsuit");
w("\\cnums", "\\mathbb{C}");
w("\\Complex", "\\mathbb{C}");
w("\\Dagger", "\\ddagger");
w("\\diamonds", "\\diamondsuit");
w("\\empty", "\\emptyset");
w("\\Epsilon", "\\mathrm{E}");
w("\\Eta", "\\mathrm{H}");
w("\\exist", "\\exists");
w("\\harr", "\\leftrightarrow");
w("\\hArr", "\\Leftrightarrow");
w("\\Harr", "\\Leftrightarrow");
w("\\hearts", "\\heartsuit");
w("\\image", "\\Im");
w("\\infin", "\\infty");
w("\\Iota", "\\mathrm{I}");
w("\\isin", "\\in");
w("\\Kappa", "\\mathrm{K}");
w("\\larr", "\\leftarrow");
w("\\lArr", "\\Leftarrow");
w("\\Larr", "\\Leftarrow");
w("\\lrarr", "\\leftrightarrow");
w("\\lrArr", "\\Leftrightarrow");
w("\\Lrarr", "\\Leftrightarrow");
w("\\Mu", "\\mathrm{M}");
w("\\natnums", "\\mathbb{N}");
w("\\Nu", "\\mathrm{N}");
w("\\Omicron", "\\mathrm{O}");
w("\\plusmn", "\\pm");
w("\\rarr", "\\rightarrow");
w("\\rArr", "\\Rightarrow");
w("\\Rarr", "\\Rightarrow");
w("\\real", "\\Re");
w("\\reals", "\\mathbb{R}");
w("\\Reals", "\\mathbb{R}");
w("\\Rho", "\\mathrm{P}");
w("\\sdot", "\\cdot");
w("\\sect", "\\S");
w("\\spades", "\\spadesuit");
w("\\sub", "\\subset");
w("\\sube", "\\subseteq");
w("\\supe", "\\supseteq");
w("\\Tau", "\\mathrm{T}");
w("\\thetasym", "\\vartheta");
w("\\weierp", "\\wp");
w("\\Zeta", "\\mathrm{Z}");
w("\\argmin", "\\DOTSB\\operatorname*{arg\\,min}");
w("\\argmax", "\\DOTSB\\operatorname*{arg\\,max}");
w("\\plim", "\\DOTSB\\mathop{\\operatorname{plim}}\\limits");
w("\\bra", "\\mathinner{\\langle{#1}|}");
w("\\ket", "\\mathinner{|{#1}\\rangle}");
w("\\braket", "\\mathinner{\\langle{#1}\\rangle}");
w("\\Bra", "\\left\\langle#1\\right|");
w("\\Ket", "\\left|#1\\right\\rangle");
var Yx = e => t => {
    var n = t.consumeArg().tokens,
        r = t.consumeArg().tokens,
        a = t.consumeArg().tokens,
        i = t.consumeArg().tokens,
        o = t.macros.get("|"),
        l = t.macros.get("\\|");
    t.macros.beginGroup();
    var s = d => m => {
        e && (m.macros.set("|", o), a.length && m.macros.set("\\|", l));
        var f = d;
        if (!d && a.length) {
            var b = m.future();
            b.text === "|" && (m.popToken(), (f = !0));
        }
        return { tokens: f ? a : r, numArgs: 0 };
    };
    t.macros.set("|", s(!1)), a.length && t.macros.set("\\|", s(!0));
    var u = t.consumeArg().tokens,
        c = t.expandTokens([...i, ...u, ...n]);
    return t.macros.endGroup(), { tokens: c.reverse(), numArgs: 0 };
};
w("\\bra@ket", Yx(!1));
w("\\bra@set", Yx(!0));
w("\\Braket", "\\bra@ket{\\left\\langle}{\\,\\middle\\vert\\,}{\\,\\middle\\vert\\,}{\\right\\rangle}");
w("\\Set", "\\bra@set{\\left\\{\\:}{\\;\\middle\\vert\\;}{\\;\\middle\\Vert\\;}{\\:\\right\\}}");
w("\\set", "\\bra@set{\\{\\,}{\\mid}{}{\\,\\}}");
w("\\angln", "{\\angl n}");
w("\\blue", "\\textcolor{##6495ed}{#1}");
w("\\orange", "\\textcolor{##ffa500}{#1}");
w("\\pink", "\\textcolor{##ff00af}{#1}");
w("\\red", "\\textcolor{##df0030}{#1}");
w("\\green", "\\textcolor{##28ae7b}{#1}");
w("\\gray", "\\textcolor{gray}{#1}");
w("\\purple", "\\textcolor{##9d38bd}{#1}");
w("\\blueA", "\\textcolor{##ccfaff}{#1}");
w("\\blueB", "\\textcolor{##80f6ff}{#1}");
w("\\blueC", "\\textcolor{##63d9ea}{#1}");
w("\\blueD", "\\textcolor{##11accd}{#1}");
w("\\blueE", "\\textcolor{##0c7f99}{#1}");
w("\\tealA", "\\textcolor{##94fff5}{#1}");
w("\\tealB", "\\textcolor{##26edd5}{#1}");
w("\\tealC", "\\textcolor{##01d1c1}{#1}");
w("\\tealD", "\\textcolor{##01a995}{#1}");
w("\\tealE", "\\textcolor{##208170}{#1}");
w("\\greenA", "\\textcolor{##b6ffb0}{#1}");
w("\\greenB", "\\textcolor{##8af281}{#1}");
w("\\greenC", "\\textcolor{##74cf70}{#1}");
w("\\greenD", "\\textcolor{##1fab54}{#1}");
w("\\greenE", "\\textcolor{##0d923f}{#1}");
w("\\goldA", "\\textcolor{##ffd0a9}{#1}");
w("\\goldB", "\\textcolor{##ffbb71}{#1}");
w("\\goldC", "\\textcolor{##ff9c39}{#1}");
w("\\goldD", "\\textcolor{##e07d10}{#1}");
w("\\goldE", "\\textcolor{##a75a05}{#1}");
w("\\redA", "\\textcolor{##fca9a9}{#1}");
w("\\redB", "\\textcolor{##ff8482}{#1}");
w("\\redC", "\\textcolor{##f9685d}{#1}");
w("\\redD", "\\textcolor{##e84d39}{#1}");
w("\\redE", "\\textcolor{##bc2612}{#1}");
w("\\maroonA", "\\textcolor{##ffbde0}{#1}");
w("\\maroonB", "\\textcolor{##ff92c6}{#1}");
w("\\maroonC", "\\textcolor{##ed5fa6}{#1}");
w("\\maroonD", "\\textcolor{##ca337c}{#1}");
w("\\maroonE", "\\textcolor{##9e034e}{#1}");
w("\\purpleA", "\\textcolor{##ddd7ff}{#1}");
w("\\purpleB", "\\textcolor{##c6b9fc}{#1}");
w("\\purpleC", "\\textcolor{##aa87ff}{#1}");
w("\\purpleD", "\\textcolor{##7854ab}{#1}");
w("\\purpleE", "\\textcolor{##543b78}{#1}");
w("\\mintA", "\\textcolor{##f5f9e8}{#1}");
w("\\mintB", "\\textcolor{##edf2df}{#1}");
w("\\mintC", "\\textcolor{##e0e5cc}{#1}");
w("\\grayA", "\\textcolor{##f6f7f7}{#1}");
w("\\grayB", "\\textcolor{##f0f1f2}{#1}");
w("\\grayC", "\\textcolor{##e3e5e6}{#1}");
w("\\grayD", "\\textcolor{##d6d8da}{#1}");
w("\\grayE", "\\textcolor{##babec2}{#1}");
w("\\grayF", "\\textcolor{##888d93}{#1}");
w("\\grayG", "\\textcolor{##626569}{#1}");
w("\\grayH", "\\textcolor{##3b3e40}{#1}");
w("\\grayI", "\\textcolor{##21242c}{#1}");
w("\\kaBlue", "\\textcolor{##314453}{#1}");
w("\\kaGreen", "\\textcolor{##71B307}{#1}");
var Kx = { "^": !0, _: !0, "\\limits": !0, "\\nolimits": !0 };
class GG {
    constructor(t, n, r) {
        (this.settings = void 0),
            (this.expansionCount = void 0),
            (this.lexer = void 0),
            (this.macros = void 0),
            (this.stack = void 0),
            (this.mode = void 0),
            (this.settings = n),
            (this.expansionCount = 0),
            this.feed(t),
            (this.macros = new $G(qG, n.macros)),
            (this.mode = r),
            (this.stack = []);
    }
    feed(t) {
        this.lexer = new Lw(t, this.settings);
    }
    switchMode(t) {
        this.mode = t;
    }
    beginGroup() {
        this.macros.beginGroup();
    }
    endGroup() {
        this.macros.endGroup();
    }
    endGroups() {
        this.macros.endGroups();
    }
    future() {
        return this.stack.length === 0 && this.pushToken(this.lexer.lex()), this.stack[this.stack.length - 1];
    }
    popToken() {
        return this.future(), this.stack.pop();
    }
    pushToken(t) {
        this.stack.push(t);
    }
    pushTokens(t) {
        this.stack.push(...t);
    }
    scanArgument(t) {
        var n, r, a;
        if (t) {
            if ((this.consumeSpaces(), this.future().text !== "[")) return null;
            (n = this.popToken()), ({ tokens: a, end: r } = this.consumeArg(["]"]));
        } else ({ tokens: a, start: n, end: r } = this.consumeArg());
        return this.pushToken(new en("EOF", r.loc)), this.pushTokens(a), n.range(r, "");
    }
    consumeSpaces() {
        for (;;) {
            var t = this.future();
            if (t.text === " ") this.stack.pop();
            else break;
        }
    }
    consumeArg(t) {
        var n = [],
            r = t && t.length > 0;
        r || this.consumeSpaces();
        var a = this.future(),
            i,
            o = 0,
            l = 0;
        do {
            if (((i = this.popToken()), n.push(i), i.text === "{")) ++o;
            else if (i.text === "}") {
                if ((--o, o === -1)) throw new H("Extra }", i);
            } else if (i.text === "EOF") throw new H("Unexpected end of input in a macro argument, expected '" + (t && r ? t[l] : "}") + "'", i);
            if (t && r)
                if ((o === 0 || (o === 1 && t[l] === "{")) && i.text === t[l]) {
                    if ((++l, l === t.length)) {
                        n.splice(-l, l);
                        break;
                    }
                } else l = 0;
        } while (o !== 0 || r);
        return a.text === "{" && n[n.length - 1].text === "}" && (n.pop(), n.shift()), n.reverse(), { tokens: n, start: a, end: i };
    }
    consumeArgs(t, n) {
        if (n) {
            if (n.length !== t + 1) throw new H("The length of delimiters doesn't match the number of args!");
            for (var r = n[0], a = 0; a < r.length; a++) {
                var i = this.popToken();
                if (r[a] !== i.text) throw new H("Use of the macro doesn't match its definition", i);
            }
        }
        for (var o = [], l = 0; l < t; l++) o.push(this.consumeArg(n && n[l + 1]).tokens);
        return o;
    }
    countExpansion(t) {
        if (((this.expansionCount += t), this.expansionCount > this.settings.maxExpand))
            throw new H("Too many expansions: infinite loop or need to increase maxExpand setting");
    }
    expandOnce(t) {
        var n = this.popToken(),
            r = n.text,
            a = n.noexpand ? null : this._getExpansion(r);
        if (a == null || (t && a.unexpandable)) {
            if (t && a == null && r[0] === "\\" && !this.isDefined(r)) throw new H("Undefined control sequence: " + r);
            return this.pushToken(n), !1;
        }
        this.countExpansion(1);
        var i = a.tokens,
            o = this.consumeArgs(a.numArgs, a.delimiters);
        if (a.numArgs) {
            i = i.slice();
            for (var l = i.length - 1; l >= 0; --l) {
                var s = i[l];
                if (s.text === "#") {
                    if (l === 0) throw new H("Incomplete placeholder at end of macro body", s);
                    if (((s = i[--l]), s.text === "#")) i.splice(l + 1, 1);
                    else if (/^[1-9]$/.test(s.text)) i.splice(l, 2, ...o[+s.text - 1]);
                    else throw new H("Not a valid argument number", s);
                }
            }
        }
        return this.pushTokens(i), i.length;
    }
    expandAfterFuture() {
        return this.expandOnce(), this.future();
    }
    expandNextToken() {
        for (;;)
            if (this.expandOnce() === !1) {
                var t = this.stack.pop();
                return t.treatAsRelax && (t.text = "\\relax"), t;
            }
        throw new Error();
    }
    expandMacro(t) {
        return this.macros.has(t) ? this.expandTokens([new en(t)]) : void 0;
    }
    expandTokens(t) {
        var n = [],
            r = this.stack.length;
        for (this.pushTokens(t); this.stack.length > r; )
            if (this.expandOnce(!0) === !1) {
                var a = this.stack.pop();
                a.treatAsRelax && ((a.noexpand = !1), (a.treatAsRelax = !1)), n.push(a);
            }
        return this.countExpansion(n.length), n;
    }
    expandMacroAsText(t) {
        var n = this.expandMacro(t);
        return n && n.map(r => r.text).join("");
    }
    _getExpansion(t) {
        var n = this.macros.get(t);
        if (n == null) return n;
        if (t.length === 1) {
            var r = this.lexer.catcodes[t];
            if (r != null && r !== 13) return;
        }
        var a = typeof n == "function" ? n(this) : n;
        if (typeof a == "string") {
            var i = 0;
            if (a.indexOf("#") !== -1) for (var o = a.replace(/##/g, ""); o.indexOf("#" + (i + 1)) !== -1; ) ++i;
            for (var l = new Lw(a, this.settings), s = [], u = l.lex(); u.text !== "EOF"; ) s.push(u), (u = l.lex());
            s.reverse();
            var c = { tokens: s, numArgs: i };
            return c;
        }
        return a;
    }
    isDefined(t) {
        return this.macros.has(t) || fr.hasOwnProperty(t) || Ce.math.hasOwnProperty(t) || Ce.text.hasOwnProperty(t) || Kx.hasOwnProperty(t);
    }
    isExpandable(t) {
        var n = this.macros.get(t);
        return n != null ? typeof n == "string" || typeof n == "function" || !n.unexpandable : fr.hasOwnProperty(t) && !fr[t].primitive;
    }
}
var Fw = /^[₊₋₌₍₎₀₁₂₃₄₅₆₇₈₉ₐₑₕᵢⱼₖₗₘₙₒₚᵣₛₜᵤᵥₓᵦᵧᵨᵩᵪ]/,
    Jo = Object.freeze({
        "₊": "+",
        "₋": "-",
        "₌": "=",
        "₍": "(",
        "₎": ")",
        "₀": "0",
        "₁": "1",
        "₂": "2",
        "₃": "3",
        "₄": "4",
        "₅": "5",
        "₆": "6",
        "₇": "7",
        "₈": "8",
        "₉": "9",
        ₐ: "a",
        ₑ: "e",
        ₕ: "h",
        ᵢ: "i",
        ⱼ: "j",
        ₖ: "k",
        ₗ: "l",
        ₘ: "m",
        ₙ: "n",
        ₒ: "o",
        ₚ: "p",
        ᵣ: "r",
        ₛ: "s",
        ₜ: "t",
        ᵤ: "u",
        ᵥ: "v",
        ₓ: "x",
        ᵦ: "β",
        ᵧ: "γ",
        ᵨ: "ρ",
        ᵩ: "ϕ",
        ᵪ: "χ",
        "⁺": "+",
        "⁻": "-",
        "⁼": "=",
        "⁽": "(",
        "⁾": ")",
        "⁰": "0",
        "¹": "1",
        "²": "2",
        "³": "3",
        "⁴": "4",
        "⁵": "5",
        "⁶": "6",
        "⁷": "7",
        "⁸": "8",
        "⁹": "9",
        ᴬ: "A",
        ᴮ: "B",
        ᴰ: "D",
        ᴱ: "E",
        ᴳ: "G",
        ᴴ: "H",
        ᴵ: "I",
        ᴶ: "J",
        ᴷ: "K",
        ᴸ: "L",
        ᴹ: "M",
        ᴺ: "N",
        ᴼ: "O",
        ᴾ: "P",
        ᴿ: "R",
        ᵀ: "T",
        ᵁ: "U",
        ⱽ: "V",
        ᵂ: "W",
        ᵃ: "a",
        ᵇ: "b",
        ᶜ: "c",
        ᵈ: "d",
        ᵉ: "e",
        ᶠ: "f",
        ᵍ: "g",
        ʰ: "h",
        ⁱ: "i",
        ʲ: "j",
        ᵏ: "k",
        ˡ: "l",
        ᵐ: "m",
        ⁿ: "n",
        ᵒ: "o",
        ᵖ: "p",
        ʳ: "r",
        ˢ: "s",
        ᵗ: "t",
        ᵘ: "u",
        ᵛ: "v",
        ʷ: "w",
        ˣ: "x",
        ʸ: "y",
        ᶻ: "z",
        ᵝ: "β",
        ᵞ: "γ",
        ᵟ: "δ",
        ᵠ: "ϕ",
        ᵡ: "χ",
        ᶿ: "θ",
    }),
    Hf = {
        "́": { text: "\\'", math: "\\acute" },
        "̀": { text: "\\`", math: "\\grave" },
        "̈": { text: '\\"', math: "\\ddot" },
        "̃": { text: "\\~", math: "\\tilde" },
        "̄": { text: "\\=", math: "\\bar" },
        "̆": { text: "\\u", math: "\\breve" },
        "̌": { text: "\\v", math: "\\check" },
        "̂": { text: "\\^", math: "\\hat" },
        "̇": { text: "\\.", math: "\\dot" },
        "̊": { text: "\\r", math: "\\mathring" },
        "̋": { text: "\\H" },
        "̧": { text: "\\c" },
    },
    Pw = {
        á: "á",
        à: "à",
        ä: "ä",
        ǟ: "ǟ",
        ã: "ã",
        ā: "ā",
        ă: "ă",
        ắ: "ắ",
        ằ: "ằ",
        ẵ: "ẵ",
        ǎ: "ǎ",
        â: "â",
        ấ: "ấ",
        ầ: "ầ",
        ẫ: "ẫ",
        ȧ: "ȧ",
        ǡ: "ǡ",
        å: "å",
        ǻ: "ǻ",
        ḃ: "ḃ",
        ć: "ć",
        ḉ: "ḉ",
        č: "č",
        ĉ: "ĉ",
        ċ: "ċ",
        ç: "ç",
        ď: "ď",
        ḋ: "ḋ",
        ḑ: "ḑ",
        é: "é",
        è: "è",
        ë: "ë",
        ẽ: "ẽ",
        ē: "ē",
        ḗ: "ḗ",
        ḕ: "ḕ",
        ĕ: "ĕ",
        ḝ: "ḝ",
        ě: "ě",
        ê: "ê",
        ế: "ế",
        ề: "ề",
        ễ: "ễ",
        ė: "ė",
        ȩ: "ȩ",
        ḟ: "ḟ",
        ǵ: "ǵ",
        ḡ: "ḡ",
        ğ: "ğ",
        ǧ: "ǧ",
        ĝ: "ĝ",
        ġ: "ġ",
        ģ: "ģ",
        ḧ: "ḧ",
        ȟ: "ȟ",
        ĥ: "ĥ",
        ḣ: "ḣ",
        ḩ: "ḩ",
        í: "í",
        ì: "ì",
        ï: "ï",
        ḯ: "ḯ",
        ĩ: "ĩ",
        ī: "ī",
        ĭ: "ĭ",
        ǐ: "ǐ",
        î: "î",
        ǰ: "ǰ",
        ĵ: "ĵ",
        ḱ: "ḱ",
        ǩ: "ǩ",
        ķ: "ķ",
        ĺ: "ĺ",
        ľ: "ľ",
        ļ: "ļ",
        ḿ: "ḿ",
        ṁ: "ṁ",
        ń: "ń",
        ǹ: "ǹ",
        ñ: "ñ",
        ň: "ň",
        ṅ: "ṅ",
        ņ: "ņ",
        ó: "ó",
        ò: "ò",
        ö: "ö",
        ȫ: "ȫ",
        õ: "õ",
        ṍ: "ṍ",
        ṏ: "ṏ",
        ȭ: "ȭ",
        ō: "ō",
        ṓ: "ṓ",
        ṑ: "ṑ",
        ŏ: "ŏ",
        ǒ: "ǒ",
        ô: "ô",
        ố: "ố",
        ồ: "ồ",
        ỗ: "ỗ",
        ȯ: "ȯ",
        ȱ: "ȱ",
        ő: "ő",
        ṕ: "ṕ",
        ṗ: "ṗ",
        ŕ: "ŕ",
        ř: "ř",
        ṙ: "ṙ",
        ŗ: "ŗ",
        ś: "ś",
        ṥ: "ṥ",
        š: "š",
        ṧ: "ṧ",
        ŝ: "ŝ",
        ṡ: "ṡ",
        ş: "ş",
        ẗ: "ẗ",
        ť: "ť",
        ṫ: "ṫ",
        ţ: "ţ",
        ú: "ú",
        ù: "ù",
        ü: "ü",
        ǘ: "ǘ",
        ǜ: "ǜ",
        ǖ: "ǖ",
        ǚ: "ǚ",
        ũ: "ũ",
        ṹ: "ṹ",
        ū: "ū",
        ṻ: "ṻ",
        ŭ: "ŭ",
        ǔ: "ǔ",
        û: "û",
        ů: "ů",
        ű: "ű",
        ṽ: "ṽ",
        ẃ: "ẃ",
        ẁ: "ẁ",
        ẅ: "ẅ",
        ŵ: "ŵ",
        ẇ: "ẇ",
        ẘ: "ẘ",
        ẍ: "ẍ",
        ẋ: "ẋ",
        ý: "ý",
        ỳ: "ỳ",
        ÿ: "ÿ",
        ỹ: "ỹ",
        ȳ: "ȳ",
        ŷ: "ŷ",
        ẏ: "ẏ",
        ẙ: "ẙ",
        ź: "ź",
        ž: "ž",
        ẑ: "ẑ",
        ż: "ż",
        Á: "Á",
        À: "À",
        Ä: "Ä",
        Ǟ: "Ǟ",
        Ã: "Ã",
        Ā: "Ā",
        Ă: "Ă",
        Ắ: "Ắ",
        Ằ: "Ằ",
        Ẵ: "Ẵ",
        Ǎ: "Ǎ",
        Â: "Â",
        Ấ: "Ấ",
        Ầ: "Ầ",
        Ẫ: "Ẫ",
        Ȧ: "Ȧ",
        Ǡ: "Ǡ",
        Å: "Å",
        Ǻ: "Ǻ",
        Ḃ: "Ḃ",
        Ć: "Ć",
        Ḉ: "Ḉ",
        Č: "Č",
        Ĉ: "Ĉ",
        Ċ: "Ċ",
        Ç: "Ç",
        Ď: "Ď",
        Ḋ: "Ḋ",
        Ḑ: "Ḑ",
        É: "É",
        È: "È",
        Ë: "Ë",
        Ẽ: "Ẽ",
        Ē: "Ē",
        Ḗ: "Ḗ",
        Ḕ: "Ḕ",
        Ĕ: "Ĕ",
        Ḝ: "Ḝ",
        Ě: "Ě",
        Ê: "Ê",
        Ế: "Ế",
        Ề: "Ề",
        Ễ: "Ễ",
        Ė: "Ė",
        Ȩ: "Ȩ",
        Ḟ: "Ḟ",
        Ǵ: "Ǵ",
        Ḡ: "Ḡ",
        Ğ: "Ğ",
        Ǧ: "Ǧ",
        Ĝ: "Ĝ",
        Ġ: "Ġ",
        Ģ: "Ģ",
        Ḧ: "Ḧ",
        Ȟ: "Ȟ",
        Ĥ: "Ĥ",
        Ḣ: "Ḣ",
        Ḩ: "Ḩ",
        Í: "Í",
        Ì: "Ì",
        Ï: "Ï",
        Ḯ: "Ḯ",
        Ĩ: "Ĩ",
        Ī: "Ī",
        Ĭ: "Ĭ",
        Ǐ: "Ǐ",
        Î: "Î",
        İ: "İ",
        Ĵ: "Ĵ",
        Ḱ: "Ḱ",
        Ǩ: "Ǩ",
        Ķ: "Ķ",
        Ĺ: "Ĺ",
        Ľ: "Ľ",
        Ļ: "Ļ",
        Ḿ: "Ḿ",
        Ṁ: "Ṁ",
        Ń: "Ń",
        Ǹ: "Ǹ",
        Ñ: "Ñ",
        Ň: "Ň",
        Ṅ: "Ṅ",
        Ņ: "Ņ",
        Ó: "Ó",
        Ò: "Ò",
        Ö: "Ö",
        Ȫ: "Ȫ",
        Õ: "Õ",
        Ṍ: "Ṍ",
        Ṏ: "Ṏ",
        Ȭ: "Ȭ",
        Ō: "Ō",
        Ṓ: "Ṓ",
        Ṑ: "Ṑ",
        Ŏ: "Ŏ",
        Ǒ: "Ǒ",
        Ô: "Ô",
        Ố: "Ố",
        Ồ: "Ồ",
        Ỗ: "Ỗ",
        Ȯ: "Ȯ",
        Ȱ: "Ȱ",
        Ő: "Ő",
        Ṕ: "Ṕ",
        Ṗ: "Ṗ",
        Ŕ: "Ŕ",
        Ř: "Ř",
        Ṙ: "Ṙ",
        Ŗ: "Ŗ",
        Ś: "Ś",
        Ṥ: "Ṥ",
        Š: "Š",
        Ṧ: "Ṧ",
        Ŝ: "Ŝ",
        Ṡ: "Ṡ",
        Ş: "Ş",
        Ť: "Ť",
        Ṫ: "Ṫ",
        Ţ: "Ţ",
        Ú: "Ú",
        Ù: "Ù",
        Ü: "Ü",
        Ǘ: "Ǘ",
        Ǜ: "Ǜ",
        Ǖ: "Ǖ",
        Ǚ: "Ǚ",
        Ũ: "Ũ",
        Ṹ: "Ṹ",
        Ū: "Ū",
        Ṻ: "Ṻ",
        Ŭ: "Ŭ",
        Ǔ: "Ǔ",
        Û: "Û",
        Ů: "Ů",
        Ű: "Ű",
        Ṽ: "Ṽ",
        Ẃ: "Ẃ",
        Ẁ: "Ẁ",
        Ẅ: "Ẅ",
        Ŵ: "Ŵ",
        Ẇ: "Ẇ",
        Ẍ: "Ẍ",
        Ẋ: "Ẋ",
        Ý: "Ý",
        Ỳ: "Ỳ",
        Ÿ: "Ÿ",
        Ỹ: "Ỹ",
        Ȳ: "Ȳ",
        Ŷ: "Ŷ",
        Ẏ: "Ẏ",
        Ź: "Ź",
        Ž: "Ž",
        Ẑ: "Ẑ",
        Ż: "Ż",
        ά: "ά",
        ὰ: "ὰ",
        ᾱ: "ᾱ",
        ᾰ: "ᾰ",
        έ: "έ",
        ὲ: "ὲ",
        ή: "ή",
        ὴ: "ὴ",
        ί: "ί",
        ὶ: "ὶ",
        ϊ: "ϊ",
        ΐ: "ΐ",
        ῒ: "ῒ",
        ῑ: "ῑ",
        ῐ: "ῐ",
        ό: "ό",
        ὸ: "ὸ",
        ύ: "ύ",
        ὺ: "ὺ",
        ϋ: "ϋ",
        ΰ: "ΰ",
        ῢ: "ῢ",
        ῡ: "ῡ",
        ῠ: "ῠ",
        ώ: "ώ",
        ὼ: "ὼ",
        Ύ: "Ύ",
        Ὺ: "Ὺ",
        Ϋ: "Ϋ",
        Ῡ: "Ῡ",
        Ῠ: "Ῠ",
        Ώ: "Ώ",
        Ὼ: "Ὼ",
    };
class Ls {
    constructor(t, n) {
        (this.mode = void 0),
            (this.gullet = void 0),
            (this.settings = void 0),
            (this.leftrightDepth = void 0),
            (this.nextToken = void 0),
            (this.mode = "math"),
            (this.gullet = new GG(t, n, this.mode)),
            (this.settings = n),
            (this.leftrightDepth = 0);
    }
    expect(t, n) {
        if ((n === void 0 && (n = !0), this.fetch().text !== t)) throw new H("Expected '" + t + "', got '" + this.fetch().text + "'", this.fetch());
        n && this.consume();
    }
    consume() {
        this.nextToken = null;
    }
    fetch() {
        return this.nextToken == null && (this.nextToken = this.gullet.expandNextToken()), this.nextToken;
    }
    switchMode(t) {
        (this.mode = t), this.gullet.switchMode(t);
    }
    parse() {
        this.settings.globalGroup || this.gullet.beginGroup(), this.settings.colorIsTextColor && this.gullet.macros.set("\\color", "\\textcolor");
        try {
            var t = this.parseExpression(!1);
            return this.expect("EOF"), this.settings.globalGroup || this.gullet.endGroup(), t;
        } finally {
            this.gullet.endGroups();
        }
    }
    subparse(t) {
        var n = this.nextToken;
        this.consume(), this.gullet.pushToken(new en("}")), this.gullet.pushTokens(t);
        var r = this.parseExpression(!1);
        return this.expect("}"), (this.nextToken = n), r;
    }
    parseExpression(t, n) {
        for (var r = []; ; ) {
            this.mode === "math" && this.consumeSpaces();
            var a = this.fetch();
            if (Ls.endOfExpression.indexOf(a.text) !== -1 || (n && a.text === n) || (t && fr[a.text] && fr[a.text].infix)) break;
            var i = this.parseAtom(n);
            if (i) {
                if (i.type === "internal") continue;
            } else break;
            r.push(i);
        }
        return this.mode === "text" && this.formLigatures(r), this.handleInfixNodes(r);
    }
    handleInfixNodes(t) {
        for (var n = -1, r, a = 0; a < t.length; a++)
            if (t[a].type === "infix") {
                if (n !== -1) throw new H("only one infix operator per group", t[a].token);
                (n = a), (r = t[a].replaceWith);
            }
        if (n !== -1 && r) {
            var i,
                o,
                l = t.slice(0, n),
                s = t.slice(n + 1);
            l.length === 1 && l[0].type === "ordgroup" ? (i = l[0]) : (i = { type: "ordgroup", mode: this.mode, body: l }),
                s.length === 1 && s[0].type === "ordgroup" ? (o = s[0]) : (o = { type: "ordgroup", mode: this.mode, body: s });
            var u;
            return r === "\\\\abovefrac" ? (u = this.callFunction(r, [i, t[n], o], [])) : (u = this.callFunction(r, [i, o], [])), [u];
        } else return t;
    }
    handleSupSubscript(t) {
        var n = this.fetch(),
            r = n.text;
        this.consume(), this.consumeSpaces();
        var a = this.parseGroup(t);
        if (!a) throw new H("Expected group after '" + r + "'", n);
        return a;
    }
    formatUnsupportedCmd(t) {
        for (var n = [], r = 0; r < t.length; r++) n.push({ type: "textord", mode: "text", text: t[r] });
        var a = { type: "text", mode: this.mode, body: n },
            i = { type: "color", mode: this.mode, color: this.settings.errorColor, body: [a] };
        return i;
    }
    parseAtom(t) {
        var n = this.parseGroup("atom", t);
        if (this.mode === "text") return n;
        for (var r, a; ; ) {
            this.consumeSpaces();
            var i = this.fetch();
            if (i.text === "\\limits" || i.text === "\\nolimits") {
                if (n && n.type === "op") {
                    var o = i.text === "\\limits";
                    (n.limits = o), (n.alwaysHandleSupSub = !0);
                } else if (n && n.type === "operatorname") n.alwaysHandleSupSub && (n.limits = i.text === "\\limits");
                else throw new H("Limit controls must follow a math operator", i);
                this.consume();
            } else if (i.text === "^") {
                if (r) throw new H("Double superscript", i);
                r = this.handleSupSubscript("superscript");
            } else if (i.text === "_") {
                if (a) throw new H("Double subscript", i);
                a = this.handleSupSubscript("subscript");
            } else if (i.text === "'") {
                if (r) throw new H("Double superscript", i);
                var l = { type: "textord", mode: this.mode, text: "\\prime" },
                    s = [l];
                for (this.consume(); this.fetch().text === "'"; ) s.push(l), this.consume();
                this.fetch().text === "^" && s.push(this.handleSupSubscript("superscript")), (r = { type: "ordgroup", mode: this.mode, body: s });
            } else if (Jo[i.text]) {
                var u = Fw.test(i.text),
                    c = [];
                for (c.push(new en(Jo[i.text])), this.consume(); ; ) {
                    var d = this.fetch().text;
                    if (!Jo[d] || Fw.test(d) !== u) break;
                    c.unshift(new en(Jo[d])), this.consume();
                }
                var m = this.subparse(c);
                u ? (a = { type: "ordgroup", mode: "math", body: m }) : (r = { type: "ordgroup", mode: "math", body: m });
            } else break;
        }
        return r || a ? { type: "supsub", mode: this.mode, base: n, sup: r, sub: a } : n;
    }
    parseFunction(t, n) {
        var r = this.fetch(),
            a = r.text,
            i = fr[a];
        if (!i) return null;
        if ((this.consume(), n && n !== "atom" && !i.allowedInArgument)) throw new H("Got function '" + a + "' with no arguments" + (n ? " as " + n : ""), r);
        if (this.mode === "text" && !i.allowedInText) throw new H("Can't use function '" + a + "' in text mode", r);
        if (this.mode === "math" && i.allowedInMath === !1) throw new H("Can't use function '" + a + "' in math mode", r);
        var { args: o, optArgs: l } = this.parseArguments(a, i);
        return this.callFunction(a, o, l, r, t);
    }
    callFunction(t, n, r, a, i) {
        var o = { funcName: t, parser: this, token: a, breakOnTokenText: i },
            l = fr[t];
        if (l && l.handler) return l.handler(o, n, r);
        throw new H("No function handler for " + t);
    }
    parseArguments(t, n) {
        var r = n.numArgs + n.numOptionalArgs;
        if (r === 0) return { args: [], optArgs: [] };
        for (var a = [], i = [], o = 0; o < r; o++) {
            var l = n.argTypes && n.argTypes[o],
                s = o < n.numOptionalArgs;
            ((n.primitive && l == null) || (n.type === "sqrt" && o === 1 && i[0] == null)) && (l = "primitive");
            var u = this.parseGroupOfType("argument to '" + t + "'", l, s);
            if (s) i.push(u);
            else if (u != null) a.push(u);
            else throw new H("Null argument, please report this as a bug");
        }
        return { args: a, optArgs: i };
    }
    parseGroupOfType(t, n, r) {
        switch (n) {
            case "color":
                return this.parseColorGroup(r);
            case "size":
                return this.parseSizeGroup(r);
            case "url":
                return this.parseUrlGroup(r);
            case "math":
            case "text":
                return this.parseArgumentGroup(r, n);
            case "hbox": {
                var a = this.parseArgumentGroup(r, "text");
                return a != null ? { type: "styling", mode: a.mode, body: [a], style: "text" } : null;
            }
            case "raw": {
                var i = this.parseStringGroup("raw", r);
                return i != null ? { type: "raw", mode: "text", string: i.text } : null;
            }
            case "primitive": {
                if (r) throw new H("A primitive argument cannot be optional");
                var o = this.parseGroup(t);
                if (o == null) throw new H("Expected group as " + t, this.fetch());
                return o;
            }
            case "original":
            case null:
            case void 0:
                return this.parseArgumentGroup(r);
            default:
                throw new H("Unknown group type as " + t, this.fetch());
        }
    }
    consumeSpaces() {
        for (; this.fetch().text === " "; ) this.consume();
    }
    parseStringGroup(t, n) {
        var r = this.gullet.scanArgument(n);
        if (r == null) return null;
        for (var a = "", i; (i = this.fetch()).text !== "EOF"; ) (a += i.text), this.consume();
        return this.consume(), (r.text = a), r;
    }
    parseRegexGroup(t, n) {
        for (var r = this.fetch(), a = r, i = "", o; (o = this.fetch()).text !== "EOF" && t.test(i + o.text); ) (a = o), (i += a.text), this.consume();
        if (i === "") throw new H("Invalid " + n + ": '" + r.text + "'", r);
        return r.range(a, i);
    }
    parseColorGroup(t) {
        var n = this.parseStringGroup("color", t);
        if (n == null) return null;
        var r = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(n.text);
        if (!r) throw new H("Invalid color: '" + n.text + "'", n);
        var a = r[0];
        return /^[0-9a-f]{6}$/i.test(a) && (a = "#" + a), { type: "color-token", mode: this.mode, color: a };
    }
    parseSizeGroup(t) {
        var n,
            r = !1;
        if (
            (this.gullet.consumeSpaces(),
            !t && this.gullet.future().text !== "{"
                ? (n = this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/, "size"))
                : (n = this.parseStringGroup("size", t)),
            !n)
        )
            return null;
        !t && n.text.length === 0 && ((n.text = "0pt"), (r = !0));
        var a = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(n.text);
        if (!a) throw new H("Invalid size: '" + n.text + "'", n);
        var i = { number: +(a[1] + a[2]), unit: a[3] };
        if (!ix(i)) throw new H("Invalid unit: '" + i.unit + "'", n);
        return { type: "size", mode: this.mode, value: i, isBlank: r };
    }
    parseUrlGroup(t) {
        this.gullet.lexer.setCatcode("%", 13), this.gullet.lexer.setCatcode("~", 12);
        var n = this.parseStringGroup("url", t);
        if ((this.gullet.lexer.setCatcode("%", 14), this.gullet.lexer.setCatcode("~", 13), n == null)) return null;
        var r = n.text.replace(/\\([#$%&~_^{}])/g, "$1");
        return { type: "url", mode: this.mode, url: r };
    }
    parseArgumentGroup(t, n) {
        var r = this.gullet.scanArgument(t);
        if (r == null) return null;
        var a = this.mode;
        n && this.switchMode(n), this.gullet.beginGroup();
        var i = this.parseExpression(!1, "EOF");
        this.expect("EOF"), this.gullet.endGroup();
        var o = { type: "ordgroup", mode: this.mode, loc: r.loc, body: i };
        return n && this.switchMode(a), o;
    }
    parseGroup(t, n) {
        var r = this.fetch(),
            a = r.text,
            i;
        if (a === "{" || a === "\\begingroup") {
            this.consume();
            var o = a === "{" ? "}" : "\\endgroup";
            this.gullet.beginGroup();
            var l = this.parseExpression(!1, o),
                s = this.fetch();
            this.expect(o),
                this.gullet.endGroup(),
                (i = { type: "ordgroup", mode: this.mode, loc: Bt.range(r, s), body: l, semisimple: a === "\\begingroup" || void 0 });
        } else if (((i = this.parseFunction(n, t) || this.parseSymbol()), i == null && a[0] === "\\" && !Kx.hasOwnProperty(a))) {
            if (this.settings.throwOnError) throw new H("Undefined control sequence: " + a, r);
            (i = this.formatUnsupportedCmd(a)), this.consume();
        }
        return i;
    }
    formLigatures(t) {
        for (var n = t.length - 1, r = 0; r < n; ++r) {
            var a = t[r],
                i = a.text;
            i === "-" &&
                t[r + 1].text === "-" &&
                (r + 1 < n && t[r + 2].text === "-"
                    ? (t.splice(r, 3, { type: "textord", mode: "text", loc: Bt.range(a, t[r + 2]), text: "---" }), (n -= 2))
                    : (t.splice(r, 2, { type: "textord", mode: "text", loc: Bt.range(a, t[r + 1]), text: "--" }), (n -= 1))),
                (i === "'" || i === "`") &&
                    t[r + 1].text === i &&
                    (t.splice(r, 2, { type: "textord", mode: "text", loc: Bt.range(a, t[r + 1]), text: i + i }), (n -= 1));
        }
    }
    parseSymbol() {
        var t = this.fetch(),
            n = t.text;
        if (/^\\verb[^a-zA-Z]/.test(n)) {
            this.consume();
            var r = n.slice(5),
                a = r.charAt(0) === "*";
            if ((a && (r = r.slice(1)), r.length < 2 || r.charAt(0) !== r.slice(-1)))
                throw new H(`\\verb assertion failed --
                    please report what input caused this bug`);
            return (r = r.slice(1, -1)), { type: "verb", mode: "text", body: r, star: a };
        }
        Pw.hasOwnProperty(n[0]) &&
            !Ce[this.mode][n[0]] &&
            (this.settings.strict &&
                this.mode === "math" &&
                this.settings.reportNonstrict("unicodeTextInMathMode", 'Accented Unicode text character "' + n[0] + '" used in math mode', t),
            (n = Pw[n[0]] + n.slice(1)));
        var i = UG.exec(n);
        i && ((n = n.substring(0, i.index)), n === "i" ? (n = "ı") : n === "j" && (n = "ȷ"));
        var o;
        if (Ce[this.mode][n]) {
            this.settings.strict &&
                this.mode === "math" &&
                oh.indexOf(n) >= 0 &&
                this.settings.reportNonstrict("unicodeTextInMathMode", 'Latin-1/Unicode text character "' + n[0] + '" used in math mode', t);
            var l = Ce[this.mode][n].group,
                s = Bt.range(t),
                u;
            if (Cq.hasOwnProperty(l)) {
                var c = l;
                u = { type: "atom", mode: this.mode, family: c, loc: s, text: n };
            } else u = { type: l, mode: this.mode, loc: s, text: n };
            o = u;
        } else if (n.charCodeAt(0) >= 128)
            this.settings.strict &&
                (ax(n.charCodeAt(0))
                    ? this.mode === "math" &&
                      this.settings.reportNonstrict("unicodeTextInMathMode", 'Unicode text character "' + n[0] + '" used in math mode', t)
                    : this.settings.reportNonstrict("unknownSymbol", 'Unrecognized Unicode character "' + n[0] + '"' + (" (" + n.charCodeAt(0) + ")"), t)),
                (o = { type: "textord", mode: "text", loc: Bt.range(t), text: n });
        else return null;
        if ((this.consume(), i))
            for (var d = 0; d < i[0].length; d++) {
                var m = i[0][d];
                if (!Hf[m]) throw new H("Unknown accent ' " + m + "'", t);
                var f = Hf[m][this.mode] || Hf[m].text;
                if (!f) throw new H("Accent " + m + " unsupported in " + this.mode + " mode", t);
                o = { type: "accent", mode: this.mode, loc: Bt.range(t), label: f, isStretchy: !1, isShifty: !0, base: o };
            }
        return o;
    }
}
Ls.endOfExpression = ["}", "\\endgroup", "\\end", "\\right", "&"];
var m1 = function (t, n) {
        if (!(typeof t == "string" || t instanceof String)) throw new TypeError("KaTeX can only parse string typed expression");
        var r = new Ls(t, n);
        delete r.gullet.macros.current["\\df@tag"];
        var a = r.parse();
        if ((delete r.gullet.macros.current["\\current@color"], delete r.gullet.macros.current["\\color"], r.gullet.macros.get("\\df@tag"))) {
            if (!n.displayMode) throw new H("\\tag works only in display equations");
            a = [{ type: "tag", mode: "text", body: a, tag: r.subparse([new en("\\df@tag")]) }];
        }
        return a;
    },
    Xx = function (t, n, r) {
        n.textContent = "";
        var a = h1(t, r).toNode();
        n.appendChild(a);
    };
typeof document < "u" &&
    document.compatMode !== "CSS1Compat" &&
    (typeof console < "u" && console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype."),
    (Xx = function () {
        throw new H("KaTeX doesn't work in quirks mode.");
    }));
var HG = function (t, n) {
        var r = h1(t, n).toMarkup();
        return r;
    },
    jG = function (t, n) {
        var r = new Xg(n);
        return m1(t, r);
    },
    Zx = function (t, n, r) {
        if (r.throwOnError || !(t instanceof H)) throw t;
        var a = P.makeSpan(["katex-error"], [new rn(n)]);
        return a.setAttribute("title", t.toString()), a.setAttribute("style", "color:" + r.errorColor), a;
    },
    h1 = function (t, n) {
        var r = new Xg(n);
        try {
            var a = m1(t, r);
            return eG(a, t, r);
        } catch (i) {
            return Zx(i, t, r);
        }
    },
    VG = function (t, n) {
        var r = new Xg(n);
        try {
            var a = m1(t, r);
            return tG(a, t, r);
        } catch (i) {
            return Zx(i, t, r);
        }
    },
    WG = "0.16.21",
    YG = { Span: Eo, Anchor: Jg, SymbolNode: rn, SvgNode: Xn, PathNode: Ar, LineNode: ih },
    Bw = {
        version: WG,
        render: Xx,
        renderToString: HG,
        ParseError: H,
        SETTINGS_SCHEMA: gl,
        __parse: jG,
        __renderToDomTree: h1,
        __renderToHTMLTree: VG,
        __setFontMetrics: kq,
        __defineSymbol: p,
        __defineFunction: Z,
        __defineMacro: w,
        __domTree: YG,
    };
const KG = {};
function XG(e) {
    const t = this,
        n = e || KG,
        r = t.data(),
        a = r.micromarkExtensions || (r.micromarkExtensions = []),
        i = r.fromMarkdownExtensions || (r.fromMarkdownExtensions = []),
        o = r.toMarkdownExtensions || (r.toMarkdownExtensions = []);
    a.push(Y$(n)), i.push(z$()), o.push($$(n));
}
const g1 = function (e) {
    if (e == null) return eH;
    if (typeof e == "string") return JG(e);
    if (typeof e == "object") return Array.isArray(e) ? ZG(e) : QG(e);
    if (typeof e == "function") return Ds(e);
    throw new Error("Expected function, string, or object as test");
};
function ZG(e) {
    const t = [];
    let n = -1;
    for (; ++n < e.length; ) t[n] = g1(e[n]);
    return Ds(r);
    function r(...a) {
        let i = -1;
        for (; ++i < t.length; ) if (t[i].call(this, ...a)) return !0;
        return !1;
    }
}
function QG(e) {
    return Ds(t);
    function t(n) {
        let r;
        for (r in e) if (n[r] !== e[r]) return !1;
        return !0;
    }
}
function JG(e) {
    return Ds(t);
    function t(n) {
        return n && n.type === e;
    }
}
function Ds(e) {
    return t;
    function t(n, ...r) {
        return !!(n && typeof n == "object" && "type" in n && e.call(this, n, ...r));
    }
}
function eH() {
    return !0;
}
const tH = !0,
    Uw = !1,
    nH = "skip",
    rH = function (e, t, n, r) {
        typeof t == "function" && typeof n != "function" && ((r = n), (n = t), (t = null));
        const a = g1(t),
            i = r ? -1 : 1;
        o(e, void 0, [])();
        function o(l, s, u) {
            const c = l && typeof l == "object" ? l : {};
            if (typeof c.type == "string") {
                const m = typeof c.tagName == "string" ? c.tagName : typeof c.name == "string" ? c.name : void 0;
                Object.defineProperty(d, "name", { value: "node (" + (l.type + (m ? "<" + m + ">" : "")) + ")" });
            }
            return d;
            function d() {
                let m = [],
                    f,
                    b,
                    E;
                if ((!t || a(l, s, u[u.length - 1] || null)) && ((m = aH(n(l, u))), m[0] === Uw)) return m;
                if (l.children && m[0] !== nH)
                    for (b = (r ? l.children.length : -1) + i, E = u.concat(l); b > -1 && b < l.children.length; ) {
                        if (((f = o(l.children[b], b, E)()), f[0] === Uw)) return f;
                        b = typeof f[1] == "number" ? f[1] : b + i;
                    }
                return m;
            }
        }
    };
function aH(e) {
    return Array.isArray(e) ? e : typeof e == "number" ? [tH, e] : [e];
}
const iH = function (e, t, n, r) {
        typeof t == "function" && typeof n != "function" && ((r = n), (n = t), (t = null)), rH(e, t, a, r);
        function a(i, o) {
            const l = o[o.length - 1];
            return n(i, l ? l.children.indexOf(i) : null, l);
        }
    },
    oa = function (e) {
        if (e == null) return b1;
        if (typeof e == "string") return lH(e);
        if (typeof e == "object") return oH(e);
        if (typeof e == "function") return Qx(e);
        throw new Error("Expected function, string, or array as test");
    };
function oH(e) {
    const t = [];
    let n = -1;
    for (; ++n < e.length; ) t[n] = oa(e[n]);
    return Qx(r);
    function r(...a) {
        let i = -1;
        for (; ++i < t.length; ) if (t[i].call(this, ...a)) return !0;
        return !1;
    }
}
function lH(e) {
    return t;
    function t(n) {
        return b1(n) && n.tagName === e;
    }
}
function Qx(e) {
    return t;
    function t(n, ...r) {
        return b1(n) && !!e.call(this, n, ...r);
    }
}
function b1(e) {
    return !!(e && typeof e == "object" && e.type === "element" && typeof e.tagName == "string");
}
const zw = function (e, t, n) {
        const r = g1(n);
        if (!e || !e.type || !e.children) throw new Error("Expected parent node");
        if (typeof t == "number") {
            if (t < 0 || t === Number.POSITIVE_INFINITY) throw new Error("Expected positive finite number as index");
        } else if (((t = e.children.indexOf(t)), t < 0)) throw new Error("Expected child node or index");
        for (; ++t < e.children.length; ) if (r(e.children[t], t, e)) return e.children[t];
        return null;
    },
    $w = /\n/g,
    qw = /[\t ]+/g,
    ph = oa("br"),
    sH = oa("p"),
    Gw = oa(["th", "td"]),
    Hw = oa("tr"),
    uH = oa(["datalist", "head", "noembed", "noframes", "noscript", "rp", "script", "style", "template", "title", mH, hH]),
    Jx = oa([
        "address",
        "article",
        "aside",
        "blockquote",
        "body",
        "caption",
        "center",
        "dd",
        "dialog",
        "dir",
        "dl",
        "dt",
        "div",
        "figure",
        "figcaption",
        "footer",
        "form,",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "header",
        "hgroup",
        "hr",
        "html",
        "legend",
        "listing",
        "main",
        "menu",
        "nav",
        "ol",
        "p",
        "plaintext",
        "pre",
        "section",
        "ul",
        "xmp",
    ]);
function cH(e, t = {}) {
    const n = "children" in e ? e.children : [],
        r = Jx(e),
        a = n6(e, { whitespace: t.whitespace || "normal", breakBefore: !1, breakAfter: !1 }),
        i = [];
    (e.type === "text" || e.type === "comment") && i.push(...t6(e, { whitespace: a, breakBefore: !0, breakAfter: !0 }));
    let o = -1;
    for (; ++o < n.length; ) i.push(...e6(n[o], e, { whitespace: a, breakBefore: o ? void 0 : r, breakAfter: o < n.length - 1 ? ph(n[o + 1]) : r }));
    const l = [];
    let s;
    for (o = -1; ++o < i.length; ) {
        const u = i[o];
        typeof u == "number"
            ? s !== void 0 && u > s && (s = u)
            : u &&
              (s !== void 0 &&
                  s > -1 &&
                  l.push(
                      `
`.repeat(s) || " ",
                  ),
              (s = -1),
              l.push(u));
    }
    return l.join("");
}
function e6(e, t, n) {
    return e.type === "element" ? dH(e, t, n) : e.type === "text" ? (n.whitespace === "normal" ? t6(e, n) : pH(e)) : [];
}
function dH(e, t, n) {
    const r = n6(e, n),
        a = e.children || [];
    let i = -1,
        o = [];
    if (uH(e)) return o;
    let l, s;
    for (
        ph(e) || (Hw(e) && zw(t, e, Hw))
            ? (s = `
`)
            : sH(e)
              ? ((l = 2), (s = 2))
              : Jx(e) && ((l = 1), (s = 1));
        ++i < a.length;

    )
        o = o.concat(e6(a[i], e, { whitespace: r, breakBefore: i ? void 0 : l, breakAfter: i < a.length - 1 ? ph(a[i + 1]) : s }));
    return Gw(e) && zw(t, e, Gw) && o.push("	"), l && o.unshift(l), s && o.push(s), o;
}
function t6(e, t) {
    const n = String(e.value),
        r = [],
        a = [];
    let i = 0;
    for (; i <= n.length; ) {
        $w.lastIndex = i;
        const s = $w.exec(n),
            u = s && "index" in s ? s.index : n.length;
        r.push(
            fH(n.slice(i, u).replace(/[\u061C\u200E\u200F\u202A-\u202E\u2066-\u2069]/g, ""), i === 0 ? t.breakBefore : !0, u === n.length ? t.breakAfter : !0),
        ),
            (i = u + 1);
    }
    let o = -1,
        l;
    for (; ++o < r.length; )
        r[o].charCodeAt(r[o].length - 1) === 8203 || (o < r.length - 1 && r[o + 1].charCodeAt(0) === 8203)
            ? (a.push(r[o]), (l = void 0))
            : r[o]
              ? (typeof l == "number" && a.push(l), a.push(r[o]), (l = 0))
              : (o === 0 || o === r.length - 1) && a.push(0);
    return a;
}
function pH(e) {
    return [String(e.value)];
}
function fH(e, t, n) {
    const r = [];
    let a = 0,
        i;
    for (; a < e.length; ) {
        qw.lastIndex = a;
        const o = qw.exec(e);
        (i = o ? o.index : e.length), !a && !i && o && !t && r.push(""), a !== i && r.push(e.slice(a, i)), (a = o ? i + o[0].length : i);
    }
    return a !== i && !n && r.push(""), r.join(" ");
}
function n6(e, t) {
    if (e.type === "element") {
        const n = e.properties || {};
        switch (e.tagName) {
            case "listing":
            case "plaintext":
            case "xmp":
                return "pre";
            case "nobr":
                return "nowrap";
            case "pre":
                return n.wrap ? "pre-wrap" : "pre";
            case "td":
            case "th":
                return n.noWrap ? "nowrap" : t.whitespace;
            case "textarea":
                return "pre-wrap";
        }
    }
    return t.whitespace;
}
function mH(e) {
    return !!(e.properties || {}).hidden;
}
function hH(e) {
    return e.tagName === "dialog" && !(e.properties || {}).open;
}
const jf = {
        html: "http://www.w3.org/1999/xhtml",
        mathml: "http://www.w3.org/1998/Math/MathML",
        svg: "http://www.w3.org/2000/svg",
        xlink: "http://www.w3.org/1999/xlink",
        xml: "http://www.w3.org/XML/1998/namespace",
        xmlns: "http://www.w3.org/2000/xmlns/",
    },
    jw = /[#.]/g;
function gH(e, t) {
    const n = e || "",
        r = {};
    let a = 0,
        i,
        o;
    for (; a < n.length; ) {
        jw.lastIndex = a;
        const l = jw.exec(n),
            s = n.slice(a, l ? l.index : n.length);
        s && (i ? (i === "#" ? (r.id = s) : Array.isArray(r.className) ? r.className.push(s) : (r.className = [s])) : (o = s), (a += s.length)),
            l && ((i = l[0]), a++);
    }
    return { type: "element", tagName: o || t || "div", properties: r, children: [] };
}
const bH = new Set(["menu", "submit", "reset", "button"]),
    fh = {}.hasOwnProperty;
function r6(e, t, n) {
    const r = n && SH(n);
    return function (i, o, ...l) {
        let s = -1,
            u;
        if (i == null) (u = { type: "root", children: [] }), l.unshift(o);
        else if (((u = gH(i, t)), (u.tagName = u.tagName.toLowerCase()), r && fh.call(r, u.tagName) && (u.tagName = r[u.tagName]), yH(o, u.tagName))) {
            let c;
            for (c in o) fh.call(o, c) && vH(e, u.properties, c, o[c]);
        } else l.unshift(o);
        for (; ++s < l.length; ) mh(u.children, l[s]);
        return u.type === "element" && u.tagName === "template" && ((u.content = { type: "root", children: u.children }), (u.children = [])), u;
    };
}
function yH(e, t) {
    return e == null || typeof e != "object" || Array.isArray(e)
        ? !1
        : t === "input" || !e.type || typeof e.type != "string"
          ? !0
          : "children" in e && Array.isArray(e.children)
            ? !1
            : t === "button"
              ? bH.has(e.type.toLowerCase())
              : !("value" in e);
}
function vH(e, t, n, r) {
    const a = ZT(e, n);
    let i = -1,
        o;
    if (r != null) {
        if (typeof r == "number") {
            if (Number.isNaN(r)) return;
            o = r;
        } else
            typeof r == "boolean"
                ? (o = r)
                : typeof r == "string"
                  ? a.spaceSeparated
                      ? (o = t2(r))
                      : a.commaSeparated
                        ? (o = X4(r))
                        : a.commaOrSpaceSeparated
                          ? (o = t2(X4(r).join(" ")))
                          : (o = Vw(a, a.property, r))
                  : Array.isArray(r)
                    ? (o = r.concat())
                    : (o = a.property === "style" ? EH(r) : String(r));
        if (Array.isArray(o)) {
            const l = [];
            for (; ++i < o.length; ) l[i] = Vw(a, a.property, o[i]);
            o = l;
        }
        a.property === "className" && Array.isArray(t.className) && (o = t.className.concat(o)), (t[a.property] = o);
    }
}
function mh(e, t) {
    let n = -1;
    if (t != null)
        if (typeof t == "string" || typeof t == "number") e.push({ type: "text", value: String(t) });
        else if (Array.isArray(t)) for (; ++n < t.length; ) mh(e, t[n]);
        else if (typeof t == "object" && "type" in t) t.type === "root" ? mh(e, t.children) : e.push(t);
        else throw new Error("Expected node, nodes, or string, got `" + t + "`");
}
function Vw(e, t, n) {
    if (typeof n == "string") {
        if (e.number && n && !Number.isNaN(Number(n))) return Number(n);
        if ((e.boolean || e.overloadedBoolean) && (n === "" || to(n) === to(t))) return !0;
    }
    return n;
}
function EH(e) {
    const t = [];
    let n;
    for (n in e) fh.call(e, n) && t.push([n, e[n]].join(": "));
    return t.join("; ");
}
function SH(e) {
    const t = {};
    let n = -1;
    for (; ++n < e.length; ) t[e[n].toLowerCase()] = e[n];
    return t;
}
const wH = r6(QT, "div"),
    kH = [
        "altGlyph",
        "altGlyphDef",
        "altGlyphItem",
        "animateColor",
        "animateMotion",
        "animateTransform",
        "clipPath",
        "feBlend",
        "feColorMatrix",
        "feComponentTransfer",
        "feComposite",
        "feConvolveMatrix",
        "feDiffuseLighting",
        "feDisplacementMap",
        "feDistantLight",
        "feDropShadow",
        "feFlood",
        "feFuncA",
        "feFuncB",
        "feFuncG",
        "feFuncR",
        "feGaussianBlur",
        "feImage",
        "feMerge",
        "feMergeNode",
        "feMorphology",
        "feOffset",
        "fePointLight",
        "feSpecularLighting",
        "feSpotLight",
        "feTile",
        "feTurbulence",
        "foreignObject",
        "glyphRef",
        "linearGradient",
        "radialGradient",
        "solidColor",
        "textArea",
        "textPath",
    ],
    TH = r6(ys, "g", kH);
function AH(e, t) {
    return (e ? a6(e, t || {}) : void 0) || { type: "root", children: [] };
}
function a6(e, t) {
    const n = xH(e, t);
    return n && t.afterTransform && t.afterTransform(e, n), n;
}
function xH(e, t) {
    switch (e.nodeType) {
        case 1:
            return _H(e, t);
        case 3:
            return IH(e);
        case 8:
            return NH(e);
        case 9:
            return Ww(e, t);
        case 10:
            return RH();
        case 11:
            return Ww(e, t);
        default:
            return;
    }
}
function Ww(e, t) {
    return { type: "root", children: i6(e, t) };
}
function RH() {
    return { type: "doctype" };
}
function IH(e) {
    return { type: "text", value: e.nodeValue || "" };
}
function NH(e) {
    return { type: "comment", value: e.nodeValue || "" };
}
function _H(e, t) {
    const n = e.namespaceURI,
        r = n === jf.svg ? TH : wH,
        a = n === jf.html ? e.tagName.toLowerCase() : e.tagName,
        i = n === jf.html && a === "template" ? e.content : e,
        o = e.getAttributeNames(),
        l = {};
    let s = -1;
    for (; ++s < o.length; ) l[o[s]] = e.getAttribute(o[s]) || "";
    return r(a, l, i6(i, t));
}
function i6(e, t) {
    const n = e.childNodes,
        r = [];
    let a = -1;
    for (; ++a < n.length; ) {
        const i = a6(n[a], t);
        i !== void 0 && r.push(i);
    }
    return r;
}
const CH = new DOMParser();
function OH(e, t) {
    const n = t != null && t.fragment ? LH(e) : CH.parseFromString(e, "text/html");
    return AH(n);
}
function LH(e) {
    const t = document.createElement("template");
    return (t.innerHTML = e), t.content;
}
const Yw = Object.assign,
    DH = "rehype-katex";
function MH(e) {
    const t = e || {},
        n = t.throwOnError || !1;
    return (r, a) => {
        iH(r, "element", i => {
            const o = i.properties && Array.isArray(i.properties.className) ? i.properties.className : [],
                l = o.includes("math-inline"),
                s = o.includes("math-display");
            if (!l && !s) return;
            const u = cH(i, { whitespace: "pre" });
            let c;
            try {
                c = Bw.renderToString(u, Yw({}, t, { displayMode: s, throwOnError: !0 }));
            } catch (m) {
                const f = m,
                    b = n ? "fail" : "message",
                    E = [DH, f.name.toLowerCase()].join(":");
                if ((a[b](f.message, i.position, E), f.name !== "ParseError")) {
                    i.children = [
                        {
                            type: "element",
                            tagName: "span",
                            properties: { className: ["katex-error"], title: String(f), style: "color:" + (t.errorColor || "#cc0000") },
                            children: [{ type: "text", value: u }],
                        },
                    ];
                    return;
                }
                c = Bw.renderToString(u, Yw({}, t, { displayMode: s, throwOnError: !1, strict: "ignore" }));
            }
            const d = OH(c, { fragment: !0 });
            i.children = d.children;
        });
    };
}
class FH extends lo.Component {
    constructor(t) {
        super(t), (this.state = { hasError: !1 });
    }
    static getDerivedStateFromError(t) {
        return { hasError: !0 };
    }
    componentDidCatch(t, n) {
        console.error("Error caught by ErrorBoundary:", t, n);
    }
    render() {
        return this.state.hasError ? ut.jsx("h1", { children: "Something went wrong." }) : this.props.children;
    }
}
const PH = ({ content: e }) =>
        ut.jsx(iU, {
            children: e,
            remarkPlugins: [U$, XG],
            rehypePlugins: [MH],
            components: {
                code({ node: t, inline: n, className: r, children: a, ...i }) {
                    const o = /language-(\w+)/.exec(r || "");
                    return !n && o
                        ? ut.jsx(cD, { style: dD, language: o[1], PreTag: "div", ...i, children: String(a).replace(/\n$/, "") })
                        : ut.jsx("code", { className: r, ...i, children: a });
                },
                p({ children: t, ...n }) {
                    return ut.jsx(ut.Fragment, { children: t });
                },
            },
        }),
    BH = () => {
        const [e, t] = lo.useState("");
        return ut.jsx(FH, {
            children: ut.jsxs("div", {
                className: "editor",
                children: [
                    ut.jsx("textarea", { className: "editor-input", value: e, onChange: n => t(n.target.value), placeholder: "Write your Markdown here..." }),
                    ut.jsx("div", { className: "editor-preview", children: ut.jsx(PH, { content: e }) }),
                ],
            }),
        });
    };
Vf.createRoot(document.getElementById("root")).render(ut.jsx(zn.StrictMode, { children: ut.jsx(BH, {}) }));
